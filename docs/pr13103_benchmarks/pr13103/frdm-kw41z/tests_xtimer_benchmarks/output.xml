<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:41:44.203" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.770" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:44.778" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:45.863" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:44.768" endtime="20201112 12:41:45.864"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.866" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:45.865" endtime="20201112 12:41:45.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.767" endtime="20201112 12:41:45.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:45.869" endtime="20201112 12:41:46.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.868" endtime="20201112 12:41:46.059"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.072" endtime="20201112 12:41:46.089"></status>
</kw>
<msg timestamp="20201112 12:41:46.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.071" endtime="20201112 12:41:46.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.091" endtime="20201112 12:41:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.095" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:46.093" endtime="20201112 12:41:46.096"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.068" endtime="20201112 12:41:46.097"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.065" endtime="20201112 12:41:46.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.064" endtime="20201112 12:41:46.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:46.101" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:46.101" endtime="20201112 12:41:46.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.098" endtime="20201112 12:41:46.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.063" endtime="20201112 12:41:46.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.062" endtime="20201112 12:41:46.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.103" endtime="20201112 12:41:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.061" endtime="20201112 12:41:46.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.106" endtime="20201112 12:41:46.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.060" endtime="20201112 12:41:46.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.765" endtime="20201112 12:41:46.108"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.116" endtime="20201112 12:41:46.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.114" endtime="20201112 12:41:46.136"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.151" endtime="20201112 12:41:46.173"></status>
</kw>
<msg timestamp="20201112 12:41:46.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.149" endtime="20201112 12:41:46.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.175" endtime="20201112 12:41:46.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.180" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:46.178" endtime="20201112 12:41:46.180"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.147" endtime="20201112 12:41:46.181"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.144" endtime="20201112 12:41:46.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.142" endtime="20201112 12:41:46.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:46.185" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:46.185" endtime="20201112 12:41:46.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.182" endtime="20201112 12:41:46.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.141" endtime="20201112 12:41:46.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.140" endtime="20201112 12:41:46.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.187" endtime="20201112 12:41:46.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.138" endtime="20201112 12:41:46.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.136" endtime="20201112 12:41:46.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.112" endtime="20201112 12:41:46.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.198" endtime="20201112 12:41:46.213"></status>
</kw>
<msg timestamp="20201112 12:41:46.213" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.196" endtime="20201112 12:41:46.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.216" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.215" endtime="20201112 12:41:46.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.217" endtime="20201112 12:41:46.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.194" endtime="20201112 12:41:46.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.191" endtime="20201112 12:41:46.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.225" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:41:46.224" endtime="20201112 12:41:46.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.227" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:41:46.226" endtime="20201112 12:41:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.221" endtime="20201112 12:41:46.228"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:46.109" endtime="20201112 12:41:46.229" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:44.315" endtime="20201112 12:41:46.233"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.289" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:46.297" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:47.434" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:46.288" endtime="20201112 12:41:47.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.437" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:47.436" endtime="20201112 12:41:47.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.286" endtime="20201112 12:41:47.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.441" endtime="20201112 12:41:47.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.439" endtime="20201112 12:41:47.663"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.676" endtime="20201112 12:41:47.696"></status>
</kw>
<msg timestamp="20201112 12:41:47.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['come to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.674" endtime="20201112 12:41:47.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['come to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.698" endtime="20201112 12:41:47.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:47.700" endtime="20201112 12:41:47.704"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.672" endtime="20201112 12:41:47.704"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.670" endtime="20201112 12:41:47.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.668" endtime="20201112 12:41:47.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:47.709" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:47.708" endtime="20201112 12:41:47.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.706" endtime="20201112 12:41:47.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.668" endtime="20201112 12:41:47.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.667" endtime="20201112 12:41:47.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.711" endtime="20201112 12:41:47.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.666" endtime="20201112 12:41:47.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.714" endtime="20201112 12:41:47.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.664" endtime="20201112 12:41:47.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.285" endtime="20201112 12:41:47.716"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.723" endtime="20201112 12:41:47.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.721" endtime="20201112 12:41:47.743"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.756" endtime="20201112 12:41:47.778"></status>
</kw>
<msg timestamp="20201112 12:41:47.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.755" endtime="20201112 12:41:47.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.780" endtime="20201112 12:41:47.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.785" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:47.783" endtime="20201112 12:41:47.785"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.752" endtime="20201112 12:41:47.786"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.749" endtime="20201112 12:41:47.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.748" endtime="20201112 12:41:47.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:47.791" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:47.790" endtime="20201112 12:41:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.788" endtime="20201112 12:41:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.747" endtime="20201112 12:41:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.747" endtime="20201112 12:41:47.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.793" endtime="20201112 12:41:47.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.745" endtime="20201112 12:41:47.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.743" endtime="20201112 12:41:47.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.720" endtime="20201112 12:41:47.796"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:47.799" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.807" endtime="20201112 12:41:47.820"></status>
</kw>
<msg timestamp="20201112 12:41:47.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.805" endtime="20201112 12:41:47.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.822" endtime="20201112 12:41:47.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.825" endtime="20201112 12:41:47.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.803" endtime="20201112 12:41:47.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.801" endtime="20201112 12:41:47.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.834" endtime="20201112 12:41:48.138"></status>
</kw>
<msg timestamp="20201112 12:41:48.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073895208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073895681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:47.832" endtime="20201112 12:41:48.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073895208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073895681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.143" endtime="20201112 12:41:48.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.151" endtime="20201112 12:41:48.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.830" endtime="20201112 12:41:48.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.828" endtime="20201112 12:41:48.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.158" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:48.157" endtime="20201112 12:41:48.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.164" level="INFO">VALUE: [{'time': 0.073895208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073895681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.073904639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999989474e-06, 'source_diff': 8.957999999989474e-06}, {'time': 0.073905125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.073911708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000004446e-06, 'source_diff': 6.583000000004446e-06}, {'time': 0.073912194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.073918889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.073919361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073925236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.073925708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073930944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999991803e-06, 'source_diff': 5.235999999991803e-06}, {'time': 0.073931431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.073941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999991335e-06, 'source_diff': 9.929999999991335e-06}, {'time': 0.073941833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0739505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.073950972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999901226e-06, 'source_diff': 3.9999999999901226e-06}, {'time': 0.073955444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073965792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.034800000000724e-05, 'source_diff': 1.034800000000724e-05}, {'time': 0.073966264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073974111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999991389e-06, 'source_diff': 7.846999999991389e-06}, {'time': 0.073974583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073982944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.073983417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.07399325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.073993722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073998972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.073999444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074005833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.074006306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074016347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.074016819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074026194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.074026681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.074030986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.074031458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074036917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.074037389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074047333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000011721e-06, 'source_diff': 9.944000000011721e-06}, {'time': 0.074047806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999869561e-07, 'source_diff': 4.729999999869561e-07}, {'time': 0.074054708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.902000000003072e-06, 'source_diff': 6.902000000003072e-06}, {'time': 0.074055181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074063153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000008861e-06, 'source_diff': 7.972000000008861e-06}, {'time': 0.074063625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074067583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9580000000122295e-06, 'source_diff': 3.9580000000122295e-06}, {'time': 0.074068069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074076417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.34800000000524e-06, 'source_diff': 8.34800000000524e-06}, {'time': 0.074076903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074084736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.074085222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074089833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999987708e-06, 'source_diff': 4.610999999987708e-06}, {'time': 0.074090319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074094306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986999999996965e-06, 'source_diff': 3.986999999996965e-06}, {'time': 0.074094792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074101486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999987654e-06, 'source_diff': 6.693999999987654e-06}, {'time': 0.074101958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.074109444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000004326e-05, 'source_diff': 1.0459000000004326e-05}, {'time': 0.074120375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074129042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.074129514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.07413425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.074134722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074144444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000003672e-06, 'source_diff': 9.722000000003672e-06}, {'time': 0.074144917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074149, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.074149472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074159194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000003672e-06, 'source_diff': 9.722000000003672e-06}, {'time': 0.074159667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074168556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.074169028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074179056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999995263e-05, 'source_diff': 1.0027999999995263e-05}, {'time': 0.074179528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074185389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000009775e-06, 'source_diff': 5.861000000009775e-06}, {'time': 0.074185875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074195472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.074195958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074201, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.074201472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074210347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999991529e-06, 'source_diff': 8.874999999991529e-06}, {'time': 0.074210819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074217306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.074217792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.074224097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074232181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999991542e-06, 'source_diff': 8.083999999991542e-06}, {'time': 0.074232653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074242778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.074243264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074252778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.07425325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074261083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.074261556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074267944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3879999999960635e-06, 'source_diff': 6.3879999999960635e-06}, {'time': 0.074268417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074275111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.074275597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074282736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.074283208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:48.159" endtime="20201112 12:41:48.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.154" endtime="20201112 12:41:48.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:48.191" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 8.957999999989474e-06, 4.86000000007869e-07, 6.583000000004446e-06, 4.859999999939912e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.875000000002406e-...</msg>
<status status="PASS" starttime="20201112 12:41:48.166" endtime="20201112 12:41:48.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.195" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:48.194" endtime="20201112 12:41:48.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.199" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 8.957999999989474e-06, 4.86000000007869e-07, 6.583000000004446e-06, 4.859999999939912e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.875000000002406e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.870000000073427e-07, 9.929999999991335e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.720000000013602e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 1.034800000000724e-05, 4.720000000013602e-07, 7.846999999991389e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.7300000000083386e-07, 1.0041000000002298e-05, 4.720000000013602e-07, 9.375000000005906e-06, 4.869999999934649e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 9.944000000011721e-06, 4.729999999869561e-07, 6.902000000003072e-06, 4.7300000000083386e-07, 7.972000000008861e-06, 4.7199999998748243e-07, 3.9580000000122295e-06, 4.859999999939912e-07, 8.34800000000524e-06, 4.859999999939912e-07, 7.832999999998758e-06, 4.86000000007869e-07, 4.610999999987708e-06, 4.86000000007869e-07, 3.986999999996965e-06, 4.86000000007869e-07, 6.693999999987654e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0459000000004326e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999998748243e-07, 4.7360000000051805e-06, 4.720000000013602e-07, 9.722000000003672e-06, 4.7300000000083386e-07, 4.083000000001946e-06, 4.7199999998748243e-07, 9.722000000003672e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 5.861000000009775e-06, 4.859999999939912e-07, 9.597000000000078e-06, 4.86000000007869e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.874999999991529e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.86000000007869e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 8.083999999991542e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.86000000007869e-07, 9.514000000002132e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 6.3879999999960635e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.859999999939912e-07, 7.139000000003226e-06, 4.720000000013602e-07], 'eventsourcetime': [0.073895208, 0.073895681, 0.073904639, 0.073905125, 0.073911708, 0.073912194, 0.073918889, 0.073919361, 0.073925236, 0.073925708, 0.073930944, 0.073931431, 0.073941361, 0.073941833, 0.0739505, 0.073950972, 0.073954972, 0.073955444, 0.073965792, 0.073966264, 0.073974111, 0.073974583, 0.073982944, 0.073983417, 0.07399325, 0.073993722, 0.073998972, 0.073999444, 0.074005833, 0.074006306, 0.074016347, 0.074016819, 0.074026194, 0.074026681, 0.074030986, 0.074031458, 0.074036917, 0.074037389, 0.074047333, 0.074047806, 0.074054708, 0.074055181, 0.074063153, 0.074063625, 0.074067583, 0.074068069, 0.074076417, 0.074076903, 0.074084736, 0.074085222, 0.074089833, 0.074090319, 0.074094306, 0.074094792, 0.074101486, 0.074101958, 0.074108972, 0.074109444, 0.074119903, 0.074120375, 0.074129042, 0.074129514, 0.07413425, 0.074134722, 0.074144444, 0.074144917, 0.074149, 0.074149472, 0.074159194, 0.074159667, 0.074168556, 0.074169028, 0.074179056, 0.074179528, 0.074185389, 0.074185875, 0.074195472, 0.074195958, 0.074201, 0.074201472, 0.074210347, 0.074210819, 0.074217306, 0.074217792, 0.074223625, 0.074224097, 0.074232181, 0.074232653, 0.074242778, 0.074243264, 0.074252778, 0.07425325, 0.074261083, 0.074261556, 0.074267944, 0.074268417, 0.074275111, 0.074275597, 0.074282736, 0.074283208], 'diff': [0, 4.7300000000083386e-07, 8.957999999989474e-06, 4.86000000007869e-07, 6.583000000004446e-06, 4.859999999939912e-07, 6.695000000001006e-06, 4.720000000013602e-07, 5.875000000002406e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.870000000073427e-07, 9.929999999991335e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.720000000013602e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 1.034800000000724e-05, 4.720000000013602e-07, 7.846999999991389e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.7300000000083386e-07, 1.0041000000002298e-05, 4.720000000013602e-07, 9.375000000005906e-06, 4.869999999934649e-07, 4.3049999999961175e-06, 4.720000000013602e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 9.944000000011721e-06, 4.729999999869561e-07, 6.902000000003072e-06, 4.7300000000083386e-07, 7.972000000008861e-06, 4.7199999998748243e-07, 3.9580000000122295e-06, 4.859999999939912e-07, 8.34800000000524e-06, 4.859999999939912e-07, 7.832999999998758e-06, 4.86000000007869e-07, 4.610999999987708e-06, 4.86000000007869e-07, 3.986999999996965e-06, 4.86000000007869e-07, 6.693999999987654e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0459000000004326e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999998748243e-07, 4.7360000000051805e-06, 4.720000000013602e-07, 9.722000000003672e-06, 4.7300000000083386e-07, 4.083000000001946e-06, 4.7199999998748243e-07, 9.722000000003672e-06, 4.7300000000083386e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 5.861000000009775e-06, 4.859999999939912e-07, 9.597000000000078e-06, 4.86000000007869e-07, 5.041999999996771e-06, 4.720000000013602e-07, 8.874999999991529e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.86000000007869e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 8.083999999991542e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.86000000007869e-07, 9.514000000002132e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 6.3879999999960635e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.859999999939912e-07, 7.139000000003226e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:48.196" endtime="20201112 12:41:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.192" endtime="20201112 12:41:48.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:48.205" level="INFO">${RESULT} = [{'time': 0.073895681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.073905125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:48.201" endtime="20201112 12:41:48.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:48.219" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07,...</msg>
<status status="PASS" starttime="20201112 12:41:48.206" endtime="20201112 12:41:48.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.223" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:48.222" endtime="20201112 12:41:48.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.226" level="INFO">VALUE: [4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:48.224" endtime="20201112 12:41:48.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.220" endtime="20201112 12:41:48.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.229" endtime="20201112 12:41:48.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.233" endtime="20201112 12:41:48.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.231" endtime="20201112 12:41:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.227" endtime="20201112 12:41:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.800" endtime="20201112 12:41:48.253"></status>
</kw>
<msg timestamp="20201112 12:41:48.254" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.262" endtime="20201112 12:41:48.278"></status>
</kw>
<msg timestamp="20201112 12:41:48.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.260" endtime="20201112 12:41:48.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.280" endtime="20201112 12:41:48.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.282" endtime="20201112 12:41:48.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.257" endtime="20201112 12:41:48.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.256" endtime="20201112 12:41:48.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.294" endtime="20201112 12:41:48.579"></status>
</kw>
<msg timestamp="20201112 12:41:48.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.292" endtime="20201112 12:41:48.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.583" endtime="20201112 12:41:48.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.592" endtime="20201112 12:41:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.288" endtime="20201112 12:41:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.286" endtime="20201112 12:41:48.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.599" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:48.598" endtime="20201112 12:41:48.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.604" level="INFO">VALUE: [{'time': 0.021105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021114944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.021115431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021125056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.021125528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021129611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.021130097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021139194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.021139667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021144917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.021145389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021149375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.021149847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021156569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.021157042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021161444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.021161917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021168028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.0211685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.021179167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021184222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.021184694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021192278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.021192764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021201528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021202, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.021212181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021221264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.021221736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021226847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.021227319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.021236472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021242653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.021243125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021248472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.021248944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021256597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.021257069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021266042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.021266528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.021271417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021280917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.021281403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021285528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.021286, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021296417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.021296889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021305639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.021306125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021310208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.021310694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021315194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.021315667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021325986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.021326458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021330819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.021331292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.021337597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021346958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.021347431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021354986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.021355458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021359319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.021359792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021368889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.021369361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021374083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.021374569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021383069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.021383542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021393861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.021394333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021404347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.021404833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.021413458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021419958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.021420431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021424847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.021425319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021433681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361999999997871e-06, 'source_diff': 8.361999999997871e-06}, {'time': 0.021434153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021442208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.021442694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.021451944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021456458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021456944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021466958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.021467444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021472056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.021472542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.021482917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:48.600" endtime="20201112 12:41:48.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.596" endtime="20201112 12:41:48.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:48.631" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 8.666000000000923e-06, 4.870000000004038e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.860000000009301e-07, 9.096999999999578e...</msg>
<status status="PASS" starttime="20201112 12:41:48.607" endtime="20201112 12:41:48.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.635" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:48.634" endtime="20201112 12:41:48.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.639" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 8.666000000000923e-06, 4.870000000004038e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.860000000009301e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.7199999999789077e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.729999999973644e-07, 6.110999999999617e-06, 4.720000000013602e-07, 1.0181000000001467e-05, 4.859999999974607e-07, 5.055000000000337e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 8.750000000001812e-06, 4.859999999974607e-07, 4.083000000001946e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.729999999973644e-07, 9.096999999999578e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 8.500000000001562e-06, 4.729999999973644e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.152999999996857e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 4.61200000000106e-06, 4.860000000009301e-07, 9.901999999999134e-06, 4.7300000000083386e-07], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.021105806, 0.021106278, 0.021114944, 0.021115431, 0.021125056, 0.021125528, 0.021129611, 0.021130097, 0.021139194, 0.021139667, 0.021144917, 0.021145389, 0.021149375, 0.021149847, 0.021156569, 0.021157042, 0.021161444, 0.021161917, 0.021168028, 0.0211685, 0.021178681, 0.021179167, 0.021184222, 0.021184694, 0.021192278, 0.021192764, 0.021201528, 0.021202, 0.021211708, 0.021212181, 0.021221264, 0.021221736, 0.021226847, 0.021227319, 0.021236, 0.021236472, 0.021242653, 0.021243125, 0.021248472, 0.021248944, 0.021256597, 0.021257069, 0.021266042, 0.021266528, 0.021270931, 0.021271417, 0.021280917, 0.021281403, 0.021285528, 0.021286, 0.021296417, 0.021296889, 0.021305639, 0.021306125, 0.021310208, 0.021310694, 0.021315194, 0.021315667, 0.021325986, 0.021326458, 0.021330819, 0.021331292, 0.021337125, 0.021337597, 0.021346958, 0.021347431, 0.021354986, 0.021355458, 0.021359319, 0.021359792, 0.021368889, 0.021369361, 0.021374083, 0.021374569, 0.021383069, 0.021383542, 0.021393861, 0.021394333, 0.021404347, 0.021404833, 0.021412986, 0.021413458, 0.021419958, 0.021420431, 0.021424847, 0.021425319, 0.021433681, 0.021434153, 0.021442208, 0.021442694, 0.021451472, 0.021451944, 0.021456458, 0.021456944, 0.021466958, 0.021467444, 0.021472056, 0.021472542, 0.021482444, 0.021482917], 'diff': [0, 4.7199999999789077e-07, 8.666000000000923e-06, 4.870000000004038e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.082999999998477e-06, 4.860000000009301e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.7199999999789077e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.729999999973644e-07, 6.110999999999617e-06, 4.720000000013602e-07, 1.0181000000001467e-05, 4.859999999974607e-07, 5.055000000000337e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.860000000009301e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 9.083000000000008e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 8.750000000001812e-06, 4.859999999974607e-07, 4.083000000001946e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 3.861000000000836e-06, 4.729999999973644e-07, 9.096999999999578e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 8.500000000001562e-06, 4.729999999973644e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.152999999996857e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 4.61200000000106e-06, 4.860000000009301e-07, 9.901999999999134e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:48.636" endtime="20201112 12:41:48.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.632" endtime="20201112 12:41:48.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:48.645" level="INFO">${RESULT} = [{'time': 0.021106278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021115431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:48.642" endtime="20201112 12:41:48.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:48.659" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e...</msg>
<status status="PASS" starttime="20201112 12:41:48.646" endtime="20201112 12:41:48.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.663" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:48.662" endtime="20201112 12:41:48.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.666" level="INFO">VALUE: [4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:41:48.665" endtime="20201112 12:41:48.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.660" endtime="20201112 12:41:48.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.669" endtime="20201112 12:41:48.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.674" endtime="20201112 12:41:48.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.671" endtime="20201112 12:41:48.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.668" endtime="20201112 12:41:48.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.254" endtime="20201112 12:41:48.695"></status>
</kw>
<msg timestamp="20201112 12:41:48.695" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.703" endtime="20201112 12:41:48.720"></status>
</kw>
<msg timestamp="20201112 12:41:48.720" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.701" endtime="20201112 12:41:48.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.721" endtime="20201112 12:41:48.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.724" endtime="20201112 12:41:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.699" endtime="20201112 12:41:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.697" endtime="20201112 12:41:48.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.733" endtime="20201112 12:41:49.019"></status>
</kw>
<msg timestamp="20201112 12:41:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.732" endtime="20201112 12:41:49.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.023" endtime="20201112 12:41:49.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.032" endtime="20201112 12:41:49.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.729" endtime="20201112 12:41:49.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.727" endtime="20201112 12:41:49.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.039" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:49.038" endtime="20201112 12:41:49.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.045" level="INFO">VALUE: [{'time': 0.022016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022025458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.022025931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022032611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.022033083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022040236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.022040708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0220485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.022048972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022058056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.022058528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022064278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.02206475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022073722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022074208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022078083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8749999999969365e-06, 'source_diff': 3.8749999999969365e-06}, {'time': 0.022078556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022088889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.022089361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0220945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022094986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022101694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.022102167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022111778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.02211225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022119153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.022119639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022124986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022125458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022134458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.022134931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022140167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.022140639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.022149486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022154111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.022154583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022163028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.445000000002756e-06, 'source_diff': 8.445000000002756e-06}, {'time': 0.0221635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022172167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.022172639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022180778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.02218125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022188458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.022188931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022197597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.022198069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022207458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.022207931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022217972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.022218444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022225875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.022226347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022236264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.022236736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022243056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.022243528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022251347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819000000002657e-06, 'source_diff': 7.819000000002657e-06}, {'time': 0.022251819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022258014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.022258486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022268292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.022268778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022276417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.022276889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022281111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.022281583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022285569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022286042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022291819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.022292292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022300028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.0223005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022310847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.022311319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022320681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.022327472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.791000000002517e-06, 'source_diff': 6.791000000002517e-06}, {'time': 0.022327958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022335681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.022336167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022344097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.022344569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0223515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.022351972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022361653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.022362125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022369306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.022369778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022374944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.022375417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.022381625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022386028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022386514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022396736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022397208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022403903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.022404389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:49.041" endtime="20201112 12:41:49.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.036" endtime="20201112 12:41:49.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:49.073" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 8.361000000001867e-06, 4.729999999973644e-07, 6.680000000001962e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 7.79199999999952...</msg>
<status status="PASS" starttime="20201112 12:41:49.048" endtime="20201112 12:41:49.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.077" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:49.076" endtime="20201112 12:41:49.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.081" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 8.361000000001867e-06, 4.729999999973644e-07, 6.680000000001962e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 7.791999999999522e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.860000000009301e-07, 3.8749999999969365e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.139000000001226e-06, 4.860000000009301e-07, 6.708000000001102e-06, 4.729999999973644e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 5.235999999998742e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.445000000002756e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 5.777000000001947e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.869999999969343e-07, 6.791000000002517e-06, 4.859999999974607e-07, 7.723000000001146e-06, 4.860000000009301e-07, 7.929999999999743e-06, 4.720000000013602e-07, 6.930999999998216e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 5.735999999999242e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 6.695000000001006e-06, 4.860000000009301e-07], 'eventsourcetime': [0.022016625, 0.022017097, 0.022025458, 0.022025931, 0.022032611, 0.022033083, 0.022040236, 0.022040708, 0.0220485, 0.022048972, 0.022058056, 0.022058528, 0.022064278, 0.02206475, 0.022073722, 0.022074208, 0.022078083, 0.022078556, 0.022088889, 0.022089361, 0.0220945, 0.022094986, 0.022101694, 0.022102167, 0.022111778, 0.02211225, 0.022119153, 0.022119639, 0.022124986, 0.022125458, 0.022134458, 0.022134931, 0.022140167, 0.022140639, 0.022149014, 0.022149486, 0.022154111, 0.022154583, 0.022163028, 0.0221635, 0.022172167, 0.022172639, 0.022180778, 0.02218125, 0.022188458, 0.022188931, 0.022197597, 0.022198069, 0.022207458, 0.022207931, 0.022217972, 0.022218444, 0.022225875, 0.022226347, 0.022236264, 0.022236736, 0.022243056, 0.022243528, 0.022251347, 0.022251819, 0.022258014, 0.022258486, 0.022268292, 0.022268778, 0.022276417, 0.022276889, 0.022281111, 0.022281583, 0.022285569, 0.022286042, 0.022291819, 0.022292292, 0.022300028, 0.0223005, 0.022310847, 0.022311319, 0.022320194, 0.022320681, 0.022327472, 0.022327958, 0.022335681, 0.022336167, 0.022344097, 0.022344569, 0.0223515, 0.022351972, 0.022361653, 0.022362125, 0.022369306, 0.022369778, 0.022374944, 0.022375417, 0.022381153, 0.022381625, 0.022386028, 0.022386514, 0.022396736, 0.022397208, 0.022403903, 0.022404389], 'diff': [0, 4.7199999999789077e-07, 8.361000000001867e-06, 4.729999999973644e-07, 6.680000000001962e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 7.791999999999522e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.860000000009301e-07, 3.8749999999969365e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.139000000001226e-06, 4.860000000009301e-07, 6.708000000001102e-06, 4.729999999973644e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 5.235999999998742e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.445000000002756e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 5.777000000001947e-06, 4.729999999973644e-07, 7.736000000001242e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.869999999969343e-07, 6.791000000002517e-06, 4.859999999974607e-07, 7.723000000001146e-06, 4.860000000009301e-07, 7.929999999999743e-06, 4.720000000013602e-07, 6.930999999998216e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 5.735999999999242e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 6.695000000001006e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:49.078" endtime="20201112 12:41:49.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.074" endtime="20201112 12:41:49.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.087" level="INFO">${RESULT} = [{'time': 0.022017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022025931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:49.084" endtime="20201112 12:41:49.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.101" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-...</msg>
<status status="PASS" starttime="20201112 12:41:49.088" endtime="20201112 12:41:49.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.105" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:49.104" endtime="20201112 12:41:49.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.108" level="INFO">VALUE: [4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:41:49.107" endtime="20201112 12:41:49.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.102" endtime="20201112 12:41:49.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.111" endtime="20201112 12:41:49.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.115" endtime="20201112 12:41:49.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.113" endtime="20201112 12:41:49.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.110" endtime="20201112 12:41:49.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.695" endtime="20201112 12:41:49.136"></status>
</kw>
<msg timestamp="20201112 12:41:49.136" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.144" endtime="20201112 12:41:49.165"></status>
</kw>
<msg timestamp="20201112 12:41:49.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.142" endtime="20201112 12:41:49.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.168" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.166" endtime="20201112 12:41:49.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.169" endtime="20201112 12:41:49.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.140" endtime="20201112 12:41:49.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.138" endtime="20201112 12:41:49.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.178" endtime="20201112 12:41:49.467"></status>
</kw>
<msg timestamp="20201112 12:41:49.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023042694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.177" endtime="20201112 12:41:49.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023042694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.472" endtime="20201112 12:41:49.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.481" endtime="20201112 12:41:49.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.174" endtime="20201112 12:41:49.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.172" endtime="20201112 12:41:49.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.488" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:49.486" endtime="20201112 12:41:49.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.493" level="INFO">VALUE: [{'time': 0.023042694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023050375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023050847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023056194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.023056681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023066917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.023067389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023073153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.023073625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023082819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.023083306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023093222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.023093708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023100875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.023101347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023111639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999998552e-05, 'source_diff': 1.0291999999998552e-05}, {'time': 0.023112111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023117458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.023117944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023125264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.023125736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023130361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.023130833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023141278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.023141764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023149611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.023150083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023154806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.023155278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023163653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.023164125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023168958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.023169431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023178319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.023178792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.023189611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023197667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.023198139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023203181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.023203653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023213583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.023214056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023222292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.023222764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.023233042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023241903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.023242375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023249319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.023249792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02325425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.023254736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023258819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.023259292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023265875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.023266361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023272417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.023272903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023278764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.023279236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023289375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0139000000002757e-05, 'source_diff': 1.0139000000002757e-05}, {'time': 0.023289847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023298486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.023302958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023307986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.023308472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.023314097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023323486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.023323958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023333833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.023334306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023341375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069000000001907e-06, 'source_diff': 7.069000000001907e-06}, {'time': 0.023341847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023346569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.023347056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023355514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.023356, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.02336375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.023364222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.023373889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023378833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.944000000003251e-06, 'source_diff': 4.944000000003251e-06}, {'time': 0.023379306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.023386583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023395875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.023396347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023401181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.023401653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02341075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.023411222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023418875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.023419347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023423542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.023424014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:49.489" endtime="20201112 12:41:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.484" endtime="20201112 12:41:49.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:49.519" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 7.208000000001602e-06, 4.7199999999789077e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.76399999999838...</msg>
<status status="PASS" starttime="20201112 12:41:49.496" endtime="20201112 12:41:49.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.524" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:49.522" endtime="20201112 12:41:49.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.528" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 7.208000000001602e-06, 4.7199999999789077e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.860000000009301e-07, 7.1669999999988965e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.723000000001615e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 9.805000000001618e-06, 4.729999999973644e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 6.944000000001782e-06, 4.729999999973644e-07, 4.458000000002321e-06, 4.860000000009301e-07, 4.082999999998477e-06, 4.7300000000083386e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 6.056000000000811e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.069000000001907e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 4.944000000003251e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07], 'eventsourcetime': [0.023042694, 0.023043167, 0.023050375, 0.023050847, 0.023056194, 0.023056681, 0.023066917, 0.023067389, 0.023073153, 0.023073625, 0.023082819, 0.023083306, 0.023093222, 0.023093708, 0.023100875, 0.023101347, 0.023111639, 0.023112111, 0.023117458, 0.023117944, 0.023125264, 0.023125736, 0.023130361, 0.023130833, 0.023141278, 0.023141764, 0.023149611, 0.023150083, 0.023154806, 0.023155278, 0.023163653, 0.023164125, 0.023168958, 0.023169431, 0.023178319, 0.023178792, 0.023189125, 0.023189611, 0.023197667, 0.023198139, 0.023203181, 0.023203653, 0.023213583, 0.023214056, 0.023222292, 0.023222764, 0.023232569, 0.023233042, 0.023241903, 0.023242375, 0.023249319, 0.023249792, 0.02325425, 0.023254736, 0.023258819, 0.023259292, 0.023265875, 0.023266361, 0.023272417, 0.023272903, 0.023278764, 0.023279236, 0.023289375, 0.023289847, 0.023298, 0.023298486, 0.023302486, 0.023302958, 0.023307986, 0.023308472, 0.023313625, 0.023314097, 0.023323486, 0.023323958, 0.023333833, 0.023334306, 0.023341375, 0.023341847, 0.023346569, 0.023347056, 0.023355514, 0.023356, 0.02336375, 0.023364222, 0.023373403, 0.023373889, 0.023378833, 0.023379306, 0.023386111, 0.023386583, 0.023395875, 0.023396347, 0.023401181, 0.023401653, 0.02341075, 0.023411222, 0.023418875, 0.023419347, 0.023423542, 0.023424014], 'diff': [0, 4.7300000000083386e-07, 7.208000000001602e-06, 4.7199999999789077e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.860000000009301e-07, 7.1669999999988965e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 4.723000000001615e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 9.805000000001618e-06, 4.729999999973644e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 6.944000000001782e-06, 4.729999999973644e-07, 4.458000000002321e-06, 4.860000000009301e-07, 4.082999999998477e-06, 4.7300000000083386e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 6.056000000000811e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.069000000001907e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 4.944000000003251e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:49.525" endtime="20201112 12:41:49.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.520" endtime="20201112 12:41:49.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.534" level="INFO">${RESULT} = [{'time': 0.023043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023050847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:49.530" endtime="20201112 12:41:49.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.548" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201112 12:41:49.535" endtime="20201112 12:41:49.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.552" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:49.551" endtime="20201112 12:41:49.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.555" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:49.553" endtime="20201112 12:41:49.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.549" endtime="20201112 12:41:49.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.558" endtime="20201112 12:41:49.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.561" endtime="20201112 12:41:49.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.560" endtime="20201112 12:41:49.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.556" endtime="20201112 12:41:49.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.137" endtime="20201112 12:41:49.582"></status>
</kw>
<msg timestamp="20201112 12:41:49.583" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.592" endtime="20201112 12:41:49.609"></status>
</kw>
<msg timestamp="20201112 12:41:49.609" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.590" endtime="20201112 12:41:49.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.610" endtime="20201112 12:41:49.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.613" endtime="20201112 12:41:49.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.587" endtime="20201112 12:41:49.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.585" endtime="20201112 12:41:49.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.622" endtime="20201112 12:41:49.904"></status>
</kw>
<msg timestamp="20201112 12:41:49.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.621" endtime="20201112 12:41:49.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.909" endtime="20201112 12:41:49.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.925" endtime="20201112 12:41:49.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.618" endtime="20201112 12:41:49.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.616" endtime="20201112 12:41:49.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.932" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:49.931" endtime="20201112 12:41:49.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.937" level="INFO">VALUE: [{'time': 0.023577389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023583431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555999999996841e-06, 'source_diff': 5.555999999996841e-06}, {'time': 0.023583903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023590611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.023591083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023599347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.023599819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023606625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.023607097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.023617514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023625556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.023626028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023631069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.023631542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023635528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.023636, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023645083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.023645556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023650056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.023650528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0236595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.023659972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023668319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.023668806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023677667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.023678153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023684417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.023684889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023691069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.023691542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.023697903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023705694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.023706181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023713611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.023714083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.023723931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023729014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.023729486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023737889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.023738361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023743694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.023744181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023750347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.023750833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023756486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.023756972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023761389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.023761861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023770986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.023771458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023778583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023779056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023785931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.023786403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0237955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.023795972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023801333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.023801806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023811306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.023811792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023819111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.023819583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.023825625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023833583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.023834056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023843556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.023844028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023854403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.023854875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023860722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.023861194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023869153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.023869625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023874014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.023874486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023879417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.023879889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023885028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.0238855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023892194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.023892667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023902153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.023902639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.023909181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023918764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.582999999997038e-06, 'source_diff': 9.582999999997038e-06}, {'time': 0.02391925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023927403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023927875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023932278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.02393275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023940069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.023940556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023948306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.023948778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:49.933" endtime="20201112 12:41:49.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.929" endtime="20201112 12:41:49.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:49.965" level="INFO">${debug-compressed} = {'source_diff': [0, 4.860000000009301e-07, 5.555999999996841e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 6.805999999998091e...</msg>
<status status="PASS" starttime="20201112 12:41:49.940" endtime="20201112 12:41:49.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.969" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:49.968" endtime="20201112 12:41:49.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.973" level="INFO">VALUE: {'source_diff': [0, 4.860000000009301e-07, 5.555999999996841e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.870000000004038e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 7.791000000000048e-06, 4.870000000004038e-07, 7.429999999999243e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 5.082999999999477e-06, 4.720000000013602e-07, 8.403000000000577e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.870000000004038e-07, 6.166000000001892e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.729999999973644e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 7.959000000001826e-06, 4.7199999999789077e-07, 4.389000000000476e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.860000000009301e-07, 6.069000000000907e-06, 4.7300000000083386e-07, 9.582999999997038e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.870000000004038e-07, 7.749999999997342e-06, 4.720000000013602e-07], 'eventsourcetime': [0.023577389, 0.023577875, 0.023583431, 0.023583903, 0.023590611, 0.023591083, 0.023599347, 0.023599819, 0.023606625, 0.023607097, 0.023617042, 0.023617514, 0.023625556, 0.023626028, 0.023631069, 0.023631542, 0.023635528, 0.023636, 0.023645083, 0.023645556, 0.023650056, 0.023650528, 0.0236595, 0.023659972, 0.023668319, 0.023668806, 0.023677667, 0.023678153, 0.023684417, 0.023684889, 0.023691069, 0.023691542, 0.023697431, 0.023697903, 0.023705694, 0.023706181, 0.023713611, 0.023714083, 0.023723458, 0.023723931, 0.023729014, 0.023729486, 0.023737889, 0.023738361, 0.023743694, 0.023744181, 0.023750347, 0.023750833, 0.023756486, 0.023756972, 0.023761389, 0.023761861, 0.023770986, 0.023771458, 0.023778583, 0.023779056, 0.023785931, 0.023786403, 0.0237955, 0.023795972, 0.023801333, 0.023801806, 0.023811306, 0.023811792, 0.023819111, 0.023819583, 0.023825139, 0.023825625, 0.023833583, 0.023834056, 0.023843556, 0.023844028, 0.023854403, 0.023854875, 0.023860722, 0.023861194, 0.023869153, 0.023869625, 0.023874014, 0.023874486, 0.023879417, 0.023879889, 0.023885028, 0.0238855, 0.023892194, 0.023892667, 0.023902153, 0.023902639, 0.023908708, 0.023909181, 0.023918764, 0.02391925, 0.023927403, 0.023927875, 0.023932278, 0.02393275, 0.023940069, 0.023940556, 0.023948306, 0.023948778], 'diff': [0, 4.860000000009301e-07, 5.555999999996841e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.729999999973644e-07, 3.986000000000961e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.870000000004038e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.2639999999988816e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 7.791000000000048e-06, 4.870000000004038e-07, 7.429999999999243e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 5.082999999999477e-06, 4.720000000013602e-07, 8.403000000000577e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.870000000004038e-07, 6.166000000001892e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.729999999973644e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 7.959000000001826e-06, 4.7199999999789077e-07, 4.389000000000476e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.860000000009301e-07, 6.069000000000907e-06, 4.7300000000083386e-07, 9.582999999997038e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.870000000004038e-07, 7.749999999997342e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:49.970" endtime="20201112 12:41:49.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.966" endtime="20201112 12:41:49.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.980" level="INFO">${RESULT} = [{'time': 0.023577875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023583903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:49.976" endtime="20201112 12:41:49.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.993" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-0...</msg>
<status status="PASS" starttime="20201112 12:41:49.981" endtime="20201112 12:41:49.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.998" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:49.997" endtime="20201112 12:41:49.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.001" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:49.999" endtime="20201112 12:41:50.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.994" endtime="20201112 12:41:50.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.004" endtime="20201112 12:41:50.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.008" endtime="20201112 12:41:50.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.006" endtime="20201112 12:41:50.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.002" endtime="20201112 12:41:50.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.583" endtime="20201112 12:41:50.028"></status>
</kw>
<msg timestamp="20201112 12:41:50.029" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.037" endtime="20201112 12:41:50.052"></status>
</kw>
<msg timestamp="20201112 12:41:50.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.035" endtime="20201112 12:41:50.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.053" endtime="20201112 12:41:50.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.056" endtime="20201112 12:41:50.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.032" endtime="20201112 12:41:50.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.030" endtime="20201112 12:41:50.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.067" endtime="20201112 12:41:50.357"></status>
</kw>
<msg timestamp="20201112 12:41:50.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.065" endtime="20201112 12:41:50.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.361" endtime="20201112 12:41:50.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.370" endtime="20201112 12:41:50.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.062" endtime="20201112 12:41:50.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.060" endtime="20201112 12:41:50.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.377" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:50.376" endtime="20201112 12:41:50.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.382" level="INFO">VALUE: [{'time': 0.019581347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019581833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019586569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.019587042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019592792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.019593278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019601028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.0196015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019606111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.019606583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019614542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}, {'time': 0.019615014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019619931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.019620417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019624611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.019625097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019629917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019630389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019637569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019638042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019646139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.019646625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019650958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.019651431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019658306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.019658792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01966725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019667736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019676208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019676681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019684431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.019684903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019691486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019691972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019700958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019701431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019711139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019711625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019717389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019717861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019723625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019724097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019733639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.019734111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019744, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.019744486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019754403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.019754889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019765222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.019765694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019772389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.019772875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019777597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.019778069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019785083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019785556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019794444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888000000002033e-06, 'source_diff': 8.888000000002033e-06}, {'time': 0.019794917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019799014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019799486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019808264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.01980875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019815542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.019816028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019824819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.019825292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019835417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019835889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019841458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.019841931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019847264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.01984775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019854708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019864639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019865111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019872639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019873125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019878931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019879403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019889125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019889597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019893653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.019894125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019900097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019900569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019907667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.019908153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019912333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.019912819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019917444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.019917917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019925347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.019925819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019933611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.019934097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019938625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019939097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019944514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.019944986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:50.378" endtime="20201112 12:41:50.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.373" endtime="20201112 12:41:50.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:50.409" level="INFO">${debug-compressed} = {'source_diff': [0, 4.860000000009301e-07, 4.736000000001711e-06, 4.729999999973644e-07, 5.750000000002281e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 4.610999999998117e-...</msg>
<status status="PASS" starttime="20201112 12:41:50.385" endtime="20201112 12:41:50.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.413" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:50.412" endtime="20201112 12:41:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.417" level="INFO">VALUE: {'source_diff': [0, 4.860000000009301e-07, 4.736000000001711e-06, 4.729999999973644e-07, 5.750000000002281e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.958999999998356e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 7.179999999998993e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.860000000009301e-07, 4.332999999998727e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 9.889000000002507e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.888000000002033e-06, 4.729999999973644e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.859999999974607e-07, 5.806000000000561e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.05600000000228e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 4.179999999999462e-06, 4.859999999974607e-07, 4.625000000001156e-06, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 5.417000000000616e-06, 4.720000000013602e-07], 'eventsourcetime': [0.019581347, 0.019581833, 0.019586569, 0.019587042, 0.019592792, 0.019593278, 0.019601028, 0.0196015, 0.019606111, 0.019606583, 0.019614542, 0.019615014, 0.019619931, 0.019620417, 0.019624611, 0.019625097, 0.019629917, 0.019630389, 0.019637569, 0.019638042, 0.019646139, 0.019646625, 0.019650958, 0.019651431, 0.019658306, 0.019658792, 0.01966725, 0.019667736, 0.019676208, 0.019676681, 0.019684431, 0.019684903, 0.019691486, 0.019691972, 0.019700958, 0.019701431, 0.019711139, 0.019711625, 0.019717389, 0.019717861, 0.019723625, 0.019724097, 0.019733639, 0.019734111, 0.019744, 0.019744486, 0.019754403, 0.019754889, 0.019765222, 0.019765694, 0.019772389, 0.019772875, 0.019777597, 0.019778069, 0.019785083, 0.019785556, 0.019794444, 0.019794917, 0.019799014, 0.019799486, 0.019808264, 0.01980875, 0.019815542, 0.019816028, 0.019824819, 0.019825292, 0.019835417, 0.019835889, 0.019841458, 0.019841931, 0.019847264, 0.01984775, 0.019854236, 0.019854708, 0.019864639, 0.019865111, 0.019872639, 0.019873125, 0.019878931, 0.019879403, 0.019889125, 0.019889597, 0.019893653, 0.019894125, 0.019900097, 0.019900569, 0.019907667, 0.019908153, 0.019912333, 0.019912819, 0.019917444, 0.019917917, 0.019925347, 0.019925819, 0.019933611, 0.019934097, 0.019938625, 0.019939097, 0.019944514, 0.019944986], 'diff': [0, 4.860000000009301e-07, 4.736000000001711e-06, 4.729999999973644e-07, 5.750000000002281e-06, 4.859999999974607e-07, 7.750000000000812e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.958999999998356e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.860000000009301e-07, 4.193999999999032e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 7.179999999998993e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.860000000009301e-07, 4.332999999998727e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.859999999974607e-07, 8.986000000002492e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 9.889000000002507e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.888000000002033e-06, 4.729999999973644e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 8.791000000001048e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.859999999974607e-07, 5.806000000000561e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.05600000000228e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 4.179999999999462e-06, 4.859999999974607e-07, 4.625000000001156e-06, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 5.417000000000616e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:50.414" endtime="20201112 12:41:50.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.410" endtime="20201112 12:41:50.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.423" level="INFO">${RESULT} = [{'time': 0.019581833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019587042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:50.419" endtime="20201112 12:41:50.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.437" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07,...</msg>
<status status="PASS" starttime="20201112 12:41:50.424" endtime="20201112 12:41:50.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.442" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:50.441" endtime="20201112 12:41:50.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.444" level="INFO">VALUE: [4.860000000009301e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:50.443" endtime="20201112 12:41:50.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.438" endtime="20201112 12:41:50.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.448" endtime="20201112 12:41:50.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.451" endtime="20201112 12:41:50.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.450" endtime="20201112 12:41:50.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.446" endtime="20201112 12:41:50.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.029" endtime="20201112 12:41:50.472"></status>
</kw>
<msg timestamp="20201112 12:41:50.472" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.481" endtime="20201112 12:41:50.498"></status>
</kw>
<msg timestamp="20201112 12:41:50.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.479" endtime="20201112 12:41:50.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.500" endtime="20201112 12:41:50.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.502" endtime="20201112 12:41:50.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.476" endtime="20201112 12:41:50.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.474" endtime="20201112 12:41:50.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.512" endtime="20201112 12:41:50.799"></status>
</kw>
<msg timestamp="20201112 12:41:50.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.510" endtime="20201112 12:41:50.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.803" endtime="20201112 12:41:50.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.812" endtime="20201112 12:41:50.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.508" endtime="20201112 12:41:50.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.506" endtime="20201112 12:41:50.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.819" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:50.818" endtime="20201112 12:41:50.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.824" level="INFO">VALUE: [{'time': 0.022998667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022999139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023009569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430000000002243e-05, 'source_diff': 1.0430000000002243e-05}, {'time': 0.023010042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023016736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.023017222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023023097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.023023569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023032139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.023032611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02303675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.023037222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023045861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.023046347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023053875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.528000000003171e-06, 'source_diff': 7.528000000003171e-06}, {'time': 0.023054347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023062833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.023063306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023070931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023071403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023077278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.02307775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023081847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.023082333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023087569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.023088042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023094333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.023094806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023101917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023102403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023110028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.0231105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.023115486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023124236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.023124722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023133583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.023134069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023139556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.023140028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023150292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.023150778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023160569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.023161042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023168889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.023169361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023178778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.02317925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023187361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023195514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023195986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023205917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.023206389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023213403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.023213875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023221417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.023221889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023226736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.023227208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023234208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.023234681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023242028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.0232425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023251375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.023251847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023255944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.023256417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023260319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.023260792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023268319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.023268806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023275083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.023275556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023282056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.023282528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023289153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.023289625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023298167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.023298653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023305764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023306236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02331475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.023315222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023322292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.070000000001381e-06, 'source_diff': 7.070000000001381e-06}, {'time': 0.023322778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023330014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.023330486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023338111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023338583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023342681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.023343167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023350431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.023350903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023360986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.023361472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023368889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.023369375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023378361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.023378833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:50.820" endtime="20201112 12:41:50.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.815" endtime="20201112 12:41:50.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:50.851" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.7300000000083386e-07, 6.693999999998063e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.56999999999941...</msg>
<status status="PASS" starttime="20201112 12:41:50.827" endtime="20201112 12:41:50.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.855" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:50.854" endtime="20201112 12:41:50.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.860" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.7300000000083386e-07, 6.693999999998063e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.859999999974607e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 7.625000000000687e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 6.291000000002017e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 8.749999999998342e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.860000000009301e-07, 5.486999999998465e-06, 4.720000000013602e-07, 1.0263999999999412e-05, 4.860000000009301e-07, 9.790999999998579e-06, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.729999999973644e-07, 7.527000000000228e-06, 4.870000000004038e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.624999999999687e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 7.070000000001381e-06, 4.859999999974607e-07, 7.236000000000742e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.860000000009301e-07, 7.263999999999882e-06, 4.7199999999789077e-07, 1.0083000000001008e-05, 4.860000000009301e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcetime': [0.022998667, 0.022999139, 0.023009569, 0.023010042, 0.023016736, 0.023017222, 0.023023097, 0.023023569, 0.023032139, 0.023032611, 0.02303675, 0.023037222, 0.023045861, 0.023046347, 0.023053875, 0.023054347, 0.023062833, 0.023063306, 0.023070931, 0.023071403, 0.023077278, 0.02307775, 0.023081847, 0.023082333, 0.023087569, 0.023088042, 0.023094333, 0.023094806, 0.023101917, 0.023102403, 0.023110028, 0.0231105, 0.023115, 0.023115486, 0.023124236, 0.023124722, 0.023133583, 0.023134069, 0.023139556, 0.023140028, 0.023150292, 0.023150778, 0.023160569, 0.023161042, 0.023168889, 0.023169361, 0.023178778, 0.02317925, 0.023186875, 0.023187361, 0.023195514, 0.023195986, 0.023205917, 0.023206389, 0.023213403, 0.023213875, 0.023221417, 0.023221889, 0.023226736, 0.023227208, 0.023234208, 0.023234681, 0.023242028, 0.0232425, 0.023251375, 0.023251847, 0.023255944, 0.023256417, 0.023260319, 0.023260792, 0.023268319, 0.023268806, 0.023275083, 0.023275556, 0.023282056, 0.023282528, 0.023289153, 0.023289625, 0.023298167, 0.023298653, 0.023305764, 0.023306236, 0.02331475, 0.023315222, 0.023322292, 0.023322778, 0.023330014, 0.023330486, 0.023338111, 0.023338583, 0.023342681, 0.023343167, 0.023350431, 0.023350903, 0.023360986, 0.023361472, 0.023368889, 0.023369375, 0.023378361, 0.023378833], 'diff': [0, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.7300000000083386e-07, 6.693999999998063e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.859999999974607e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 7.625000000000687e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.860000000009301e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 6.291000000002017e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 8.749999999998342e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.860000000009301e-07, 5.486999999998465e-06, 4.720000000013602e-07, 1.0263999999999412e-05, 4.860000000009301e-07, 9.790999999998579e-06, 4.7300000000083386e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.729999999973644e-07, 7.527000000000228e-06, 4.870000000004038e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.624999999999687e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 7.070000000001381e-06, 4.859999999974607e-07, 7.236000000000742e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.09800000000099e-06, 4.860000000009301e-07, 7.263999999999882e-06, 4.7199999999789077e-07, 1.0083000000001008e-05, 4.860000000009301e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:50.856" endtime="20201112 12:41:50.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.852" endtime="20201112 12:41:50.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.866" level="INFO">${RESULT} = [{'time': 0.022999139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023010042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:50.862" endtime="20201112 12:41:50.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.880" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e...</msg>
<status status="PASS" starttime="20201112 12:41:50.867" endtime="20201112 12:41:50.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.884" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:50.883" endtime="20201112 12:41:50.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.887" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:50.886" endtime="20201112 12:41:50.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.881" endtime="20201112 12:41:50.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.890" endtime="20201112 12:41:50.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.894" endtime="20201112 12:41:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.892" endtime="20201112 12:41:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.889" endtime="20201112 12:41:50.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.473" endtime="20201112 12:41:50.915"></status>
</kw>
<msg timestamp="20201112 12:41:50.915" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.923" endtime="20201112 12:41:50.942"></status>
</kw>
<msg timestamp="20201112 12:41:50.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.922" endtime="20201112 12:41:50.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.945" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.944" endtime="20201112 12:41:50.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.946" endtime="20201112 12:41:50.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.919" endtime="20201112 12:41:50.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.917" endtime="20201112 12:41:50.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.956" endtime="20201112 12:41:51.246"></status>
</kw>
<msg timestamp="20201112 12:41:51.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02230975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:50.954" endtime="20201112 12:41:51.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02230975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:51.251" endtime="20201112 12:41:51.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.259" endtime="20201112 12:41:51.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.952" endtime="20201112 12:41:51.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.950" endtime="20201112 12:41:51.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.266" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:51.265" endtime="20201112 12:41:51.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.272" level="INFO">VALUE: [{'time': 0.022309278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02230975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022316153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.022316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022323597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.022324069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022334556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486999999999996e-05, 'source_diff': 1.0486999999999996e-05}, {'time': 0.022335028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022341236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.022341722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.022348569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022352764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.022353236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022361181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.022361667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022371903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022372375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022380847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.022381319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022388333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022388806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0223975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.022397972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022403944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.022404417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02241475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.022415222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022420361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022420833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022425347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022425833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022430597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.022431069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022436083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.022436556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.022442472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022448333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022448819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022455528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.022456, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.022466403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022470597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.022471069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022477667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5980000000000205e-06, 'source_diff': 6.5980000000000205e-06}, {'time': 0.022478139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.022488375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022496806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.022497278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022506181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.022506653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022512611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.022513083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022517292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.022517764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022527944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.022528417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022538333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916000000002173e-06, 'source_diff': 9.916000000002173e-06}, {'time': 0.022538806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022546486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.022546958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022552611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.022553083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022558056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.022558528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022563306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022563778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0225715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.022571972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022581681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.022582153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022586861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.022587333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022596306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.022596778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022606722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.022607194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022616472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.022616958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022624708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022625181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022633736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.022634222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022639583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.022640056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022647264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.022647736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022657875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.022658347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.022665319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022673472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022673944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022678264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.022678736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022688819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0082999999997538e-05, 'source_diff': 1.0082999999997538e-05}, {'time': 0.022689292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:51.267" endtime="20201112 12:41:51.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.263" endtime="20201112 12:41:51.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:51.299" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 1.0486999999999996e-05, 4.720000000013602e-07, 6.20800000000060...</msg>
<status status="PASS" starttime="20201112 12:41:51.274" endtime="20201112 12:41:51.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.303" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:51.302" endtime="20201112 12:41:51.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.308" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 1.0486999999999996e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.7199999999789077e-07, 7.945000000002256e-06, 4.859999999974607e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.139000000001226e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.764000000000851e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.7300000000083386e-07, 5.444000000000282e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.859999999974607e-07, 6.709000000000576e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 5.9579999999968825e-06, 4.720000000013602e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 7.679999999999493e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.720000000013602e-07, 9.943999999997843e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 7.750000000000812e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.859999999974607e-07, 5.361000000002336e-06, 4.729999999973644e-07, 7.208000000001602e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 1.0082999999997538e-05, 4.7300000000083386e-07], 'eventsourcetime': [0.022309278, 0.02230975, 0.022316153, 0.022316625, 0.022323597, 0.022324069, 0.022334556, 0.022335028, 0.022341236, 0.022341722, 0.022348097, 0.022348569, 0.022352764, 0.022353236, 0.022361181, 0.022361667, 0.022371903, 0.022372375, 0.022380847, 0.022381319, 0.022388333, 0.022388806, 0.0223975, 0.022397972, 0.022403944, 0.022404417, 0.02241475, 0.022415222, 0.022420361, 0.022420833, 0.022425347, 0.022425833, 0.022430597, 0.022431069, 0.022436083, 0.022436556, 0.022442, 0.022442472, 0.022448333, 0.022448819, 0.022455528, 0.022456, 0.022465931, 0.022466403, 0.022470597, 0.022471069, 0.022477667, 0.022478139, 0.022487903, 0.022488375, 0.022496806, 0.022497278, 0.022506181, 0.022506653, 0.022512611, 0.022513083, 0.022517292, 0.022517764, 0.022527944, 0.022528417, 0.022538333, 0.022538806, 0.022546486, 0.022546958, 0.022552611, 0.022553083, 0.022558056, 0.022558528, 0.022563306, 0.022563778, 0.0225715, 0.022571972, 0.022581681, 0.022582153, 0.022586861, 0.022587333, 0.022596306, 0.022596778, 0.022606722, 0.022607194, 0.022616472, 0.022616958, 0.022624708, 0.022625181, 0.022633736, 0.022634222, 0.022639583, 0.022640056, 0.022647264, 0.022647736, 0.022657875, 0.022658347, 0.022664833, 0.022665319, 0.022673472, 0.022673944, 0.022678264, 0.022678736, 0.022688819, 0.022689292], 'diff': [0, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 1.0486999999999996e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.7199999999789077e-07, 7.945000000002256e-06, 4.859999999974607e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999789077e-07, 5.139000000001226e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.764000000000851e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.7300000000083386e-07, 5.444000000000282e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.859999999974607e-07, 6.709000000000576e-06, 4.720000000013602e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 5.9579999999968825e-06, 4.720000000013602e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 7.679999999999493e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.720000000013602e-07, 9.943999999997843e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 7.750000000000812e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.859999999974607e-07, 5.361000000002336e-06, 4.729999999973644e-07, 7.208000000001602e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 1.0082999999997538e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:51.305" endtime="20201112 12:41:51.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.300" endtime="20201112 12:41:51.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:51.313" level="INFO">${RESULT} = [{'time': 0.02230975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:51.310" endtime="20201112 12:41:51.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:51.328" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-...</msg>
<status status="PASS" starttime="20201112 12:41:51.315" endtime="20201112 12:41:51.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.332" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:51.331" endtime="20201112 12:41:51.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.335" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:41:51.333" endtime="20201112 12:41:51.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.329" endtime="20201112 12:41:51.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.338" endtime="20201112 12:41:51.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.341" endtime="20201112 12:41:51.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.340" endtime="20201112 12:41:51.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.336" endtime="20201112 12:41:51.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.916" endtime="20201112 12:41:51.362"></status>
</kw>
<msg timestamp="20201112 12:41:51.363" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.371" endtime="20201112 12:41:51.387"></status>
</kw>
<msg timestamp="20201112 12:41:51.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.369" endtime="20201112 12:41:51.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.390" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.389" endtime="20201112 12:41:51.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.391" endtime="20201112 12:41:51.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.366" endtime="20201112 12:41:51.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.364" endtime="20201112 12:41:51.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.402" endtime="20201112 12:41:51.689"></status>
</kw>
<msg timestamp="20201112 12:41:51.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.400" endtime="20201112 12:41:51.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.694" endtime="20201112 12:41:51.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.702" endtime="20201112 12:41:51.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.398" endtime="20201112 12:41:51.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.396" endtime="20201112 12:41:51.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.709" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:51.708" endtime="20201112 12:41:51.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.715" level="INFO">VALUE: [{'time': 0.022074861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022079222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022079708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022090167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.022090639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022096181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.022096653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022105333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.022105806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022113347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.022113819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022120528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.022121, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0221305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.022130972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022141, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.022141472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022150958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.022151444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022156167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.022156639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02216175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.022162236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022169431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.022169917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022174833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.022175306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022184069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.022184542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022190403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022190875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022199764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.022200236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022209097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.022209569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022213569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022214042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022222194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.022222667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022231153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.022231625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022236458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022236931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022241639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.022242111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022246944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.022247417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022253694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.022254181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022260708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.022261181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022266694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.022267181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022271069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.022271542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02228075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.022281222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022285722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.022286208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022296125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.022296597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022305903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.022306375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022316819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.022317306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.022326708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.022327181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022337278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0096999999997108e-05, 'source_diff': 1.0096999999997108e-05}, {'time': 0.022337764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022342486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.022342958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022347486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.022347958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.022356125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022360639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022361111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022365514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022365986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022371222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.022371694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1120000000000905e-06, 'source_diff': 7.1120000000000905e-06}, {'time': 0.022379278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022388875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.022389347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022395736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.022396208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022400944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.022401417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022408431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022408903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022414764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.02241525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022423417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.022423889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022431194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.022431681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.022437556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.022438028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:51.710" endtime="20201112 12:41:51.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.706" endtime="20201112 12:41:51.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:51.741" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 8.68000000000049...</msg>
<status status="PASS" starttime="20201112 12:41:51.717" endtime="20201112 12:41:51.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.745" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:51.744" endtime="20201112 12:41:51.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.750" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 8.680000000000493e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 5.111000000002086e-06, 4.859999999974607e-07, 7.195000000001506e-06, 4.860000000009301e-07, 4.916000000000642e-06, 4.729999999973644e-07, 8.763000000001908e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.729999999973644e-07, 6.277000000002447e-06, 4.870000000004038e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 5.512999999998658e-06, 4.870000000004038e-07, 3.888000000000502e-06, 4.729999999973644e-07, 9.208000000000133e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 1.0444000000001813e-05, 4.869999999969343e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 1.0096999999997108e-05, 4.860000000009301e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.1120000000000905e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.869999999969343e-07, 5.875000000002406e-06, 4.7199999999789077e-07], 'eventsourcetime': [0.022074861, 0.022075333, 0.022079222, 0.022079708, 0.022090167, 0.022090639, 0.022096181, 0.022096653, 0.022105333, 0.022105806, 0.022113347, 0.022113819, 0.022120528, 0.022121, 0.0221305, 0.022130972, 0.022141, 0.022141472, 0.022150958, 0.022151444, 0.022156167, 0.022156639, 0.02216175, 0.022162236, 0.022169431, 0.022169917, 0.022174833, 0.022175306, 0.022184069, 0.022184542, 0.022190403, 0.022190875, 0.022199764, 0.022200236, 0.022209097, 0.022209569, 0.022213569, 0.022214042, 0.022222194, 0.022222667, 0.022231153, 0.022231625, 0.022236458, 0.022236931, 0.022241639, 0.022242111, 0.022246944, 0.022247417, 0.022253694, 0.022254181, 0.022260708, 0.022261181, 0.022266694, 0.022267181, 0.022271069, 0.022271542, 0.02228075, 0.022281222, 0.022285722, 0.022286208, 0.022296125, 0.022296597, 0.022305903, 0.022306375, 0.022316819, 0.022317306, 0.022326708, 0.022327181, 0.022337278, 0.022337764, 0.022342486, 0.022342958, 0.022347486, 0.022347958, 0.022355653, 0.022356125, 0.022360639, 0.022361111, 0.022365514, 0.022365986, 0.022371222, 0.022371694, 0.022378806, 0.022379278, 0.022388875, 0.022389347, 0.022395736, 0.022396208, 0.022400944, 0.022401417, 0.022408431, 0.022408903, 0.022414764, 0.02241525, 0.022423417, 0.022423889, 0.022431194, 0.022431681, 0.022437556, 0.022438028], 'diff': [0, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 8.680000000000493e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 5.111000000002086e-06, 4.859999999974607e-07, 7.195000000001506e-06, 4.860000000009301e-07, 4.916000000000642e-06, 4.729999999973644e-07, 8.763000000001908e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 8.485999999998523e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.729999999973644e-07, 6.277000000002447e-06, 4.870000000004038e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 5.512999999998658e-06, 4.870000000004038e-07, 3.888000000000502e-06, 4.729999999973644e-07, 9.208000000000133e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 1.0444000000001813e-05, 4.869999999969343e-07, 9.402000000002103e-06, 4.7300000000083386e-07, 1.0096999999997108e-05, 4.860000000009301e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.403000000000046e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.1120000000000905e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.869999999969343e-07, 5.875000000002406e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:51.747" endtime="20201112 12:41:51.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.742" endtime="20201112 12:41:51.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:51.756" level="INFO">${RESULT} = [{'time': 0.022075333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022079708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:51.752" endtime="20201112 12:41:51.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:51.770" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e...</msg>
<status status="PASS" starttime="20201112 12:41:51.757" endtime="20201112 12:41:51.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.774" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:51.773" endtime="20201112 12:41:51.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.777" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:41:51.776" endtime="20201112 12:41:51.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.771" endtime="20201112 12:41:51.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.780" endtime="20201112 12:41:51.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.784" endtime="20201112 12:41:51.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.782" endtime="20201112 12:41:51.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.779" endtime="20201112 12:41:51.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.363" endtime="20201112 12:41:51.805"></status>
</kw>
<msg timestamp="20201112 12:41:51.805" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.813" endtime="20201112 12:41:51.830"></status>
</kw>
<msg timestamp="20201112 12:41:51.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.811" endtime="20201112 12:41:51.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.832" endtime="20201112 12:41:51.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.834" endtime="20201112 12:41:51.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.809" endtime="20201112 12:41:51.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.807" endtime="20201112 12:41:51.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.844" endtime="20201112 12:41:52.125"></status>
</kw>
<msg timestamp="20201112 12:41:52.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.842" endtime="20201112 12:41:52.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.130" endtime="20201112 12:41:52.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.139" endtime="20201112 12:41:52.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.839" endtime="20201112 12:41:52.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.838" endtime="20201112 12:41:52.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.145" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:52.144" endtime="20201112 12:41:52.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.151" level="INFO">VALUE: [{'time': 0.021849486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021854792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.021855264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021861861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.021862333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021868514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.021868986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021875833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.021876306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021880875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.021881361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021889819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.021890306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.021896181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.021896653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.021904444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021912, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.556000000002311e-06, 'source_diff': 7.556000000002311e-06}, {'time': 0.021912472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021922889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.021923361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021927875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021928361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021936014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.021936486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021941083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.021941569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021948889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.021949361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021953278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.02195375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.021960069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.021965903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021972403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.500000000003031e-06, 'source_diff': 6.500000000003031e-06}, {'time': 0.021972875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021980056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.021980528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021989236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.021989708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021999431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.021999903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.022004681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022013986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.022014458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022022403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.022022889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022031972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.022032458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022037278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.02203775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022043208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.458000000003321e-06, 'source_diff': 5.458000000003321e-06}, {'time': 0.022043681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022048819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.022049306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0220535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.022053986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022060569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.022061056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022071125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.022071597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022077222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.022077694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022082931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.237000000001685e-06, 'source_diff': 5.237000000001685e-06}, {'time': 0.022083417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022091889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.022092361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022101347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022107625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.022108097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02211425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.022114722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022120583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022121056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022131292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022131764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022141069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.022141542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022149861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.022150333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022154167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8339999999977e-06, 'source_diff': 3.8339999999977e-06}, {'time': 0.022154653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022158542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022159014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022167375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.022167861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022177458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.022177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022187347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.022187819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022195875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022196347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022201583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.022202069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022210069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:52.147" endtime="20201112 12:41:52.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.142" endtime="20201112 12:41:52.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:52.179" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 6.847000000000797e...</msg>
<status status="PASS" starttime="20201112 12:41:52.153" endtime="20201112 12:41:52.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.183" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:52.181" endtime="20201112 12:41:52.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.187" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 6.847000000000797e-06, 4.7300000000083386e-07, 4.568999999999407e-06, 4.859999999974607e-07, 8.458000000002852e-06, 4.869999999969343e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.859999999974607e-07, 7.556000000002311e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 3.916999999999116e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.859999999974607e-07, 6.500000000003031e-06, 4.7199999999789077e-07, 7.181000000001936e-06, 4.7199999999789077e-07, 8.707999999999633e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.304999999999587e-06, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.7199999999789077e-07, 5.458000000003321e-06, 4.729999999973644e-07, 5.138000000001752e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.860000000009301e-07, 6.5829999999975075e-06, 4.870000000004038e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 5.237000000001685e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 3.8339999999977e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.597000000000078e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07], 'eventsourcetime': [0.021849486, 0.021849958, 0.021854792, 0.021855264, 0.021861861, 0.021862333, 0.021868514, 0.021868986, 0.021875833, 0.021876306, 0.021880875, 0.021881361, 0.021889819, 0.021890306, 0.021896181, 0.021896653, 0.021903958, 0.021904444, 0.021912, 0.021912472, 0.021922889, 0.021923361, 0.021927875, 0.021928361, 0.021936014, 0.021936486, 0.021941083, 0.021941569, 0.021948889, 0.021949361, 0.021953278, 0.02195375, 0.021959597, 0.021960069, 0.021965417, 0.021965903, 0.021972403, 0.021972875, 0.021980056, 0.021980528, 0.021989236, 0.021989708, 0.021999431, 0.021999903, 0.022004208, 0.022004681, 0.022013986, 0.022014458, 0.022022403, 0.022022889, 0.022031972, 0.022032458, 0.022037278, 0.02203775, 0.022043208, 0.022043681, 0.022048819, 0.022049306, 0.0220535, 0.022053986, 0.022060569, 0.022061056, 0.022071125, 0.022071597, 0.022077222, 0.022077694, 0.022082931, 0.022083417, 0.022091889, 0.022092361, 0.022101347, 0.022101819, 0.022107625, 0.022108097, 0.02211425, 0.022114722, 0.022120583, 0.022121056, 0.022131292, 0.022131764, 0.022141069, 0.022141542, 0.022149861, 0.022150333, 0.022154167, 0.022154653, 0.022158542, 0.022159014, 0.022167375, 0.022167861, 0.022177458, 0.022177944, 0.022187347, 0.022187819, 0.022195875, 0.022196347, 0.022201583, 0.022202069, 0.022209597, 0.022210069], 'diff': [0, 4.7199999999789077e-07, 4.83400000000217e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 6.847000000000797e-06, 4.7300000000083386e-07, 4.568999999999407e-06, 4.859999999974607e-07, 8.458000000002852e-06, 4.869999999969343e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.305000000002587e-06, 4.859999999974607e-07, 7.556000000002311e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.860000000009301e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.596999999998547e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 3.916999999999116e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.859999999974607e-07, 6.500000000003031e-06, 4.7199999999789077e-07, 7.181000000001936e-06, 4.7199999999789077e-07, 8.707999999999633e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.720000000013602e-07, 4.304999999999587e-06, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.7199999999789077e-07, 5.458000000003321e-06, 4.729999999973644e-07, 5.138000000001752e-06, 4.870000000004038e-07, 4.193999999999032e-06, 4.860000000009301e-07, 6.5829999999975075e-06, 4.870000000004038e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 5.237000000001685e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 3.8339999999977e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.597000000000078e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:52.184" endtime="20201112 12:41:52.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.180" endtime="20201112 12:41:52.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.193" level="INFO">${RESULT} = [{'time': 0.021849958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021855264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:52.189" endtime="20201112 12:41:52.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:52.207" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.869999999969343e-07, 4.7199999999789077e...</msg>
<status status="PASS" starttime="20201112 12:41:52.194" endtime="20201112 12:41:52.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.211" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:52.210" endtime="20201112 12:41:52.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.214" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:41:52.212" endtime="20201112 12:41:52.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.208" endtime="20201112 12:41:52.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.217" endtime="20201112 12:41:52.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.221" endtime="20201112 12:41:52.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.219" endtime="20201112 12:41:52.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.215" endtime="20201112 12:41:52.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.806" endtime="20201112 12:41:52.241"></status>
</kw>
<msg timestamp="20201112 12:41:52.242" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.250" endtime="20201112 12:41:52.267"></status>
</kw>
<msg timestamp="20201112 12:41:52.267" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.248" endtime="20201112 12:41:52.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.268" endtime="20201112 12:41:52.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.271" endtime="20201112 12:41:52.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.245" endtime="20201112 12:41:52.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.244" endtime="20201112 12:41:52.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.281" endtime="20201112 12:41:52.570"></status>
</kw>
<msg timestamp="20201112 12:41:52.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.279" endtime="20201112 12:41:52.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.575" endtime="20201112 12:41:52.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.584" endtime="20201112 12:41:52.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.277" endtime="20201112 12:41:52.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.275" endtime="20201112 12:41:52.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:52.589" endtime="20201112 12:41:52.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.596" level="INFO">VALUE: [{'time': 0.022166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022176792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.022177264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.022185778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022190931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.022191403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022196306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.022196792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022203069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.022203542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.022210083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022219667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.022220153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022229847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.022230319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022235069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.022235542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0222415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.022241972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022249514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.022249986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022256792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.022257278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022263236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.022263722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.022268403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022273125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.022273597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022279472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.022279944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02228875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.022289222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022298403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022298889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022308083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.022308556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022313694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.137999999998283e-06, 'source_diff': 5.137999999998283e-06}, {'time': 0.022314181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022320111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.022320583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022325556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.022326028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.022332486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022340431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022347292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.022347778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022357389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022357861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022362472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022362944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022373361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0417000000002147e-05, 'source_diff': 1.0417000000002147e-05}, {'time': 0.022373833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022383458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.022383931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022390181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.022390653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022397028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.022397514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.022407056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022411056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.022411528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.022417986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022424361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.022424833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022428722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022429208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022438319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.022438792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02244725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.022447722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022452458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.022452931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022461806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022462278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022471583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.022472056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022480097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.022480569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022484792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.022485264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022493278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.022493764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022502028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.0225025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022512583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0082999999997538e-05, 'source_diff': 1.0082999999997538e-05}, {'time': 0.022513069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022519861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.022520333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.022527097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022533986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022534458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:52.592" endtime="20201112 12:41:52.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.587" endtime="20201112 12:41:52.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:52.623" level="INFO">${debug-compressed} = {'source_diff': [0, 4.870000000004038e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.903000000000546...</msg>
<status status="PASS" starttime="20201112 12:41:52.599" endtime="20201112 12:41:52.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.627" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:52.626" endtime="20201112 12:41:52.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.631" level="INFO">VALUE: {'source_diff': [0, 4.870000000004038e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.903000000000546e-06, 4.860000000009301e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.055000000001337e-06, 4.859999999974607e-07, 9.583999999999981e-06, 4.860000000009301e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.859999999974607e-07, 5.958000000000352e-06, 4.860000000009301e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 5.137999999998283e-06, 4.870000000004038e-07, 5.930000000001212e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.859999999974607e-07, 7.945000000002256e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 9.111000000002617e-06, 4.729999999973644e-07, 8.457999999999383e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.729999999973644e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 9.305000000001118e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7199999999789077e-07, 4.223000000001115e-06, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.720000000013602e-07, 1.0082999999997538e-05, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcetime': [0.022166819, 0.022167306, 0.022176792, 0.022177264, 0.022185306, 0.022185778, 0.022190931, 0.022191403, 0.022196306, 0.022196792, 0.022203069, 0.022203542, 0.022209597, 0.022210083, 0.022219667, 0.022220153, 0.022229847, 0.022230319, 0.022235069, 0.022235542, 0.0222415, 0.022241972, 0.022249514, 0.022249986, 0.022256792, 0.022257278, 0.022263236, 0.022263722, 0.022267931, 0.022268403, 0.022273125, 0.022273597, 0.022279472, 0.022279944, 0.02228875, 0.022289222, 0.022298403, 0.022298889, 0.022308083, 0.022308556, 0.022313694, 0.022314181, 0.022320111, 0.022320583, 0.022325556, 0.022326028, 0.022332, 0.022332486, 0.022340431, 0.022340903, 0.022347292, 0.022347778, 0.022357389, 0.022357861, 0.022362472, 0.022362944, 0.022373361, 0.022373833, 0.022383458, 0.022383931, 0.022390181, 0.022390653, 0.022397028, 0.022397514, 0.022406583, 0.022407056, 0.022411056, 0.022411528, 0.022417514, 0.022417986, 0.022424361, 0.022424833, 0.022428722, 0.022429208, 0.022438319, 0.022438792, 0.02244725, 0.022447722, 0.022452458, 0.022452931, 0.022461806, 0.022462278, 0.022471583, 0.022472056, 0.022480097, 0.022480569, 0.022484792, 0.022485264, 0.022493278, 0.022493764, 0.022502028, 0.0225025, 0.022512583, 0.022513069, 0.022519861, 0.022520333, 0.022526625, 0.022527097, 0.022533986, 0.022534458], 'diff': [0, 4.870000000004038e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 4.903000000000546e-06, 4.860000000009301e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.055000000001337e-06, 4.859999999974607e-07, 9.583999999999981e-06, 4.860000000009301e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.859999999974607e-07, 5.958000000000352e-06, 4.860000000009301e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 5.137999999998283e-06, 4.870000000004038e-07, 5.930000000001212e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.859999999974607e-07, 7.945000000002256e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.0417000000002147e-05, 4.7199999999789077e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 9.111000000002617e-06, 4.729999999973644e-07, 8.457999999999383e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.729999999973644e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 9.305000000001118e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7199999999789077e-07, 4.223000000001115e-06, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.720000000013602e-07, 1.0082999999997538e-05, 4.860000000009301e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:52.628" endtime="20201112 12:41:52.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.624" endtime="20201112 12:41:52.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.637" level="INFO">${RESULT} = [{'time': 0.022167306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022177264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:52.633" endtime="20201112 12:41:52.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:52.651" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-...</msg>
<status status="PASS" starttime="20201112 12:41:52.638" endtime="20201112 12:41:52.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.656" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:52.655" endtime="20201112 12:41:52.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.659" level="INFO">VALUE: [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:52.657" endtime="20201112 12:41:52.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.652" endtime="20201112 12:41:52.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.662" endtime="20201112 12:41:52.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.665" endtime="20201112 12:41:52.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.664" endtime="20201112 12:41:52.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.660" endtime="20201112 12:41:52.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.242" endtime="20201112 12:41:52.686"></status>
</kw>
<msg timestamp="20201112 12:41:52.687" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.695" endtime="20201112 12:41:52.709"></status>
</kw>
<msg timestamp="20201112 12:41:52.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.693" endtime="20201112 12:41:52.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.710" endtime="20201112 12:41:52.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.713" endtime="20201112 12:41:52.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.690" endtime="20201112 12:41:52.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.689" endtime="20201112 12:41:52.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.722" endtime="20201112 12:41:53.009"></status>
</kw>
<msg timestamp="20201112 12:41:53.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:52.721" endtime="20201112 12:41:53.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:53.014" endtime="20201112 12:41:53.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.022" endtime="20201112 12:41:53.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.718" endtime="20201112 12:41:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.716" endtime="20201112 12:41:53.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.029" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.028" endtime="20201112 12:41:53.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.034" level="INFO">VALUE: [{'time': 0.019400278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019409, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019409472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019418306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.019427569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019436139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.570000000002881e-06, 'source_diff': 8.570000000002881e-06}, {'time': 0.019436611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019442958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019453417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.019453889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019460889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019461375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019467139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019467611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019476486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019476972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019484569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019492097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019492569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019498236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.019498708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019508944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019509417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019519458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.019519931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019529222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.019529708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019535569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019536056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019542861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.019543333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019547861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019548333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019552944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.019553417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019559917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019560389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019570417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019570889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019575819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.019576306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019584472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.165999999996953e-06, 'source_diff': 8.165999999996953e-06}, {'time': 0.019584944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019590806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.019591278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019596931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019597417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019605153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019605625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019613847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.019614319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019619611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.019620083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019626986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019627472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019634486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019634958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019641347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019641819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019647486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.019647958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019652694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019653167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019658917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.019659389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019667833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.019668319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019676667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.019677139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019684569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.019685042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019691208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019691681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019701472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.019701944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019708944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019709417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019715792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019716264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019723389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019723861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019729514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.01973, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.019740819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019751056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999999746e-05, 'source_diff': 1.0236999999999746e-05}, {'time': 0.019751528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.019758083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019766444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019766917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019770917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019771389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019776208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:53.030" endtime="20201112 12:41:53.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.026" endtime="20201112 12:41:53.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.062" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.7199999999789077e-07, 8.570000000002881...</msg>
<status status="PASS" starttime="20201112 12:41:53.037" endtime="20201112 12:41:53.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.066" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.065" endtime="20201112 12:41:53.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.070" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.7199999999789077e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.870000000004038e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.930000000000212e-06, 4.870000000004038e-07, 8.165999999996953e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.860000000009301e-07, 8.347999999998301e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 6.166000000001892e-06, 4.729999999973644e-07, 9.791000000002048e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.729999999973644e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07], 'eventsourcetime': [0.019400278, 0.01940075, 0.019409, 0.019409472, 0.019417833, 0.019418306, 0.019427097, 0.019427569, 0.019436139, 0.019436611, 0.019442486, 0.019442958, 0.019453417, 0.019453889, 0.019460889, 0.019461375, 0.019467139, 0.019467611, 0.019476486, 0.019476972, 0.019484097, 0.019484569, 0.019492097, 0.019492569, 0.019498236, 0.019498708, 0.019508944, 0.019509417, 0.019519458, 0.019519931, 0.019529222, 0.019529708, 0.019535569, 0.019536056, 0.019542861, 0.019543333, 0.019547861, 0.019548333, 0.019552944, 0.019553417, 0.019559917, 0.019560389, 0.019570417, 0.019570889, 0.019575819, 0.019576306, 0.019584472, 0.019584944, 0.019590806, 0.019591278, 0.019596931, 0.019597417, 0.019605153, 0.019605625, 0.019613847, 0.019614319, 0.019619611, 0.019620083, 0.019626986, 0.019627472, 0.019634486, 0.019634958, 0.019641347, 0.019641819, 0.019647486, 0.019647958, 0.019652694, 0.019653167, 0.019658917, 0.019659389, 0.019667833, 0.019668319, 0.019676667, 0.019677139, 0.019684569, 0.019685042, 0.019691208, 0.019691681, 0.019701472, 0.019701944, 0.019708944, 0.019709417, 0.019715792, 0.019716264, 0.019723389, 0.019723861, 0.019729514, 0.01973, 0.019740333, 0.019740819, 0.019751056, 0.019751528, 0.019757597, 0.019758083, 0.019766444, 0.019766917, 0.019770917, 0.019771389, 0.019776208, 0.019776694], 'diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.7199999999789077e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 7.000000000000062e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.870000000004038e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.930000000000212e-06, 4.870000000004038e-07, 8.165999999996953e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 5.291999999997021e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.860000000009301e-07, 8.347999999998301e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 6.166000000001892e-06, 4.729999999973644e-07, 9.791000000002048e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.729999999973644e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:53.067" endtime="20201112 12:41:53.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.063" endtime="20201112 12:41:53.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.076" level="INFO">${RESULT} = [{'time': 0.01940075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019409472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:53.073" endtime="20201112 12:41:53.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.090" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e...</msg>
<status status="PASS" starttime="20201112 12:41:53.077" endtime="20201112 12:41:53.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.095" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.093" endtime="20201112 12:41:53.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.098" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:41:53.096" endtime="20201112 12:41:53.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.091" endtime="20201112 12:41:53.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.101" endtime="20201112 12:41:53.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.105" endtime="20201112 12:41:53.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.103" endtime="20201112 12:41:53.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.099" endtime="20201112 12:41:53.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.687" endtime="20201112 12:41:53.126"></status>
</kw>
<msg timestamp="20201112 12:41:53.127" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.135" endtime="20201112 12:41:53.151"></status>
</kw>
<msg timestamp="20201112 12:41:53.151" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.133" endtime="20201112 12:41:53.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.152" endtime="20201112 12:41:53.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.155" endtime="20201112 12:41:53.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.130" endtime="20201112 12:41:53.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.129" endtime="20201112 12:41:53.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.165" endtime="20201112 12:41:53.456"></status>
</kw>
<msg timestamp="20201112 12:41:53.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.164" endtime="20201112 12:41:53.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.461" endtime="20201112 12:41:53.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.470" endtime="20201112 12:41:53.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.161" endtime="20201112 12:41:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.159" endtime="20201112 12:41:53.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.476" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.475" endtime="20201112 12:41:53.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.482" level="INFO">VALUE: [{'time': 0.021420208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021425306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.021425778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021433125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.021433597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021438417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.021438889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021446208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.021446694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021456722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.021457194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021463389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.021463861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021468375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021468847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021473667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.021474139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021481097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021488722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.021489194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021499514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.021499986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021507403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.021507875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021512389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021512861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021521111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.021521583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021530444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.021530931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021537931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.021538403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021548333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021548806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021557264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.02155775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021565597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.021566069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021571833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021572306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021579417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.021579903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021585972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021586458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021594083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.021594569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021601472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.021601944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.021606528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021614153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.021614639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021619569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.021620042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.021625556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021632389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.021632861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021637861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.021638347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021646403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.021646875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021653667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.021654153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021659708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.021660181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021670208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.021670681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021679778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.02168025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021687153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.021687639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021697472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.021697944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021705458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.021705944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021714722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.021715194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021725153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.021725625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021731875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.021732361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021742181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.021742653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021747472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021747958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021756444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.021756917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021765889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.021766361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021771097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.021771569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021780139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.021780611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021790403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.021790875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02179725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021797736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:53.478" endtime="20201112 12:41:53.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.473" endtime="20201112 12:41:53.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.509" level="INFO">${debug-compressed} = {'source_diff': [0, 4.860000000009301e-07, 4.61200000000106e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 7.319000000002157e-...</msg>
<status status="PASS" starttime="20201112 12:41:53.484" endtime="20201112 12:41:53.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.513" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.512" endtime="20201112 12:41:53.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.517" level="INFO">VALUE: {'source_diff': [0, 4.860000000009301e-07, 4.61200000000106e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.859999999974607e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 7.000000000000062e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.457999999999383e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.09799999999752e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 4.930000000000212e-06, 4.729999999973644e-07, 5.027000000001197e-06, 4.870000000004038e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.000000000001531e-06, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 9.832999999997288e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.959000000000356e-06, 4.7199999999789077e-07, 6.250000000002781e-06, 4.859999999974607e-07, 9.820000000000662e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999999789077e-07, 9.792000000001522e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07], 'eventsourcetime': [0.021420208, 0.021420694, 0.021425306, 0.021425778, 0.021433125, 0.021433597, 0.021438417, 0.021438889, 0.021446208, 0.021446694, 0.021456722, 0.021457194, 0.021463389, 0.021463861, 0.021468375, 0.021468847, 0.021473667, 0.021474139, 0.021480625, 0.021481097, 0.021488722, 0.021489194, 0.021499514, 0.021499986, 0.021507403, 0.021507875, 0.021512389, 0.021512861, 0.021521111, 0.021521583, 0.021530444, 0.021530931, 0.021537931, 0.021538403, 0.021548333, 0.021548806, 0.021557264, 0.02155775, 0.021565597, 0.021566069, 0.021571833, 0.021572306, 0.021579417, 0.021579903, 0.021585972, 0.021586458, 0.021594083, 0.021594569, 0.021601472, 0.021601944, 0.021606042, 0.021606528, 0.021614153, 0.021614639, 0.021619569, 0.021620042, 0.021625069, 0.021625556, 0.021632389, 0.021632861, 0.021637861, 0.021638347, 0.021646403, 0.021646875, 0.021653667, 0.021654153, 0.021659708, 0.021660181, 0.021670208, 0.021670681, 0.021679778, 0.02168025, 0.021687153, 0.021687639, 0.021697472, 0.021697944, 0.021705458, 0.021705944, 0.021714722, 0.021715194, 0.021725153, 0.021725625, 0.021731875, 0.021732361, 0.021742181, 0.021742653, 0.021747472, 0.021747958, 0.021756444, 0.021756917, 0.021765889, 0.021766361, 0.021771097, 0.021771569, 0.021780139, 0.021780611, 0.021790403, 0.021790875, 0.02179725, 0.021797736], 'diff': [0, 4.860000000009301e-07, 4.61200000000106e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.859999999974607e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 7.000000000000062e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.457999999999383e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.09799999999752e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 4.930000000000212e-06, 4.729999999973644e-07, 5.027000000001197e-06, 4.870000000004038e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.000000000001531e-06, 4.859999999974607e-07, 8.056000000002811e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 9.832999999997288e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 9.959000000000356e-06, 4.7199999999789077e-07, 6.250000000002781e-06, 4.859999999974607e-07, 9.820000000000662e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999999789077e-07, 9.792000000001522e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:53.514" endtime="20201112 12:41:53.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.510" endtime="20201112 12:41:53.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.523" level="INFO">${RESULT} = [{'time': 0.021420694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021425778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:53.520" endtime="20201112 12:41:53.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.537" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077...</msg>
<status status="PASS" starttime="20201112 12:41:53.524" endtime="20201112 12:41:53.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.541" endtime="20201112 12:41:53.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.544" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:41:53.543" endtime="20201112 12:41:53.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.538" endtime="20201112 12:41:53.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.548" endtime="20201112 12:41:53.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.551" endtime="20201112 12:41:53.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.550" endtime="20201112 12:41:53.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.546" endtime="20201112 12:41:53.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.127" endtime="20201112 12:41:53.572"></status>
</kw>
<msg timestamp="20201112 12:41:53.572" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.580" endtime="20201112 12:41:53.597"></status>
</kw>
<msg timestamp="20201112 12:41:53.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.579" endtime="20201112 12:41:53.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.599" endtime="20201112 12:41:53.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.601" endtime="20201112 12:41:53.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.576" endtime="20201112 12:41:53.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.574" endtime="20201112 12:41:53.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.611" endtime="20201112 12:41:53.896"></status>
</kw>
<msg timestamp="20201112 12:41:53.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.609" endtime="20201112 12:41:53.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.901" endtime="20201112 12:41:53.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.909" endtime="20201112 12:41:53.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.607" endtime="20201112 12:41:53.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.605" endtime="20201112 12:41:53.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.916" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.915" endtime="20201112 12:41:53.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.921" level="INFO">VALUE: [{'time': 0.022905847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022915236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.022915708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022922181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.022922653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022930389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.022930861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022936417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022936903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022947139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.022947611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022955903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.022956375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022964972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.022965458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022970375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.022970847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022976514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.022976986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022985944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.022986417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.022992597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022996653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.022997125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023007125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.023007597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023012944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.023013417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023023875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.023024347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023034792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.023035264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02304375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.023044222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023051014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.023051486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023061917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.023062389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023071917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.023072389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023078708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.023079181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023084083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.901999999997603e-06, 'source_diff': 4.901999999997603e-06}, {'time': 0.023084569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023090222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.023090694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023094611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.023095083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023101458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023101931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023105931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.023106403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023114458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.023114931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023122694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763000000000908e-06, 'source_diff': 7.763000000000908e-06}, {'time': 0.023123167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023131403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.023131875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023141681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.023142153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023149361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023149833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023155736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.023156208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023164, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.023164472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023174208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.023174681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.023181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023189972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.023190444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023198278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.02319875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023207847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.023208319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023214931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6119999999995904e-06, 'source_diff': 6.6119999999995904e-06}, {'time': 0.023215403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023223458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.023223931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023233222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.023233708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023244056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.023244528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023251014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.023251486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023257861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.023258333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023268653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.023269139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023278306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.023278792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023284333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.023284806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023291694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888000000000033e-06, 'source_diff': 6.888000000000033e-06}, {'time': 0.023292181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.023301778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.02330225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:53.917" endtime="20201112 12:41:53.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.912" endtime="20201112 12:41:53.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.947" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 5.556000000000311e...</msg>
<status status="PASS" starttime="20201112 12:41:53.923" endtime="20201112 12:41:53.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.951" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.950" endtime="20201112 12:41:53.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.955" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.860000000009301e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.729999999973644e-07, 5.708000000000102e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 1.0457999999997913e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.319000000001157e-06, 4.7300000000083386e-07, 4.901999999997603e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 3.917000000002585e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999789077e-07, 9.736000000003242e-06, 4.729999999973644e-07, 6.152000000002322e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.6119999999995904e-06, 4.7199999999789077e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.859999999974607e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 9.166999999997427e-06, 4.860000000009301e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 6.888000000000033e-06, 4.869999999969343e-07, 9.597000000000078e-06, 4.720000000013602e-07], 'eventsourcetime': [0.022905847, 0.022906319, 0.022915236, 0.022915708, 0.022922181, 0.022922653, 0.022930389, 0.022930861, 0.022936417, 0.022936903, 0.022947139, 0.022947611, 0.022955903, 0.022956375, 0.022964972, 0.022965458, 0.022970375, 0.022970847, 0.022976514, 0.022976986, 0.022985944, 0.022986417, 0.022992125, 0.022992597, 0.022996653, 0.022997125, 0.023007125, 0.023007597, 0.023012944, 0.023013417, 0.023023875, 0.023024347, 0.023034792, 0.023035264, 0.02304375, 0.023044222, 0.023051014, 0.023051486, 0.023061917, 0.023062389, 0.023071917, 0.023072389, 0.023078708, 0.023079181, 0.023084083, 0.023084569, 0.023090222, 0.023090694, 0.023094611, 0.023095083, 0.023101458, 0.023101931, 0.023105931, 0.023106403, 0.023114458, 0.023114931, 0.023122694, 0.023123167, 0.023131403, 0.023131875, 0.023141681, 0.023142153, 0.023149361, 0.023149833, 0.023155736, 0.023156208, 0.023164, 0.023164472, 0.023174208, 0.023174681, 0.023180833, 0.023181306, 0.023189972, 0.023190444, 0.023198278, 0.02319875, 0.023207847, 0.023208319, 0.023214931, 0.023215403, 0.023223458, 0.023223931, 0.023233222, 0.023233708, 0.023244056, 0.023244528, 0.023251014, 0.023251486, 0.023257861, 0.023258333, 0.023268653, 0.023269139, 0.023278306, 0.023278792, 0.023284333, 0.023284806, 0.023291694, 0.023292181, 0.023301778, 0.02330225], 'diff': [0, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.860000000009301e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.729999999973644e-07, 5.708000000000102e-06, 4.720000000013602e-07, 4.0559999999988106e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 1.0457999999997913e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.319000000001157e-06, 4.7300000000083386e-07, 4.901999999997603e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 3.917000000002585e-06, 4.7199999999789077e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 4.000000000000531e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.763000000000908e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.720000000013602e-07, 5.9029999999980765e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999789077e-07, 9.736000000003242e-06, 4.729999999973644e-07, 6.152000000002322e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.6119999999995904e-06, 4.7199999999789077e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.859999999974607e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 9.166999999997427e-06, 4.860000000009301e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 6.888000000000033e-06, 4.869999999969343e-07, 9.597000000000078e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:53.952" endtime="20201112 12:41:53.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.948" endtime="20201112 12:41:53.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.961" level="INFO">${RESULT} = [{'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022915708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:53.958" endtime="20201112 12:41:53.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.974" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07,...</msg>
<status status="PASS" starttime="20201112 12:41:53.962" endtime="20201112 12:41:53.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.979" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.978" endtime="20201112 12:41:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.981" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:53.980" endtime="20201112 12:41:53.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.975" endtime="20201112 12:41:53.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.984" endtime="20201112 12:41:53.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.988" endtime="20201112 12:41:54.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.986" endtime="20201112 12:41:54.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.983" endtime="20201112 12:41:54.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.573" endtime="20201112 12:41:54.009"></status>
</kw>
<msg timestamp="20201112 12:41:54.009" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.017" endtime="20201112 12:41:54.030"></status>
</kw>
<msg timestamp="20201112 12:41:54.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.015" endtime="20201112 12:41:54.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.032" endtime="20201112 12:41:54.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.034" endtime="20201112 12:41:54.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.012" endtime="20201112 12:41:54.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.011" endtime="20201112 12:41:54.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.044" endtime="20201112 12:41:54.326"></status>
</kw>
<msg timestamp="20201112 12:41:54.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018231431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.043" endtime="20201112 12:41:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018231431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.330" endtime="20201112 12:41:54.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.339" endtime="20201112 12:41:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.040" endtime="20201112 12:41:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.038" endtime="20201112 12:41:54.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.346" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:54.344" endtime="20201112 12:41:54.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.351" level="INFO">VALUE: [{'time': 0.018231431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018237542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018238014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018245958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.018246444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018252931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.018253403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018258028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.0182585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018263444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018263917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018270083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018270569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018277889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.018278361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018288708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018289181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018294333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.151999999997853e-06, 'source_diff': 5.151999999997853e-06}, {'time': 0.018294806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018305028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.018305514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018313347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.018313833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018321569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.018322042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018329486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.018329958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018337792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.018338278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018344972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.018345444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018352806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3620000000003405e-06, 'source_diff': 7.3620000000003405e-06}, {'time': 0.018353278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018362833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.554999999997899e-06, 'source_diff': 9.554999999997899e-06}, {'time': 0.018363306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018371861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.018372347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018380181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.018380653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018390542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.018391028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018397597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.018398083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018402583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018403069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018413486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.018413958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018418472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018418958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018428569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018429042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018436153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018436625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018441139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018441625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018446236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018446722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018456028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.0184565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018462583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018463056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018471403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018471889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018481597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018482083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018492222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018492694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018502403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018502875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018506875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018507347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018513444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018513917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018521847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.018522333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018528611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018529097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018536722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.018537208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018546403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018546875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018556694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.018557167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018567306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018567778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01857325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018573722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018579056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018579542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018587389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018587861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018595903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018596375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018600472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018600944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018608167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222999999997176e-06, 'source_diff': 7.222999999997176e-06}, {'time': 0.018608639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018617986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:54.347" endtime="20201112 12:41:54.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.342" endtime="20201112 12:41:54.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:54.376" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 7.943999999999313e-06, 4.860000000009301e-07, 6.486999999999465e-06, 4.720000000013602e-07, 4.6249999999976865...</msg>
<status status="PASS" starttime="20201112 12:41:54.353" endtime="20201112 12:41:54.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.380" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:54.379" endtime="20201112 12:41:54.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.384" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 7.943999999999313e-06, 4.860000000009301e-07, 6.486999999999465e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 5.151999999997853e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 7.443999999998813e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 9.554999999997899e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.860000000009301e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.860000000009301e-07, 6.569000000001407e-06, 4.859999999974607e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.859999999974607e-07, 9.306000000000592e-06, 4.720000000013602e-07, 6.083000000000477e-06, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018231431, 0.018231903, 0.018237542, 0.018238014, 0.018245958, 0.018246444, 0.018252931, 0.018253403, 0.018258028, 0.0182585, 0.018263444, 0.018263917, 0.018270083, 0.018270569, 0.018277889, 0.018278361, 0.018288708, 0.018289181, 0.018294333, 0.018294806, 0.018305028, 0.018305514, 0.018313347, 0.018313833, 0.018321569, 0.018322042, 0.018329486, 0.018329958, 0.018337792, 0.018338278, 0.018344972, 0.018345444, 0.018352806, 0.018353278, 0.018362833, 0.018363306, 0.018371861, 0.018372347, 0.018380181, 0.018380653, 0.018390542, 0.018391028, 0.018397597, 0.018398083, 0.018402583, 0.018403069, 0.018413486, 0.018413958, 0.018418472, 0.018418958, 0.018428569, 0.018429042, 0.018436153, 0.018436625, 0.018441139, 0.018441625, 0.018446236, 0.018446722, 0.018456028, 0.0184565, 0.018462583, 0.018463056, 0.018471403, 0.018471889, 0.018481597, 0.018482083, 0.018492222, 0.018492694, 0.018502403, 0.018502875, 0.018506875, 0.018507347, 0.018513444, 0.018513917, 0.018521847, 0.018522333, 0.018528611, 0.018529097, 0.018536722, 0.018537208, 0.018546403, 0.018546875, 0.018556694, 0.018557167, 0.018567306, 0.018567778, 0.01857325, 0.018573722, 0.018579056, 0.018579542, 0.018587389, 0.018587861, 0.018595903, 0.018596375, 0.018600472, 0.018600944, 0.018608167, 0.018608639, 0.018617514, 0.018617986], 'diff': [0, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 7.943999999999313e-06, 4.860000000009301e-07, 6.486999999999465e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.860000000009301e-07, 7.319999999998161e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 5.151999999997853e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 7.443999999998813e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 9.554999999997899e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.860000000009301e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.860000000009301e-07, 6.569000000001407e-06, 4.859999999974607e-07, 4.500000000001031e-06, 4.860000000009301e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.611000000001586e-06, 4.859999999974607e-07, 9.306000000000592e-06, 4.720000000013602e-07, 6.083000000000477e-06, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:54.381" endtime="20201112 12:41:54.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.377" endtime="20201112 12:41:54.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.390" level="INFO">${RESULT} = [{'time': 0.018231903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018238014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:54.387" endtime="20201112 12:41:54.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:54.404" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201112 12:41:54.391" endtime="20201112 12:41:54.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:54.407" endtime="20201112 12:41:54.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.411" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:41:54.409" endtime="20201112 12:41:54.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.405" endtime="20201112 12:41:54.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.414" endtime="20201112 12:41:54.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.417" endtime="20201112 12:41:54.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.416" endtime="20201112 12:41:54.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.412" endtime="20201112 12:41:54.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.010" endtime="20201112 12:41:54.438"></status>
</kw>
<msg timestamp="20201112 12:41:54.438" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.446" endtime="20201112 12:41:54.467"></status>
</kw>
<msg timestamp="20201112 12:41:54.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.445" endtime="20201112 12:41:54.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.468" endtime="20201112 12:41:54.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.470" endtime="20201112 12:41:54.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.442" endtime="20201112 12:41:54.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.440" endtime="20201112 12:41:54.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.479" endtime="20201112 12:41:54.760"></status>
</kw>
<msg timestamp="20201112 12:41:54.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.478" endtime="20201112 12:41:54.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.764" endtime="20201112 12:41:54.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.773" endtime="20201112 12:41:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.475" endtime="20201112 12:41:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.474" endtime="20201112 12:41:54.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.779" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:54.778" endtime="20201112 12:41:54.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.784" level="INFO">VALUE: [{'time': 0.020944444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020949222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.020949694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020957014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.0209575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020966806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.020967278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020976278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.02097675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020983431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.020983903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020992208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.304999999996648e-06, 'source_diff': 8.304999999996648e-06}, {'time': 0.020992681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020999944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.021000417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021008444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.021008917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021019028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.0210195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021025042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.021025528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021032931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.021033417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021038125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.021038597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021044153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.021044639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021051681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.021052153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021056944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.021057431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021061417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.021061903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021067458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.021067931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021073903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.021074375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021080569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.021081042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021087417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.021087903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021094708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.021095181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021100833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.021101319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021111681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.021112153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021116042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021116514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021124028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.021124514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021134444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021134917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021142958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.021143444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021152458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.021152931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021159653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.021160125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021165944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.021166417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021170917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.021171389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021181292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.021181778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021187528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.021188, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021196042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.021196514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021204028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.0212045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021211611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.021212083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021218667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.021219139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021227708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.021228181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021236556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.021237028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021243319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.021243792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021249972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.021250444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021257139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.021257625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.021263236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021273264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021273736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021282014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277999999996982e-06, 'source_diff': 8.277999999996982e-06}, {'time': 0.021282486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021292083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.021292569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021299167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5980000000000205e-06, 'source_diff': 6.5980000000000205e-06}, {'time': 0.021299639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021305708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.021306194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021314667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.021315139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:54.780" endtime="20201112 12:41:54.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.776" endtime="20201112 12:41:54.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:54.811" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 4.304999999999587e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.000000000002062...</msg>
<status status="PASS" starttime="20201112 12:41:54.787" endtime="20201112 12:41:54.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.815" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:54.814" endtime="20201112 12:41:54.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.819" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 4.304999999999587e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 6.681000000001436e-06, 4.720000000013602e-07, 8.304999999996648e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 5.542000000000741e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.859999999974607e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.791000000000517e-06, 4.870000000004038e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.860000000009301e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.860000000009301e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.7199999999789077e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.729999999973644e-07, 8.375000000001437e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.5980000000000205e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.860000000009301e-07, 8.472999999998426e-06, 4.720000000013602e-07], 'eventsourcetime': [0.020944444, 0.020944917, 0.020949222, 0.020949694, 0.020957014, 0.0209575, 0.020966806, 0.020967278, 0.020976278, 0.02097675, 0.020983431, 0.020983903, 0.020992208, 0.020992681, 0.020999944, 0.021000417, 0.021008444, 0.021008917, 0.021019028, 0.0210195, 0.021025042, 0.021025528, 0.021032931, 0.021033417, 0.021038125, 0.021038597, 0.021044153, 0.021044639, 0.021051681, 0.021052153, 0.021056944, 0.021057431, 0.021061417, 0.021061903, 0.021067458, 0.021067931, 0.021073903, 0.021074375, 0.021080569, 0.021081042, 0.021087417, 0.021087903, 0.021094708, 0.021095181, 0.021100833, 0.021101319, 0.021111681, 0.021112153, 0.021116042, 0.021116514, 0.021124028, 0.021124514, 0.021134444, 0.021134917, 0.021142958, 0.021143444, 0.021152458, 0.021152931, 0.021159653, 0.021160125, 0.021165944, 0.021166417, 0.021170917, 0.021171389, 0.021181292, 0.021181778, 0.021187528, 0.021188, 0.021196042, 0.021196514, 0.021204028, 0.0212045, 0.021211611, 0.021212083, 0.021218667, 0.021219139, 0.021227708, 0.021228181, 0.021236556, 0.021237028, 0.021243319, 0.021243792, 0.021249972, 0.021250444, 0.021257139, 0.021257625, 0.021262764, 0.021263236, 0.021273264, 0.021273736, 0.021282014, 0.021282486, 0.021292083, 0.021292569, 0.021299167, 0.021299639, 0.021305708, 0.021306194, 0.021314667, 0.021315139], 'diff': [0, 4.7300000000083386e-07, 4.304999999999587e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 6.681000000001436e-06, 4.720000000013602e-07, 8.304999999996648e-06, 4.7300000000083386e-07, 7.263000000000408e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 5.542000000000741e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.859999999974607e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.791000000000517e-06, 4.870000000004038e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 5.555000000000837e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 6.374999999999437e-06, 4.860000000009301e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.860000000009301e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.7300000000083386e-07, 6.722000000000672e-06, 4.7199999999789077e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 5.750000000002281e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.729999999973644e-07, 8.375000000001437e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.5980000000000205e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.860000000009301e-07, 8.472999999998426e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:54.816" endtime="20201112 12:41:54.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.812" endtime="20201112 12:41:54.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.825" level="INFO">${RESULT} = [{'time': 0.020944917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020949694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:54.822" endtime="20201112 12:41:54.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:54.838" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386...</msg>
<status status="PASS" starttime="20201112 12:41:54.826" endtime="20201112 12:41:54.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.843" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:54.842" endtime="20201112 12:41:54.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.845" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:54.844" endtime="20201112 12:41:54.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.839" endtime="20201112 12:41:54.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.848" endtime="20201112 12:41:54.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.852" endtime="20201112 12:41:54.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.850" endtime="20201112 12:41:54.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.847" endtime="20201112 12:41:54.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.439" endtime="20201112 12:41:54.872"></status>
</kw>
<msg timestamp="20201112 12:41:54.873" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.880" endtime="20201112 12:41:54.895"></status>
</kw>
<msg timestamp="20201112 12:41:54.895" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.879" endtime="20201112 12:41:54.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.896" endtime="20201112 12:41:54.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.899" endtime="20201112 12:41:54.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.876" endtime="20201112 12:41:54.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.874" endtime="20201112 12:41:54.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.907" endtime="20201112 12:41:55.196"></status>
</kw>
<msg timestamp="20201112 12:41:55.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018623319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018623792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.906" endtime="20201112 12:41:55.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018623319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018623792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.200" endtime="20201112 12:41:55.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.209" endtime="20201112 12:41:55.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.903" endtime="20201112 12:41:55.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.902" endtime="20201112 12:41:55.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.216" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:55.214" endtime="20201112 12:41:55.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.221" level="INFO">VALUE: [{'time': 0.018623319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018623792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018630597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018631069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018641306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999999746e-05, 'source_diff': 1.0236999999999746e-05}, {'time': 0.018641792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018648917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018649389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018656292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.018656764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018665653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.018666125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018671639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01868, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018680486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018686667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018687139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018691667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018692139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018698722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.018699208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018708653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000000286e-06, 'source_diff': 9.445000000000286e-06}, {'time': 0.018709125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018717153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018717625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018724208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.018724681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.387999999999533e-06, 'source_diff': 6.387999999999533e-06}, {'time': 0.018731556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018738042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018738514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018748444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.018748917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018755694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.018756167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018766389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.018766861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018774403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018774875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018783097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018783569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018793167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.018793639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018798458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018798931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018805014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.018805486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018815292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.018815778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018821431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018821903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018826014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018826486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018834681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.018835153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018843278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.01884375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018850861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018851347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018859208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.018859681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018865639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018866111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018874833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018875306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018881139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018881611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018886292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018894583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.018895056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018903708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652000000001353e-06, 'source_diff': 8.652000000001353e-06}, {'time': 0.018904181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018912472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.018912944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018920556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6120000000005905e-06, 'source_diff': 7.6120000000005905e-06}, {'time': 0.018921028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018927528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018928, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018933042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018933514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018937736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018938208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018947181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999998926e-06, 'source_diff': 8.972999999998926e-06}, {'time': 0.018947667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018955403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.018955875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018961431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018961903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018967875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018968361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018973181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.018973667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018983792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.018984264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018992847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.018993319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018998264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.018998736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:55.217" endtime="20201112 12:41:55.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.212" endtime="20201112 12:41:55.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:55.247" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.860000000009301e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 6.90300000000254...</msg>
<status status="PASS" starttime="20201112 12:41:55.223" endtime="20201112 12:41:55.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.250" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:55.249" endtime="20201112 12:41:55.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.254" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.860000000009301e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.859999999974607e-07, 9.445000000000286e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.7300000000083386e-07, 6.387999999999533e-06, 4.870000000004038e-07, 6.485999999999992e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 6.776999999999478e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.729999999973644e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.652000000001353e-06, 4.729999999973644e-07, 8.291000000000548e-06, 4.720000000013602e-07, 7.6120000000005905e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.7199999999789077e-07], 'eventsourcetime': [0.018623319, 0.018623792, 0.018630597, 0.018631069, 0.018641306, 0.018641792, 0.018648917, 0.018649389, 0.018656292, 0.018656764, 0.018665653, 0.018666125, 0.018671167, 0.018671639, 0.01868, 0.018680486, 0.018686667, 0.018687139, 0.018691667, 0.018692139, 0.018698722, 0.018699208, 0.018708653, 0.018709125, 0.018717153, 0.018717625, 0.018724208, 0.018724681, 0.018731069, 0.018731556, 0.018738042, 0.018738514, 0.018748444, 0.018748917, 0.018755694, 0.018756167, 0.018766389, 0.018766861, 0.018774403, 0.018774875, 0.018783097, 0.018783569, 0.018793167, 0.018793639, 0.018798458, 0.018798931, 0.018805014, 0.018805486, 0.018815292, 0.018815778, 0.018821431, 0.018821903, 0.018826014, 0.018826486, 0.018834681, 0.018835153, 0.018843278, 0.01884375, 0.018850861, 0.018851347, 0.018859208, 0.018859681, 0.018865639, 0.018866111, 0.018874833, 0.018875306, 0.018881139, 0.018881611, 0.018885819, 0.018886292, 0.018894583, 0.018895056, 0.018903708, 0.018904181, 0.018912472, 0.018912944, 0.018920556, 0.018921028, 0.018927528, 0.018928, 0.018933042, 0.018933514, 0.018937736, 0.018938208, 0.018947181, 0.018947667, 0.018955403, 0.018955875, 0.018961431, 0.018961903, 0.018967875, 0.018968361, 0.018973181, 0.018973667, 0.018983792, 0.018984264, 0.018992847, 0.018993319, 0.018998264, 0.018998736], 'diff': [0, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.860000000009301e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 6.583000000000977e-06, 4.859999999974607e-07, 9.445000000000286e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.7300000000083386e-07, 6.387999999999533e-06, 4.870000000004038e-07, 6.485999999999992e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 6.776999999999478e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 4.208000000002071e-06, 4.729999999973644e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.652000000001353e-06, 4.729999999973644e-07, 8.291000000000548e-06, 4.720000000013602e-07, 7.6120000000005905e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.720000000013602e-07, 8.972999999998926e-06, 4.860000000009301e-07, 7.735999999997772e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.582999999999508e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:55.251" endtime="20201112 12:41:55.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.247" endtime="20201112 12:41:55.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.260" level="INFO">${RESULT} = [{'time': 0.018623792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018631069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:55.257" endtime="20201112 12:41:55.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:55.274" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e...</msg>
<status status="PASS" starttime="20201112 12:41:55.261" endtime="20201112 12:41:55.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.278" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:55.277" endtime="20201112 12:41:55.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.280" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 12:41:55.279" endtime="20201112 12:41:55.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.275" endtime="20201112 12:41:55.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.283" endtime="20201112 12:41:55.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.287" endtime="20201112 12:41:55.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.285" endtime="20201112 12:41:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.282" endtime="20201112 12:41:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.873" endtime="20201112 12:41:55.308"></status>
</kw>
<msg timestamp="20201112 12:41:55.308" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.315" endtime="20201112 12:41:55.331"></status>
</kw>
<msg timestamp="20201112 12:41:55.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.314" endtime="20201112 12:41:55.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.332" endtime="20201112 12:41:55.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.335" endtime="20201112 12:41:55.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.311" endtime="20201112 12:41:55.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.310" endtime="20201112 12:41:55.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.344" endtime="20201112 12:41:55.634"></status>
</kw>
<msg timestamp="20201112 12:41:55.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.342" endtime="20201112 12:41:55.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.638" endtime="20201112 12:41:55.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.647" endtime="20201112 12:41:55.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.340" endtime="20201112 12:41:55.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.338" endtime="20201112 12:41:55.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.653" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:55.652" endtime="20201112 12:41:55.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.658" level="INFO">VALUE: [{'time': 0.020503861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020510625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.020511097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0205185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.020518972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020528375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.020528847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020535639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.020536111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020546056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.020546528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020553597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.020554069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020561306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2370000000002155e-06, 'source_diff': 7.2370000000002155e-06}, {'time': 0.020561778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020566806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.020567278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020574083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.020574556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020582611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.020583083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020588431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.020588917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020596042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.020596514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020603833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.020604306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020609764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.020610236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.020618556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.020623347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020630833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.020640611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020649597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.020650069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020658542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472999999998426e-06, 'source_diff': 8.472999999998426e-06}, {'time': 0.020659028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020666139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020666611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020676139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.020676611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020683625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020684097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.020690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020696319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020696792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020702125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.020702611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020711181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.020711653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020718056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.020718528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020723569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.020724042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020728042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.020728514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020737208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.020737681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020744889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.020745361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020754681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.020755153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020763833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.020764306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020771444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.020771917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020776111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.020776583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020783167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.020783653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020794097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.020794569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.020800611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020804806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.020805292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020809181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020809653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020816264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.020816736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020825306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.020825778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020833319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.020833792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020837778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.020838264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020842458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.020842944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020852264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.020852736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020857556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.020858028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020867014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.0208675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:55.654" endtime="20201112 12:41:55.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.650" endtime="20201112 12:41:55.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:55.685" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.79200000000199...</msg>
<status status="PASS" starttime="20201112 12:41:55.661" endtime="20201112 12:41:55.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.689" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:55.688" endtime="20201112 12:41:55.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.693" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 7.2370000000002155e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.860000000009301e-07, 7.124999999996717e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.304999999999587e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.729999999973644e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.859999999974607e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 6.611000000000117e-06, 4.7199999999789077e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.859999999974607e-07, 4.194000000002501e-06, 4.859999999974607e-07, 9.320000000000161e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07], 'eventsourcetime': [0.020503861, 0.020504333, 0.020510625, 0.020511097, 0.0205185, 0.020518972, 0.020528375, 0.020528847, 0.020535639, 0.020536111, 0.020546056, 0.020546528, 0.020553597, 0.020554069, 0.020561306, 0.020561778, 0.020566806, 0.020567278, 0.020574083, 0.020574556, 0.020582611, 0.020583083, 0.020588431, 0.020588917, 0.020596042, 0.020596514, 0.020603833, 0.020604306, 0.020609764, 0.020610236, 0.020618083, 0.020618556, 0.020622861, 0.020623347, 0.020630361, 0.020630833, 0.020640139, 0.020640611, 0.020649597, 0.020650069, 0.020658542, 0.020659028, 0.020666139, 0.020666611, 0.020676139, 0.020676611, 0.020683625, 0.020684097, 0.020689653, 0.020690125, 0.020696319, 0.020696792, 0.020702125, 0.020702611, 0.020711181, 0.020711653, 0.020718056, 0.020718528, 0.020723569, 0.020724042, 0.020728042, 0.020728514, 0.020737208, 0.020737681, 0.020744889, 0.020745361, 0.020754681, 0.020755153, 0.020763833, 0.020764306, 0.020771444, 0.020771917, 0.020776111, 0.020776583, 0.020783167, 0.020783653, 0.020794097, 0.020794569, 0.020800125, 0.020800611, 0.020804806, 0.020805292, 0.020809181, 0.020809653, 0.020816264, 0.020816736, 0.020825306, 0.020825778, 0.020833319, 0.020833792, 0.020837778, 0.020838264, 0.020842458, 0.020842944, 0.020852264, 0.020852736, 0.020857556, 0.020858028, 0.020867014, 0.0208675], 'diff': [0, 4.7199999999789077e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 7.2370000000002155e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.860000000009301e-07, 7.124999999996717e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.304999999999587e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.729999999973644e-07, 5.332999999999727e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.859999999974607e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 6.611000000000117e-06, 4.7199999999789077e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.859999999974607e-07, 4.194000000002501e-06, 4.859999999974607e-07, 9.320000000000161e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:55.690" endtime="20201112 12:41:55.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.686" endtime="20201112 12:41:55.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.699" level="INFO">${RESULT} = [{'time': 0.020504333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020511097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:55.695" endtime="20201112 12:41:55.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:55.712" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077...</msg>
<status status="PASS" starttime="20201112 12:41:55.700" endtime="20201112 12:41:55.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.716" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:55.715" endtime="20201112 12:41:55.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.719" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 12:41:55.717" endtime="20201112 12:41:55.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.713" endtime="20201112 12:41:55.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.722" endtime="20201112 12:41:55.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.725" endtime="20201112 12:41:55.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.724" endtime="20201112 12:41:55.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.720" endtime="20201112 12:41:55.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.308" endtime="20201112 12:41:55.746"></status>
</kw>
<msg timestamp="20201112 12:41:55.746" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.754" endtime="20201112 12:41:55.769"></status>
</kw>
<msg timestamp="20201112 12:41:55.769" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.752" endtime="20201112 12:41:55.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.772" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.770" endtime="20201112 12:41:55.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.773" endtime="20201112 12:41:55.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.750" endtime="20201112 12:41:55.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.748" endtime="20201112 12:41:55.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.782" endtime="20201112 12:41:56.066"></status>
</kw>
<msg timestamp="20201112 12:41:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019236472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.781" endtime="20201112 12:41:56.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019236472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.070" endtime="20201112 12:41:56.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.078" endtime="20201112 12:41:56.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.778" endtime="20201112 12:41:56.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.777" endtime="20201112 12:41:56.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.085" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:56.084" endtime="20201112 12:41:56.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.090" level="INFO">VALUE: [{'time': 0.019236472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019247181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999999746e-05, 'source_diff': 1.0236999999999746e-05}, {'time': 0.019247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019256111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019256583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019267014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.019267486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019274903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.019275375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019282361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.019282833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019293208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.019293681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019301139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.019301611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.019307528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019311625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.019312097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019319097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019319583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019326806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222999999997176e-06, 'source_diff': 7.222999999997176e-06}, {'time': 0.019327278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019332319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.019332792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019340944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.019341417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019350722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.019351194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019355764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.019356236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019364347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000001617e-06, 'source_diff': 8.111000000001617e-06}, {'time': 0.019364819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019371306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.487000000002935e-06, 'source_diff': 6.487000000002935e-06}, {'time': 0.019371778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019381486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019381972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019392306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.019392778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019403264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.019403736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.019414528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019423833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.019424306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.019431597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019438375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.019438847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019448361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.019448833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019457819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019458292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019466792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.019467264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01947675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.019477222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019484556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.019485028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019491208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019491681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019497583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.019498056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019506361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.019506833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019513931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.019514417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019521722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.019522194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019526083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019526556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019530639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.019531125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019535431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019535903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019540931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019541403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019551292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.019551778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019557944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019558417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019562417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.019562889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019572389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.019572875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0195805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.019580986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019584972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.019585458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019589403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.019589875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019599639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.019600125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019609556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.019610028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019617125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.019617597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019623986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019624458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:56.086" endtime="20201112 12:41:56.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.082" endtime="20201112 12:41:56.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:56.116" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.457999999999383e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 7.41699999999914...</msg>
<status status="PASS" starttime="20201112 12:41:56.093" endtime="20201112 12:41:56.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.120" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:56.119" endtime="20201112 12:41:56.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.124" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.457999999999383e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 7.457999999998383e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 4.57000000000235e-06, 4.7199999999789077e-07, 8.111000000001617e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 9.305000000001118e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 6.778000000002421e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.729999999973644e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.901999999998603e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.859999999974607e-07, 7.304999999999118e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7300000000083386e-07, 4.082999999998477e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.889000000002507e-06, 4.859999999974607e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 3.9449999999982555e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.860000000009301e-07, 9.431000000000717e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07], 'eventsourcetime': [0.019236472, 0.019236944, 0.019247181, 0.019247653, 0.019256111, 0.019256583, 0.019267014, 0.019267486, 0.019274903, 0.019275375, 0.019282361, 0.019282833, 0.019293208, 0.019293681, 0.019301139, 0.019301611, 0.019307056, 0.019307528, 0.019311625, 0.019312097, 0.019319097, 0.019319583, 0.019326806, 0.019327278, 0.019332319, 0.019332792, 0.019340944, 0.019341417, 0.019350722, 0.019351194, 0.019355764, 0.019356236, 0.019364347, 0.019364819, 0.019371306, 0.019371778, 0.019381486, 0.019381972, 0.019392306, 0.019392778, 0.019403264, 0.019403736, 0.019414056, 0.019414528, 0.019423833, 0.019424306, 0.019431125, 0.019431597, 0.019438375, 0.019438847, 0.019448361, 0.019448833, 0.019457819, 0.019458292, 0.019466792, 0.019467264, 0.01947675, 0.019477222, 0.019484556, 0.019485028, 0.019491208, 0.019491681, 0.019497583, 0.019498056, 0.019506361, 0.019506833, 0.019513931, 0.019514417, 0.019521722, 0.019522194, 0.019526083, 0.019526556, 0.019530639, 0.019531125, 0.019535431, 0.019535903, 0.019540931, 0.019541403, 0.019551292, 0.019551778, 0.019557944, 0.019558417, 0.019562417, 0.019562889, 0.019572389, 0.019572875, 0.0195805, 0.019580986, 0.019584972, 0.019585458, 0.019589403, 0.019589875, 0.019599639, 0.019600125, 0.019609556, 0.019610028, 0.019617125, 0.019617597, 0.019623986, 0.019624458], 'diff': [0, 4.7199999999789077e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.457999999999383e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 7.457999999998383e-06, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 4.57000000000235e-06, 4.7199999999789077e-07, 8.111000000001617e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 9.305000000001118e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 6.778000000002421e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.729999999973644e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 5.901999999998603e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.859999999974607e-07, 7.304999999999118e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.7300000000083386e-07, 4.082999999998477e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.889000000002507e-06, 4.859999999974607e-07, 6.166000000001892e-06, 4.7300000000083386e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 3.9449999999982555e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.860000000009301e-07, 9.431000000000717e-06, 4.720000000013602e-07, 7.0969999999975775e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:56.121" endtime="20201112 12:41:56.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.117" endtime="20201112 12:41:56.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.129" level="INFO">${RESULT} = [{'time': 0.019236944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019247653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.126" endtime="20201112 12:41:56.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:56.144" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201112 12:41:56.130" endtime="20201112 12:41:56.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.148" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:56.147" endtime="20201112 12:41:56.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.151" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:56.150" endtime="20201112 12:41:56.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.145" endtime="20201112 12:41:56.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.155" endtime="20201112 12:41:56.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.158" endtime="20201112 12:41:56.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.156" endtime="20201112 12:41:56.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.153" endtime="20201112 12:41:56.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.747" endtime="20201112 12:41:56.179"></status>
</kw>
<msg timestamp="20201112 12:41:56.179" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.186" endtime="20201112 12:41:56.200"></status>
</kw>
<msg timestamp="20201112 12:41:56.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.185" endtime="20201112 12:41:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.203" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.202" endtime="20201112 12:41:56.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.204" endtime="20201112 12:41:56.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.182" endtime="20201112 12:41:56.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.181" endtime="20201112 12:41:56.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.213" endtime="20201112 12:41:56.502"></status>
</kw>
<msg timestamp="20201112 12:41:56.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018568, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018568472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:56.212" endtime="20201112 12:41:56.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018568, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018568472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:56.506" endtime="20201112 12:41:56.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.514" endtime="20201112 12:41:56.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.209" endtime="20201112 12:41:56.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.207" endtime="20201112 12:41:56.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.521" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:56.520" endtime="20201112 12:41:56.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.526" level="INFO">VALUE: [{'time': 0.018568, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018568472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018576486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018576958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018587139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018595611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.018596083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018603194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018603681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018609236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018609708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018619639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.018620111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018630347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.018630833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018636083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018636556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018640667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018641139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018646167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018646639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018656556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.018657042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018662819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.018663292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018672472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.018672944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018679653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018680125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018685583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018686056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018691111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.018691583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018695583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018696056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018702528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018703014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018710028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.0187105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018716514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018716986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018727306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.018727778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018732139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018740181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.042000000003241e-06, 'source_diff': 8.042000000003241e-06}, {'time': 0.018740667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018744653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018745139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018755319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018760208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018768889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018769361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018775194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018779389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018779875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018789847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.018790319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018794681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.018795167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018802167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018802653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018810806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018811278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018816167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018820583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.415999999996673e-06, 'source_diff': 4.415999999996673e-06}, {'time': 0.018821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018830361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018830833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018835139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018835625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.018843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01885375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.018854236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018859889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018867792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.018868278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01887525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018875722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01888175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018882222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018888389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018888861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.01889625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018902639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018903111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018912097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018912569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018918972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.018919444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018925153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018925625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:41:56.522" endtime="20201112 12:41:56.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.517" endtime="20201112 12:41:56.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:56.552" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.11100000000061...</msg>
<status status="PASS" starttime="20201112 12:41:56.528" endtime="20201112 12:41:56.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.556" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:56.555" endtime="20201112 12:41:56.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.560" level="INFO">VALUE: {'source_diff': [0, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 4.860000000009301e-07, 5.250000000001781e-06, 4.729999999973644e-07, 4.111000000001086e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.859999999974607e-07, 5.777000000001947e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 6.472000000000422e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 3.875000000000406e-06, 4.859999999974607e-07, 8.042000000003241e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 4.195000000001975e-06, 4.860000000009301e-07, 9.971999999996983e-06, 4.720000000013602e-07, 4.36200000000081e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.415999999996673e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.859999999974607e-07, 7.417000000002616e-06, 4.859999999974607e-07, 6.972000000000922e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07], 'eventsourcetime': [0.018568, 0.018568472, 0.018576486, 0.018576958, 0.018586667, 0.018587139, 0.018595611, 0.018596083, 0.018603194, 0.018603681, 0.018609236, 0.018609708, 0.018619639, 0.018620111, 0.018630347, 0.018630833, 0.018636083, 0.018636556, 0.018640667, 0.018641139, 0.018646167, 0.018646639, 0.018656556, 0.018657042, 0.018662819, 0.018663292, 0.018672472, 0.018672944, 0.018679653, 0.018680125, 0.018685583, 0.018686056, 0.018691111, 0.018691583, 0.018695583, 0.018696056, 0.018702528, 0.018703014, 0.018710028, 0.0187105, 0.018716514, 0.018716986, 0.018727306, 0.018727778, 0.018731653, 0.018732139, 0.018740181, 0.018740667, 0.018744653, 0.018745139, 0.018754847, 0.018755319, 0.018759736, 0.018760208, 0.018768889, 0.018769361, 0.018774708, 0.018775194, 0.018779389, 0.018779875, 0.018789847, 0.018790319, 0.018794681, 0.018795167, 0.018802167, 0.018802653, 0.018810806, 0.018811278, 0.018815694, 0.018816167, 0.018820583, 0.018821056, 0.018830361, 0.018830833, 0.018835139, 0.018835625, 0.018843458, 0.018843944, 0.01885375, 0.018854236, 0.018859889, 0.018860375, 0.018867792, 0.018868278, 0.01887525, 0.018875722, 0.01888175, 0.018882222, 0.018888389, 0.018888861, 0.018895778, 0.01889625, 0.018902639, 0.018903111, 0.018912097, 0.018912569, 0.018918972, 0.018919444, 0.018925153, 0.018925625], 'diff': [0, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.720000000013602e-07, 1.0235999999996803e-05, 4.860000000009301e-07, 5.250000000001781e-06, 4.729999999973644e-07, 4.111000000001086e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.859999999974607e-07, 5.777000000001947e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 6.472000000000422e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 3.875000000000406e-06, 4.859999999974607e-07, 8.042000000003241e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.347000000002766e-06, 4.859999999974607e-07, 4.195000000001975e-06, 4.860000000009301e-07, 9.971999999996983e-06, 4.720000000013602e-07, 4.36200000000081e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.415999999996673e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 5.653000000001296e-06, 4.859999999974607e-07, 7.417000000002616e-06, 4.859999999974607e-07, 6.972000000000922e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.166999999997896e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.720000000013602e-07, 6.4029999999985765e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:41:56.557" endtime="20201112 12:41:56.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.553" endtime="20201112 12:41:56.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.566" level="INFO">${RESULT} = [{'time': 0.018568472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018576958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.563" endtime="20201112 12:41:56.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:56.579" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e...</msg>
<status status="PASS" starttime="20201112 12:41:56.567" endtime="20201112 12:41:56.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:56.582" endtime="20201112 12:41:56.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.586" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:41:56.585" endtime="20201112 12:41:56.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.580" endtime="20201112 12:41:56.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.589" endtime="20201112 12:41:56.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.592" endtime="20201112 12:41:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.591" endtime="20201112 12:41:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.587" endtime="20201112 12:41:56.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.179" endtime="20201112 12:41:56.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.798" endtime="20201112 12:41:56.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.618" endtime="20201112 12:41:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.616" endtime="20201112 12:41:56.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.615" endtime="20201112 12:41:56.638"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:47.717" endtime="20201112 12:41:56.639" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.646" endtime="20201112 12:41:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.644" endtime="20201112 12:41:56.666"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.680" endtime="20201112 12:41:56.701"></status>
</kw>
<msg timestamp="20201112 12:41:56.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.678" endtime="20201112 12:41:56.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.704" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.703" endtime="20201112 12:41:56.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:56.706" endtime="20201112 12:41:56.708"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.676" endtime="20201112 12:41:56.709"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.673" endtime="20201112 12:41:56.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.672" endtime="20201112 12:41:56.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:56.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:56.713" endtime="20201112 12:41:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.711" endtime="20201112 12:41:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.670" endtime="20201112 12:41:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.670" endtime="20201112 12:41:56.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.715" endtime="20201112 12:41:56.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.668" endtime="20201112 12:41:56.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.667" endtime="20201112 12:41:56.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.643" endtime="20201112 12:41:56.718"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:56.720" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.728" endtime="20201112 12:41:56.744"></status>
</kw>
<msg timestamp="20201112 12:41:56.744" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.726" endtime="20201112 12:41:56.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.746" endtime="20201112 12:41:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.748" endtime="20201112 12:41:56.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.723" endtime="20201112 12:41:56.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.722" endtime="20201112 12:41:56.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.758" endtime="20201112 12:41:57.043"></status>
</kw>
<msg timestamp="20201112 12:41:57.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073738514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073742889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.756" endtime="20201112 12:41:57.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073738514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073742889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.047" endtime="20201112 12:41:57.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.055" endtime="20201112 12:41:57.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.753" endtime="20201112 12:41:57.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.751" endtime="20201112 12:41:57.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.062" level="INFO">${RESULT} = [{'time': 0.073742889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.073751625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:57.058" endtime="20201112 12:41:57.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.076" level="INFO">${OVERHEAD} = {'source_diff': [4.375000000000906e-06, 4.389000000007415e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999993537e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:57.063" endtime="20201112 12:41:57.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.080" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.079" endtime="20201112 12:41:57.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.083" level="INFO">VALUE: [4.375000000000906e-06, 4.389000000007415e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.375000000000906e-06, 4.416000000007081e-06, 4.388999999993537e-06, 4.415999999993203e-06, 4.389000000007415e-06, 4.361000000008275e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.389000000007415e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.389000000007415e-06, 4.388999999993537e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.415999999993203e-06, 4.361000000008275e-06, 4.387999999994063e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.403000000000046e-06, 4.416000000007081e-06, 4.430999999999186e-06, 4.389000000007415e-06, 4.415999999993203e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.2910000000034865e-06, 4.360999999994397e-06, 4.3620000000077486e-06, 4.388999999993537e-06, 4.4580000000127296e-06, 4.4170000000065546e-06, 4.388000000007941e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.081" endtime="20201112 12:41:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.077" endtime="20201112 12:41:57.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.086" endtime="20201112 12:41:57.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.089" endtime="20201112 12:41:57.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.088" endtime="20201112 12:41:57.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.084" endtime="20201112 12:41:57.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.720" endtime="20201112 12:41:57.110"></status>
</kw>
<msg timestamp="20201112 12:41:57.110" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.118" endtime="20201112 12:41:57.135"></status>
</kw>
<msg timestamp="20201112 12:41:57.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.116" endtime="20201112 12:41:57.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.137" endtime="20201112 12:41:57.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.139" endtime="20201112 12:41:57.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.113" endtime="20201112 12:41:57.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.112" endtime="20201112 12:41:57.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.148" endtime="20201112 12:41:57.436"></status>
</kw>
<msg timestamp="20201112 12:41:57.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.147" endtime="20201112 12:41:57.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.440" endtime="20201112 12:41:57.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.448" endtime="20201112 12:41:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.144" endtime="20201112 12:41:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.142" endtime="20201112 12:41:57.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.455" level="INFO">${RESULT} = [{'time': 0.022407722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.022421042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:57.451" endtime="20201112 12:41:57.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.468" level="INFO">${OVERHEAD} = {'source_diff': [4.416000000000142e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:57.456" endtime="20201112 12:41:57.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.472" endtime="20201112 12:41:57.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.475" level="INFO">VALUE: [4.416000000000142e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.402000000000572e-06, 4.333000000002196e-06, 4.429999999999712e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.458999999998325e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.34800000000124e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.474" endtime="20201112 12:41:57.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.469" endtime="20201112 12:41:57.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.478" endtime="20201112 12:41:57.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.481" endtime="20201112 12:41:57.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.480" endtime="20201112 12:41:57.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.477" endtime="20201112 12:41:57.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.111" endtime="20201112 12:41:57.502"></status>
</kw>
<msg timestamp="20201112 12:41:57.502" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.510" endtime="20201112 12:41:57.528"></status>
</kw>
<msg timestamp="20201112 12:41:57.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.508" endtime="20201112 12:41:57.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.529" endtime="20201112 12:41:57.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.531" endtime="20201112 12:41:57.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.506" endtime="20201112 12:41:57.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.504" endtime="20201112 12:41:57.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.540" endtime="20201112 12:41:57.827"></status>
</kw>
<msg timestamp="20201112 12:41:57.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.539" endtime="20201112 12:41:57.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.831" endtime="20201112 12:41:57.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.839" endtime="20201112 12:41:57.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.536" endtime="20201112 12:41:57.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.535" endtime="20201112 12:41:57.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.846" level="INFO">${RESULT} = [{'time': 0.021981125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.021995792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:57.843" endtime="20201112 12:41:57.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.860" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.402999999996576e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:57.847" endtime="20201112 12:41:57.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.864" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.863" endtime="20201112 12:41:57.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.866" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.402999999996576e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.305999999999061e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.319000000002626e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.333000000002196e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.4449999999987555e-06, 4.389000000000476e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.865" endtime="20201112 12:41:57.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.861" endtime="20201112 12:41:57.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.869" endtime="20201112 12:41:57.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.873" endtime="20201112 12:41:57.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.871" endtime="20201112 12:41:57.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.868" endtime="20201112 12:41:57.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.503" endtime="20201112 12:41:57.893"></status>
</kw>
<msg timestamp="20201112 12:41:57.894" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.901" endtime="20201112 12:41:57.920"></status>
</kw>
<msg timestamp="20201112 12:41:57.920" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.900" endtime="20201112 12:41:57.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.921" endtime="20201112 12:41:57.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.924" endtime="20201112 12:41:57.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.897" endtime="20201112 12:41:57.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.896" endtime="20201112 12:41:57.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.933" endtime="20201112 12:41:58.218"></status>
</kw>
<msg timestamp="20201112 12:41:58.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.931" endtime="20201112 12:41:58.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.222" endtime="20201112 12:41:58.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.230" endtime="20201112 12:41:58.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.928" endtime="20201112 12:41:58.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.927" endtime="20201112 12:41:58.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.237" level="INFO">${RESULT} = [{'time': 0.022561708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.022570153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:58.234" endtime="20201112 12:41:58.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.251" level="INFO">${OVERHEAD} = {'source_diff': [4.375000000000906e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:58.238" endtime="20201112 12:41:58.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.255" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:58.254" endtime="20201112 12:41:58.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.257" level="INFO">VALUE: [4.375000000000906e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.33400000000167e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.256" endtime="20201112 12:41:58.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.251" endtime="20201112 12:41:58.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.260" endtime="20201112 12:41:58.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.264" endtime="20201112 12:41:58.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.262" endtime="20201112 12:41:58.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.259" endtime="20201112 12:41:58.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.894" endtime="20201112 12:41:58.285"></status>
</kw>
<msg timestamp="20201112 12:41:58.285" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.292" endtime="20201112 12:41:58.306"></status>
</kw>
<msg timestamp="20201112 12:41:58.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.291" endtime="20201112 12:41:58.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.308" endtime="20201112 12:41:58.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.310" endtime="20201112 12:41:58.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.288" endtime="20201112 12:41:58.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.287" endtime="20201112 12:41:58.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.319" endtime="20201112 12:41:58.606"></status>
</kw>
<msg timestamp="20201112 12:41:58.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018360528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.318" endtime="20201112 12:41:58.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018360528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.611" endtime="20201112 12:41:58.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.619" endtime="20201112 12:41:58.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.315" endtime="20201112 12:41:58.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.313" endtime="20201112 12:41:58.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.625" level="INFO">${RESULT} = [{'time': 0.018364903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.018375542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:58.622" endtime="20201112 12:41:58.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.640" level="INFO">${OVERHEAD} = {'source_diff': [4.3749999999974365e-06, 4.417000000003085e-06, 4.347000000001766e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.346999999998297e-06, 4.403000000000046e-06...</msg>
<status status="PASS" starttime="20201112 12:41:58.626" endtime="20201112 12:41:58.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.644" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:58.643" endtime="20201112 12:41:58.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.647" level="INFO">VALUE: [4.3749999999974365e-06, 4.417000000003085e-06, 4.347000000001766e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.332999999998727e-06, 4.387999999997533e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.401999999997103e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.645" endtime="20201112 12:41:58.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.641" endtime="20201112 12:41:58.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.650" endtime="20201112 12:41:58.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.653" endtime="20201112 12:41:58.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.652" endtime="20201112 12:41:58.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.648" endtime="20201112 12:41:58.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.285" endtime="20201112 12:41:58.674"></status>
</kw>
<msg timestamp="20201112 12:41:58.674" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.682" endtime="20201112 12:41:58.698"></status>
</kw>
<msg timestamp="20201112 12:41:58.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.680" endtime="20201112 12:41:58.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.699" endtime="20201112 12:41:58.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.702" endtime="20201112 12:41:58.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.678" endtime="20201112 12:41:58.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.676" endtime="20201112 12:41:58.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.711" endtime="20201112 12:41:58.995"></status>
</kw>
<msg timestamp="20201112 12:41:58.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.709" endtime="20201112 12:41:58.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.999" endtime="20201112 12:41:59.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.008" endtime="20201112 12:41:59.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.707" endtime="20201112 12:41:59.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.705" endtime="20201112 12:41:59.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.014" level="INFO">${RESULT} = [{'time': 0.020768042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020781708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:59.011" endtime="20201112 12:41:59.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.027" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.318999999999157e-06, 4.416999999999616e-06, 4.402000000000572e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:59.015" endtime="20201112 12:41:59.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.032" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.031" endtime="20201112 12:41:59.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.034" level="INFO">VALUE: [4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.318999999999157e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.458000000002321e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.458000000002321e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.033" endtime="20201112 12:41:59.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.028" endtime="20201112 12:41:59.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.037" endtime="20201112 12:41:59.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.041" endtime="20201112 12:41:59.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.039" endtime="20201112 12:41:59.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.036" endtime="20201112 12:41:59.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.675" endtime="20201112 12:41:59.061"></status>
</kw>
<msg timestamp="20201112 12:41:59.062" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.069" endtime="20201112 12:41:59.086"></status>
</kw>
<msg timestamp="20201112 12:41:59.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.068" endtime="20201112 12:41:59.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.087" endtime="20201112 12:41:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.090" endtime="20201112 12:41:59.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.065" endtime="20201112 12:41:59.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.063" endtime="20201112 12:41:59.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.099" endtime="20201112 12:41:59.386"></status>
</kw>
<msg timestamp="20201112 12:41:59.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.098" endtime="20201112 12:41:59.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.390" endtime="20201112 12:41:59.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.398" endtime="20201112 12:41:59.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.095" endtime="20201112 12:41:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.093" endtime="20201112 12:41:59.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.405" level="INFO">${RESULT} = [{'time': 0.020223569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.020232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:59.402" endtime="20201112 12:41:59.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.419" level="INFO">${OVERHEAD} = {'source_diff': [4.388000000001002e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.360999999997867e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.416999999999616e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:59.406" endtime="20201112 12:41:59.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.423" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.422" endtime="20201112 12:41:59.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.425" level="INFO">VALUE: [4.388000000001002e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.360999999997867e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.485999999997992e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.346999999998297e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.333000000002196e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.33400000000167e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.458000000002321e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.33400000000167e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.402999999996576e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.424" endtime="20201112 12:41:59.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.419" endtime="20201112 12:41:59.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.428" endtime="20201112 12:41:59.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.432" endtime="20201112 12:41:59.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.430" endtime="20201112 12:41:59.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.427" endtime="20201112 12:41:59.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.062" endtime="20201112 12:41:59.452"></status>
</kw>
<msg timestamp="20201112 12:41:59.453" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.460" endtime="20201112 12:41:59.477"></status>
</kw>
<msg timestamp="20201112 12:41:59.477" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.459" endtime="20201112 12:41:59.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.478" endtime="20201112 12:41:59.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.481" endtime="20201112 12:41:59.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.456" endtime="20201112 12:41:59.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.455" endtime="20201112 12:41:59.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.490" endtime="20201112 12:41:59.777"></status>
</kw>
<msg timestamp="20201112 12:41:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02110025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:59.489" endtime="20201112 12:41:59.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02110025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:59.781" endtime="20201112 12:41:59.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.789" endtime="20201112 12:41:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.486" endtime="20201112 12:41:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.484" endtime="20201112 12:41:59.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.796" level="INFO">${RESULT} = [{'time': 0.02110025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.021109125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:59.792" endtime="20201112 12:41:59.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.809" level="INFO">${OVERHEAD} = {'source_diff': [4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.387999999997533e-06, 4.416999999999616e-06,...</msg>
<status status="PASS" starttime="20201112 12:41:59.797" endtime="20201112 12:41:59.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.813" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.812" endtime="20201112 12:41:59.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.816" level="INFO">VALUE: [4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.387999999997533e-06, 4.416999999999616e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.33400000000167e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.332999999998727e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.375000000000906e-06, 4.472999999997895e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.814" endtime="20201112 12:41:59.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.810" endtime="20201112 12:41:59.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.819" endtime="20201112 12:41:59.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.822" endtime="20201112 12:41:59.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.821" endtime="20201112 12:41:59.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.817" endtime="20201112 12:41:59.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.453" endtime="20201112 12:41:59.843"></status>
</kw>
<msg timestamp="20201112 12:41:59.843" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.851" endtime="20201112 12:41:59.868"></status>
</kw>
<msg timestamp="20201112 12:41:59.869" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.849" endtime="20201112 12:41:59.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.870" endtime="20201112 12:41:59.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.872" endtime="20201112 12:41:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.847" endtime="20201112 12:41:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.845" endtime="20201112 12:41:59.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.881" endtime="20201112 12:42:00.167"></status>
</kw>
<msg timestamp="20201112 12:42:00.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:59.880" endtime="20201112 12:42:00.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:00.171" endtime="20201112 12:42:00.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.180" endtime="20201112 12:42:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.877" endtime="20201112 12:42:00.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.876" endtime="20201112 12:42:00.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.186" level="INFO">${RESULT} = [{'time': 0.022434, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022444208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:00.183" endtime="20201112 12:42:00.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.201" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.4449999999987555e-06...</msg>
<status status="PASS" starttime="20201112 12:42:00.187" endtime="20201112 12:42:00.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:00.204" endtime="20201112 12:42:00.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.208" level="INFO">VALUE: [4.403000000000046e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.304999999999587e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.34800000000124e-06, 4.318999999999157e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458999999998325e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.471999999998422e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.333000000002196e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.207" endtime="20201112 12:42:00.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.202" endtime="20201112 12:42:00.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.212" endtime="20201112 12:42:00.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.215" endtime="20201112 12:42:00.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.214" endtime="20201112 12:42:00.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.210" endtime="20201112 12:42:00.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.844" endtime="20201112 12:42:00.236"></status>
</kw>
<msg timestamp="20201112 12:42:00.236" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.245" endtime="20201112 12:42:00.265"></status>
</kw>
<msg timestamp="20201112 12:42:00.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.243" endtime="20201112 12:42:00.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.266" endtime="20201112 12:42:00.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.269" endtime="20201112 12:42:00.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.240" endtime="20201112 12:42:00.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.238" endtime="20201112 12:42:00.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.278" endtime="20201112 12:42:00.566"></status>
</kw>
<msg timestamp="20201112 12:42:00.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.276" endtime="20201112 12:42:00.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.570" endtime="20201112 12:42:00.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.578" endtime="20201112 12:42:00.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.273" endtime="20201112 12:42:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.272" endtime="20201112 12:42:00.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.585" level="INFO">${RESULT} = [{'time': 0.021168792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.021177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:00.582" endtime="20201112 12:42:00.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.598" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.388000000001002e-06, 4.415999999996673e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.318999999999157e-06...</msg>
<status status="PASS" starttime="20201112 12:42:00.586" endtime="20201112 12:42:00.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.603" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:00.602" endtime="20201112 12:42:00.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.605" level="INFO">VALUE: [4.403000000000046e-06, 4.388000000001002e-06, 4.415999999996673e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.318999999999157e-06, 4.36200000000081e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.388999999997006e-06, 4.429999999999712e-06, 4.401999999997103e-06, 4.388000000001002e-06, 4.401999999997103e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458000000002321e-06, 4.431000000002655e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.604" endtime="20201112 12:42:00.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.599" endtime="20201112 12:42:00.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.608" endtime="20201112 12:42:00.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.612" endtime="20201112 12:42:00.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.610" endtime="20201112 12:42:00.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.607" endtime="20201112 12:42:00.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.237" endtime="20201112 12:42:00.633"></status>
</kw>
<msg timestamp="20201112 12:42:00.633" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.640" endtime="20201112 12:42:00.658"></status>
</kw>
<msg timestamp="20201112 12:42:00.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.639" endtime="20201112 12:42:00.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.659" endtime="20201112 12:42:00.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.662" endtime="20201112 12:42:00.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.636" endtime="20201112 12:42:00.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.635" endtime="20201112 12:42:00.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.671" endtime="20201112 12:42:00.958"></status>
</kw>
<msg timestamp="20201112 12:42:00.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424361, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:00.669" endtime="20201112 12:42:00.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424361, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:00.962" endtime="20201112 12:42:00.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.970" endtime="20201112 12:42:00.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.667" endtime="20201112 12:42:00.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.665" endtime="20201112 12:42:00.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.977" level="INFO">${RESULT} = [{'time': 0.021424361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.021434986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:00.974" endtime="20201112 12:42:00.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.990" level="INFO">${OVERHEAD} = {'source_diff': [4.360999999997867e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.402000000000572e-06, 4.472000000001891e-06, 4.388999999997006e-06, 4.347000000001766e-06, 4.375000000000906e-06...</msg>
<status status="PASS" starttime="20201112 12:42:00.978" endtime="20201112 12:42:00.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:00.994" endtime="20201112 12:42:00.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.997" level="INFO">VALUE: [4.360999999997867e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.402000000000572e-06, 4.472000000001891e-06, 4.388999999997006e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.387999999997533e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.996" endtime="20201112 12:42:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.991" endtime="20201112 12:42:00.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.001" endtime="20201112 12:42:01.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.004" endtime="20201112 12:42:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.003" endtime="20201112 12:42:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.999" endtime="20201112 12:42:01.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.633" endtime="20201112 12:42:01.025"></status>
</kw>
<msg timestamp="20201112 12:42:01.025" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.033" endtime="20201112 12:42:01.049"></status>
</kw>
<msg timestamp="20201112 12:42:01.050" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.031" endtime="20201112 12:42:01.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.052" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.051" endtime="20201112 12:42:01.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.053" endtime="20201112 12:42:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.029" endtime="20201112 12:42:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.027" endtime="20201112 12:42:01.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.062" endtime="20201112 12:42:01.349"></status>
</kw>
<msg timestamp="20201112 12:42:01.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02105775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:01.061" endtime="20201112 12:42:01.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02105775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:01.353" endtime="20201112 12:42:01.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.362" endtime="20201112 12:42:01.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.058" endtime="20201112 12:42:01.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.056" endtime="20201112 12:42:01.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.368" level="INFO">${RESULT} = [{'time': 0.021062125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.021075236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:01.365" endtime="20201112 12:42:01.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.382" level="INFO">${OVERHEAD} = {'source_diff': [4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:01.369" endtime="20201112 12:42:01.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.386" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:01.385" endtime="20201112 12:42:01.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.388" level="INFO">VALUE: [4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.388000000001002e-06, 4.360999999997867e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.458000000002321e-06, 4.417000000003085e-06, 4.333000000002196e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.387999999997533e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.387" endtime="20201112 12:42:01.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.382" endtime="20201112 12:42:01.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.392" endtime="20201112 12:42:01.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.395" endtime="20201112 12:42:01.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.394" endtime="20201112 12:42:01.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.390" endtime="20201112 12:42:01.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.026" endtime="20201112 12:42:01.416"></status>
</kw>
<msg timestamp="20201112 12:42:01.416" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.424" endtime="20201112 12:42:01.441"></status>
</kw>
<msg timestamp="20201112 12:42:01.441" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.422" endtime="20201112 12:42:01.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.442" endtime="20201112 12:42:01.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.445" endtime="20201112 12:42:01.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.420" endtime="20201112 12:42:01.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.418" endtime="20201112 12:42:01.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.454" endtime="20201112 12:42:01.741"></status>
</kw>
<msg timestamp="20201112 12:42:01.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.452" endtime="20201112 12:42:01.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.747" endtime="20201112 12:42:01.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.757" endtime="20201112 12:42:01.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.450" endtime="20201112 12:42:01.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.448" endtime="20201112 12:42:01.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.766" level="INFO">${RESULT} = [{'time': 0.021938125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.0219475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:01.762" endtime="20201112 12:42:01.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.782" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.389000000000476e-06, 4.458000000002321e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.333000000002196e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:01.767" endtime="20201112 12:42:01.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:01.785" endtime="20201112 12:42:01.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.789" level="INFO">VALUE: [4.403000000000046e-06, 4.389000000000476e-06, 4.458000000002321e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.333000000002196e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.459000000001795e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.431000000002655e-06, 4.415999999996673e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.402000000000572e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.788" endtime="20201112 12:42:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.783" endtime="20201112 12:42:01.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.792" endtime="20201112 12:42:01.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.796" endtime="20201112 12:42:01.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.794" endtime="20201112 12:42:01.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.791" endtime="20201112 12:42:01.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.417" endtime="20201112 12:42:01.817"></status>
</kw>
<msg timestamp="20201112 12:42:01.817" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.824" endtime="20201112 12:42:01.839"></status>
</kw>
<msg timestamp="20201112 12:42:01.840" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.823" endtime="20201112 12:42:01.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.842" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.841" endtime="20201112 12:42:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.843" endtime="20201112 12:42:01.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.820" endtime="20201112 12:42:01.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.819" endtime="20201112 12:42:01.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.852" endtime="20201112 12:42:02.137"></status>
</kw>
<msg timestamp="20201112 12:42:02.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.851" endtime="20201112 12:42:02.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.141" endtime="20201112 12:42:02.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.149" endtime="20201112 12:42:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.848" endtime="20201112 12:42:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.846" endtime="20201112 12:42:02.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.156" level="INFO">${RESULT} = [{'time': 0.018175111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018183528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.152" endtime="20201112 12:42:02.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.169" level="INFO">${OVERHEAD} = {'source_diff': [4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:02.157" endtime="20201112 12:42:02.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.173" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:02.172" endtime="20201112 12:42:02.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.176" level="INFO">VALUE: [4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.459000000001795e-06, 4.431000000002655e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.174" endtime="20201112 12:42:02.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.170" endtime="20201112 12:42:02.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.179" endtime="20201112 12:42:02.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.182" endtime="20201112 12:42:02.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.181" endtime="20201112 12:42:02.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.177" endtime="20201112 12:42:02.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.817" endtime="20201112 12:42:02.203"></status>
</kw>
<msg timestamp="20201112 12:42:02.203" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.211" endtime="20201112 12:42:02.225"></status>
</kw>
<msg timestamp="20201112 12:42:02.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.210" endtime="20201112 12:42:02.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.226" endtime="20201112 12:42:02.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.229" endtime="20201112 12:42:02.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.207" endtime="20201112 12:42:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.205" endtime="20201112 12:42:02.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.239" endtime="20201112 12:42:02.525"></status>
</kw>
<msg timestamp="20201112 12:42:02.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.237" endtime="20201112 12:42:02.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.530" endtime="20201112 12:42:02.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.538" endtime="20201112 12:42:02.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.235" endtime="20201112 12:42:02.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.233" endtime="20201112 12:42:02.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.544" level="INFO">${RESULT} = [{'time': 0.018367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.018380625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.541" endtime="20201112 12:42:02.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.558" level="INFO">${OVERHEAD} = {'source_diff': [4.388999999997006e-06, 4.444000000002751e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.402000000000572e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:02.545" endtime="20201112 12:42:02.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.562" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:02.561" endtime="20201112 12:42:02.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.564" level="INFO">VALUE: [4.388999999997006e-06, 4.444000000002751e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.388999999997006e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.36200000000081e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.563" endtime="20201112 12:42:02.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.559" endtime="20201112 12:42:02.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.568" endtime="20201112 12:42:02.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.571" endtime="20201112 12:42:02.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.570" endtime="20201112 12:42:02.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.566" endtime="20201112 12:42:02.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.204" endtime="20201112 12:42:02.592"></status>
</kw>
<msg timestamp="20201112 12:42:02.592" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.600" endtime="20201112 12:42:02.616"></status>
</kw>
<msg timestamp="20201112 12:42:02.617" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.598" endtime="20201112 12:42:02.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.618" endtime="20201112 12:42:02.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.620" endtime="20201112 12:42:02.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.596" endtime="20201112 12:42:02.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.594" endtime="20201112 12:42:02.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.629" endtime="20201112 12:42:02.916"></status>
</kw>
<msg timestamp="20201112 12:42:02.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.628" endtime="20201112 12:42:02.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.920" endtime="20201112 12:42:02.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.928" endtime="20201112 12:42:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.625" endtime="20201112 12:42:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.624" endtime="20201112 12:42:02.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.935" level="INFO">${RESULT} = [{'time': 0.021536444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.021547458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.932" endtime="20201112 12:42:02.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.948" level="INFO">${OVERHEAD} = {'source_diff': [4.429999999999712e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.401999999997103e-06, 4.403000000000046e-06...</msg>
<status status="PASS" starttime="20201112 12:42:02.936" endtime="20201112 12:42:02.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.952" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:02.951" endtime="20201112 12:42:02.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.955" level="INFO">VALUE: [4.429999999999712e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.458999999998325e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.401999999997103e-06, 4.388000000001002e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.953" endtime="20201112 12:42:02.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.949" endtime="20201112 12:42:02.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.958" endtime="20201112 12:42:02.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.962" endtime="20201112 12:42:02.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.960" endtime="20201112 12:42:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.957" endtime="20201112 12:42:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.593" endtime="20201112 12:42:02.983"></status>
</kw>
<msg timestamp="20201112 12:42:02.983" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.990" endtime="20201112 12:42:03.008"></status>
</kw>
<msg timestamp="20201112 12:42:03.009" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.989" endtime="20201112 12:42:03.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.010" endtime="20201112 12:42:03.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.012" endtime="20201112 12:42:03.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.986" endtime="20201112 12:42:03.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.985" endtime="20201112 12:42:03.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.021" endtime="20201112 12:42:03.306"></status>
</kw>
<msg timestamp="20201112 12:42:03.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.019" endtime="20201112 12:42:03.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.310" endtime="20201112 12:42:03.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.319" endtime="20201112 12:42:03.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.017" endtime="20201112 12:42:03.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.015" endtime="20201112 12:42:03.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.325" level="INFO">${RESULT} = [{'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.022794361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:03.322" endtime="20201112 12:42:03.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.340" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:03.326" endtime="20201112 12:42:03.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.344" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:03.343" endtime="20201112 12:42:03.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.347" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.34800000000124e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.34800000000124e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.402000000000572e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.345" endtime="20201112 12:42:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.341" endtime="20201112 12:42:03.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.350" endtime="20201112 12:42:03.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.354" endtime="20201112 12:42:03.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.352" endtime="20201112 12:42:03.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.349" endtime="20201112 12:42:03.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.983" endtime="20201112 12:42:03.374"></status>
</kw>
<msg timestamp="20201112 12:42:03.375" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.382" endtime="20201112 12:42:03.402"></status>
</kw>
<msg timestamp="20201112 12:42:03.403" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.381" endtime="20201112 12:42:03.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.405" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.404" endtime="20201112 12:42:03.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.406" endtime="20201112 12:42:03.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.378" endtime="20201112 12:42:03.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.376" endtime="20201112 12:42:03.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.416" endtime="20201112 12:42:03.703"></status>
</kw>
<msg timestamp="20201112 12:42:03.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.414" endtime="20201112 12:42:03.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.707" endtime="20201112 12:42:03.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.716" endtime="20201112 12:42:03.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.411" endtime="20201112 12:42:03.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.410" endtime="20201112 12:42:03.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.722" level="INFO">${RESULT} = [{'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.0228825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:03.719" endtime="20201112 12:42:03.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.736" level="INFO">${OVERHEAD} = {'source_diff': [4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.3339999999982e-06, 4.361000000001336e-06, 4...</msg>
<status status="PASS" starttime="20201112 12:42:03.723" endtime="20201112 12:42:03.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.740" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:03.739" endtime="20201112 12:42:03.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.742" level="INFO">VALUE: [4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.3339999999982e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.332999999998727e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.487000000000935e-06, 4.4449999999987555e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.741" endtime="20201112 12:42:03.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.736" endtime="20201112 12:42:03.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.746" endtime="20201112 12:42:03.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.749" endtime="20201112 12:42:03.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.748" endtime="20201112 12:42:03.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.744" endtime="20201112 12:42:03.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.375" endtime="20201112 12:42:03.770"></status>
</kw>
<msg timestamp="20201112 12:42:03.770" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.778" endtime="20201112 12:42:03.792"></status>
</kw>
<msg timestamp="20201112 12:42:03.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.776" endtime="20201112 12:42:03.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.794" endtime="20201112 12:42:03.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.796" endtime="20201112 12:42:03.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.774" endtime="20201112 12:42:03.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.772" endtime="20201112 12:42:03.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.805" endtime="20201112 12:42:04.090"></status>
</kw>
<msg timestamp="20201112 12:42:04.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019118778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.804" endtime="20201112 12:42:04.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019118778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.094" endtime="20201112 12:42:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.103" endtime="20201112 12:42:04.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.801" endtime="20201112 12:42:04.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.799" endtime="20201112 12:42:04.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.109" level="INFO">${RESULT} = [{'time': 0.019118778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019130139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.106" endtime="20201112 12:42:04.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.123" level="INFO">${OVERHEAD} = {'source_diff': [4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:04.110" endtime="20201112 12:42:04.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:04.126" endtime="20201112 12:42:04.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.129" level="INFO">VALUE: [4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.417000000003085e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.3199999999986305e-06, 4.389000000000476e-06, 4.415999999996673e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.128" endtime="20201112 12:42:04.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.123" endtime="20201112 12:42:04.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.133" endtime="20201112 12:42:04.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.136" endtime="20201112 12:42:04.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.135" endtime="20201112 12:42:04.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.131" endtime="20201112 12:42:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.771" endtime="20201112 12:42:04.157"></status>
</kw>
<msg timestamp="20201112 12:42:04.157" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.165" endtime="20201112 12:42:04.179"></status>
</kw>
<msg timestamp="20201112 12:42:04.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.163" endtime="20201112 12:42:04.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.180" endtime="20201112 12:42:04.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.183" endtime="20201112 12:42:04.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.161" endtime="20201112 12:42:04.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.159" endtime="20201112 12:42:04.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.191" endtime="20201112 12:42:04.476"></status>
</kw>
<msg timestamp="20201112 12:42:04.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018933389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.190" endtime="20201112 12:42:04.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018933389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.480" endtime="20201112 12:42:04.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.488" endtime="20201112 12:42:04.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.188" endtime="20201112 12:42:04.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.186" endtime="20201112 12:42:04.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.495" level="INFO">${RESULT} = [{'time': 0.018937792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018949986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.491" endtime="20201112 12:42:04.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.508" level="INFO">${OVERHEAD} = {'source_diff': [4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.4449999999987555e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06...</msg>
<status status="PASS" starttime="20201112 12:42:04.496" endtime="20201112 12:42:04.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.512" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:04.511" endtime="20201112 12:42:04.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.515" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.4449999999987555e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.415999999996673e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.513" endtime="20201112 12:42:04.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.509" endtime="20201112 12:42:04.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.518" endtime="20201112 12:42:04.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.522" endtime="20201112 12:42:04.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.520" endtime="20201112 12:42:04.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.517" endtime="20201112 12:42:04.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.158" endtime="20201112 12:42:04.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.719" endtime="20201112 12:42:04.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.547" endtime="20201112 12:42:04.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.545" endtime="20201112 12:42:04.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.544" endtime="20201112 12:42:04.568"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:56.640" endtime="20201112 12:42:04.568" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.575" endtime="20201112 12:42:04.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.574" endtime="20201112 12:42:04.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.608" endtime="20201112 12:42:04.632"></status>
</kw>
<msg timestamp="20201112 12:42:04.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.606" endtime="20201112 12:42:04.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.634" endtime="20201112 12:42:04.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.638" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:04.636" endtime="20201112 12:42:04.639"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:04.604" endtime="20201112 12:42:04.639"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:04.601" endtime="20201112 12:42:04.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.600" endtime="20201112 12:42:04.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:04.644" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:04.643" endtime="20201112 12:42:04.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.641" endtime="20201112 12:42:04.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.600" endtime="20201112 12:42:04.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.599" endtime="20201112 12:42:04.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.646" endtime="20201112 12:42:04.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.598" endtime="20201112 12:42:04.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.596" endtime="20201112 12:42:04.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.572" endtime="20201112 12:42:04.648"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.657" endtime="20201112 12:42:04.678"></status>
</kw>
<msg timestamp="20201112 12:42:04.678" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.656" endtime="20201112 12:42:04.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.681" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.680" endtime="20201112 12:42:04.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.682" endtime="20201112 12:42:04.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.653" endtime="20201112 12:42:04.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.651" endtime="20201112 12:42:04.685"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.687" endtime="20201112 12:42:04.689"></status>
</kw>
<msg timestamp="20201112 12:42:04.689" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:04.686" endtime="20201112 12:42:04.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.693" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:04.692" endtime="20201112 12:42:04.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.695" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:04.694" endtime="20201112 12:42:04.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.690" endtime="20201112 12:42:04.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.700" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:04.699" endtime="20201112 12:42:04.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.702" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:04.701" endtime="20201112 12:42:04.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.696" endtime="20201112 12:42:04.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.709" endtime="20201112 12:42:04.998"></status>
</kw>
<msg timestamp="20201112 12:42:05.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073172653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.708" endtime="20201112 12:42:05.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073172653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.002" endtime="20201112 12:42:05.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.011" endtime="20201112 12:42:05.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.705" endtime="20201112 12:42:05.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.703" endtime="20201112 12:42:05.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.017" level="INFO">${RESULT} = [{'time': 0.073172653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.073190292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.014" endtime="20201112 12:42:05.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.031" level="INFO">${OVERHEAD} = {'source_diff': [7.833999999998231e-06, 8.000000000008e-06, 7.987000000000966e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7....</msg>
<status status="PASS" starttime="20201112 12:42:05.019" endtime="20201112 12:42:05.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.035" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:05.034" endtime="20201112 12:42:05.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.038" level="INFO">VALUE: [7.833999999998231e-06, 8.000000000008e-06, 7.987000000000966e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.973000000008335e-06, 7.987000000000966e-06, 7.944000000009721e-06, 7.999999999994123e-06, 7.971999999994983e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.999999999994123e-06, 7.958000000002352e-06, 7.915999999996703e-06, 8.000000000008e-06, 7.971999999994983e-06, 8.014000000000632e-06, 7.973000000008335e-06, 7.958000000002352e-06, 7.971999999994983e-06, 7.971999999994983e-06, 7.930000000003212e-06, 7.945000000009195e-06, 7.958000000002352e-06, 7.999999999994123e-06, 7.971999999994983e-06, 7.971999999994983e-06, 7.972999999994457e-06, 7.972000000008861e-06, 7.972000000008861e-06, 8.026999999993789e-06, 7.889000000010915e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.972000000008861e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.971999999994983e-06, 7.931000000002686e-06, 7.973000000008335e-06, 7.971999999994983e-06, 7.987000000000966e-06, 7.972999999994457e-06, 7.972999999994457e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.037" endtime="20201112 12:42:05.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.032" endtime="20201112 12:42:05.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.041" endtime="20201112 12:42:05.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.045" endtime="20201112 12:42:05.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.043" endtime="20201112 12:42:05.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.040" endtime="20201112 12:42:05.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.649" endtime="20201112 12:42:05.066"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:04.570" endtime="20201112 12:42:05.067" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.074" endtime="20201112 12:42:05.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.072" endtime="20201112 12:42:05.094"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.108" endtime="20201112 12:42:05.128"></status>
</kw>
<msg timestamp="20201112 12:42:05.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.105" endtime="20201112 12:42:05.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.130" endtime="20201112 12:42:05.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.134" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:05.132" endtime="20201112 12:42:05.135"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.103" endtime="20201112 12:42:05.135"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.100" endtime="20201112 12:42:05.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.099" endtime="20201112 12:42:05.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:05.140" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:05.139" endtime="20201112 12:42:05.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.137" endtime="20201112 12:42:05.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.098" endtime="20201112 12:42:05.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.098" endtime="20201112 12:42:05.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.142" endtime="20201112 12:42:05.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.096" endtime="20201112 12:42:05.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.095" endtime="20201112 12:42:05.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.071" endtime="20201112 12:42:05.144"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.154" endtime="20201112 12:42:05.236"></status>
</kw>
<msg timestamp="20201112 12:42:05.236" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.152" endtime="20201112 12:42:05.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.239" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.237" endtime="20201112 12:42:05.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.240" endtime="20201112 12:42:05.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.149" endtime="20201112 12:42:05.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.147" endtime="20201112 12:42:05.242"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.244" endtime="20201112 12:42:05.246"></status>
</kw>
<msg timestamp="20201112 12:42:05.246" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:05.243" endtime="20201112 12:42:05.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.251" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:05.249" endtime="20201112 12:42:05.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.253" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:05.252" endtime="20201112 12:42:05.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.247" endtime="20201112 12:42:05.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.257" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:05.256" endtime="20201112 12:42:05.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.259" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:05.258" endtime="20201112 12:42:05.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.254" endtime="20201112 12:42:05.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.267" endtime="20201112 12:42:05.560"></status>
</kw>
<msg timestamp="20201112 12:42:05.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073100819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.265" endtime="20201112 12:42:05.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073100819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.564" endtime="20201112 12:42:05.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.572" endtime="20201112 12:42:05.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.262" endtime="20201112 12:42:05.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.261" endtime="20201112 12:42:05.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.579" level="INFO">${RESULT} = [{'time': 0.073100819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.145799999999422e-05, 'source_diff': 4.145799999999422e-05}, {'time': 0.074342569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.575" endtime="20201112 12:42:05.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.592" level="INFO">${OVERHEAD} = {'source_diff': [4.145799999999422e-05, 4.138800000000331e-05, 4.138899999998891e-05, 4.148599999999336e-05, 4.144400000000159e-05, 4.145799999999422e-05, 4.1417000000001924e-05, 4.148599999999336e-05...</msg>
<status status="PASS" starttime="20201112 12:42:05.580" endtime="20201112 12:42:05.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.603" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:05.602" endtime="20201112 12:42:05.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.605" level="INFO">VALUE: [4.145799999999422e-05, 4.138800000000331e-05, 4.138899999998891e-05, 4.148599999999336e-05, 4.144400000000159e-05, 4.145799999999422e-05, 4.1417000000001924e-05, 4.148599999999336e-05, 4.149999999999987e-05, 4.1445000000001064e-05, 4.151400000000638e-05, 4.1430999999994556e-05, 4.1389000000002785e-05, 4.144400000000159e-05, 4.1417000000001924e-05, 4.147200000000073e-05, 4.141600000000245e-05, 4.144400000000159e-05, 4.141600000000245e-05, 4.14580000000081e-05, 4.147200000000073e-05, 4.147200000000073e-05, 4.1403000000009293e-05, 4.143100000000843e-05, 4.149999999999987e-05, 4.1402999999995416e-05, 4.149999999999987e-05, 4.147200000000073e-05, 4.142999999999508e-05, 4.151400000000638e-05, 4.148600000000724e-05, 4.142999999999508e-05, 4.136199999998924e-05, 4.148600000000724e-05, 4.1445000000001064e-05, 4.140200000000982e-05, 4.140199999999594e-05, 4.145799999999422e-05, 4.147200000000073e-05, 4.147200000000073e-05, 4.145799999999422e-05, 4.148599999999336e-05, 4.145799999999422e-05, 4.130499999999149e-05, 4.1402999999995416e-05, 4.1445000000001064e-05, 4.1458999999993695e-05, 4.147300000001408e-05, 4.1389000000002785e-05, 4.13749999999824e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.604" endtime="20201112 12:42:05.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.599" endtime="20201112 12:42:05.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.608" endtime="20201112 12:42:05.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.612" endtime="20201112 12:42:05.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.610" endtime="20201112 12:42:05.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.607" endtime="20201112 12:42:05.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.145" endtime="20201112 12:42:05.632"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:05.068" endtime="20201112 12:42:05.633" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.640" endtime="20201112 12:42:05.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.639" endtime="20201112 12:42:05.661"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.674" endtime="20201112 12:42:05.692"></status>
</kw>
<msg timestamp="20201112 12:42:05.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.672" endtime="20201112 12:42:05.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.693" endtime="20201112 12:42:05.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.698" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:05.696" endtime="20201112 12:42:05.698"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.669" endtime="20201112 12:42:05.698"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.667" endtime="20201112 12:42:05.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.666" endtime="20201112 12:42:05.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:05.703" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:05.702" endtime="20201112 12:42:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.700" endtime="20201112 12:42:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.665" endtime="20201112 12:42:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.664" endtime="20201112 12:42:05.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.705" endtime="20201112 12:42:05.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.663" endtime="20201112 12:42:05.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.661" endtime="20201112 12:42:05.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.638" endtime="20201112 12:42:05.708"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.717" endtime="20201112 12:42:05.953"></status>
</kw>
<msg timestamp="20201112 12:42:05.953" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.715" endtime="20201112 12:42:05.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.956" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.954" endtime="20201112 12:42:05.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.957" endtime="20201112 12:42:05.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.713" endtime="20201112 12:42:05.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.711" endtime="20201112 12:42:05.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.962" endtime="20201112 12:42:05.963"></status>
</kw>
<msg timestamp="20201112 12:42:05.964" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:05.960" endtime="20201112 12:42:05.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.968" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:05.967" endtime="20201112 12:42:05.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.970" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:05.969" endtime="20201112 12:42:05.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.965" endtime="20201112 12:42:05.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.975" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:05.974" endtime="20201112 12:42:05.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.977" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:05.976" endtime="20201112 12:42:05.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.971" endtime="20201112 12:42:05.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.985" endtime="20201112 12:42:06.276"></status>
</kw>
<msg timestamp="20201112 12:42:06.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071978333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072055194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.982" endtime="20201112 12:42:06.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071978333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072055194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.280" endtime="20201112 12:42:06.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.288" endtime="20201112 12:42:06.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.980" endtime="20201112 12:42:06.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.978" endtime="20201112 12:42:06.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.295" level="INFO">${RESULT} = [{'time': 0.072055194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.686099999999751e-05, 'source_diff': 7.686099999999751e-05}, {'time': 0.076362569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:06.291" endtime="20201112 12:42:06.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.309" level="INFO">${OVERHEAD} = {'source_diff': [7.686099999999751e-05, 7.62910000000061e-05, 7.629200000000558e-05, 7.606999999999753e-05, 7.634800000000386e-05, 7.636100000001089e-05, 7.636099999999701e-05, 7.644399999999496e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:06.296" endtime="20201112 12:42:06.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.313" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:06.312" endtime="20201112 12:42:06.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.316" level="INFO">VALUE: [7.686099999999751e-05, 7.62910000000061e-05, 7.629200000000558e-05, 7.606999999999753e-05, 7.634800000000386e-05, 7.636100000001089e-05, 7.636099999999701e-05, 7.644399999999496e-05, 7.630499999999873e-05, 7.633299999999787e-05, 7.613900000000284e-05, 7.637499999998965e-05, 7.634700000000438e-05, 7.629199999997782e-05, 7.631899999999137e-05, 7.601400000001313e-05, 7.627800000001295e-05, 7.624999999999993e-05, 7.62910000000061e-05, 7.626399999999256e-05, 7.627800000001295e-05, 7.627700000001347e-05, 7.63750000000174e-05, 7.633400000001123e-05, 7.606899999998418e-05, 7.627800000001295e-05, 7.63750000000174e-05, 7.624999999999993e-05, 7.634700000000438e-05, 7.627800000001295e-05, 7.629200000000558e-05, 7.627800000001295e-05, 7.602800000000576e-05, 7.62360000000073e-05, 7.6332999999984e-05, 7.627699999998572e-05, 7.630599999999821e-05, 7.640200000000319e-05, 7.636099999999701e-05, 7.63750000000174e-05, 7.627699999998572e-05, 7.60550000000193e-05, 7.624999999999993e-05, 7.626399999999256e-05, 7.622299999998638e-05, 7.634800000000386e-05, 7.601400000001313e-05, 7.636099999996926e-05, 7.631899999999137e-05, 7.633300000003951e-05]</msg>
<status status="PASS" starttime="20201112 12:42:06.315" endtime="20201112 12:42:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.310" endtime="20201112 12:42:06.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.319" endtime="20201112 12:42:06.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.323" endtime="20201112 12:42:06.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.321" endtime="20201112 12:42:06.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.318" endtime="20201112 12:42:06.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.709" endtime="20201112 12:42:06.343"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:05.635" endtime="20201112 12:42:06.344" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.351" endtime="20201112 12:42:06.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.350" endtime="20201112 12:42:06.371"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.385" endtime="20201112 12:42:06.406"></status>
</kw>
<msg timestamp="20201112 12:42:06.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.384" endtime="20201112 12:42:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.409" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.408" endtime="20201112 12:42:06.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:06.410" endtime="20201112 12:42:06.412"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:06.380" endtime="20201112 12:42:06.413"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:06.378" endtime="20201112 12:42:06.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.377" endtime="20201112 12:42:06.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:06.420" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:06.419" endtime="20201112 12:42:06.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.415" endtime="20201112 12:42:06.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.376" endtime="20201112 12:42:06.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.375" endtime="20201112 12:42:06.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.425" endtime="20201112 12:42:06.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.374" endtime="20201112 12:42:06.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.372" endtime="20201112 12:42:06.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.349" endtime="20201112 12:42:06.430"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.449" endtime="20201112 12:42:06.478"></status>
</kw>
<msg timestamp="20201112 12:42:06.479" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.445" endtime="20201112 12:42:06.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.484" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.481" endtime="20201112 12:42:06.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.487" endtime="20201112 12:42:06.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.440" endtime="20201112 12:42:06.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.435" endtime="20201112 12:42:06.492"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.497" endtime="20201112 12:42:06.500"></status>
</kw>
<msg timestamp="20201112 12:42:06.501" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:06.494" endtime="20201112 12:42:06.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.509" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:06.507" endtime="20201112 12:42:06.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.513" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:06.511" endtime="20201112 12:42:06.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.502" endtime="20201112 12:42:06.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.520" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:06.519" endtime="20201112 12:42:06.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.522" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:06.521" endtime="20201112 12:42:06.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.516" endtime="20201112 12:42:06.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.532" endtime="20201112 12:42:06.826"></status>
</kw>
<msg timestamp="20201112 12:42:06.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090926625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090928097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.531" endtime="20201112 12:42:06.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090926625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090928097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.830" endtime="20201112 12:42:06.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.838" endtime="20201112 12:42:06.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.525" endtime="20201112 12:42:06.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.523" endtime="20201112 12:42:06.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.845" level="INFO">${RESULT} = [{'time': 0.090928097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.090942792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.842" endtime="20201112 12:42:06.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.859" level="INFO">${OVERHEAD} = {'source_diff': [1.4720000000023603e-06, 1.4729999999879562e-06, 1.4450000000026941e-06, 1.4859999999949913e-06, 1.4589999999953251e-06, 1.473000000001834e-06, 1.4589999999953251e-06, 1.47300000000183...</msg>
<status status="PASS" starttime="20201112 12:42:06.846" endtime="20201112 12:42:06.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.863" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:06.862" endtime="20201112 12:42:06.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.866" level="INFO">VALUE: [1.4720000000023603e-06, 1.4729999999879562e-06, 1.4450000000026941e-06, 1.4859999999949913e-06, 1.4589999999953251e-06, 1.473000000001834e-06, 1.4589999999953251e-06, 1.473000000001834e-06, 1.5000000000015001e-06, 1.541999999993271e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.4580000000097293e-06, 1.5000000000015001e-06, 1.4720000000023603e-06, 1.4450000000026941e-06, 1.4859999999949913e-06, 1.4310000000100631e-06, 1.4580000000097293e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.4860000000088691e-06, 1.4719999999884825e-06, 1.473000000001834e-06, 1.4720000000023603e-06, 1.4580000000097293e-06, 1.459000000009203e-06, 1.4580000000097293e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.4860000000088691e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.4720000000023603e-06, 1.514000000008009e-06, 1.4999999999876223e-06, 1.5000000000015001e-06, 1.4859999999949913e-06, 1.4580000000097293e-06, 1.4860000000088691e-06, 1.4720000000023603e-06, 1.4579999999958515e-06, 1.4860000000088691e-06, 1.473000000001834e-06, 1.541999999993271e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4580000000097293e-06]</msg>
<status status="PASS" starttime="20201112 12:42:06.864" endtime="20201112 12:42:06.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.859" endtime="20201112 12:42:06.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.869" endtime="20201112 12:42:06.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.872" endtime="20201112 12:42:06.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.871" endtime="20201112 12:42:06.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.867" endtime="20201112 12:42:06.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.432" endtime="20201112 12:42:06.893"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:06.346" endtime="20201112 12:42:06.894" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.901" endtime="20201112 12:42:06.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.899" endtime="20201112 12:42:06.921"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.935" endtime="20201112 12:42:06.953"></status>
</kw>
<msg timestamp="20201112 12:42:06.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.933" endtime="20201112 12:42:06.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.956" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.955" endtime="20201112 12:42:06.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.959" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:06.957" endtime="20201112 12:42:06.959"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:06.930" endtime="20201112 12:42:06.960"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:06.927" endtime="20201112 12:42:06.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.926" endtime="20201112 12:42:06.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:06.965" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:06.964" endtime="20201112 12:42:06.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.962" endtime="20201112 12:42:06.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.925" endtime="20201112 12:42:06.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.925" endtime="20201112 12:42:06.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.967" endtime="20201112 12:42:06.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.923" endtime="20201112 12:42:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.922" endtime="20201112 12:42:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.898" endtime="20201112 12:42:06.970"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.978" endtime="20201112 12:42:07.063"></status>
</kw>
<msg timestamp="20201112 12:42:07.063" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.977" endtime="20201112 12:42:07.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.066" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.064" endtime="20201112 12:42:07.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.067" endtime="20201112 12:42:07.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.974" endtime="20201112 12:42:07.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.972" endtime="20201112 12:42:07.070"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.072" endtime="20201112 12:42:07.073"></status>
</kw>
<msg timestamp="20201112 12:42:07.074" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:07.070" endtime="20201112 12:42:07.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.078" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:07.077" endtime="20201112 12:42:07.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.080" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:07.079" endtime="20201112 12:42:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.074" endtime="20201112 12:42:07.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.084" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:07.083" endtime="20201112 12:42:07.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.086" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:07.086" endtime="20201112 12:42:07.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.081" endtime="20201112 12:42:07.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.095" endtime="20201112 12:42:07.386"></status>
</kw>
<msg timestamp="20201112 12:42:07.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070197931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070210611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.092" endtime="20201112 12:42:07.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070197931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070210611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.390" endtime="20201112 12:42:07.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.399" endtime="20201112 12:42:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.090" endtime="20201112 12:42:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.088" endtime="20201112 12:42:07.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.406" level="INFO">${RESULT} = [{'time': 0.070210611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.071462042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:07.402" endtime="20201112 12:42:07.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.419" level="INFO">${OVERHEAD} = {'source_diff': [1.2680000000001024e-05, 1.2667000000007866e-05, 1.2695000000007006e-05, 1.2694000000007533e-05, 1.2681000000000497e-05, 1.2680000000001024e-05, 1.2763999999998443e-05, 1.2736999999998...</msg>
<status status="PASS" starttime="20201112 12:42:07.407" endtime="20201112 12:42:07.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.424" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:07.423" endtime="20201112 12:42:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.426" level="INFO">VALUE: [1.2680000000001024e-05, 1.2667000000007866e-05, 1.2695000000007006e-05, 1.2694000000007533e-05, 1.2681000000000497e-05, 1.2680000000001024e-05, 1.2763999999998443e-05, 1.2736999999998777e-05, 1.2666999999993989e-05, 1.2639000000008727e-05, 1.2625000000002218e-05, 1.2681000000000497e-05, 1.2695000000007006e-05, 1.2653000000001358e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2693999999993655e-05, 1.2653000000001358e-05, 1.2693999999993655e-05, 1.2722000000006672e-05, 1.2679999999987146e-05, 1.2680000000001024e-05, 1.2694000000007533e-05, 1.2708999999999637e-05, 1.2694999999993128e-05, 1.2694000000007533e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.2681000000000497e-05, 1.2763999999998443e-05, 1.2681000000000497e-05, 1.2708999999999637e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2708999999999637e-05, 1.2694999999993128e-05, 1.2653000000001358e-05, 1.2680000000001024e-05, 1.2681000000000497e-05, 1.2667000000007866e-05, 1.2749999999991934e-05, 1.2708999999999637e-05, 1.2680000000001024e-05, 1.2721999999992795e-05, 1.2695000000007006e-05, 1.2680000000014902e-05, 1.2694000000007533e-05, 1.2708999999999637e-05, 1.2695000000007006e-05, 1.262499999998834e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.425" endtime="20201112 12:42:07.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.420" endtime="20201112 12:42:07.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.429" endtime="20201112 12:42:07.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.433" endtime="20201112 12:42:07.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.431" endtime="20201112 12:42:07.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.428" endtime="20201112 12:42:07.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.970" endtime="20201112 12:42:07.454"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:06.895" endtime="20201112 12:42:07.455" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.463" endtime="20201112 12:42:07.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.461" endtime="20201112 12:42:07.483"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.497" endtime="20201112 12:42:07.515"></status>
</kw>
<msg timestamp="20201112 12:42:07.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.495" endtime="20201112 12:42:07.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.518" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.517" endtime="20201112 12:42:07.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.522" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:07.519" endtime="20201112 12:42:07.522"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:07.492" endtime="20201112 12:42:07.523"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:07.490" endtime="20201112 12:42:07.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.488" endtime="20201112 12:42:07.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:07.527" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:07.527" endtime="20201112 12:42:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.525" endtime="20201112 12:42:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.488" endtime="20201112 12:42:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.487" endtime="20201112 12:42:07.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.529" endtime="20201112 12:42:07.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.486" endtime="20201112 12:42:07.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.484" endtime="20201112 12:42:07.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.460" endtime="20201112 12:42:07.532"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.541" endtime="20201112 12:42:07.780"></status>
</kw>
<msg timestamp="20201112 12:42:07.780" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.540" endtime="20201112 12:42:07.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.783" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.781" endtime="20201112 12:42:07.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.784" endtime="20201112 12:42:07.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.537" endtime="20201112 12:42:07.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.535" endtime="20201112 12:42:07.786"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.789" endtime="20201112 12:42:07.790"></status>
</kw>
<msg timestamp="20201112 12:42:07.791" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:07.787" endtime="20201112 12:42:07.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.795" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:07.794" endtime="20201112 12:42:07.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.797" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:07.796" endtime="20201112 12:42:07.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.791" endtime="20201112 12:42:07.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.801" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:07.800" endtime="20201112 12:42:07.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.803" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:07.803" endtime="20201112 12:42:07.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.798" endtime="20201112 12:42:07.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.811" endtime="20201112 12:42:08.124"></status>
</kw>
<msg timestamp="20201112 12:42:08.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073741194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.809" endtime="20201112 12:42:08.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073741194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.128" endtime="20201112 12:42:08.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.136" endtime="20201112 12:42:08.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.807" endtime="20201112 12:42:08.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.805" endtime="20201112 12:42:08.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.143" level="INFO">${RESULT} = [{'time': 0.073741194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4137999999993e-05, 'source_diff': 2.4137999999993e-05}, {'time': 0.078077167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201112 12:42:08.140" endtime="20201112 12:42:08.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.156" level="INFO">${OVERHEAD} = {'source_diff': [2.4137999999993e-05, 2.412499999999984e-05, 2.4083999999993666e-05, 2.408300000000807e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2....</msg>
<status status="PASS" starttime="20201112 12:42:08.144" endtime="20201112 12:42:08.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.161" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:08.160" endtime="20201112 12:42:08.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.163" level="INFO">VALUE: [2.4137999999993e-05, 2.412499999999984e-05, 2.4083999999993666e-05, 2.408300000000807e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.4194000000005156e-05, 2.4111000000021088e-05, 2.412500000001372e-05, 2.4069999999987157e-05, 2.4111999999992806e-05, 2.413900000000635e-05, 2.4110999999993332e-05, 2.4110999999993332e-05, 2.4124999999985963e-05, 2.40970000000007e-05, 2.408300000000807e-05, 2.4082999999980315e-05, 2.40970000000007e-05, 2.413900000000635e-05, 2.4151999999999507e-05, 2.4055999999994526e-05, 2.41939999999774e-05, 2.4083999999979788e-05, 2.4167000000019367e-05, 2.4068999999987684e-05, 2.4138000000006876e-05, 2.408300000000807e-05, 2.4194999999976874e-05, 2.4111000000021088e-05, 2.415299999999898e-05, 2.4110999999993332e-05, 2.413900000000635e-05, 2.4110999999993332e-05, 2.4139000000034105e-05, 2.4124999999985963e-05, 2.4153000000026736e-05, 2.4138000000006876e-05, 2.4153000000026736e-05, 2.4139000000034105e-05, 2.408300000000807e-05, 2.4138999999978594e-05, 2.4110999999993332e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.162" endtime="20201112 12:42:08.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.157" endtime="20201112 12:42:08.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.167" endtime="20201112 12:42:08.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.170" endtime="20201112 12:42:08.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.169" endtime="20201112 12:42:08.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.165" endtime="20201112 12:42:08.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.533" endtime="20201112 12:42:08.191"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:07.457" endtime="20201112 12:42:08.192" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:46.240" endtime="20201112 12:42:08.199"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.269" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:08.277" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:09.410" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:08.268" endtime="20201112 12:42:09.411"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.413" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:09.412" endtime="20201112 12:42:09.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.267" endtime="20201112 12:42:09.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.416" endtime="20201112 12:42:09.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.415" endtime="20201112 12:42:09.646"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.664" endtime="20201112 12:42:09.681"></status>
</kw>
<msg timestamp="20201112 12:42:09.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.663" endtime="20201112 12:42:09.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.683" endtime="20201112 12:42:09.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:09.685" endtime="20201112 12:42:09.688"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.660" endtime="20201112 12:42:09.689"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.658" endtime="20201112 12:42:09.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.656" endtime="20201112 12:42:09.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:09.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:09.693" endtime="20201112 12:42:09.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.690" endtime="20201112 12:42:09.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.655" endtime="20201112 12:42:09.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.653" endtime="20201112 12:42:09.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.696" endtime="20201112 12:42:09.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.651" endtime="20201112 12:42:09.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.699" endtime="20201112 12:42:09.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.648" endtime="20201112 12:42:09.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.265" endtime="20201112 12:42:09.702"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.708" endtime="20201112 12:42:09.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.707" endtime="20201112 12:42:09.729"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.742" endtime="20201112 12:42:09.764"></status>
</kw>
<msg timestamp="20201112 12:42:09.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.740" endtime="20201112 12:42:09.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.765" endtime="20201112 12:42:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.770" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:09.768" endtime="20201112 12:42:09.770"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.738" endtime="20201112 12:42:09.771"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.735" endtime="20201112 12:42:09.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.734" endtime="20201112 12:42:09.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:09.776" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:09.776" endtime="20201112 12:42:09.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.773" endtime="20201112 12:42:09.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.733" endtime="20201112 12:42:09.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.732" endtime="20201112 12:42:09.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.778" endtime="20201112 12:42:09.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.731" endtime="20201112 12:42:09.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.729" endtime="20201112 12:42:09.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.705" endtime="20201112 12:42:09.781"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.793" endtime="20201112 12:42:09.812"></status>
</kw>
<msg timestamp="20201112 12:42:09.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.791" endtime="20201112 12:42:09.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.813" endtime="20201112 12:42:09.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.816" endtime="20201112 12:42:09.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.788" endtime="20201112 12:42:09.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.785" endtime="20201112 12:42:09.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.826" endtime="20201112 12:42:10.118"></status>
</kw>
<msg timestamp="20201112 12:42:10.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079464708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079470347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.824" endtime="20201112 12:42:10.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079464708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079470347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.122" endtime="20201112 12:42:10.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.131" endtime="20201112 12:42:10.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.821" endtime="20201112 12:42:10.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.819" endtime="20201112 12:42:10.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.138" level="INFO">${RESULT} = [{'time': 0.079470347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.079485764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.134" endtime="20201112 12:42:10.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:10.152" level="INFO">${ACCURACY} = {'source_diff': [5.639000000001726e-06, 5.680999999993497e-06, 5.625000000009095e-06, 5.638999999987848e-06, 5.681000000007375e-06, 5.679999999994023e-06, 5.652999999994357e-06, 5.639000000001726e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:10.139" endtime="20201112 12:42:10.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.157" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:10.155" endtime="20201112 12:42:10.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.159" level="INFO">VALUE: [5.639000000001726e-06, 5.680999999993497e-06, 5.625000000009095e-06, 5.638999999987848e-06, 5.681000000007375e-06, 5.679999999994023e-06, 5.652999999994357e-06, 5.639000000001726e-06, 5.679999999994023e-06, 5.667000000000866e-06, 5.653000000008235e-06, 5.652999999994357e-06, 5.652999999994357e-06, 5.625000000009095e-06, 5.680000000007901e-06, 5.679999999994023e-06, 5.735999999992303e-06, 5.667000000000866e-06, 5.652999999994357e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.681000000007375e-06, 5.666999999986988e-06, 5.721999999999672e-06, 5.679999999994023e-06, 5.597000000009955e-06, 5.625000000009095e-06, 5.583000000003446e-06, 5.651999999994883e-06, 5.666000000001392e-06, 5.679999999994023e-06, 5.652999999994357e-06, 5.680999999993497e-06, 5.653000000008235e-06, 5.652999999994357e-06, 5.694000000000532e-06, 5.680999999993497e-06, 5.709000000006514e-06, 5.666000000001392e-06, 5.653000000008235e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.610999999988708e-06, 5.680999999993497e-06, 5.665999999987514e-06]</msg>
<status status="PASS" starttime="20201112 12:42:10.158" endtime="20201112 12:42:10.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.153" endtime="20201112 12:42:10.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.163" endtime="20201112 12:42:10.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.167" endtime="20201112 12:42:10.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.165" endtime="20201112 12:42:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.161" endtime="20201112 12:42:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.784" endtime="20201112 12:42:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.783" endtime="20201112 12:42:10.188"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.197" endtime="20201112 12:42:10.217"></status>
</kw>
<msg timestamp="20201112 12:42:10.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.195" endtime="20201112 12:42:10.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.219" endtime="20201112 12:42:10.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.221" endtime="20201112 12:42:10.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.192" endtime="20201112 12:42:10.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.190" endtime="20201112 12:42:10.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.231" endtime="20201112 12:42:10.518"></status>
</kw>
<msg timestamp="20201112 12:42:10.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023257597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.229" endtime="20201112 12:42:10.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023257597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.522" endtime="20201112 12:42:10.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.531" endtime="20201112 12:42:10.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.227" endtime="20201112 12:42:10.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.225" endtime="20201112 12:42:10.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.538" level="INFO">${RESULT} = [{'time': 0.023257597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.023272708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.535" endtime="20201112 12:42:10.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:10.552" level="INFO">${ACCURACY} = {'source_diff': [5.625000000002156e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.637999999998783e-06, 5.708000000000102e-06, 5.666999999997396e-06, 5.666000000001392e-06, 5.667000000000866e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:10.539" endtime="20201112 12:42:10.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.557" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:10.556" endtime="20201112 12:42:10.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.560" level="INFO">VALUE: [5.625000000002156e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.637999999998783e-06, 5.708000000000102e-06, 5.666999999997396e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.651999999998353e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.5979999999990204e-06, 5.666999999997396e-06, 5.625000000002156e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.666000000001392e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.6529999999978264e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.665999999997923e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.722000000003141e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201112 12:42:10.558" endtime="20201112 12:42:10.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.553" endtime="20201112 12:42:10.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.563" endtime="20201112 12:42:10.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.567" endtime="20201112 12:42:10.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.565" endtime="20201112 12:42:10.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.562" endtime="20201112 12:42:10.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.189" endtime="20201112 12:42:10.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.188" endtime="20201112 12:42:10.588"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.597" endtime="20201112 12:42:10.616"></status>
</kw>
<msg timestamp="20201112 12:42:10.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.595" endtime="20201112 12:42:10.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.618" endtime="20201112 12:42:10.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.620" endtime="20201112 12:42:10.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.593" endtime="20201112 12:42:10.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.590" endtime="20201112 12:42:10.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.631" endtime="20201112 12:42:10.918"></status>
</kw>
<msg timestamp="20201112 12:42:10.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.629" endtime="20201112 12:42:10.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.922" endtime="20201112 12:42:10.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.931" endtime="20201112 12:42:10.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.627" endtime="20201112 12:42:10.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.625" endtime="20201112 12:42:10.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.938" level="INFO">${RESULT} = [{'time': 0.024903042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.024917833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.935" endtime="20201112 12:42:10.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:10.952" level="INFO">${ACCURACY} = {'source_diff': [5.667000000000866e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.681000000000436e-06, 5.666000000001392e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:10.939" endtime="20201112 12:42:10.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.957" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:10.956" endtime="20201112 12:42:10.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.959" level="INFO">VALUE: [5.667000000000866e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.721999999999672e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.582999999999977e-06, 5.679999999997493e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.680999999996966e-06, 5.666000000001392e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.5979999999990204e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.665999999997923e-06, 5.6529999999978264e-06, 5.666000000001392e-06, 5.666999999997396e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:10.958" endtime="20201112 12:42:10.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.953" endtime="20201112 12:42:10.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.970" endtime="20201112 12:42:10.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.973" endtime="20201112 12:42:10.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.972" endtime="20201112 12:42:10.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.968" endtime="20201112 12:42:10.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.589" endtime="20201112 12:42:10.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.588" endtime="20201112 12:42:10.995"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.004" endtime="20201112 12:42:11.023"></status>
</kw>
<msg timestamp="20201112 12:42:11.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.002" endtime="20201112 12:42:11.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.024" endtime="20201112 12:42:11.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.027" endtime="20201112 12:42:11.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.999" endtime="20201112 12:42:11.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.997" endtime="20201112 12:42:11.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.037" endtime="20201112 12:42:11.325"></status>
</kw>
<msg timestamp="20201112 12:42:11.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.036" endtime="20201112 12:42:11.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.329" endtime="20201112 12:42:11.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.338" endtime="20201112 12:42:11.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.033" endtime="20201112 12:42:11.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.031" endtime="20201112 12:42:11.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.345" level="INFO">${RESULT} = [{'time': 0.025019486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.025033139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:11.341" endtime="20201112 12:42:11.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.360" level="INFO">${ACCURACY} = {'source_diff': [5.653000000001296e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.681000000000436e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:11.346" endtime="20201112 12:42:11.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.365" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.364" endtime="20201112 12:42:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.368" level="INFO">VALUE: [5.653000000001296e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.666999999997396e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.665999999997923e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.666999999997396e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.680999999996966e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.679999999997493e-06, 5.667000000000866e-06, 5.652000000001822e-06, 5.666000000001392e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.59800000000249e-06, 5.653000000001296e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201112 12:42:11.366" endtime="20201112 12:42:11.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.361" endtime="20201112 12:42:11.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.372" endtime="20201112 12:42:11.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.376" endtime="20201112 12:42:11.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.374" endtime="20201112 12:42:11.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.370" endtime="20201112 12:42:11.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.996" endtime="20201112 12:42:11.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.995" endtime="20201112 12:42:11.397"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.406" endtime="20201112 12:42:11.428"></status>
</kw>
<msg timestamp="20201112 12:42:11.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.405" endtime="20201112 12:42:11.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.430" endtime="20201112 12:42:11.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.433" endtime="20201112 12:42:11.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.402" endtime="20201112 12:42:11.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.400" endtime="20201112 12:42:11.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.443" endtime="20201112 12:42:11.728"></status>
</kw>
<msg timestamp="20201112 12:42:11.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024355306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.442" endtime="20201112 12:42:11.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024355306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.733" endtime="20201112 12:42:11.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.741" endtime="20201112 12:42:11.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.439" endtime="20201112 12:42:11.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.437" endtime="20201112 12:42:11.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.748" level="INFO">${RESULT} = [{'time': 0.024361014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.024372972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:11.745" endtime="20201112 12:42:11.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.762" level="INFO">${ACCURACY} = {'source_diff': [5.708000000000102e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.665999999997923e-06, 5.653000000001296e-06...</msg>
<status status="PASS" starttime="20201112 12:42:11.749" endtime="20201112 12:42:11.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.767" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.766" endtime="20201112 12:42:11.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.769" level="INFO">VALUE: [5.708000000000102e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.679999999997493e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.611000000002586e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.680000000000962e-06]</msg>
<status status="PASS" starttime="20201112 12:42:11.768" endtime="20201112 12:42:11.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.763" endtime="20201112 12:42:11.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.773" endtime="20201112 12:42:11.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.777" endtime="20201112 12:42:11.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.775" endtime="20201112 12:42:11.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.771" endtime="20201112 12:42:11.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.398" endtime="20201112 12:42:11.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.398" endtime="20201112 12:42:11.798"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.807" endtime="20201112 12:42:11.822"></status>
</kw>
<msg timestamp="20201112 12:42:11.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.805" endtime="20201112 12:42:11.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.824" endtime="20201112 12:42:11.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.826" endtime="20201112 12:42:11.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.803" endtime="20201112 12:42:11.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.801" endtime="20201112 12:42:11.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.837" endtime="20201112 12:42:12.123"></status>
</kw>
<msg timestamp="20201112 12:42:12.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.835" endtime="20201112 12:42:12.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.128" endtime="20201112 12:42:12.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.136" endtime="20201112 12:42:12.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.833" endtime="20201112 12:42:12.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.831" endtime="20201112 12:42:12.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.143" level="INFO">${RESULT} = [{'time': 0.020560097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.020571208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.140" endtime="20201112 12:42:12.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.157" level="INFO">${ACCURACY} = {'source_diff': [5.680000000000962e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.694000000000532e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:12.144" endtime="20201112 12:42:12.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.162" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.161" endtime="20201112 12:42:12.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.165" level="INFO">VALUE: [5.680000000000962e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.679999999997493e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.680999999996966e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.666999999997396e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.665999999997923e-06, 5.708000000000102e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.722000000003141e-06, 5.625000000002156e-06, 5.721999999999672e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.666000000001392e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.652000000001822e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.163" endtime="20201112 12:42:12.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.158" endtime="20201112 12:42:12.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.168" endtime="20201112 12:42:12.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.172" endtime="20201112 12:42:12.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.170" endtime="20201112 12:42:12.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.167" endtime="20201112 12:42:12.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.799" endtime="20201112 12:42:12.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.798" endtime="20201112 12:42:12.193"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.202" endtime="20201112 12:42:12.219"></status>
</kw>
<msg timestamp="20201112 12:42:12.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.200" endtime="20201112 12:42:12.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.220" endtime="20201112 12:42:12.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.223" endtime="20201112 12:42:12.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.198" endtime="20201112 12:42:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.196" endtime="20201112 12:42:12.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.233" endtime="20201112 12:42:12.519"></status>
</kw>
<msg timestamp="20201112 12:42:12.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.232" endtime="20201112 12:42:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.523" endtime="20201112 12:42:12.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.532" endtime="20201112 12:42:12.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.229" endtime="20201112 12:42:12.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.227" endtime="20201112 12:42:12.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.539" level="INFO">${RESULT} = [{'time': 0.022494931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.022511792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.535" endtime="20201112 12:42:12.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.553" level="INFO">${ACCURACY} = {'source_diff': [5.6529999999978264e-06, 5.624999999998687e-06, 5.680999999996966e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.749999999998812e-06...</msg>
<status status="PASS" starttime="20201112 12:42:12.540" endtime="20201112 12:42:12.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.557" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.556" endtime="20201112 12:42:12.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.560" level="INFO">VALUE: [5.6529999999978264e-06, 5.624999999998687e-06, 5.680999999996966e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.681000000000436e-06, 5.651999999998353e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.680999999996966e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.665999999997923e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.667000000000866e-06, 5.680000000000962e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.558" endtime="20201112 12:42:12.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.554" endtime="20201112 12:42:12.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.564" endtime="20201112 12:42:12.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.567" endtime="20201112 12:42:12.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.566" endtime="20201112 12:42:12.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.562" endtime="20201112 12:42:12.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.194" endtime="20201112 12:42:12.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.193" endtime="20201112 12:42:12.588"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.598" endtime="20201112 12:42:12.620"></status>
</kw>
<msg timestamp="20201112 12:42:12.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.596" endtime="20201112 12:42:12.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.621" endtime="20201112 12:42:12.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.624" endtime="20201112 12:42:12.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.593" endtime="20201112 12:42:12.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.591" endtime="20201112 12:42:12.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.635" endtime="20201112 12:42:12.923"></status>
</kw>
<msg timestamp="20201112 12:42:12.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.633" endtime="20201112 12:42:12.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.927" endtime="20201112 12:42:12.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.936" endtime="20201112 12:42:12.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.630" endtime="20201112 12:42:12.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.629" endtime="20201112 12:42:12.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.942" level="INFO">${RESULT} = [{'time': 0.023979514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.023992319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.939" endtime="20201112 12:42:12.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.958" level="INFO">${ACCURACY} = {'source_diff': [5.653000000001296e-06, 5.652000000001822e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.6389999999982565e...</msg>
<status status="PASS" starttime="20201112 12:42:12.944" endtime="20201112 12:42:12.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.962" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.961" endtime="20201112 12:42:12.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.965" level="INFO">VALUE: [5.653000000001296e-06, 5.652000000001822e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.651999999998353e-06, 5.651999999998353e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.680000000000962e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.7089999999995755e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.735999999999242e-06, 5.681000000000436e-06, 5.638000000002252e-06, 5.694000000000532e-06, 5.749999999998812e-06, 5.665999999997923e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.963" endtime="20201112 12:42:12.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.959" endtime="20201112 12:42:12.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.969" endtime="20201112 12:42:12.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.972" endtime="20201112 12:42:12.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.971" endtime="20201112 12:42:12.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.967" endtime="20201112 12:42:12.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.589" endtime="20201112 12:42:12.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.589" endtime="20201112 12:42:12.993"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.003" endtime="20201112 12:42:13.018"></status>
</kw>
<msg timestamp="20201112 12:42:13.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.001" endtime="20201112 12:42:13.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.020" endtime="20201112 12:42:13.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.022" endtime="20201112 12:42:13.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.998" endtime="20201112 12:42:13.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.996" endtime="20201112 12:42:13.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.033" endtime="20201112 12:42:13.318"></status>
</kw>
<msg timestamp="20201112 12:42:13.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.031" endtime="20201112 12:42:13.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020986222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.323" endtime="20201112 12:42:13.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.332" endtime="20201112 12:42:13.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.028" endtime="20201112 12:42:13.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.026" endtime="20201112 12:42:13.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.339" level="INFO">${RESULT} = [{'time': 0.020991903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.021002208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:13.335" endtime="20201112 12:42:13.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.352" level="INFO">${ACCURACY} = {'source_diff': [5.681000000000436e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.610999999999117e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:13.340" endtime="20201112 12:42:13.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.357" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.356" endtime="20201112 12:42:13.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.360" level="INFO">VALUE: [5.681000000000436e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.680999999996966e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.652000000001822e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.6939999999970625e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.679999999997493e-06, 5.735999999999242e-06, 5.681000000000436e-06, 5.694000000000532e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.358" endtime="20201112 12:42:13.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.353" endtime="20201112 12:42:13.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.364" endtime="20201112 12:42:13.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.367" endtime="20201112 12:42:13.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.366" endtime="20201112 12:42:13.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.362" endtime="20201112 12:42:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.994" endtime="20201112 12:42:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.994" endtime="20201112 12:42:13.388"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.398" endtime="20201112 12:42:13.415"></status>
</kw>
<msg timestamp="20201112 12:42:13.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.396" endtime="20201112 12:42:13.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.416" endtime="20201112 12:42:13.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.419" endtime="20201112 12:42:13.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.393" endtime="20201112 12:42:13.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.391" endtime="20201112 12:42:13.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.429" endtime="20201112 12:42:13.717"></status>
</kw>
<msg timestamp="20201112 12:42:13.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.428" endtime="20201112 12:42:13.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.722" endtime="20201112 12:42:13.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.732" endtime="20201112 12:42:13.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.425" endtime="20201112 12:42:13.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.423" endtime="20201112 12:42:13.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.741" level="INFO">${RESULT} = [{'time': 0.023056778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.023068028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:13.735" endtime="20201112 12:42:13.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.760" level="INFO">${ACCURACY} = {'source_diff': [5.639000000001726e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.681000000000436e-0...</msg>
<status status="PASS" starttime="20201112 12:42:13.743" endtime="20201112 12:42:13.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.767" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.764" endtime="20201112 12:42:13.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.770" level="INFO">VALUE: [5.639000000001726e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.665999999997923e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.639000000001726e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.651999999998353e-06, 5.651999999998353e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.768" endtime="20201112 12:42:13.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.761" endtime="20201112 12:42:13.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.774" endtime="20201112 12:42:13.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.778" endtime="20201112 12:42:13.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.776" endtime="20201112 12:42:13.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.772" endtime="20201112 12:42:13.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.389" endtime="20201112 12:42:13.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.389" endtime="20201112 12:42:13.800"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.809" endtime="20201112 12:42:13.827"></status>
</kw>
<msg timestamp="20201112 12:42:13.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.808" endtime="20201112 12:42:13.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.828" endtime="20201112 12:42:13.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.831" endtime="20201112 12:42:13.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.805" endtime="20201112 12:42:13.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.803" endtime="20201112 12:42:13.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.841" endtime="20201112 12:42:14.132"></status>
</kw>
<msg timestamp="20201112 12:42:14.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.840" endtime="20201112 12:42:14.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.136" endtime="20201112 12:42:14.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.145" endtime="20201112 12:42:14.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.837" endtime="20201112 12:42:14.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.835" endtime="20201112 12:42:14.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.152" level="INFO">${RESULT} = [{'time': 0.023134236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.023150194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:14.148" endtime="20201112 12:42:14.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.166" level="INFO">${ACCURACY} = {'source_diff': [5.666999999997396e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.681000000000436e-06...</msg>
<status status="PASS" starttime="20201112 12:42:14.153" endtime="20201112 12:42:14.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.170" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.169" endtime="20201112 12:42:14.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.173" level="INFO">VALUE: [5.666999999997396e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.750000000002281e-06, 5.652000000001822e-06, 5.569000000000407e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.679999999997493e-06, 5.666999999997396e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.695000000000006e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.172" endtime="20201112 12:42:14.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.167" endtime="20201112 12:42:14.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.177" endtime="20201112 12:42:14.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.181" endtime="20201112 12:42:14.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.179" endtime="20201112 12:42:14.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.175" endtime="20201112 12:42:14.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.801" endtime="20201112 12:42:14.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.801" endtime="20201112 12:42:14.202"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.211" endtime="20201112 12:42:14.229"></status>
</kw>
<msg timestamp="20201112 12:42:14.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.209" endtime="20201112 12:42:14.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.230" endtime="20201112 12:42:14.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.233" endtime="20201112 12:42:14.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.206" endtime="20201112 12:42:14.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.204" endtime="20201112 12:42:14.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.244" endtime="20201112 12:42:14.529"></status>
</kw>
<msg timestamp="20201112 12:42:14.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023492042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.242" endtime="20201112 12:42:14.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023492042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.533" endtime="20201112 12:42:14.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.542" endtime="20201112 12:42:14.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.239" endtime="20201112 12:42:14.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.237" endtime="20201112 12:42:14.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.549" level="INFO">${RESULT} = [{'time': 0.023497694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.023512347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:14.546" endtime="20201112 12:42:14.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.565" level="INFO">${ACCURACY} = {'source_diff': [5.651999999998353e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.666000000001392e-06, 5.7089999999995755e-06, 5.680999999996966e-06, 5.680000000000962e-06, 5.6529999999978264e-0...</msg>
<status status="PASS" starttime="20201112 12:42:14.550" endtime="20201112 12:42:14.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.569" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.568" endtime="20201112 12:42:14.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.572" level="INFO">VALUE: [5.651999999998353e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.666000000001392e-06, 5.7089999999995755e-06, 5.680999999996966e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.679999999997493e-06, 5.666999999997396e-06, 5.721999999999672e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.666999999997396e-06, 5.6529999999978264e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.652000000001822e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.750000000002281e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.7229999999991454e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.651999999998353e-06, 5.653000000001296e-06, 5.7229999999991454e-06, 5.666999999997396e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.666999999997396e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.679999999997493e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.736000000002711e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.571" endtime="20201112 12:42:14.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.566" endtime="20201112 12:42:14.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.576" endtime="20201112 12:42:14.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.580" endtime="20201112 12:42:14.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.578" endtime="20201112 12:42:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.574" endtime="20201112 12:42:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.203" endtime="20201112 12:42:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.202" endtime="20201112 12:42:14.601"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.610" endtime="20201112 12:42:14.625"></status>
</kw>
<msg timestamp="20201112 12:42:14.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.608" endtime="20201112 12:42:14.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.627" endtime="20201112 12:42:14.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.629" endtime="20201112 12:42:14.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.605" endtime="20201112 12:42:14.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.603" endtime="20201112 12:42:14.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.640" endtime="20201112 12:42:14.926"></status>
</kw>
<msg timestamp="20201112 12:42:14.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.638" endtime="20201112 12:42:14.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.930" endtime="20201112 12:42:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.939" endtime="20201112 12:42:14.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.636" endtime="20201112 12:42:14.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.634" endtime="20201112 12:42:14.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.946" level="INFO">${RESULT} = [{'time': 0.021485986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.021497042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.942" endtime="20201112 12:42:14.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.960" level="INFO">${ACCURACY} = {'source_diff': [5.6389999999982565e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.667000000000866e-06...</msg>
<status status="PASS" starttime="20201112 12:42:14.947" endtime="20201112 12:42:14.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.964" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.963" endtime="20201112 12:42:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.967" level="INFO">VALUE: [5.6389999999982565e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.679999999997493e-06, 5.695000000000006e-06, 5.665999999997923e-06, 5.695000000000006e-06, 5.625000000002156e-06, 5.708000000000102e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.735999999999242e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.750000000002281e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.680999999996966e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.721999999999672e-06, 5.666000000001392e-06, 5.694000000000532e-06, 5.680999999996966e-06, 5.6529999999978264e-06, 5.679999999997493e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.965" endtime="20201112 12:42:14.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.960" endtime="20201112 12:42:14.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.971" endtime="20201112 12:42:14.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.974" endtime="20201112 12:42:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.972" endtime="20201112 12:42:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.969" endtime="20201112 12:42:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.601" endtime="20201112 12:42:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.601" endtime="20201112 12:42:14.996"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.005" endtime="20201112 12:42:15.023"></status>
</kw>
<msg timestamp="20201112 12:42:15.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.003" endtime="20201112 12:42:15.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.025" endtime="20201112 12:42:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.027" endtime="20201112 12:42:15.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.000" endtime="20201112 12:42:15.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.998" endtime="20201112 12:42:15.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.038" endtime="20201112 12:42:15.324"></status>
</kw>
<msg timestamp="20201112 12:42:15.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:15.037" endtime="20201112 12:42:15.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:15.328" endtime="20201112 12:42:15.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.337" endtime="20201112 12:42:15.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.034" endtime="20201112 12:42:15.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.032" endtime="20201112 12:42:15.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.344" level="INFO">${RESULT} = [{'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.023678014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:15.340" endtime="20201112 12:42:15.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.358" level="INFO">${ACCURACY} = {'source_diff': [5.624999999998687e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.666000000001392e-06...</msg>
<status status="PASS" starttime="20201112 12:42:15.345" endtime="20201112 12:42:15.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.363" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.361" endtime="20201112 12:42:15.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.365" level="INFO">VALUE: [5.624999999998687e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.666999999997396e-06, 5.665999999997923e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.637999999998783e-06, 5.652000000001822e-06, 5.708000000000102e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.681000000000436e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.364" endtime="20201112 12:42:15.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.359" endtime="20201112 12:42:15.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.369" endtime="20201112 12:42:15.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.372" endtime="20201112 12:42:15.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.371" endtime="20201112 12:42:15.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.367" endtime="20201112 12:42:15.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.996" endtime="20201112 12:42:15.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.996" endtime="20201112 12:42:15.393"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.402" endtime="20201112 12:42:15.418"></status>
</kw>
<msg timestamp="20201112 12:42:15.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.401" endtime="20201112 12:42:15.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.420" endtime="20201112 12:42:15.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.423" endtime="20201112 12:42:15.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.398" endtime="20201112 12:42:15.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.396" endtime="20201112 12:42:15.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.434" endtime="20201112 12:42:15.721"></status>
</kw>
<msg timestamp="20201112 12:42:15.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.432" endtime="20201112 12:42:15.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.725" endtime="20201112 12:42:15.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.733" endtime="20201112 12:42:15.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.430" endtime="20201112 12:42:15.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.427" endtime="20201112 12:42:15.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.741" level="INFO">${RESULT} = [{'time': 0.022367583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.022379611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.737" endtime="20201112 12:42:15.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.754" level="INFO">${ACCURACY} = {'source_diff': [5.721999999999672e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.708000000000102e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:15.742" endtime="20201112 12:42:15.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.759" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.758" endtime="20201112 12:42:15.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.762" level="INFO">VALUE: [5.721999999999672e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.681000000000436e-06, 5.611000000002586e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.652000000001822e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.569999999999881e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.625000000002156e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.666999999997396e-06, 5.666000000001392e-06, 5.7229999999991454e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.680999999996966e-06, 5.666000000001392e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.680999999996966e-06, 5.639000000001726e-06, 5.666999999997396e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.6529999999978264e-06, 5.666999999997396e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.760" endtime="20201112 12:42:15.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.755" endtime="20201112 12:42:15.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.766" endtime="20201112 12:42:15.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.769" endtime="20201112 12:42:15.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.768" endtime="20201112 12:42:15.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.764" endtime="20201112 12:42:15.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.394" endtime="20201112 12:42:15.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.394" endtime="20201112 12:42:15.790"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.799" endtime="20201112 12:42:15.819"></status>
</kw>
<msg timestamp="20201112 12:42:15.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.798" endtime="20201112 12:42:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.821" endtime="20201112 12:42:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.823" endtime="20201112 12:42:15.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.795" endtime="20201112 12:42:15.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.793" endtime="20201112 12:42:15.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.834" endtime="20201112 12:42:16.119"></status>
</kw>
<msg timestamp="20201112 12:42:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.832" endtime="20201112 12:42:16.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.123" endtime="20201112 12:42:16.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.132" endtime="20201112 12:42:16.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.830" endtime="20201112 12:42:16.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.828" endtime="20201112 12:42:16.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.139" level="INFO">${RESULT} = [{'time': 0.022564194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.022574931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.136" endtime="20201112 12:42:16.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.154" level="INFO">${ACCURACY} = {'source_diff': [5.651999999998353e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.666000000001392e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.680000000000962e-06...</msg>
<status status="PASS" starttime="20201112 12:42:16.140" endtime="20201112 12:42:16.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.159" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.158" endtime="20201112 12:42:16.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.161" level="INFO">VALUE: [5.651999999998353e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.666000000001392e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.7089999999995755e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.651999999998353e-06, 5.681000000000436e-06, 5.652000000001822e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.679999999997493e-06, 5.666000000001392e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.737000000002185e-06, 5.652000000001822e-06, 5.667000000000866e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.651999999998353e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.721999999999672e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.736000000002711e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.652000000001822e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.160" endtime="20201112 12:42:16.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.155" endtime="20201112 12:42:16.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.171" endtime="20201112 12:42:16.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.175" endtime="20201112 12:42:16.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.174" endtime="20201112 12:42:16.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.170" endtime="20201112 12:42:16.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.791" endtime="20201112 12:42:16.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.791" endtime="20201112 12:42:16.196"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.205" endtime="20201112 12:42:16.223"></status>
</kw>
<msg timestamp="20201112 12:42:16.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.204" endtime="20201112 12:42:16.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.224" endtime="20201112 12:42:16.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.227" endtime="20201112 12:42:16.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.201" endtime="20201112 12:42:16.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.199" endtime="20201112 12:42:16.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.238" endtime="20201112 12:42:16.524"></status>
</kw>
<msg timestamp="20201112 12:42:16.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02327175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:16.236" endtime="20201112 12:42:16.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02327175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:16.529" endtime="20201112 12:42:16.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.538" endtime="20201112 12:42:16.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.233" endtime="20201112 12:42:16.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.231" endtime="20201112 12:42:16.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.545" level="INFO">${RESULT} = [{'time': 0.02327175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.023285042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:16.541" endtime="20201112 12:42:16.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.558" level="INFO">${ACCURACY} = {'source_diff': [5.653000000001296e-06, 5.7229999999991454e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.7089999999995755e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.653000000001296e-...</msg>
<status status="PASS" starttime="20201112 12:42:16.546" endtime="20201112 12:42:16.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.563" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.562" endtime="20201112 12:42:16.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.566" level="INFO">VALUE: [5.653000000001296e-06, 5.7229999999991454e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.7089999999995755e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.680999999996966e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.749999999998812e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.666999999997396e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.564" endtime="20201112 12:42:16.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.559" endtime="20201112 12:42:16.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.570" endtime="20201112 12:42:16.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.573" endtime="20201112 12:42:16.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.572" endtime="20201112 12:42:16.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.568" endtime="20201112 12:42:16.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.197" endtime="20201112 12:42:16.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.197" endtime="20201112 12:42:16.594"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.603" endtime="20201112 12:42:16.619"></status>
</kw>
<msg timestamp="20201112 12:42:16.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.602" endtime="20201112 12:42:16.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.621" endtime="20201112 12:42:16.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.623" endtime="20201112 12:42:16.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.599" endtime="20201112 12:42:16.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.597" endtime="20201112 12:42:16.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.634" endtime="20201112 12:42:16.919"></status>
</kw>
<msg timestamp="20201112 12:42:16.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.632" endtime="20201112 12:42:16.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.923" endtime="20201112 12:42:16.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.932" endtime="20201112 12:42:16.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.630" endtime="20201112 12:42:16.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.628" endtime="20201112 12:42:16.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.939" level="INFO">${RESULT} = [{'time': 0.022449764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.0224625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:16.935" endtime="20201112 12:42:16.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.953" level="INFO">${ACCURACY} = {'source_diff': [5.653000000001296e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.6529999999978264e-0...</msg>
<status status="PASS" starttime="20201112 12:42:16.940" endtime="20201112 12:42:16.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.958" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.957" endtime="20201112 12:42:16.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.960" level="INFO">VALUE: [5.653000000001296e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.597000000003016e-06, 5.6529999999978264e-06, 5.652000000001822e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.611000000002586e-06, 5.721999999999672e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.667000000000866e-06, 5.7089999999995755e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.959" endtime="20201112 12:42:16.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.954" endtime="20201112 12:42:16.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.964" endtime="20201112 12:42:16.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.968" endtime="20201112 12:42:16.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.966" endtime="20201112 12:42:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.962" endtime="20201112 12:42:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.595" endtime="20201112 12:42:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.595" endtime="20201112 12:42:16.989"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.998" endtime="20201112 12:42:17.021"></status>
</kw>
<msg timestamp="20201112 12:42:17.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.996" endtime="20201112 12:42:17.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.023" endtime="20201112 12:42:17.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.025" endtime="20201112 12:42:17.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.993" endtime="20201112 12:42:17.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.991" endtime="20201112 12:42:17.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.036" endtime="20201112 12:42:17.323"></status>
</kw>
<msg timestamp="20201112 12:42:17.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.034" endtime="20201112 12:42:17.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.328" endtime="20201112 12:42:17.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.337" endtime="20201112 12:42:17.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.031" endtime="20201112 12:42:17.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.030" endtime="20201112 12:42:17.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.344" level="INFO">${RESULT} = [{'time': 0.024854444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.024871097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.340" endtime="20201112 12:42:17.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.358" level="INFO">${ACCURACY} = {'source_diff': [5.666000000001392e-06, 5.666000000001392e-06, 5.680999999996966e-06, 5.679999999997493e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.694000000000532e-06...</msg>
<status status="PASS" starttime="20201112 12:42:17.345" endtime="20201112 12:42:17.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.362" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.361" endtime="20201112 12:42:17.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.365" level="INFO">VALUE: [5.666000000001392e-06, 5.666000000001392e-06, 5.680999999996966e-06, 5.679999999997493e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.666999999997396e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.7089999999995755e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.6529999999978264e-06, 5.679999999997493e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.666999999997396e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.721999999999672e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.667000000000866e-06, 5.637999999998783e-06, 5.681000000000436e-06, 5.665999999997923e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.6529999999978264e-06]</msg>
<status status="PASS" starttime="20201112 12:42:17.363" endtime="20201112 12:42:17.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.358" endtime="20201112 12:42:17.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.369" endtime="20201112 12:42:17.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.372" endtime="20201112 12:42:17.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.371" endtime="20201112 12:42:17.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.367" endtime="20201112 12:42:17.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.990" endtime="20201112 12:42:17.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.989" endtime="20201112 12:42:17.393"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.402" endtime="20201112 12:42:17.419"></status>
</kw>
<msg timestamp="20201112 12:42:17.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.401" endtime="20201112 12:42:17.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.420" endtime="20201112 12:42:17.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.423" endtime="20201112 12:42:17.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.398" endtime="20201112 12:42:17.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.396" endtime="20201112 12:42:17.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.433" endtime="20201112 12:42:17.722"></status>
</kw>
<msg timestamp="20201112 12:42:17.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.432" endtime="20201112 12:42:17.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.726" endtime="20201112 12:42:17.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.735" endtime="20201112 12:42:17.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.429" endtime="20201112 12:42:17.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.427" endtime="20201112 12:42:17.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.742" level="INFO">${RESULT} = [{'time': 0.022207111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022221583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.738" endtime="20201112 12:42:17.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.757" level="INFO">${ACCURACY} = {'source_diff': [5.639000000001726e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.639000000001726e-06...</msg>
<status status="PASS" starttime="20201112 12:42:17.743" endtime="20201112 12:42:17.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.762" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.761" endtime="20201112 12:42:17.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.764" level="INFO">VALUE: [5.639000000001726e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.666000000001392e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.680000000000962e-06, 5.679999999997493e-06, 5.695000000000006e-06, 5.666000000001392e-06, 5.569000000000407e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.721999999999672e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.653000000001296e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 12:42:17.763" endtime="20201112 12:42:17.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.758" endtime="20201112 12:42:17.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.768" endtime="20201112 12:42:17.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.772" endtime="20201112 12:42:17.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.770" endtime="20201112 12:42:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.766" endtime="20201112 12:42:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.394" endtime="20201112 12:42:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.394" endtime="20201112 12:42:17.793"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.802" endtime="20201112 12:42:17.820"></status>
</kw>
<msg timestamp="20201112 12:42:17.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.800" endtime="20201112 12:42:17.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.822" endtime="20201112 12:42:17.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.824" endtime="20201112 12:42:17.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.798" endtime="20201112 12:42:17.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.795" endtime="20201112 12:42:17.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.835" endtime="20201112 12:42:18.122"></status>
</kw>
<msg timestamp="20201112 12:42:18.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.833" endtime="20201112 12:42:18.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024682958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.126" endtime="20201112 12:42:18.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.135" endtime="20201112 12:42:18.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.830" endtime="20201112 12:42:18.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.829" endtime="20201112 12:42:18.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.142" level="INFO">${RESULT} = [{'time': 0.024682958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.024693694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:18.139" endtime="20201112 12:42:18.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.156" level="INFO">${ACCURACY} = {'source_diff': [5.652000000001822e-06, 5.651999999998353e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.651999999998353e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.653000000001296e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:18.143" endtime="20201112 12:42:18.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.161" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.160" endtime="20201112 12:42:18.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.163" level="INFO">VALUE: [5.652000000001822e-06, 5.651999999998353e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.651999999998353e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.653000000001296e-06, 5.638000000002252e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.721999999999672e-06, 5.667000000000866e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.639000000001726e-06, 5.721999999999672e-06, 5.679999999997493e-06, 5.666999999997396e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.679999999997493e-06, 5.624999999998687e-06, 5.679999999997493e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.679999999997493e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.162" endtime="20201112 12:42:18.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.157" endtime="20201112 12:42:18.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.167" endtime="20201112 12:42:18.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.171" endtime="20201112 12:42:18.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.169" endtime="20201112 12:42:18.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.165" endtime="20201112 12:42:18.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.794" endtime="20201112 12:42:18.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.793" endtime="20201112 12:42:18.192"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.201" endtime="20201112 12:42:18.223"></status>
</kw>
<msg timestamp="20201112 12:42:18.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.199" endtime="20201112 12:42:18.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.224" endtime="20201112 12:42:18.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.227" endtime="20201112 12:42:18.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.196" endtime="20201112 12:42:18.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.194" endtime="20201112 12:42:18.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.237" endtime="20201112 12:42:18.523"></status>
</kw>
<msg timestamp="20201112 12:42:18.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.236" endtime="20201112 12:42:18.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.527" endtime="20201112 12:42:18.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.536" endtime="20201112 12:42:18.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.233" endtime="20201112 12:42:18.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.231" endtime="20201112 12:42:18.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.543" level="INFO">${RESULT} = [{'time': 0.022620097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.022635375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.539" endtime="20201112 12:42:18.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.557" level="INFO">${ACCURACY} = {'source_diff': [5.6529999999978264e-06, 5.6389999999982565e-06, 5.58400000000292e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.651999999998353e-06, 5.680000000000962e-0...</msg>
<status status="PASS" starttime="20201112 12:42:18.544" endtime="20201112 12:42:18.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.561" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.560" endtime="20201112 12:42:18.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.564" level="INFO">VALUE: [5.6529999999978264e-06, 5.6389999999982565e-06, 5.58400000000292e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.651999999998353e-06, 5.680000000000962e-06, 5.651999999998353e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.6939999999970625e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.666000000001392e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.666000000001392e-06, 5.695000000000006e-06, 5.639000000001726e-06, 5.7089999999995755e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.7089999999995755e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.680999999996966e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.666000000001392e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.562" endtime="20201112 12:42:18.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.558" endtime="20201112 12:42:18.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.568" endtime="20201112 12:42:18.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.571" endtime="20201112 12:42:18.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.570" endtime="20201112 12:42:18.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.566" endtime="20201112 12:42:18.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.193" endtime="20201112 12:42:18.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.192" endtime="20201112 12:42:18.592"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.601" endtime="20201112 12:42:18.619"></status>
</kw>
<msg timestamp="20201112 12:42:18.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.600" endtime="20201112 12:42:18.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.621" endtime="20201112 12:42:18.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.624" endtime="20201112 12:42:18.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.597" endtime="20201112 12:42:18.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.595" endtime="20201112 12:42:18.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.634" endtime="20201112 12:42:18.921"></status>
</kw>
<msg timestamp="20201112 12:42:18.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.632" endtime="20201112 12:42:18.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.926" endtime="20201112 12:42:18.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.934" endtime="20201112 12:42:18.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.630" endtime="20201112 12:42:18.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.628" endtime="20201112 12:42:18.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.941" level="INFO">${RESULT} = [{'time': 0.023851306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.023867958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:18.938" endtime="20201112 12:42:18.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.955" level="INFO">${ACCURACY} = {'source_diff': [5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.680000000000962e-06, 5.597000000003016e-06, 5.666000000001392e-06, 5.6389999999982565e-06...</msg>
<status status="PASS" starttime="20201112 12:42:18.942" endtime="20201112 12:42:18.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.960" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.959" endtime="20201112 12:42:18.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.963" level="INFO">VALUE: [5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.680000000000962e-06, 5.597000000003016e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.666999999997396e-06, 5.637999999998783e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.61200000000206e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.6529999999978264e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.694000000000532e-06, 5.723000000002615e-06, 5.610999999999117e-06, 5.679999999997493e-06, 5.596999999999547e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.961" endtime="20201112 12:42:18.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.956" endtime="20201112 12:42:18.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.966" endtime="20201112 12:42:18.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.970" endtime="20201112 12:42:18.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.968" endtime="20201112 12:42:18.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.965" endtime="20201112 12:42:18.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.593" endtime="20201112 12:42:18.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.593" endtime="20201112 12:42:18.991"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.000" endtime="20201112 12:42:19.016"></status>
</kw>
<msg timestamp="20201112 12:42:19.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.999" endtime="20201112 12:42:19.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.018" endtime="20201112 12:42:19.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.020" endtime="20201112 12:42:19.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.996" endtime="20201112 12:42:19.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.994" endtime="20201112 12:42:19.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.030" endtime="20201112 12:42:19.318"></status>
</kw>
<msg timestamp="20201112 12:42:19.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.029" endtime="20201112 12:42:19.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.322" endtime="20201112 12:42:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.331" endtime="20201112 12:42:19.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.026" endtime="20201112 12:42:19.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.024" endtime="20201112 12:42:19.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.338" level="INFO">${RESULT} = [{'time': 0.022164139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.022174611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.334" endtime="20201112 12:42:19.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.353" level="INFO">${ACCURACY} = {'source_diff': [5.681000000000436e-06, 5.721999999999672e-06, 5.624999999998687e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.681000000000436e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:19.339" endtime="20201112 12:42:19.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.358" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.357" endtime="20201112 12:42:19.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.360" level="INFO">VALUE: [5.681000000000436e-06, 5.721999999999672e-06, 5.624999999998687e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.665999999997923e-06, 5.5839999999994505e-06, 5.721999999999672e-06, 5.666000000001392e-06, 5.6529999999978264e-06, 5.58400000000292e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.6529999999978264e-06, 5.651999999998353e-06, 5.652000000001822e-06, 5.652000000001822e-06, 5.596999999999547e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.665999999997923e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.637999999998783e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.695000000000006e-06]</msg>
<status status="PASS" starttime="20201112 12:42:19.359" endtime="20201112 12:42:19.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.354" endtime="20201112 12:42:19.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.364" endtime="20201112 12:42:19.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.368" endtime="20201112 12:42:19.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.366" endtime="20201112 12:42:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.362" endtime="20201112 12:42:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.992" endtime="20201112 12:42:19.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.991" endtime="20201112 12:42:19.389"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.398" endtime="20201112 12:42:19.413"></status>
</kw>
<msg timestamp="20201112 12:42:19.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.396" endtime="20201112 12:42:19.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.415" endtime="20201112 12:42:19.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.417" endtime="20201112 12:42:19.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.394" endtime="20201112 12:42:19.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.391" endtime="20201112 12:42:19.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.428" endtime="20201112 12:42:19.716"></status>
</kw>
<msg timestamp="20201112 12:42:19.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021159264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.426" endtime="20201112 12:42:19.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021159264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021164889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.720" endtime="20201112 12:42:19.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.729" endtime="20201112 12:42:19.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.423" endtime="20201112 12:42:19.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.422" endtime="20201112 12:42:19.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.736" level="INFO">${RESULT} = [{'time': 0.021164889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.021177472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.732" endtime="20201112 12:42:19.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.750" level="INFO">${ACCURACY} = {'source_diff': [5.624999999998687e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:19.737" endtime="20201112 12:42:19.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.754" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.753" endtime="20201112 12:42:19.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.757" level="INFO">VALUE: [5.624999999998687e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.666999999997396e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.680999999996966e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.723000000002615e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.680999999996966e-06, 5.681000000000436e-06, 5.721999999999672e-06, 5.665999999997923e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 12:42:19.756" endtime="20201112 12:42:19.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.751" endtime="20201112 12:42:19.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.761" endtime="20201112 12:42:19.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.764" endtime="20201112 12:42:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.763" endtime="20201112 12:42:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.759" endtime="20201112 12:42:19.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.390" endtime="20201112 12:42:19.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.389" endtime="20201112 12:42:19.785"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.795" endtime="20201112 12:42:19.810"></status>
</kw>
<msg timestamp="20201112 12:42:19.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.793" endtime="20201112 12:42:19.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.812" endtime="20201112 12:42:19.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.814" endtime="20201112 12:42:19.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.790" endtime="20201112 12:42:19.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.788" endtime="20201112 12:42:19.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.825" endtime="20201112 12:42:20.111"></status>
</kw>
<msg timestamp="20201112 12:42:20.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.823" endtime="20201112 12:42:20.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.115" endtime="20201112 12:42:20.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.124" endtime="20201112 12:42:20.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.821" endtime="20201112 12:42:20.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.819" endtime="20201112 12:42:20.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.131" level="INFO">${RESULT} = [{'time': 0.021423319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.021438931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.127" endtime="20201112 12:42:20.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.145" level="INFO">${ACCURACY} = {'source_diff': [5.651999999998353e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.6939999999970625e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.680999999996966e-06, 5.652000000001822e-0...</msg>
<status status="PASS" starttime="20201112 12:42:20.132" endtime="20201112 12:42:20.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.150" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.148" endtime="20201112 12:42:20.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.152" level="INFO">VALUE: [5.651999999998353e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.6939999999970625e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.680999999996966e-06, 5.652000000001822e-06, 5.721999999999672e-06, 5.679999999997493e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.665999999997923e-06, 5.637999999998783e-06, 5.694000000000532e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.680999999996966e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.667000000000866e-06, 5.679999999997493e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.582999999999977e-06, 5.680000000000962e-06]</msg>
<status status="PASS" starttime="20201112 12:42:20.151" endtime="20201112 12:42:20.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.146" endtime="20201112 12:42:20.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.156" endtime="20201112 12:42:20.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.159" endtime="20201112 12:42:20.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.158" endtime="20201112 12:42:20.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.154" endtime="20201112 12:42:20.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.786" endtime="20201112 12:42:20.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.786" endtime="20201112 12:42:20.180"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.189" endtime="20201112 12:42:20.207"></status>
</kw>
<msg timestamp="20201112 12:42:20.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.188" endtime="20201112 12:42:20.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.208" endtime="20201112 12:42:20.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.211" endtime="20201112 12:42:20.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.185" endtime="20201112 12:42:20.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.183" endtime="20201112 12:42:20.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.221" endtime="20201112 12:42:20.507"></status>
</kw>
<msg timestamp="20201112 12:42:20.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023263069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02326875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:20.220" endtime="20201112 12:42:20.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023263069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02326875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:20.512" endtime="20201112 12:42:20.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.521" endtime="20201112 12:42:20.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.217" endtime="20201112 12:42:20.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.215" endtime="20201112 12:42:20.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.528" level="INFO">${RESULT} = [{'time': 0.02326875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.02327925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:20.524" endtime="20201112 12:42:20.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.541" level="INFO">${ACCURACY} = {'source_diff': [5.681000000000436e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.667000000000866e-06...</msg>
<status status="PASS" starttime="20201112 12:42:20.529" endtime="20201112 12:42:20.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.546" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.545" endtime="20201112 12:42:20.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.549" level="INFO">VALUE: [5.681000000000436e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.666999999997396e-06, 5.708000000000102e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.665999999997923e-06, 5.6939999999970625e-06, 5.596999999999547e-06, 5.680999999996966e-06, 5.667000000000866e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.680000000000962e-06, 5.665999999997923e-06, 5.666000000001392e-06, 5.680000000000962e-06, 5.723000000002615e-06, 5.651999999998353e-06]</msg>
<status status="PASS" starttime="20201112 12:42:20.547" endtime="20201112 12:42:20.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.542" endtime="20201112 12:42:20.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.552" endtime="20201112 12:42:20.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.556" endtime="20201112 12:42:20.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.555" endtime="20201112 12:42:20.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.551" endtime="20201112 12:42:20.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.181" endtime="20201112 12:42:20.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.181" endtime="20201112 12:42:20.577"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.586" endtime="20201112 12:42:20.605"></status>
</kw>
<msg timestamp="20201112 12:42:20.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.585" endtime="20201112 12:42:20.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.606" endtime="20201112 12:42:20.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.609" endtime="20201112 12:42:20.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.582" endtime="20201112 12:42:20.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.580" endtime="20201112 12:42:20.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.620" endtime="20201112 12:42:20.904"></status>
</kw>
<msg timestamp="20201112 12:42:20.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023426736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.618" endtime="20201112 12:42:20.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023426736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.909" endtime="20201112 12:42:20.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.917" endtime="20201112 12:42:20.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.615" endtime="20201112 12:42:20.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.613" endtime="20201112 12:42:20.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.924" level="INFO">${RESULT} = [{'time': 0.023426736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.023437583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.921" endtime="20201112 12:42:20.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.939" level="INFO">${ACCURACY} = {'source_diff': [5.624999999998687e-06, 5.666000000001392e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.695000000000006e-06...</msg>
<status status="PASS" starttime="20201112 12:42:20.925" endtime="20201112 12:42:20.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.944" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.943" endtime="20201112 12:42:20.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.947" level="INFO">VALUE: [5.624999999998687e-06, 5.666000000001392e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.665999999997923e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.651999999998353e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.679999999997493e-06, 5.639000000001726e-06, 5.708000000000102e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.680999999996966e-06, 5.666000000001392e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.694000000000532e-06]</msg>
<status status="PASS" starttime="20201112 12:42:20.945" endtime="20201112 12:42:20.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.940" endtime="20201112 12:42:20.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.950" endtime="20201112 12:42:20.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.954" endtime="20201112 12:42:20.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.952" endtime="20201112 12:42:20.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.949" endtime="20201112 12:42:20.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.578" endtime="20201112 12:42:20.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.578" endtime="20201112 12:42:20.975"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.984" endtime="20201112 12:42:21.001"></status>
</kw>
<msg timestamp="20201112 12:42:21.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.982" endtime="20201112 12:42:21.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.003" endtime="20201112 12:42:21.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.005" endtime="20201112 12:42:21.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.980" endtime="20201112 12:42:21.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.977" endtime="20201112 12:42:21.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.016" endtime="20201112 12:42:21.300"></status>
</kw>
<msg timestamp="20201112 12:42:21.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.014" endtime="20201112 12:42:21.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.305" endtime="20201112 12:42:21.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.313" endtime="20201112 12:42:21.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.011" endtime="20201112 12:42:21.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.010" endtime="20201112 12:42:21.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.320" level="INFO">${RESULT} = [{'time': 0.022568667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.022580861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.317" endtime="20201112 12:42:21.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.334" level="INFO">${ACCURACY} = {'source_diff': [5.695000000000006e-06, 5.680000000000962e-06, 5.721999999999672e-06, 5.6529999999978264e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.667000000000866e-06...</msg>
<status status="PASS" starttime="20201112 12:42:21.321" endtime="20201112 12:42:21.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.339" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.338" endtime="20201112 12:42:21.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.341" level="INFO">VALUE: [5.695000000000006e-06, 5.680000000000962e-06, 5.721999999999672e-06, 5.6529999999978264e-06, 5.694000000000532e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.666999999997396e-06, 5.680999999996966e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.667000000000866e-06, 5.7089999999995755e-06, 5.695000000000006e-06, 5.679999999997493e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.694000000000532e-06, 5.666999999997396e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.6529999999978264e-06, 5.596999999999547e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.652000000001822e-06, 5.665999999997923e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.667000000000866e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 12:42:21.340" endtime="20201112 12:42:21.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.335" endtime="20201112 12:42:21.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.354" endtime="20201112 12:42:21.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.358" endtime="20201112 12:42:21.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.356" endtime="20201112 12:42:21.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.352" endtime="20201112 12:42:21.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.976" endtime="20201112 12:42:21.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.975" endtime="20201112 12:42:21.378"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.388" endtime="20201112 12:42:21.406"></status>
</kw>
<msg timestamp="20201112 12:42:21.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.386" endtime="20201112 12:42:21.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.407" endtime="20201112 12:42:21.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.410" endtime="20201112 12:42:21.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.383" endtime="20201112 12:42:21.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.381" endtime="20201112 12:42:21.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.420" endtime="20201112 12:42:21.705"></status>
</kw>
<msg timestamp="20201112 12:42:21.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02093125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:21.419" endtime="20201112 12:42:21.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02093125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:21.710" endtime="20201112 12:42:21.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.718" endtime="20201112 12:42:21.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.416" endtime="20201112 12:42:21.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.414" endtime="20201112 12:42:21.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.725" level="INFO">${RESULT} = [{'time': 0.02093125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680999999996966e-06, 'source_diff': 5.680999999996966e-06}, {'time': 0.020942389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:21.722" endtime="20201112 12:42:21.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.739" level="INFO">${ACCURACY} = {'source_diff': [5.680999999996966e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.695000000000006e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:21.726" endtime="20201112 12:42:21.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.744" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.743" endtime="20201112 12:42:21.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.747" level="INFO">VALUE: [5.680999999996966e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.681000000000436e-06, 5.7089999999995755e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.637999999998783e-06, 5.665999999997923e-06, 5.582999999999977e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.708000000000102e-06, 5.681000000000436e-06, 5.666999999997396e-06, 5.680999999996966e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.666000000001392e-06, 5.721999999999672e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.6939999999970625e-06, 5.651999999998353e-06, 5.6529999999978264e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 12:42:21.745" endtime="20201112 12:42:21.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.740" endtime="20201112 12:42:21.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.750" endtime="20201112 12:42:21.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.754" endtime="20201112 12:42:21.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.752" endtime="20201112 12:42:21.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.749" endtime="20201112 12:42:21.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.379" endtime="20201112 12:42:21.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.379" endtime="20201112 12:42:21.775"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.784" endtime="20201112 12:42:21.800"></status>
</kw>
<msg timestamp="20201112 12:42:21.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.782" endtime="20201112 12:42:21.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.801" endtime="20201112 12:42:21.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.804" endtime="20201112 12:42:21.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.780" endtime="20201112 12:42:21.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.778" endtime="20201112 12:42:21.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.814" endtime="20201112 12:42:22.101"></status>
</kw>
<msg timestamp="20201112 12:42:22.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.813" endtime="20201112 12:42:22.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.106" endtime="20201112 12:42:22.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.114" endtime="20201112 12:42:22.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.810" endtime="20201112 12:42:22.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.808" endtime="20201112 12:42:22.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.121" level="INFO">${RESULT} = [{'time': 0.021252472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7611000000000302e-05, 'source_diff': 2.7611000000000302e-05}, {'time': 0.021283264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:22.118" endtime="20201112 12:42:22.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.135" level="INFO">${ACCURACY} = {'source_diff': [2.7611000000000302e-05, 2.384700000000045e-05, 1.9000000000001654e-05, 2.093099999999834e-05, 2.191699999999977e-05, 2.5721999999998857e-05, 2.2806000000000215e-05, 2.19030000000002e-...</msg>
<status status="PASS" starttime="20201112 12:42:22.122" endtime="20201112 12:42:22.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.140" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.139" endtime="20201112 12:42:22.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.143" level="INFO">VALUE: [2.7611000000000302e-05, 2.384700000000045e-05, 1.9000000000001654e-05, 2.093099999999834e-05, 2.191699999999977e-05, 2.5721999999998857e-05, 2.2806000000000215e-05, 2.19030000000002e-05, 2.0958000000001475e-05, 2.097300000000052e-05, 2.4778000000003075e-05, 2.091700000000224e-05, 2.187500000000106e-05, 1.9055999999999934e-05, 2.286100000000249e-05, 2.0013999999998755e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.3778000000002075e-05, 2.2819999999999785e-05, 2.4777999999999606e-05, 2.0000000000002655e-05, 2.0014000000002224e-05, 2.3820000000000785e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.2944000000000436e-05, 2.0929999999998866e-05, 2.283299999999988e-05, 2.19030000000002e-05, 1.905500000000046e-05, 2.4777999999999606e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 2.5749999999997997e-05, 2.0944000000001906e-05, 2.0013999999998755e-05, 2.4750000000000466e-05, 2.187500000000106e-05, 1.9028000000000794e-05, 2.2848000000002394e-05, 2.4777999999999606e-05, 2.5749999999997997e-05, 2.284699999999945e-05, 2.570899999999876e-05, 2.3792000000001645e-05, 2.0028000000001794e-05, 2.381900000000131e-05, 1.9985999999999615e-05, 2.0957999999998006e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.141" endtime="20201112 12:42:22.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.136" endtime="20201112 12:42:22.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.147" endtime="20201112 12:42:22.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.150" endtime="20201112 12:42:22.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.149" endtime="20201112 12:42:22.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.145" endtime="20201112 12:42:22.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.776" endtime="20201112 12:42:22.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.775" endtime="20201112 12:42:22.171"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.180" endtime="20201112 12:42:22.196"></status>
</kw>
<msg timestamp="20201112 12:42:22.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.179" endtime="20201112 12:42:22.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.198" endtime="20201112 12:42:22.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.201" endtime="20201112 12:42:22.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.176" endtime="20201112 12:42:22.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.174" endtime="20201112 12:42:22.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.211" endtime="20201112 12:42:22.497"></status>
</kw>
<msg timestamp="20201112 12:42:22.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.209" endtime="20201112 12:42:22.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.501" endtime="20201112 12:42:22.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.510" endtime="20201112 12:42:22.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.207" endtime="20201112 12:42:22.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.205" endtime="20201112 12:42:22.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.517" level="INFO">${RESULT} = [{'time': 0.021929028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.712499999999978e-05, 'source_diff': 1.712499999999978e-05}, {'time': 0.021960389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.513" endtime="20201112 12:42:22.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.532" level="INFO">${ACCURACY} = {'source_diff': [1.712499999999978e-05, 2.19030000000002e-05, 2.091700000000224e-05, 2.381900000000131e-05, 2.0013999999998755e-05, 2.4764000000000036e-05, 2.094500000000138e-05, 2.283299999999988e-05...</msg>
<status status="PASS" starttime="20201112 12:42:22.518" endtime="20201112 12:42:22.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.537" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.536" endtime="20201112 12:42:22.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.540" level="INFO">VALUE: [1.712499999999978e-05, 2.19030000000002e-05, 2.091700000000224e-05, 2.381900000000131e-05, 2.0013999999998755e-05, 2.4764000000000036e-05, 2.094500000000138e-05, 2.283299999999988e-05, 1.995899999999995e-05, 2.4764000000000036e-05, 1.9999999999999185e-05, 2.4708000000001756e-05, 2.09029999999992e-05, 2.384700000000045e-05, 2.0986000000000615e-05, 2.29030000000012e-05, 2.29030000000012e-05, 2.188900000000063e-05, 2.1916000000000296e-05, 2.0027999999998325e-05, 2.287500000000206e-05, 2.283299999999988e-05, 2.286100000000249e-05, 1.995899999999995e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.19030000000002e-05, 2.287500000000206e-05, 2.383300000000088e-05, 2.570899999999876e-05, 2.09029999999992e-05, 2.094499999999791e-05, 2.191699999999977e-05, 2.3763999999999036e-05, 2.3804999999998272e-05, 1.997299999999952e-05, 1.9028000000000794e-05, 2.3804999999998272e-05, 2.3763999999999036e-05, 2.4790999999999702e-05, 2.4805999999998746e-05, 2.186100000000149e-05, 2.3790999999998702e-05, 2.5721999999998857e-05, 2.3749999999999466e-05, 2.4791999999999176e-05, 2.291700000000077e-05, 1.9972000000000045e-05, 2.284699999999945e-05, 2.3820000000000785e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.539" endtime="20201112 12:42:22.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.533" endtime="20201112 12:42:22.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.544" endtime="20201112 12:42:22.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.548" endtime="20201112 12:42:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.546" endtime="20201112 12:42:22.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.542" endtime="20201112 12:42:22.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.172" endtime="20201112 12:42:22.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.172" endtime="20201112 12:42:22.569"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.578" endtime="20201112 12:42:22.598"></status>
</kw>
<msg timestamp="20201112 12:42:22.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.576" endtime="20201112 12:42:22.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.599" endtime="20201112 12:42:22.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.602" endtime="20201112 12:42:22.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.574" endtime="20201112 12:42:22.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.571" endtime="20201112 12:42:22.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.612" endtime="20201112 12:42:22.900"></status>
</kw>
<msg timestamp="20201112 12:42:22.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021172458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.611" endtime="20201112 12:42:22.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021172458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.904" endtime="20201112 12:42:22.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.913" endtime="20201112 12:42:22.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.608" endtime="20201112 12:42:22.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.606" endtime="20201112 12:42:22.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.920" level="INFO">${RESULT} = [{'time': 0.021172458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569000000002407e-06, 'source_diff': 7.569000000002407e-06}, {'time': 0.021202958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.916" endtime="20201112 12:42:22.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.934" level="INFO">${ACCURACY} = {'source_diff': [7.569000000002407e-06, 2.4777000000000132e-05, 2.287500000000206e-05, 2.281900000000031e-05, 2.4764000000000036e-05, 2.5750000000001466e-05, 2.1902000000000726e-05, 2.2806000000000215...</msg>
<status status="PASS" starttime="20201112 12:42:22.921" endtime="20201112 12:42:22.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.938" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.937" endtime="20201112 12:42:22.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.941" level="INFO">VALUE: [7.569000000002407e-06, 2.4777000000000132e-05, 2.287500000000206e-05, 2.281900000000031e-05, 2.4764000000000036e-05, 2.5750000000001466e-05, 2.1902000000000726e-05, 2.2806000000000215e-05, 1.9028000000000794e-05, 2.5707999999999287e-05, 2.188900000000063e-05, 2.095900000000095e-05, 2.084699999999745e-05, 1.9013999999997755e-05, 2.287499999999859e-05, 2.4777999999999606e-05, 2.2862000000001964e-05, 2.4736000000000896e-05, 2.3792000000001645e-05, 2.566700000000005e-05, 2.093099999999834e-05, 2.0986000000000615e-05, 2.4777999999999606e-05, 2.0888000000000156e-05, 2.187500000000106e-05, 1.90829999999996e-05, 2.286099999999902e-05, 2.4764000000000036e-05, 1.9014000000001224e-05, 1.9999999999999185e-05, 2.4750000000000466e-05, 2.1944000000002906e-05, 2.3777999999998606e-05, 2.19030000000002e-05, 2.4762999999997093e-05, 2.2819999999999785e-05, 2.0930000000002336e-05, 1.9972000000000045e-05, 2.3805999999997746e-05, 2.0972000000001045e-05, 2.1888000000001157e-05, 1.9930000000001336e-05, 2.4764000000000036e-05, 2.1916000000000296e-05, 2.570899999999876e-05, 2.3777999999998606e-05, 1.902700000000132e-05, 2.0972000000001045e-05, 2.3777999999998606e-05, 1.9944000000000905e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.940" endtime="20201112 12:42:22.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.935" endtime="20201112 12:42:22.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.945" endtime="20201112 12:42:22.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.948" endtime="20201112 12:42:22.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.947" endtime="20201112 12:42:22.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.943" endtime="20201112 12:42:22.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.570" endtime="20201112 12:42:22.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.569" endtime="20201112 12:42:22.970"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.979" endtime="20201112 12:42:22.996"></status>
</kw>
<msg timestamp="20201112 12:42:22.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.977" endtime="20201112 12:42:22.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.997" endtime="20201112 12:42:22.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.000" endtime="20201112 12:42:23.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.974" endtime="20201112 12:42:23.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.972" endtime="20201112 12:42:23.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.011" endtime="20201112 12:42:23.297"></status>
</kw>
<msg timestamp="20201112 12:42:23.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.009" endtime="20201112 12:42:23.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.301" endtime="20201112 12:42:23.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.310" endtime="20201112 12:42:23.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.006" endtime="20201112 12:42:23.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.005" endtime="20201112 12:42:23.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.317" level="INFO">${RESULT} = [{'time': 0.022458819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.022489333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:23.313" endtime="20201112 12:42:23.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.331" level="INFO">${ACCURACY} = {'source_diff': [5.625000000002156e-06, 2.5750000000001466e-05, 2.4777000000000132e-05, 2.0013999999998755e-05, 1.9999999999999185e-05, 2.288900000000163e-05, 2.284699999999945e-05, 2.568099999999962e...</msg>
<status status="PASS" starttime="20201112 12:42:23.318" endtime="20201112 12:42:23.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.336" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.335" endtime="20201112 12:42:23.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.338" level="INFO">VALUE: [5.625000000002156e-06, 2.5750000000001466e-05, 2.4777000000000132e-05, 2.0013999999998755e-05, 1.9999999999999185e-05, 2.288900000000163e-05, 2.284699999999945e-05, 2.568099999999962e-05, 2.2763999999998036e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.186099999999802e-05, 1.9985999999999615e-05, 2.097300000000052e-05, 2.5707999999999287e-05, 2.187500000000106e-05, 1.905500000000046e-05, 2.191699999999977e-05, 2.572299999999833e-05, 1.9028000000000794e-05, 2.666700000000105e-05, 2.1916000000000296e-05, 2.4750000000000466e-05, 2.0915999999999296e-05, 2.4777999999999606e-05, 2.4777000000000132e-05, 2.188900000000063e-05, 2.4777000000000132e-05, 1.997299999999952e-05, 2.0958000000001475e-05, 1.9986000000003085e-05, 1.8985999999998615e-05, 2.3792000000001645e-05, 2.284699999999945e-05, 2.19030000000002e-05, 2.186099999999802e-05, 2.3791999999998176e-05, 2.191700000000324e-05, 2.287500000000206e-05, 2.283299999999988e-05, 2.0943999999998436e-05, 2.4777999999999606e-05, 2.286099999999902e-05, 2.090300000000267e-05, 2.4750000000000466e-05, 2.572299999999833e-05, 2.19030000000002e-05, 2.2776999999998132e-05, 1.9985999999999615e-05, 2.384700000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.337" endtime="20201112 12:42:23.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.332" endtime="20201112 12:42:23.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.342" endtime="20201112 12:42:23.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.346" endtime="20201112 12:42:23.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.344" endtime="20201112 12:42:23.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.340" endtime="20201112 12:42:23.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.970" endtime="20201112 12:42:23.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.970" endtime="20201112 12:42:23.367"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.376" endtime="20201112 12:42:23.392"></status>
</kw>
<msg timestamp="20201112 12:42:23.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.374" endtime="20201112 12:42:23.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.394" endtime="20201112 12:42:23.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.397" endtime="20201112 12:42:23.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.371" endtime="20201112 12:42:23.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.369" endtime="20201112 12:42:23.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.407" endtime="20201112 12:42:23.694"></status>
</kw>
<msg timestamp="20201112 12:42:23.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.406" endtime="20201112 12:42:23.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.698" endtime="20201112 12:42:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.707" endtime="20201112 12:42:23.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.403" endtime="20201112 12:42:23.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.401" endtime="20201112 12:42:23.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.714" level="INFO">${RESULT} = [{'time': 0.022311931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0499999999999278e-05, 'source_diff': 3.0499999999999278e-05}, {'time': 0.022342361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.711" endtime="20201112 12:42:23.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.728" level="INFO">${ACCURACY} = {'source_diff': [3.0499999999999278e-05, 2.0930000000002336e-05, 2.4777999999999606e-05, 2.193099999999934e-05, 2.091699999999877e-05, 2.3763999999999036e-05, 2.0972000000001045e-05, 2.287500000000206...</msg>
<status status="PASS" starttime="20201112 12:42:23.715" endtime="20201112 12:42:23.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.733" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.732" endtime="20201112 12:42:23.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.735" level="INFO">VALUE: [3.0499999999999278e-05, 2.0930000000002336e-05, 2.4777999999999606e-05, 2.193099999999934e-05, 2.091699999999877e-05, 2.3763999999999036e-05, 2.0972000000001045e-05, 2.287500000000206e-05, 1.9999999999999185e-05, 1.9985999999999615e-05, 2.0929999999998866e-05, 2.4777999999999606e-05, 2.0986000000000615e-05, 2.091699999999877e-05, 1.9972000000000045e-05, 2.3777999999998606e-05, 2.3749999999999466e-05, 2.4764000000000036e-05, 2.3819999999997316e-05, 2.2848000000002394e-05, 2.5693999999999717e-05, 1.902699999999785e-05, 2.5735999999998427e-05, 1.9999999999999185e-05, 2.4763000000000562e-05, 1.9999999999999185e-05, 2.093099999999834e-05, 2.284700000000292e-05, 1.997300000000299e-05, 2.186099999999802e-05, 2.5722000000002326e-05, 2.0014000000002224e-05, 1.9042000000000364e-05, 2.5722000000002326e-05, 2.09029999999992e-05, 2.4722000000001326e-05, 2.570899999999876e-05, 2.1901999999997257e-05, 2.5735999999998427e-05, 2.380500000000174e-05, 2.281900000000031e-05, 1.9915999999998296e-05, 2.5763000000001562e-05, 2.5708000000002756e-05, 2.3792000000001645e-05, 2.4834000000001355e-05, 2.4790999999999702e-05, 1.9972000000000045e-05, 2.0916000000002766e-05, 2.3834000000000355e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.734" endtime="20201112 12:42:23.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.729" endtime="20201112 12:42:23.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.739" endtime="20201112 12:42:23.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.743" endtime="20201112 12:42:23.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.741" endtime="20201112 12:42:23.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.737" endtime="20201112 12:42:23.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.368" endtime="20201112 12:42:23.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.367" endtime="20201112 12:42:23.764"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.773" endtime="20201112 12:42:23.794"></status>
</kw>
<msg timestamp="20201112 12:42:23.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.771" endtime="20201112 12:42:23.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.795" endtime="20201112 12:42:23.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.798" endtime="20201112 12:42:23.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.768" endtime="20201112 12:42:23.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.766" endtime="20201112 12:42:23.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.808" endtime="20201112 12:42:24.096"></status>
</kw>
<msg timestamp="20201112 12:42:24.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.807" endtime="20201112 12:42:24.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.100" endtime="20201112 12:42:24.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.109" endtime="20201112 12:42:24.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.804" endtime="20201112 12:42:24.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.802" endtime="20201112 12:42:24.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.116" level="INFO">${RESULT} = [{'time': 0.022165472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.022195722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.112" endtime="20201112 12:42:24.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.131" level="INFO">${ACCURACY} = {'source_diff': [9.499999999999093e-06, 2.288900000000163e-05, 2.184699999999845e-05, 2.5750000000001466e-05, 2.4791999999999176e-05, 2.29030000000012e-05, 1.9999999999999185e-05, 2.094499999999791e-0...</msg>
<status status="PASS" starttime="20201112 12:42:24.117" endtime="20201112 12:42:24.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.136" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.135" endtime="20201112 12:42:24.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.138" level="INFO">VALUE: [9.499999999999093e-06, 2.288900000000163e-05, 2.184699999999845e-05, 2.5750000000001466e-05, 2.4791999999999176e-05, 2.29030000000012e-05, 1.9999999999999185e-05, 2.094499999999791e-05, 2.184699999999845e-05, 2.5749999999997997e-05, 2.4790999999999702e-05, 2.383300000000088e-05, 2.093100000000181e-05, 2.4764000000000036e-05, 2.4806000000002215e-05, 2.3847999999999925e-05, 2.0972000000001045e-05, 2.188900000000063e-05, 2.3790999999998702e-05, 2.1943999999999436e-05, 2.184699999999845e-05, 2.1929999999999866e-05, 2.286099999999902e-05, 2.0972000000001045e-05, 2.191699999999977e-05, 2.19030000000002e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 2.0971999999997576e-05, 2.4806000000002215e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.3790999999998702e-05, 2.0943999999998436e-05, 2.4791999999999176e-05, 2.0986000000000615e-05, 2.570899999999876e-05, 2.097300000000052e-05, 2.0958000000001475e-05, 2.288899999999816e-05, 2.383300000000088e-05, 2.1929999999999866e-05, 2.187500000000106e-05, 2.2833999999999355e-05, 2.4820000000001785e-05, 2.288899999999816e-05, 1.9985999999999615e-05, 2.379100000000217e-05, 2.387499999999959e-05, 2.5764000000001036e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.137" endtime="20201112 12:42:24.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.132" endtime="20201112 12:42:24.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.142" endtime="20201112 12:42:24.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.146" endtime="20201112 12:42:24.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.144" endtime="20201112 12:42:24.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.140" endtime="20201112 12:42:24.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.765" endtime="20201112 12:42:24.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.764" endtime="20201112 12:42:24.167"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.176" endtime="20201112 12:42:24.192"></status>
</kw>
<msg timestamp="20201112 12:42:24.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.174" endtime="20201112 12:42:24.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.193" endtime="20201112 12:42:24.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.196" endtime="20201112 12:42:24.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.171" endtime="20201112 12:42:24.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.169" endtime="20201112 12:42:24.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.207" endtime="20201112 12:42:24.492"></status>
</kw>
<msg timestamp="20201112 12:42:24.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020979556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.205" endtime="20201112 12:42:24.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020979556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.496" endtime="20201112 12:42:24.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.505" endtime="20201112 12:42:24.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.202" endtime="20201112 12:42:24.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.200" endtime="20201112 12:42:24.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.512" level="INFO">${RESULT} = [{'time': 0.020979556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0027999999998325e-05, 'source_diff': 2.0027999999998325e-05}, {'time': 0.021010042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:24.509" endtime="20201112 12:42:24.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.526" level="INFO">${ACCURACY} = {'source_diff': [2.0027999999998325e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.570899999999876e-05, 2.0929999999998866e-05, 1.997299999999952e-05, 2.19030000000002e-05, 2.287500000000206e-...</msg>
<status status="PASS" starttime="20201112 12:42:24.513" endtime="20201112 12:42:24.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.531" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.530" endtime="20201112 12:42:24.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.533" level="INFO">VALUE: [2.0027999999998325e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.570899999999876e-05, 2.0929999999998866e-05, 1.997299999999952e-05, 2.19030000000002e-05, 2.287500000000206e-05, 2.287499999999859e-05, 1.9041999999996895e-05, 2.09029999999992e-05, 2.0888000000000156e-05, 2.3778000000002075e-05, 2.0985999999997146e-05, 2.4722000000001326e-05, 1.9999999999999185e-05, 2.383300000000088e-05, 2.3805999999997746e-05, 2.286099999999902e-05, 2.5778000000000606e-05, 1.994500000000038e-05, 2.0915999999999296e-05, 2.094499999999791e-05, 2.381900000000131e-05, 1.9985999999999615e-05, 2.5792000000000176e-05, 2.4763000000000562e-05, 2.281900000000031e-05, 2.381900000000131e-05, 2.5777000000001132e-05, 2.186099999999802e-05, 2.3820000000000785e-05, 2.0971999999997576e-05, 2.0013999999998755e-05, 2.569500000000266e-05, 1.997299999999952e-05, 2.4735999999997427e-05, 2.4777999999999606e-05, 2.0958000000001475e-05, 2.2862000000001964e-05, 1.9944000000000905e-05, 1.9000000000001654e-05, 2.4722000000001326e-05, 2.4736000000000896e-05, 2.1986000000001615e-05, 2.0013999999998755e-05, 2.0930000000002336e-05, 2.094499999999791e-05, 2.4820000000001785e-05, 1.9999999999999185e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.532" endtime="20201112 12:42:24.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.527" endtime="20201112 12:42:24.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.537" endtime="20201112 12:42:24.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.541" endtime="20201112 12:42:24.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.539" endtime="20201112 12:42:24.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.535" endtime="20201112 12:42:24.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.168" endtime="20201112 12:42:24.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.167" endtime="20201112 12:42:24.562"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.572" endtime="20201112 12:42:24.588"></status>
</kw>
<msg timestamp="20201112 12:42:24.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.570" endtime="20201112 12:42:24.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.590" endtime="20201112 12:42:24.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.593" endtime="20201112 12:42:24.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.567" endtime="20201112 12:42:24.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.565" endtime="20201112 12:42:24.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.603" endtime="20201112 12:42:24.889"></status>
</kw>
<msg timestamp="20201112 12:42:24.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.602" endtime="20201112 12:42:24.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.893" endtime="20201112 12:42:24.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.902" endtime="20201112 12:42:24.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.599" endtime="20201112 12:42:24.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.597" endtime="20201112 12:42:24.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.909" level="INFO">${RESULT} = [{'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0070000000000504e-05, 'source_diff': 2.0070000000000504e-05}, {'time': 0.022939069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:24.905" endtime="20201112 12:42:24.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.923" level="INFO">${ACCURACY} = {'source_diff': [2.0070000000000504e-05, 2.286099999999902e-05, 2.186100000000149e-05, 2.0013999999998755e-05, 2.384700000000045e-05, 1.9972000000000045e-05, 2.19030000000002e-05, 2.0014000000002224e-...</msg>
<status status="PASS" starttime="20201112 12:42:24.910" endtime="20201112 12:42:24.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.928" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.927" endtime="20201112 12:42:24.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.930" level="INFO">VALUE: [2.0070000000000504e-05, 2.286099999999902e-05, 2.186100000000149e-05, 2.0013999999998755e-05, 2.384700000000045e-05, 1.9972000000000045e-05, 2.19030000000002e-05, 2.0014000000002224e-05, 2.4791999999999176e-05, 1.997300000000299e-05, 2.4721999999997857e-05, 2.0957999999998006e-05, 2.3818999999997842e-05, 1.9013999999997755e-05, 2.5721999999998857e-05, 2.191699999999977e-05, 2.0028000000001794e-05, 1.9972000000000045e-05, 2.0013999999998755e-05, 2.384700000000045e-05, 2.5764000000001036e-05, 2.4736000000000896e-05, 2.37770000000026e-05, 2.0971999999997576e-05, 2.0986000000000615e-05, 2.2847999999998925e-05, 1.9944000000000905e-05, 2.088899999999963e-05, 2.3778000000002075e-05, 2.1000000000000185e-05, 2.4764000000000036e-05, 2.3777999999998606e-05, 1.8985999999998615e-05, 2.095900000000095e-05, 2.4791999999999176e-05, 2.4750000000000466e-05, 2.0958000000001475e-05, 2.3820000000000785e-05, 2.0014000000002224e-05, 2.4750000000000466e-05, 2.3818999999997842e-05, 2.3832999999997412e-05, 2.2958000000000006e-05, 1.8971999999999045e-05, 2.2806000000000215e-05, 2.384700000000045e-05, 2.3846999999996982e-05, 2.381900000000131e-05, 2.4708000000001756e-05, 1.904100000000089e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.929" endtime="20201112 12:42:24.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.924" endtime="20201112 12:42:24.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.934" endtime="20201112 12:42:24.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.938" endtime="20201112 12:42:24.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.936" endtime="20201112 12:42:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.932" endtime="20201112 12:42:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.563" endtime="20201112 12:42:24.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.562" endtime="20201112 12:42:24.959"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.968" endtime="20201112 12:42:24.986"></status>
</kw>
<msg timestamp="20201112 12:42:24.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.966" endtime="20201112 12:42:24.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.987" endtime="20201112 12:42:24.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.990" endtime="20201112 12:42:24.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.963" endtime="20201112 12:42:24.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.961" endtime="20201112 12:42:24.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.001" endtime="20201112 12:42:25.287"></status>
</kw>
<msg timestamp="20201112 12:42:25.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.999" endtime="20201112 12:42:25.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.291" endtime="20201112 12:42:25.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.300" endtime="20201112 12:42:25.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.996" endtime="20201112 12:42:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.994" endtime="20201112 12:42:25.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.307" level="INFO">${RESULT} = [{'time': 0.022914014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5235999999998334e-05, 'source_diff': 1.5235999999998334e-05}, {'time': 0.022944514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:25.303" endtime="20201112 12:42:25.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.321" level="INFO">${ACCURACY} = {'source_diff': [1.5235999999998334e-05, 2.286099999999902e-05, 2.4791999999999176e-05, 2.286099999999902e-05, 2.191699999999977e-05, 2.3834000000000355e-05, 1.9000000000001654e-05, 1.9985999999999615...</msg>
<status status="PASS" starttime="20201112 12:42:25.308" endtime="20201112 12:42:25.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.326" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.324" endtime="20201112 12:42:25.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.328" level="INFO">VALUE: [1.5235999999998334e-05, 2.286099999999902e-05, 2.4791999999999176e-05, 2.286099999999902e-05, 2.191699999999977e-05, 2.3834000000000355e-05, 1.9000000000001654e-05, 1.9985999999999615e-05, 2.184700000000192e-05, 2.3806000000001215e-05, 2.383300000000088e-05, 2.2916000000001296e-05, 2.2902000000001727e-05, 2.093100000000181e-05, 2.4777999999999606e-05, 2.3806000000001215e-05, 2.288900000000163e-05, 2.2833999999999355e-05, 2.19030000000002e-05, 2.191699999999977e-05, 2.0944000000001906e-05, 2.1929999999999866e-05, 2.4750000000000466e-05, 2.194499999999891e-05, 1.8957999999999475e-05, 2.093099999999834e-05, 1.905500000000046e-05, 2.0055999999997465e-05, 1.9999999999999185e-05, 2.0986000000000615e-05, 2.097299999999705e-05, 2.5680000000000147e-05, 2.381900000000131e-05, 2.3834000000000355e-05, 2.569499999999919e-05, 1.9930000000001336e-05, 2.4721999999997857e-05, 2.095900000000095e-05, 2.5749999999997997e-05, 2.005499999999799e-05, 2.188900000000063e-05, 2.1916000000000296e-05, 1.9958000000000475e-05, 2.0014000000002224e-05, 2.4778000000003075e-05, 1.9985999999999615e-05, 2.0957999999998006e-05, 2.5750000000001466e-05, 2.5735999999998427e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.327" endtime="20201112 12:42:25.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.322" endtime="20201112 12:42:25.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.332" endtime="20201112 12:42:25.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.336" endtime="20201112 12:42:25.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.334" endtime="20201112 12:42:25.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.330" endtime="20201112 12:42:25.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.960" endtime="20201112 12:42:25.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.959" endtime="20201112 12:42:25.357"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.366" endtime="20201112 12:42:25.382"></status>
</kw>
<msg timestamp="20201112 12:42:25.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.364" endtime="20201112 12:42:25.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.383" endtime="20201112 12:42:25.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.386" endtime="20201112 12:42:25.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.361" endtime="20201112 12:42:25.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.359" endtime="20201112 12:42:25.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.397" endtime="20201112 12:42:25.682"></status>
</kw>
<msg timestamp="20201112 12:42:25.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:25.395" endtime="20201112 12:42:25.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:25.687" endtime="20201112 12:42:25.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.695" endtime="20201112 12:42:25.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.392" endtime="20201112 12:42:25.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.390" endtime="20201112 12:42:25.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.702" level="INFO">${RESULT} = [{'time': 0.0217295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0985999999997146e-05, 'source_diff': 2.0985999999997146e-05}, {'time': 0.021759903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.698" endtime="20201112 12:42:25.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.717" level="INFO">${ACCURACY} = {'source_diff': [2.0985999999997146e-05, 2.191699999999977e-05, 2.4736000000000896e-05, 2.3763999999999036e-05, 2.09029999999992e-05, 2.29169999999973e-05, 1.997299999999952e-05, 2.4764000000000036e-0...</msg>
<status status="PASS" starttime="20201112 12:42:25.703" endtime="20201112 12:42:25.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.722" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.721" endtime="20201112 12:42:25.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.724" level="INFO">VALUE: [2.0985999999997146e-05, 2.191699999999977e-05, 2.4736000000000896e-05, 2.3763999999999036e-05, 2.09029999999992e-05, 2.29169999999973e-05, 1.997299999999952e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.286099999999902e-05, 2.4790999999999702e-05, 2.4777999999999606e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 2.3806000000001215e-05, 2.3806000000001215e-05, 2.088899999999963e-05, 1.9929999999997866e-05, 2.383300000000088e-05, 2.286100000000249e-05, 2.284699999999945e-05, 2.2778000000001075e-05, 2.187500000000106e-05, 2.284699999999945e-05, 2.294499999999991e-05, 2.2902000000001727e-05, 2.093099999999834e-05, 2.188900000000063e-05, 1.9985999999999615e-05, 2.3806000000001215e-05, 2.5722000000002326e-05, 2.195900000000195e-05, 2.4693999999998717e-05, 2.19030000000002e-05, 2.193099999999934e-05, 1.90829999999996e-05, 2.188900000000063e-05, 2.4777999999999606e-05, 2.3806000000001215e-05, 2.5707999999999287e-05, 1.9985999999999615e-05, 2.4777000000000132e-05, 2.4736000000000896e-05, 2.0958000000001475e-05, 1.9014000000001224e-05, 1.9999999999999185e-05, 2.5778000000000606e-05, 2.484700000000145e-05, 2.0944000000001906e-05, 2.287499999999859e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.723" endtime="20201112 12:42:25.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.718" endtime="20201112 12:42:25.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.728" endtime="20201112 12:42:25.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.732" endtime="20201112 12:42:25.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.730" endtime="20201112 12:42:25.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.727" endtime="20201112 12:42:25.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.358" endtime="20201112 12:42:25.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.357" endtime="20201112 12:42:25.753"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.762" endtime="20201112 12:42:25.778"></status>
</kw>
<msg timestamp="20201112 12:42:25.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.760" endtime="20201112 12:42:25.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.780" endtime="20201112 12:42:25.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.782" endtime="20201112 12:42:25.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.758" endtime="20201112 12:42:25.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.755" endtime="20201112 12:42:25.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.793" endtime="20201112 12:42:26.079"></status>
</kw>
<msg timestamp="20201112 12:42:26.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.791" endtime="20201112 12:42:26.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.083" endtime="20201112 12:42:26.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.092" endtime="20201112 12:42:26.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.789" endtime="20201112 12:42:26.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.787" endtime="20201112 12:42:26.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.099" level="INFO">${RESULT} = [{'time': 0.022590069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9611000000002302e-05, 'source_diff': 2.9611000000002302e-05}, {'time': 0.022620278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.095" endtime="20201112 12:42:26.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.113" level="INFO">${ACCURACY} = {'source_diff': [2.9611000000002302e-05, 1.995899999999995e-05, 2.287500000000206e-05, 2.5735999999998427e-05, 2.097299999999705e-05, 2.0027999999998325e-05, 2.383300000000088e-05, 2.4764000000000036e...</msg>
<status status="PASS" starttime="20201112 12:42:26.100" endtime="20201112 12:42:26.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.117" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.116" endtime="20201112 12:42:26.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.120" level="INFO">VALUE: [2.9611000000002302e-05, 1.995899999999995e-05, 2.287500000000206e-05, 2.5735999999998427e-05, 2.097299999999705e-05, 2.0027999999998325e-05, 2.383300000000088e-05, 2.4764000000000036e-05, 2.0013999999998755e-05, 1.905500000000046e-05, 2.384700000000045e-05, 1.9985999999999615e-05, 2.5764000000001036e-05, 2.287500000000206e-05, 2.3791999999998176e-05, 2.186100000000149e-05, 2.4777000000000132e-05, 2.0013999999998755e-05, 2.091699999999877e-05, 1.9999999999999185e-05, 2.5764000000001036e-05, 2.1902000000000726e-05, 2.386100000000002e-05, 1.9985999999999615e-05, 2.3820000000000785e-05, 2.39030000000022e-05, 2.5749999999997997e-05, 2.286099999999902e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.5749999999997997e-05, 2.4834000000001355e-05, 1.997300000000299e-05, 2.5693999999999717e-05, 2.0000000000002655e-05, 2.5749999999997997e-05, 2.0957999999998006e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.4820000000001785e-05, 1.995899999999995e-05, 2.570900000000223e-05, 2.1916000000000296e-05, 2.383300000000088e-05, 2.3791999999998176e-05, 2.288899999999816e-05, 1.9999999999999185e-05, 1.9986000000003085e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.119" endtime="20201112 12:42:26.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.114" endtime="20201112 12:42:26.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.124" endtime="20201112 12:42:26.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.128" endtime="20201112 12:42:26.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.126" endtime="20201112 12:42:26.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.122" endtime="20201112 12:42:26.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.754" endtime="20201112 12:42:26.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.753" endtime="20201112 12:42:26.149"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.158" endtime="20201112 12:42:26.178"></status>
</kw>
<msg timestamp="20201112 12:42:26.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.156" endtime="20201112 12:42:26.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.179" endtime="20201112 12:42:26.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.182" endtime="20201112 12:42:26.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.153" endtime="20201112 12:42:26.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.151" endtime="20201112 12:42:26.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.192" endtime="20201112 12:42:26.478"></status>
</kw>
<msg timestamp="20201112 12:42:26.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.191" endtime="20201112 12:42:26.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.482" endtime="20201112 12:42:26.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.491" endtime="20201112 12:42:26.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.188" endtime="20201112 12:42:26.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.186" endtime="20201112 12:42:26.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.498" level="INFO">${RESULT} = [{'time': 0.023693931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9570000000003066e-05, 'source_diff': 2.9570000000003066e-05}, {'time': 0.023725042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.494" endtime="20201112 12:42:26.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.512" level="INFO">${ACCURACY} = {'source_diff': [2.9570000000003066e-05, 2.093099999999834e-05, 2.3834000000000355e-05, 2.5764000000001036e-05, 2.1929999999999866e-05, 2.087500000000006e-05, 2.4708000000001756e-05, 2.095799999999800...</msg>
<status status="PASS" starttime="20201112 12:42:26.499" endtime="20201112 12:42:26.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.517" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.516" endtime="20201112 12:42:26.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.519" level="INFO">VALUE: [2.9570000000003066e-05, 2.093099999999834e-05, 2.3834000000000355e-05, 2.5764000000001036e-05, 2.1929999999999866e-05, 2.087500000000006e-05, 2.4708000000001756e-05, 2.0957999999998006e-05, 1.9069999999999504e-05, 2.283299999999988e-05, 2.183300000000235e-05, 2.2833999999999355e-05, 2.191699999999977e-05, 2.094500000000138e-05, 2.3818999999997842e-05, 1.9070000000002973e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.5693999999999717e-05, 2.0943999999998436e-05, 2.3806000000001215e-05, 2.283299999999988e-05, 1.9055999999999934e-05, 2.097300000000052e-05, 1.994500000000038e-05, 2.4777999999999606e-05, 2.0014000000002224e-05, 2.470900000000123e-05, 2.1902000000000726e-05, 2.5750000000001466e-05, 1.9999999999999185e-05, 2.486100000000102e-05, 2.08890000000031e-05, 2.2819999999999785e-05, 2.4764000000000036e-05, 2.093100000000181e-05, 2.088899999999963e-05, 2.287499999999859e-05, 2.480500000000274e-05, 2.569499999999919e-05, 2.4735999999997427e-05, 2.3818999999997842e-05, 2.191699999999977e-05, 2.2847999999998925e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.3790999999998702e-05, 2.4763000000000562e-05, 1.9999999999999185e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.518" endtime="20201112 12:42:26.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.513" endtime="20201112 12:42:26.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.527" endtime="20201112 12:42:26.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.531" endtime="20201112 12:42:26.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.529" endtime="20201112 12:42:26.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.525" endtime="20201112 12:42:26.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.149" endtime="20201112 12:42:26.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.149" endtime="20201112 12:42:26.552"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.561" endtime="20201112 12:42:26.578"></status>
</kw>
<msg timestamp="20201112 12:42:26.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.559" endtime="20201112 12:42:26.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.579" endtime="20201112 12:42:26.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.582" endtime="20201112 12:42:26.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.557" endtime="20201112 12:42:26.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.554" endtime="20201112 12:42:26.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.593" endtime="20201112 12:42:26.880"></status>
</kw>
<msg timestamp="20201112 12:42:26.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:26.592" endtime="20201112 12:42:26.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:26.884" endtime="20201112 12:42:26.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.892" endtime="20201112 12:42:26.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.589" endtime="20201112 12:42:26.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.587" endtime="20201112 12:42:26.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.899" level="INFO">${RESULT} = [{'time': 0.022539625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.022569694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.896" endtime="20201112 12:42:26.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.913" level="INFO">${ACCURACY} = {'source_diff': [2.7624999999999872e-05, 2.4777000000000132e-05, 2.4792000000002645e-05, 2.383300000000088e-05, 2.19030000000002e-05, 2.3776999999999132e-05, 2.186099999999802e-05, 1.9055999999999934e...</msg>
<status status="PASS" starttime="20201112 12:42:26.900" endtime="20201112 12:42:26.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.918" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.917" endtime="20201112 12:42:26.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.921" level="INFO">VALUE: [2.7624999999999872e-05, 2.4777000000000132e-05, 2.4792000000002645e-05, 2.383300000000088e-05, 2.19030000000002e-05, 2.3776999999999132e-05, 2.186099999999802e-05, 1.9055999999999934e-05, 2.5791000000000702e-05, 2.004099999999842e-05, 2.4736000000000896e-05, 2.380500000000174e-05, 2.3763999999999036e-05, 2.4777000000000132e-05, 2.479100000000317e-05, 2.5679999999996678e-05, 2.283299999999988e-05, 2.2833999999999355e-05, 2.0958000000001475e-05, 2.381900000000131e-05, 2.3832999999997412e-05, 2.4736000000000896e-05, 2.2819999999999785e-05, 2.284699999999945e-05, 2.0013999999998755e-05, 2.1929999999999866e-05, 2.4805999999998746e-05, 1.9000000000001654e-05, 2.5707999999999287e-05, 1.9013999999997755e-05, 2.4791999999999176e-05, 2.291700000000077e-05, 2.3804999999998272e-05, 2.2930000000000866e-05, 2.287499999999859e-05, 2.569499999999919e-05, 2.186100000000149e-05, 2.4791999999999176e-05, 2.0929999999998866e-05, 2.0013999999998755e-05, 2.4791999999999176e-05, 2.5707999999999287e-05, 2.4735999999997427e-05, 2.5736000000001896e-05, 2.1916000000000296e-05, 2.094499999999791e-05, 2.568099999999962e-05, 2.5736000000001896e-05, 2.381900000000131e-05, 2.484700000000145e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.919" endtime="20201112 12:42:26.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.914" endtime="20201112 12:42:26.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.925" endtime="20201112 12:42:26.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.928" endtime="20201112 12:42:26.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.927" endtime="20201112 12:42:26.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.923" endtime="20201112 12:42:26.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.553" endtime="20201112 12:42:26.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.552" endtime="20201112 12:42:26.949"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.958" endtime="20201112 12:42:26.978"></status>
</kw>
<msg timestamp="20201112 12:42:26.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.957" endtime="20201112 12:42:26.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.979" endtime="20201112 12:42:26.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.982" endtime="20201112 12:42:26.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.954" endtime="20201112 12:42:26.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.952" endtime="20201112 12:42:26.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.992" endtime="20201112 12:42:27.278"></status>
</kw>
<msg timestamp="20201112 12:42:27.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.991" endtime="20201112 12:42:27.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.282" endtime="20201112 12:42:27.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.291" endtime="20201112 12:42:27.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.988" endtime="20201112 12:42:27.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.986" endtime="20201112 12:42:27.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.298" level="INFO">${RESULT} = [{'time': 0.021904097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5304999999999365e-05, 'source_diff': 3.5304999999999365e-05}, {'time': 0.021935208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:27.294" endtime="20201112 12:42:27.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.313" level="INFO">${ACCURACY} = {'source_diff': [3.5304999999999365e-05, 2.4777000000000132e-05, 2.286099999999902e-05, 2.4777999999999606e-05, 2.187499999999759e-05, 2.286100000000249e-05, 2.0972000000001045e-05, 2.191699999999977e...</msg>
<status status="PASS" starttime="20201112 12:42:27.299" endtime="20201112 12:42:27.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.318" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.316" endtime="20201112 12:42:27.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.320" level="INFO">VALUE: [3.5304999999999365e-05, 2.4777000000000132e-05, 2.286099999999902e-05, 2.4777999999999606e-05, 2.187499999999759e-05, 2.286100000000249e-05, 2.0972000000001045e-05, 2.191699999999977e-05, 2.381900000000131e-05, 2.095899999999748e-05, 2.2944000000000436e-05, 2.0027999999998325e-05, 2.5721999999998857e-05, 1.9985999999999615e-05, 2.379100000000217e-05, 2.094499999999791e-05, 2.2862000000001964e-05, 1.9985999999999615e-05, 2.288899999999816e-05, 2.2819999999999785e-05, 1.997299999999952e-05, 2.3820000000000785e-05, 1.9042000000000364e-05, 1.9972000000000045e-05, 1.904099999999742e-05, 2.191699999999977e-05, 2.19030000000002e-05, 2.4790999999999702e-05, 2.095900000000095e-05, 2.0972000000001045e-05, 2.473700000000037e-05, 2.08890000000031e-05, 2.381900000000131e-05, 2.195899999999848e-05, 2.5776999999997663e-05, 2.2862000000001964e-05, 2.006900000000103e-05, 2.4777999999999606e-05, 2.570899999999876e-05, 2.093099999999834e-05, 2.4777000000000132e-05, 2.3818999999997842e-05, 2.386100000000002e-05, 2.3806000000001215e-05, 2.1861999999997495e-05, 2.281900000000031e-05, 2.287499999999859e-05, 2.187500000000106e-05, 2.5722000000002326e-05, 2.0013999999998755e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.319" endtime="20201112 12:42:27.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.314" endtime="20201112 12:42:27.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.324" endtime="20201112 12:42:27.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.328" endtime="20201112 12:42:27.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.326" endtime="20201112 12:42:27.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.322" endtime="20201112 12:42:27.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.950" endtime="20201112 12:42:27.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.949" endtime="20201112 12:42:27.349"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.358" endtime="20201112 12:42:27.376"></status>
</kw>
<msg timestamp="20201112 12:42:27.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.356" endtime="20201112 12:42:27.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.378" endtime="20201112 12:42:27.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.380" endtime="20201112 12:42:27.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.353" endtime="20201112 12:42:27.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.351" endtime="20201112 12:42:27.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.391" endtime="20201112 12:42:27.678"></status>
</kw>
<msg timestamp="20201112 12:42:27.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.389" endtime="20201112 12:42:27.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.682" endtime="20201112 12:42:27.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.691" endtime="20201112 12:42:27.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.387" endtime="20201112 12:42:27.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.385" endtime="20201112 12:42:27.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.698" level="INFO">${RESULT} = [{'time': 0.024198042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5249999999997904e-05, 'source_diff': 1.5249999999997904e-05}, {'time': 0.0242285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:27.694" endtime="20201112 12:42:27.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.712" level="INFO">${ACCURACY} = {'source_diff': [1.5249999999997904e-05, 2.4805999999998746e-05, 2.0013999999998755e-05, 2.4778000000003075e-05, 2.287500000000206e-05, 2.0957999999998006e-05, 2.4791999999999176e-05, 2.19030000000002...</msg>
<status status="PASS" starttime="20201112 12:42:27.699" endtime="20201112 12:42:27.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.717" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.716" endtime="20201112 12:42:27.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.719" level="INFO">VALUE: [1.5249999999997904e-05, 2.4805999999998746e-05, 2.0013999999998755e-05, 2.4778000000003075e-05, 2.287500000000206e-05, 2.0957999999998006e-05, 2.4791999999999176e-05, 2.19030000000002e-05, 2.2902000000001727e-05, 1.9999999999999185e-05, 2.4777999999999606e-05, 1.8986000000002085e-05, 2.0915999999999296e-05, 2.0972000000001045e-05, 1.906900000000003e-05, 1.9985999999999615e-05, 2.093099999999834e-05, 2.095899999999748e-05, 2.5749999999997997e-05, 1.904100000000089e-05, 2.0957999999998006e-05, 2.5764000000001036e-05, 2.19030000000002e-05, 2.193099999999934e-05, 2.0028000000001794e-05, 2.283299999999988e-05, 2.4736000000000896e-05, 2.095900000000095e-05, 2.191699999999977e-05, 2.094500000000138e-05, 2.3820000000000785e-05, 2.0943999999998436e-05, 2.191699999999977e-05, 2.4722000000001326e-05, 2.188900000000063e-05, 2.287499999999859e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.4764000000000036e-05, 2.0930000000002336e-05, 2.5750000000001466e-05, 1.997300000000299e-05, 2.5763000000001562e-05, 2.19030000000002e-05, 2.093100000000181e-05, 2.3792000000001645e-05, 2.387500000000306e-05, 2.0014000000002224e-05, 1.9999999999999185e-05, 1.9000000000001654e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.718" endtime="20201112 12:42:27.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.713" endtime="20201112 12:42:27.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.723" endtime="20201112 12:42:27.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.727" endtime="20201112 12:42:27.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.725" endtime="20201112 12:42:27.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.721" endtime="20201112 12:42:27.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.350" endtime="20201112 12:42:27.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.349" endtime="20201112 12:42:27.748"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.757" endtime="20201112 12:42:27.773"></status>
</kw>
<msg timestamp="20201112 12:42:27.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.755" endtime="20201112 12:42:27.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.774" endtime="20201112 12:42:27.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.777" endtime="20201112 12:42:27.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.752" endtime="20201112 12:42:27.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.750" endtime="20201112 12:42:27.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.788" endtime="20201112 12:42:28.076"></status>
</kw>
<msg timestamp="20201112 12:42:28.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.786" endtime="20201112 12:42:28.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.080" endtime="20201112 12:42:28.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.089" endtime="20201112 12:42:28.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.783" endtime="20201112 12:42:28.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.781" endtime="20201112 12:42:28.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.096" level="INFO">${RESULT} = [{'time': 0.022098056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.248700000000118e-05, 'source_diff': 3.248700000000118e-05}, {'time': 0.022128458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.092" endtime="20201112 12:42:28.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.110" level="INFO">${ACCURACY} = {'source_diff': [3.248700000000118e-05, 2.380500000000174e-05, 2.2819999999999785e-05, 2.2833999999999355e-05, 2.283299999999988e-05, 2.4790999999999702e-05, 2.0944000000001906e-05, 2.286099999999902e...</msg>
<status status="PASS" starttime="20201112 12:42:28.097" endtime="20201112 12:42:28.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.115" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.113" endtime="20201112 12:42:28.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.117" level="INFO">VALUE: [3.248700000000118e-05, 2.380500000000174e-05, 2.2819999999999785e-05, 2.2833999999999355e-05, 2.283299999999988e-05, 2.4790999999999702e-05, 2.0944000000001906e-05, 2.286099999999902e-05, 2.4750000000000466e-05, 2.09029999999992e-05, 2.287500000000206e-05, 2.4777999999999606e-05, 2.4721999999997857e-05, 2.091700000000224e-05, 1.9041999999996895e-05, 2.287500000000206e-05, 1.9985999999999615e-05, 2.0056000000000934e-05, 2.5749999999997997e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.3735999999999896e-05, 2.0944000000001906e-05, 2.286100000000249e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.2916000000001296e-05, 1.9055999999999934e-05, 2.383300000000088e-05, 2.5736000000001896e-05, 2.4750000000000466e-05, 1.9972000000000045e-05, 2.4804999999999272e-05, 1.990300000000167e-05, 2.0013999999998755e-05, 2.384700000000045e-05, 2.383300000000088e-05, 2.287499999999859e-05, 2.283299999999988e-05, 2.286100000000249e-05, 2.094500000000138e-05, 2.0013999999998755e-05, 2.3818999999997842e-05, 2.286099999999902e-05, 2.3805999999997746e-05, 1.9972000000000045e-05, 2.184699999999845e-05, 2.187500000000106e-05, 2.5778000000000606e-05, 2.29030000000012e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.116" endtime="20201112 12:42:28.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.111" endtime="20201112 12:42:28.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.121" endtime="20201112 12:42:28.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.124" endtime="20201112 12:42:28.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.123" endtime="20201112 12:42:28.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.119" endtime="20201112 12:42:28.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.749" endtime="20201112 12:42:28.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.748" endtime="20201112 12:42:28.146"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.155" endtime="20201112 12:42:28.175"></status>
</kw>
<msg timestamp="20201112 12:42:28.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.153" endtime="20201112 12:42:28.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.176" endtime="20201112 12:42:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.179" endtime="20201112 12:42:28.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.150" endtime="20201112 12:42:28.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.148" endtime="20201112 12:42:28.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.189" endtime="20201112 12:42:28.477"></status>
</kw>
<msg timestamp="20201112 12:42:28.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021232361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021249472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.188" endtime="20201112 12:42:28.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021232361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021249472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.482" endtime="20201112 12:42:28.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.490" endtime="20201112 12:42:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.185" endtime="20201112 12:42:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.183" endtime="20201112 12:42:28.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.497" level="INFO">${RESULT} = [{'time': 0.021249472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.711099999999674e-05, 'source_diff': 1.711099999999674e-05}, {'time': 0.021280292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.493" endtime="20201112 12:42:28.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.511" level="INFO">${ACCURACY} = {'source_diff': [1.711099999999674e-05, 2.2847999999998925e-05, 2.570899999999876e-05, 2.3778000000002075e-05, 2.4777999999999606e-05, 1.995899999999995e-05, 2.570899999999876e-05, 1.902700000000132e-...</msg>
<status status="PASS" starttime="20201112 12:42:28.498" endtime="20201112 12:42:28.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.516" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.515" endtime="20201112 12:42:28.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.518" level="INFO">VALUE: [1.711099999999674e-05, 2.2847999999998925e-05, 2.570899999999876e-05, 2.3778000000002075e-05, 2.4777999999999606e-05, 1.995899999999995e-05, 2.570899999999876e-05, 1.902700000000132e-05, 2.4804999999999272e-05, 2.1943999999999436e-05, 1.9943999999997436e-05, 2.4819999999998316e-05, 2.5707999999999287e-05, 2.288900000000163e-05, 2.19030000000002e-05, 2.0986000000000615e-05, 2.1943999999999436e-05, 2.191699999999977e-05, 2.3791999999998176e-05, 2.186099999999802e-05, 2.5694000000003187e-05, 2.4736000000000896e-05, 2.094500000000138e-05, 2.287499999999859e-05, 2.091699999999877e-05, 2.19030000000002e-05, 2.3806000000001215e-05, 1.994500000000038e-05, 1.9999999999999185e-05, 2.3820000000000785e-05, 2.386100000000002e-05, 2.187499999999759e-05, 1.9069999999999504e-05, 2.3861999999999495e-05, 1.9972000000000045e-05, 2.0986000000000615e-05, 2.288900000000163e-05, 2.4791999999999176e-05, 2.6749999999998997e-05, 2.091699999999877e-05, 2.4764000000000036e-05, 2.4805999999998746e-05, 2.187500000000106e-05, 2.0915999999999296e-05, 2.387500000000306e-05, 2.291700000000077e-05, 2.4832999999998412e-05, 2.3763999999999036e-05, 2.095900000000095e-05, 2.3804999999998272e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.517" endtime="20201112 12:42:28.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.512" endtime="20201112 12:42:28.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.522" endtime="20201112 12:42:28.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.526" endtime="20201112 12:42:28.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.524" endtime="20201112 12:42:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.520" endtime="20201112 12:42:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.147" endtime="20201112 12:42:28.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.146" endtime="20201112 12:42:28.547"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.556" endtime="20201112 12:42:28.572"></status>
</kw>
<msg timestamp="20201112 12:42:28.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.554" endtime="20201112 12:42:28.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.574" endtime="20201112 12:42:28.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.577" endtime="20201112 12:42:28.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.551" endtime="20201112 12:42:28.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.549" endtime="20201112 12:42:28.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.587" endtime="20201112 12:42:28.873"></status>
</kw>
<msg timestamp="20201112 12:42:28.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.585" endtime="20201112 12:42:28.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.877" endtime="20201112 12:42:28.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.886" endtime="20201112 12:42:28.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.583" endtime="20201112 12:42:28.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.581" endtime="20201112 12:42:28.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.893" level="INFO">${RESULT} = [{'time': 0.021987125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8999999999998185e-05, 'source_diff': 1.8999999999998185e-05}, {'time': 0.022017097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:28.889" endtime="20201112 12:42:28.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.908" level="INFO">${ACCURACY} = {'source_diff': [1.8999999999998185e-05, 2.0013999999998755e-05, 2.0943999999998436e-05, 2.2806000000000215e-05, 2.380500000000174e-05, 1.9999999999999185e-05, 2.193100000000281e-05, 2.475000000000046...</msg>
<status status="PASS" starttime="20201112 12:42:28.894" endtime="20201112 12:42:28.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.913" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.912" endtime="20201112 12:42:28.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.916" level="INFO">VALUE: [1.8999999999998185e-05, 2.0013999999998755e-05, 2.0943999999998436e-05, 2.2806000000000215e-05, 2.380500000000174e-05, 1.9999999999999185e-05, 2.193100000000281e-05, 2.4750000000000466e-05, 2.284699999999945e-05, 2.3846999999996982e-05, 2.0972000000001045e-05, 2.0972000000001045e-05, 1.9985999999999615e-05, 2.570899999999876e-05, 2.190299999999673e-05, 2.4750000000000466e-05, 2.3792000000001645e-05, 2.386100000000002e-05, 2.094500000000138e-05, 2.3806000000001215e-05, 2.3805999999997746e-05, 2.4777999999999606e-05, 2.193099999999934e-05, 2.193099999999934e-05, 2.5707999999999287e-05, 2.188900000000063e-05, 2.094500000000138e-05, 2.191699999999977e-05, 2.4791999999999176e-05, 2.5750000000001466e-05, 1.905500000000046e-05, 2.091700000000224e-05, 2.0972000000001045e-05, 2.191699999999977e-05, 2.5693999999999717e-05, 2.284699999999945e-05, 2.0943999999998436e-05, 2.0972000000001045e-05, 2.4818999999998842e-05, 2.286100000000249e-05, 2.29030000000012e-05, 2.0986000000000615e-05, 2.0013999999998755e-05, 2.386100000000002e-05, 1.9972000000000045e-05, 2.2833999999999355e-05, 2.570899999999876e-05, 2.188899999999716e-05, 2.0916000000002766e-05, 2.3763999999999036e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.914" endtime="20201112 12:42:28.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.909" endtime="20201112 12:42:28.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.919" endtime="20201112 12:42:28.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.923" endtime="20201112 12:42:28.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.921" endtime="20201112 12:42:28.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.918" endtime="20201112 12:42:28.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.548" endtime="20201112 12:42:28.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.547" endtime="20201112 12:42:28.944"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.953" endtime="20201112 12:42:28.969"></status>
</kw>
<msg timestamp="20201112 12:42:28.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.951" endtime="20201112 12:42:28.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.970" endtime="20201112 12:42:28.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.973" endtime="20201112 12:42:28.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.949" endtime="20201112 12:42:28.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.946" endtime="20201112 12:42:28.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.984" endtime="20201112 12:42:29.269"></status>
</kw>
<msg timestamp="20201112 12:42:29.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.982" endtime="20201112 12:42:29.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.273" endtime="20201112 12:42:29.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.282" endtime="20201112 12:42:29.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.979" endtime="20201112 12:42:29.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.978" endtime="20201112 12:42:29.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.288" level="INFO">${RESULT} = [{'time': 0.021748458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.526999999997759e-06, 'source_diff': 8.526999999997759e-06}, {'time': 0.021779208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.285" endtime="20201112 12:42:29.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.302" level="INFO">${ACCURACY} = {'source_diff': [8.526999999997759e-06, 2.1944000000002906e-05, 2.5777000000001132e-05, 2.288900000000163e-05, 2.095900000000095e-05, 2.287499999999859e-05, 2.1943999999999436e-05, 2.288899999999816e-...</msg>
<status status="PASS" starttime="20201112 12:42:29.290" endtime="20201112 12:42:29.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.307" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.306" endtime="20201112 12:42:29.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.310" level="INFO">VALUE: [8.526999999997759e-06, 2.1944000000002906e-05, 2.5777000000001132e-05, 2.288900000000163e-05, 2.095900000000095e-05, 2.287499999999859e-05, 2.1943999999999436e-05, 2.288899999999816e-05, 2.381900000000131e-05, 2.288899999999816e-05, 2.4764000000000036e-05, 2.4708000000001756e-05, 1.9055999999999934e-05, 2.287499999999859e-05, 2.3818999999997842e-05, 2.0943999999998436e-05, 2.1901999999997257e-05, 2.098700000000009e-05, 2.286099999999902e-05, 2.0014000000002224e-05, 1.8971999999999045e-05, 2.095900000000095e-05, 2.5750000000001466e-05, 2.4790999999999702e-05, 1.9999999999999185e-05, 1.9014000000001224e-05, 2.3834000000000355e-05, 1.9999999999999185e-05, 2.0929999999998866e-05, 2.097300000000052e-05, 2.3763999999999036e-05, 2.19030000000002e-05, 2.4791999999999176e-05, 2.0972000000001045e-05, 2.4778000000003075e-05, 2.194499999999891e-05, 1.9972000000000045e-05, 2.281900000000031e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.093099999999834e-05, 2.5693999999999717e-05, 2.4791999999999176e-05, 2.384700000000045e-05, 2.0000000000002655e-05, 2.0014000000002224e-05, 2.1916000000000296e-05, 2.4777999999999606e-05, 2.4777999999999606e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.308" endtime="20201112 12:42:29.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.303" endtime="20201112 12:42:29.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.314" endtime="20201112 12:42:29.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.317" endtime="20201112 12:42:29.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.316" endtime="20201112 12:42:29.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.312" endtime="20201112 12:42:29.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.945" endtime="20201112 12:42:29.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.944" endtime="20201112 12:42:29.338"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.347" endtime="20201112 12:42:29.370"></status>
</kw>
<msg timestamp="20201112 12:42:29.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.346" endtime="20201112 12:42:29.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.372" endtime="20201112 12:42:29.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.374" endtime="20201112 12:42:29.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.343" endtime="20201112 12:42:29.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.341" endtime="20201112 12:42:29.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.385" endtime="20201112 12:42:29.672"></status>
</kw>
<msg timestamp="20201112 12:42:29.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.383" endtime="20201112 12:42:29.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.677" endtime="20201112 12:42:29.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.685" endtime="20201112 12:42:29.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.381" endtime="20201112 12:42:29.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.379" endtime="20201112 12:42:29.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.692" level="INFO">${RESULT} = [{'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665300000000148e-05, 'source_diff': 2.665300000000148e-05}, {'time': 0.024165653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.689" endtime="20201112 12:42:29.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.706" level="INFO">${ACCURACY} = {'source_diff': [2.665300000000148e-05, 1.9972000000000045e-05, 2.19030000000002e-05, 2.4777999999999606e-05, 2.281900000000031e-05, 2.3735999999999896e-05, 2.2930000000000866e-05, 2.5721999999998857e...</msg>
<status status="PASS" starttime="20201112 12:42:29.693" endtime="20201112 12:42:29.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.711" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.710" endtime="20201112 12:42:29.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.714" level="INFO">VALUE: [2.665300000000148e-05, 1.9972000000000045e-05, 2.19030000000002e-05, 2.4777999999999606e-05, 2.281900000000031e-05, 2.3735999999999896e-05, 2.2930000000000866e-05, 2.5721999999998857e-05, 2.0915999999999296e-05, 2.4750000000000466e-05, 2.4791999999999176e-05, 1.9014000000001224e-05, 2.186099999999802e-05, 1.990300000000167e-05, 2.293100000000034e-05, 2.094499999999791e-05, 2.188900000000063e-05, 2.188900000000063e-05, 1.997299999999952e-05, 2.281900000000031e-05, 2.19030000000002e-05, 2.3819999999997316e-05, 2.191699999999977e-05, 2.283299999999988e-05, 2.281900000000031e-05, 2.284699999999945e-05, 2.093100000000181e-05, 2.2806000000000215e-05, 2.1848000000001394e-05, 2.1915999999996827e-05, 2.3805999999997746e-05, 2.286100000000249e-05, 1.998699999999909e-05, 2.286099999999902e-05, 2.193099999999934e-05, 2.5721999999998857e-05, 2.091699999999877e-05, 2.2818999999996842e-05, 2.19030000000002e-05, 2.1916000000000296e-05, 2.1013999999999755e-05, 2.3806000000001215e-05, 2.187500000000106e-05, 2.5736000000001896e-05, 2.287499999999859e-05, 1.9999999999999185e-05, 1.8985999999998615e-05, 2.191700000000324e-05, 2.279100000000117e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.712" endtime="20201112 12:42:29.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.707" endtime="20201112 12:42:29.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.718" endtime="20201112 12:42:29.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.721" endtime="20201112 12:42:29.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.720" endtime="20201112 12:42:29.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.716" endtime="20201112 12:42:29.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.339" endtime="20201112 12:42:29.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.339" endtime="20201112 12:42:29.742"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.751" endtime="20201112 12:42:29.768"></status>
</kw>
<msg timestamp="20201112 12:42:29.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.750" endtime="20201112 12:42:29.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.770" endtime="20201112 12:42:29.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.773" endtime="20201112 12:42:29.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.747" endtime="20201112 12:42:29.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.745" endtime="20201112 12:42:29.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.783" endtime="20201112 12:42:30.071"></status>
</kw>
<msg timestamp="20201112 12:42:30.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.782" endtime="20201112 12:42:30.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.075" endtime="20201112 12:42:30.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.084" endtime="20201112 12:42:30.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.779" endtime="20201112 12:42:30.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.777" endtime="20201112 12:42:30.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.091" level="INFO">${RESULT} = [{'time': 0.022156097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4818999999998842e-05, 'source_diff': 2.4818999999998842e-05}, {'time': 0.022186833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.087" endtime="20201112 12:42:30.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.105" level="INFO">${ACCURACY} = {'source_diff': [2.4818999999998842e-05, 1.9985999999999615e-05, 2.188900000000063e-05, 2.19030000000002e-05, 1.9972000000000045e-05, 2.3792000000001645e-05, 1.993099999999734e-05, 2.3818999999997842e...</msg>
<status status="PASS" starttime="20201112 12:42:30.092" endtime="20201112 12:42:30.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.109" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.108" endtime="20201112 12:42:30.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.112" level="INFO">VALUE: [2.4818999999998842e-05, 1.9985999999999615e-05, 2.188900000000063e-05, 2.19030000000002e-05, 1.9972000000000045e-05, 2.3792000000001645e-05, 1.993099999999734e-05, 2.3818999999997842e-05, 1.987499999999906e-05, 2.280500000000074e-05, 2.1929999999999866e-05, 2.5749999999997997e-05, 2.2929999999997397e-05, 2.4777999999999606e-05, 1.9972000000000045e-05, 2.5693999999999717e-05, 2.0958000000001475e-05, 1.9013999999997755e-05, 2.4750000000000466e-05, 2.29030000000012e-05, 1.9943999999997436e-05, 2.3790999999998702e-05, 2.3776999999999132e-05, 2.286100000000249e-05, 2.3820000000000785e-05, 2.4846999999997982e-05, 2.0958000000001475e-05, 2.191699999999977e-05, 2.281900000000031e-05, 1.993099999999734e-05, 2.3790999999998702e-05, 2.0972000000001045e-05, 1.9999999999999185e-05, 1.9055999999999934e-05, 2.4750000000000466e-05, 2.5721999999998857e-05, 1.905499999999699e-05, 2.283299999999988e-05, 2.0929999999998866e-05, 2.4778000000003075e-05, 2.5736000000001896e-05, 2.383300000000088e-05, 2.1833999999998355e-05, 1.9999999999999185e-05, 1.9999999999999185e-05, 2.191700000000324e-05, 2.287500000000206e-05, 2.294499999999991e-05, 2.384700000000045e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.110" endtime="20201112 12:42:30.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.106" endtime="20201112 12:42:30.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.116" endtime="20201112 12:42:30.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.119" endtime="20201112 12:42:30.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.118" endtime="20201112 12:42:30.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.114" endtime="20201112 12:42:30.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.743" endtime="20201112 12:42:30.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.743" endtime="20201112 12:42:30.140"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.150" endtime="20201112 12:42:30.165"></status>
</kw>
<msg timestamp="20201112 12:42:30.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.148" endtime="20201112 12:42:30.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.167" endtime="20201112 12:42:30.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.169" endtime="20201112 12:42:30.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.145" endtime="20201112 12:42:30.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.143" endtime="20201112 12:42:30.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.180" endtime="20201112 12:42:30.465"></status>
</kw>
<msg timestamp="20201112 12:42:30.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020830972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.178" endtime="20201112 12:42:30.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020830972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.470" endtime="20201112 12:42:30.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.478" endtime="20201112 12:42:30.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.176" endtime="20201112 12:42:30.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.174" endtime="20201112 12:42:30.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.485" level="INFO">${RESULT} = [{'time': 0.020849056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8084000000001543e-05, 'source_diff': 1.8084000000001543e-05}, {'time': 0.020880097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.482" endtime="20201112 12:42:30.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.500" level="INFO">${ACCURACY} = {'source_diff': [1.8084000000001543e-05, 2.0013999999998755e-05, 2.286099999999902e-05, 1.9985999999999615e-05, 2.4805999999998746e-05, 2.188900000000063e-05, 2.286100000000249e-05, 2.384700000000045e...</msg>
<status status="PASS" starttime="20201112 12:42:30.486" endtime="20201112 12:42:30.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.505" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.504" endtime="20201112 12:42:30.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.507" level="INFO">VALUE: [1.8084000000001543e-05, 2.0013999999998755e-05, 2.286099999999902e-05, 1.9985999999999615e-05, 2.4805999999998746e-05, 2.188900000000063e-05, 2.286100000000249e-05, 2.384700000000045e-05, 1.995899999999995e-05, 1.993100000000081e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.3804999999998272e-05, 1.9999999999999185e-05, 2.284699999999945e-05, 2.390299999999873e-05, 2.290299999999773e-05, 2.3776999999999132e-05, 2.566700000000005e-05, 2.090300000000267e-05, 2.002700000000232e-05, 2.0930000000002336e-05, 2.188900000000063e-05, 2.188900000000063e-05, 2.190299999999673e-05, 1.9999999999999185e-05, 2.2820000000003254e-05, 2.191699999999977e-05, 2.0943999999998436e-05, 2.4694000000002186e-05, 2.2848000000002394e-05, 1.9972000000000045e-05, 2.569499999999919e-05, 2.0958000000001475e-05, 2.286099999999902e-05, 2.5764000000001036e-05, 2.4750000000000466e-05, 2.094500000000138e-05, 2.379100000000217e-05, 2.662500000000234e-05, 2.4777999999999606e-05, 2.19030000000002e-05, 2.3806000000001215e-05, 2.0958000000001475e-05, 2.093099999999834e-05, 1.997300000000299e-05, 2.4790999999999702e-05, 2.4806000000002215e-05, 2.191699999999977e-05, 2.5722000000002326e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.506" endtime="20201112 12:42:30.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.501" endtime="20201112 12:42:30.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.511" endtime="20201112 12:42:30.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.515" endtime="20201112 12:42:30.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.513" endtime="20201112 12:42:30.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.509" endtime="20201112 12:42:30.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.141" endtime="20201112 12:42:30.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.141" endtime="20201112 12:42:30.536"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.545" endtime="20201112 12:42:30.562"></status>
</kw>
<msg timestamp="20201112 12:42:30.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.543" endtime="20201112 12:42:30.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.564" endtime="20201112 12:42:30.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.567" endtime="20201112 12:42:30.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.541" endtime="20201112 12:42:30.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.539" endtime="20201112 12:42:30.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.577" endtime="20201112 12:42:30.865"></status>
</kw>
<msg timestamp="20201112 12:42:30.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.576" endtime="20201112 12:42:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.869" endtime="20201112 12:42:30.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.877" endtime="20201112 12:42:30.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.573" endtime="20201112 12:42:30.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.571" endtime="20201112 12:42:30.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.884" level="INFO">${RESULT} = [{'time': 0.022259153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4374999999999684e-05, 'source_diff': 3.4374999999999684e-05}, {'time': 0.022289431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.881" endtime="20201112 12:42:30.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.899" level="INFO">${ACCURACY} = {'source_diff': [3.4374999999999684e-05, 2.4791999999999176e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.0014000000002224e-05, 2.0943999999998436e-05, 2.379100000000217e-05, 2.187500000000106e...</msg>
<status status="PASS" starttime="20201112 12:42:30.886" endtime="20201112 12:42:30.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.903" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.902" endtime="20201112 12:42:30.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.906" level="INFO">VALUE: [3.4374999999999684e-05, 2.4791999999999176e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.0014000000002224e-05, 2.0943999999998436e-05, 2.379100000000217e-05, 2.187500000000106e-05, 2.5764000000001036e-05, 2.3818999999997842e-05, 2.1848000000001394e-05, 2.3791999999998176e-05, 2.191699999999977e-05, 2.0972000000001045e-05, 2.4777999999999606e-05, 2.5749999999997997e-05, 2.4805999999998746e-05, 2.4777999999999606e-05, 2.3707999999997287e-05, 2.188899999999716e-05, 2.4736000000000896e-05, 2.3806000000001215e-05, 2.09029999999992e-05, 2.4722000000001326e-05, 2.2901999999998257e-05, 2.3819999999997316e-05, 2.095899999999748e-05, 2.0944000000001906e-05, 2.3806000000001215e-05, 2.5750000000001466e-05, 2.1902000000000726e-05, 2.186099999999802e-05, 2.4805999999998746e-05, 2.5750000000001466e-05, 2.1972000000002045e-05, 2.383300000000088e-05, 2.286099999999902e-05, 2.4764000000000036e-05, 2.1916000000000296e-05, 2.288899999999816e-05, 2.473700000000037e-05, 2.188900000000063e-05, 2.293100000000034e-05, 2.5763999999997567e-05, 2.1862000000000964e-05, 2.187500000000106e-05, 2.5749999999997997e-05, 2.3818999999997842e-05, 2.384700000000045e-05, 2.095900000000095e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.904" endtime="20201112 12:42:30.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.900" endtime="20201112 12:42:30.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.910" endtime="20201112 12:42:30.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.913" endtime="20201112 12:42:30.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.912" endtime="20201112 12:42:30.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.908" endtime="20201112 12:42:30.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.537" endtime="20201112 12:42:30.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.536" endtime="20201112 12:42:30.934"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.943" endtime="20201112 12:42:30.958"></status>
</kw>
<msg timestamp="20201112 12:42:30.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.942" endtime="20201112 12:42:30.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.960" endtime="20201112 12:42:30.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.963" endtime="20201112 12:42:30.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.939" endtime="20201112 12:42:30.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.937" endtime="20201112 12:42:30.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.973" endtime="20201112 12:42:31.258"></status>
</kw>
<msg timestamp="20201112 12:42:31.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02086025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:30.972" endtime="20201112 12:42:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02086025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:31.262" endtime="20201112 12:42:31.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.271" endtime="20201112 12:42:31.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.969" endtime="20201112 12:42:31.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.967" endtime="20201112 12:42:31.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.278" level="INFO">${RESULT} = [{'time': 0.020891667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.141699999999886e-05, 'source_diff': 3.141699999999886e-05}, {'time': 0.020922431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:31.275" endtime="20201112 12:42:31.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.292" level="INFO">${ACCURACY} = {'source_diff': [3.141699999999886e-05, 2.195899999999848e-05, 1.9055999999999934e-05, 1.9999999999999185e-05, 2.5749999999997997e-05, 2.1901999999997257e-05, 1.9985999999999615e-05, 2.287499999999859...</msg>
<status status="PASS" starttime="20201112 12:42:31.279" endtime="20201112 12:42:31.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.297" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.296" endtime="20201112 12:42:31.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.300" level="INFO">VALUE: [3.141699999999886e-05, 2.195899999999848e-05, 1.9055999999999934e-05, 1.9999999999999185e-05, 2.5749999999997997e-05, 2.1901999999997257e-05, 1.9985999999999615e-05, 2.287499999999859e-05, 2.4791999999999176e-05, 2.1944000000002906e-05, 1.997299999999952e-05, 2.0944000000001906e-05, 2.4750000000000466e-05, 2.188900000000063e-05, 2.4847999999997455e-05, 2.383300000000088e-05, 2.1929999999999866e-05, 2.284699999999945e-05, 2.3792000000001645e-05, 2.572299999999833e-05, 2.4777999999999606e-05, 2.1957999999999006e-05, 2.2847999999998925e-05, 1.9972000000000045e-05, 2.4750000000000466e-05, 2.1916000000000296e-05, 2.0944000000001906e-05, 2.0958000000001475e-05, 2.4790999999999702e-05, 2.0958000000001475e-05, 2.187499999999759e-05, 2.2862000000001964e-05, 2.0986000000000615e-05, 2.188900000000063e-05, 1.9985999999999615e-05, 2.4777999999999606e-05, 2.091700000000224e-05, 2.3735999999999896e-05, 1.9985999999999615e-05, 1.9055999999999934e-05, 2.4777999999999606e-05, 2.1902000000000726e-05, 2.186100000000149e-05, 2.284699999999945e-05, 2.093100000000181e-05, 2.09029999999992e-05, 2.19030000000002e-05, 2.5736000000001896e-05, 2.188900000000063e-05, 2.093100000000181e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.298" endtime="20201112 12:42:31.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.293" endtime="20201112 12:42:31.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.303" endtime="20201112 12:42:31.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.307" endtime="20201112 12:42:31.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.305" endtime="20201112 12:42:31.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.302" endtime="20201112 12:42:31.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.935" endtime="20201112 12:42:31.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.935" endtime="20201112 12:42:31.328"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.337" endtime="20201112 12:42:31.355"></status>
</kw>
<msg timestamp="20201112 12:42:31.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.336" endtime="20201112 12:42:31.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.357" endtime="20201112 12:42:31.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.359" endtime="20201112 12:42:31.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.333" endtime="20201112 12:42:31.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.331" endtime="20201112 12:42:31.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.370" endtime="20201112 12:42:31.658"></status>
</kw>
<msg timestamp="20201112 12:42:31.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.368" endtime="20201112 12:42:31.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.662" endtime="20201112 12:42:31.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.672" endtime="20201112 12:42:31.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.366" endtime="20201112 12:42:31.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.364" endtime="20201112 12:42:31.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.679" level="INFO">${RESULT} = [{'time': 0.024041181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.024071458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:31.675" endtime="20201112 12:42:31.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.693" level="INFO">${ACCURACY} = {'source_diff': [9.402999999998107e-06, 2.0944000000001906e-05, 2.3749999999999466e-05, 2.3777999999998606e-05, 2.4750000000000466e-05, 2.00830000000006e-05, 2.3791999999998176e-05, 2.191699999999977e...</msg>
<status status="PASS" starttime="20201112 12:42:31.680" endtime="20201112 12:42:31.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.698" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.697" endtime="20201112 12:42:31.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.700" level="INFO">VALUE: [9.402999999998107e-06, 2.0944000000001906e-05, 2.3749999999999466e-05, 2.3777999999998606e-05, 2.4750000000000466e-05, 2.00830000000006e-05, 2.3791999999998176e-05, 2.191699999999977e-05, 2.094500000000138e-05, 2.1916000000000296e-05, 2.0944000000001906e-05, 2.4805999999998746e-05, 2.286099999999902e-05, 2.6665999999998108e-05, 2.4722000000001326e-05, 2.186100000000149e-05, 1.9999999999999185e-05, 2.286099999999902e-05, 2.1901999999997257e-05, 2.3818999999997842e-05, 2.4777999999999606e-05, 2.0000000000002655e-05, 2.4806000000002215e-05, 2.384700000000045e-05, 2.4777999999999606e-05, 2.281900000000031e-05, 2.0013999999998755e-05, 2.3820000000000785e-05, 2.4722000000001326e-05, 2.0013999999998755e-05, 2.094499999999791e-05, 2.4791999999999176e-05, 2.29030000000012e-05, 2.5722000000002326e-05, 2.4777999999999606e-05, 2.0958000000001475e-05, 1.997299999999952e-05, 1.9930000000001336e-05, 2.090300000000267e-05, 1.9999999999999185e-05, 2.0013999999998755e-05, 2.29030000000012e-05, 2.5722000000002326e-05, 2.479100000000317e-05, 1.9999999999999185e-05, 2.191699999999977e-05, 1.9958000000000475e-05, 2.0929999999998866e-05, 2.094500000000138e-05, 2.1944000000002906e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.699" endtime="20201112 12:42:31.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.694" endtime="20201112 12:42:31.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.708" endtime="20201112 12:42:31.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.711" endtime="20201112 12:42:31.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.710" endtime="20201112 12:42:31.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.706" endtime="20201112 12:42:31.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.329" endtime="20201112 12:42:31.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.328" endtime="20201112 12:42:31.732"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.741" endtime="20201112 12:42:31.760"></status>
</kw>
<msg timestamp="20201112 12:42:31.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.740" endtime="20201112 12:42:31.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.761" endtime="20201112 12:42:31.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.764" endtime="20201112 12:42:31.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.737" endtime="20201112 12:42:31.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.735" endtime="20201112 12:42:31.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.774" endtime="20201112 12:42:32.060"></status>
</kw>
<msg timestamp="20201112 12:42:32.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.773" endtime="20201112 12:42:32.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021604417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.064" endtime="20201112 12:42:32.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.073" endtime="20201112 12:42:32.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.770" endtime="20201112 12:42:32.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.768" endtime="20201112 12:42:32.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.080" level="INFO">${RESULT} = [{'time': 0.021604417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5194999999999098e-05, 'source_diff': 1.5194999999999098e-05}, {'time': 0.021634792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:32.076" endtime="20201112 12:42:32.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.095" level="INFO">${ACCURACY} = {'source_diff': [1.5194999999999098e-05, 2.197300000000152e-05, 2.0972000000001045e-05, 2.1901999999997257e-05, 2.4804999999999272e-05, 2.3806000000001215e-05, 2.19030000000002e-05, 2.480500000000274e...</msg>
<status status="PASS" starttime="20201112 12:42:32.081" endtime="20201112 12:42:32.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.100" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.099" endtime="20201112 12:42:32.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.102" level="INFO">VALUE: [1.5194999999999098e-05, 2.197300000000152e-05, 2.0972000000001045e-05, 2.1901999999997257e-05, 2.4804999999999272e-05, 2.3806000000001215e-05, 2.19030000000002e-05, 2.480500000000274e-05, 2.193099999999934e-05, 2.293100000000034e-05, 1.9985999999999615e-05, 2.4749999999996997e-05, 2.097300000000052e-05, 2.0000000000002655e-05, 2.573700000000137e-05, 2.093100000000181e-05, 1.904099999999742e-05, 2.191699999999977e-05, 2.0944000000001906e-05, 2.387499999999959e-05, 2.5693999999999717e-05, 2.3806000000001215e-05, 1.9028000000000794e-05, 2.0013999999998755e-05, 2.4804999999999272e-05, 2.386100000000002e-05, 2.2958000000000006e-05, 2.0027999999998325e-05, 2.5735999999998427e-05, 2.0957999999998006e-05, 2.0028000000001794e-05, 2.383300000000088e-05, 2.0929999999998866e-05, 2.3834000000000355e-05, 2.3834000000000355e-05, 1.9972000000000045e-05, 2.3818999999997842e-05, 2.291700000000077e-05, 2.188899999999716e-05, 2.0014000000002224e-05, 2.191699999999977e-05, 1.9999999999999185e-05, 2.5750000000001466e-05, 2.57230000000018e-05, 2.3820000000000785e-05, 2.5736000000001896e-05, 2.0943999999998436e-05, 2.286099999999902e-05, 2.283299999999988e-05, 2.184700000000192e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.101" endtime="20201112 12:42:32.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.096" endtime="20201112 12:42:32.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.106" endtime="20201112 12:42:32.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.109" endtime="20201112 12:42:32.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.108" endtime="20201112 12:42:32.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.104" endtime="20201112 12:42:32.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.733" endtime="20201112 12:42:32.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.733" endtime="20201112 12:42:32.131"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.140" endtime="20201112 12:42:32.160"></status>
</kw>
<msg timestamp="20201112 12:42:32.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.138" endtime="20201112 12:42:32.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.161" endtime="20201112 12:42:32.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.164" endtime="20201112 12:42:32.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.135" endtime="20201112 12:42:32.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.133" endtime="20201112 12:42:32.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.175" endtime="20201112 12:42:32.460"></status>
</kw>
<msg timestamp="20201112 12:42:32.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025294542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.173" endtime="20201112 12:42:32.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025294542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.464" endtime="20201112 12:42:32.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.473" endtime="20201112 12:42:32.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.170" endtime="20201112 12:42:32.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.169" endtime="20201112 12:42:32.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.480" level="INFO">${RESULT} = [{'time': 0.025302097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.025333153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.476" endtime="20201112 12:42:32.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.494" level="INFO">${ACCURACY} = {'source_diff': [7.554999999999368e-06, 1.995899999999995e-05, 2.383300000000088e-05, 2.3834000000000355e-05, 2.088899999999963e-05, 2.1000000000000185e-05, 2.4792000000002645e-05, 1.904100000000089e-...</msg>
<status status="PASS" starttime="20201112 12:42:32.481" endtime="20201112 12:42:32.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.498" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.497" endtime="20201112 12:42:32.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.501" level="INFO">VALUE: [7.554999999999368e-06, 1.995899999999995e-05, 2.383300000000088e-05, 2.3834000000000355e-05, 2.088899999999963e-05, 2.1000000000000185e-05, 2.4792000000002645e-05, 1.904100000000089e-05, 1.9944000000000905e-05, 2.4790999999999702e-05, 2.4764000000000036e-05, 1.9958000000000475e-05, 2.284700000000292e-05, 2.383300000000088e-05, 2.188900000000063e-05, 2.3791999999998176e-05, 2.19030000000002e-05, 2.19030000000002e-05, 1.9958000000000475e-05, 2.090300000000267e-05, 1.905500000000046e-05, 2.4818999999998842e-05, 2.002700000000232e-05, 1.9985999999999615e-05, 2.0943999999998436e-05, 2.091700000000224e-05, 2.1901999999997257e-05, 2.3848000000003394e-05, 2.3847999999999925e-05, 2.094500000000138e-05, 2.0013999999998755e-05, 2.4764000000000036e-05, 2.2848000000002394e-05, 2.283299999999988e-05, 2.188900000000063e-05, 2.286099999999902e-05, 2.383300000000088e-05, 2.5735999999998427e-05, 2.5722000000002326e-05, 2.0957999999998006e-05, 1.9971999999996576e-05, 1.9958000000000475e-05, 2.480500000000274e-05, 2.0958000000001475e-05, 1.995899999999995e-05, 2.373699999999937e-05, 2.5722000000002326e-05, 2.3804999999998272e-05, 1.9055999999999934e-05, 2.4791999999999176e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.500" endtime="20201112 12:42:32.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.495" endtime="20201112 12:42:32.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.505" endtime="20201112 12:42:32.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.508" endtime="20201112 12:42:32.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.507" endtime="20201112 12:42:32.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.503" endtime="20201112 12:42:32.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.132" endtime="20201112 12:42:32.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.131" endtime="20201112 12:42:32.529"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.538" endtime="20201112 12:42:32.559"></status>
</kw>
<msg timestamp="20201112 12:42:32.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.537" endtime="20201112 12:42:32.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.561" endtime="20201112 12:42:32.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.564" endtime="20201112 12:42:32.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.534" endtime="20201112 12:42:32.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.532" endtime="20201112 12:42:32.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.574" endtime="20201112 12:42:32.861"></status>
</kw>
<msg timestamp="20201112 12:42:32.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:32.573" endtime="20201112 12:42:32.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:32.865" endtime="20201112 12:42:32.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.874" endtime="20201112 12:42:32.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.570" endtime="20201112 12:42:32.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.568" endtime="20201112 12:42:32.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.881" level="INFO">${RESULT} = [{'time': 0.023355028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52779999999997e-05, 'source_diff': 3.52779999999997e-05}, {'time': 0.023385583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:32.877" endtime="20201112 12:42:32.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.895" level="INFO">${ACCURACY} = {'source_diff': [3.52779999999997e-05, 2.0901999999999726e-05, 2.4693999999998717e-05, 2.288899999999816e-05, 2.281900000000031e-05, 2.1929999999999866e-05, 2.0972000000001045e-05, 2.568099999999962e-...</msg>
<status status="PASS" starttime="20201112 12:42:32.882" endtime="20201112 12:42:32.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.899" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.898" endtime="20201112 12:42:32.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.902" level="INFO">VALUE: [3.52779999999997e-05, 2.0901999999999726e-05, 2.4693999999998717e-05, 2.288899999999816e-05, 2.281900000000031e-05, 2.1929999999999866e-05, 2.0972000000001045e-05, 2.568099999999962e-05, 2.5721999999998857e-05, 1.9944000000000905e-05, 2.280500000000074e-05, 2.4805999999998746e-05, 2.0971999999997576e-05, 1.9042000000000364e-05, 2.284699999999945e-05, 2.3806000000001215e-05, 2.0916000000002766e-05, 2.3806000000001215e-05, 2.4764000000000036e-05, 2.4790999999999702e-05, 2.098700000000009e-05, 2.283299999999988e-05, 1.9999999999999185e-05, 2.287499999999859e-05, 2.0985999999997146e-05, 2.5764000000001036e-05, 2.1916000000000296e-05, 2.188899999999716e-05, 2.19030000000002e-05, 2.4790999999999702e-05, 2.5722000000002326e-05, 2.4764000000000036e-05, 2.097300000000052e-05, 2.19030000000002e-05, 2.288900000000163e-05, 1.9985999999999615e-05, 2.3806000000001215e-05, 2.093100000000181e-05, 2.2819999999999785e-05, 2.191699999999977e-05, 2.0972000000001045e-05, 2.2820000000003254e-05, 2.47230000000008e-05, 2.1916000000000296e-05, 2.191699999999977e-05, 2.4736000000000896e-05, 2.0027999999998325e-05, 2.5721999999998857e-05, 1.9985999999999615e-05, 2.186100000000149e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.900" endtime="20201112 12:42:32.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.896" endtime="20201112 12:42:32.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.906" endtime="20201112 12:42:32.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.909" endtime="20201112 12:42:32.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.908" endtime="20201112 12:42:32.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.904" endtime="20201112 12:42:32.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.530" endtime="20201112 12:42:32.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.530" endtime="20201112 12:42:32.930"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.939" endtime="20201112 12:42:32.958"></status>
</kw>
<msg timestamp="20201112 12:42:32.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.938" endtime="20201112 12:42:32.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.959" endtime="20201112 12:42:32.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.962" endtime="20201112 12:42:32.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.935" endtime="20201112 12:42:32.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.933" endtime="20201112 12:42:32.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.973" endtime="20201112 12:42:33.259"></status>
</kw>
<msg timestamp="20201112 12:42:33.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.971" endtime="20201112 12:42:33.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.263" endtime="20201112 12:42:33.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.272" endtime="20201112 12:42:33.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.968" endtime="20201112 12:42:33.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.967" endtime="20201112 12:42:33.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.279" level="INFO">${RESULT} = [{'time': 0.024336014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4347000000000544e-05, 'source_diff': 3.4347000000000544e-05}, {'time': 0.024366556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:33.275" endtime="20201112 12:42:33.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.293" level="INFO">${ACCURACY} = {'source_diff': [3.4347000000000544e-05, 2.3806000000001215e-05, 2.091700000000224e-05, 2.191699999999977e-05, 2.0027999999998325e-05, 2.2929999999997397e-05, 2.5763999999997567e-05, 2.476400000000003...</msg>
<status status="PASS" starttime="20201112 12:42:33.280" endtime="20201112 12:42:33.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.297" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.296" endtime="20201112 12:42:33.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.300" level="INFO">VALUE: [3.4347000000000544e-05, 2.3806000000001215e-05, 2.091700000000224e-05, 2.191699999999977e-05, 2.0027999999998325e-05, 2.2929999999997397e-05, 2.5763999999997567e-05, 2.4764000000000036e-05, 2.2833999999999355e-05, 2.572299999999833e-05, 1.906900000000003e-05, 2.5763000000001562e-05, 2.383300000000088e-05, 1.9027999999997325e-05, 2.287500000000206e-05, 2.4750000000000466e-05, 2.2805999999996746e-05, 2.5707999999999287e-05, 1.995899999999995e-05, 2.0957999999998006e-05, 2.5721999999998857e-05, 2.0972000000001045e-05, 2.193100000000281e-05, 1.9999999999999185e-05, 2.5707999999999287e-05, 2.193099999999934e-05, 2.4777000000000132e-05, 2.3806000000001215e-05, 2.5707999999999287e-05, 1.9985999999999615e-05, 2.0957999999998006e-05, 2.3820000000000785e-05, 2.093100000000181e-05, 2.094500000000138e-05, 2.2804999999997272e-05, 2.0000000000002655e-05, 2.091699999999877e-05, 2.3820000000000785e-05, 2.3778000000002075e-05, 2.572299999999833e-05, 2.193100000000281e-05, 2.087500000000006e-05, 2.091699999999877e-05, 2.09029999999992e-05, 2.284699999999945e-05, 2.47230000000008e-05, 2.097300000000052e-05, 2.1971999999998576e-05, 2.287499999999859e-05, 2.5736000000001896e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.299" endtime="20201112 12:42:33.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.294" endtime="20201112 12:42:33.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.304" endtime="20201112 12:42:33.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.307" endtime="20201112 12:42:33.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.306" endtime="20201112 12:42:33.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.302" endtime="20201112 12:42:33.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.931" endtime="20201112 12:42:33.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.931" endtime="20201112 12:42:33.329"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.338" endtime="20201112 12:42:33.355"></status>
</kw>
<msg timestamp="20201112 12:42:33.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.336" endtime="20201112 12:42:33.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.356" endtime="20201112 12:42:33.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.359" endtime="20201112 12:42:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.333" endtime="20201112 12:42:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.331" endtime="20201112 12:42:33.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.369" endtime="20201112 12:42:33.656"></status>
</kw>
<msg timestamp="20201112 12:42:33.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.368" endtime="20201112 12:42:33.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.661" endtime="20201112 12:42:33.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.669" endtime="20201112 12:42:33.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.365" endtime="20201112 12:42:33.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.363" endtime="20201112 12:42:33.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.677" level="INFO">${RESULT} = [{'time': 0.023151875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.616699999999749e-05, 'source_diff': 1.616699999999749e-05}, {'time': 0.023182597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:33.673" endtime="20201112 12:42:33.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.692" level="INFO">${ACCURACY} = {'source_diff': [1.616699999999749e-05, 2.4750000000000466e-05, 1.912500000000178e-05, 2.4777999999999606e-05, 1.9985999999999615e-05, 2.4764000000000036e-05, 1.9929999999997866e-05, 2.095800000000147...</msg>
<status status="PASS" starttime="20201112 12:42:33.678" endtime="20201112 12:42:33.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.697" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.696" endtime="20201112 12:42:33.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.700" level="INFO">VALUE: [1.616699999999749e-05, 2.4750000000000466e-05, 1.912500000000178e-05, 2.4777999999999606e-05, 1.9985999999999615e-05, 2.4764000000000036e-05, 1.9929999999997866e-05, 2.0958000000001475e-05, 2.5764000000001036e-05, 2.569499999999919e-05, 2.002699999999885e-05, 2.5749999999997997e-05, 2.470899999999776e-05, 2.380500000000174e-05, 2.187499999999759e-05, 2.4804999999999272e-05, 2.0028000000001794e-05, 2.384700000000045e-05, 2.0957999999998006e-05, 2.4736000000000896e-05, 2.5693999999999717e-05, 2.094499999999791e-05, 2.3820000000000785e-05, 2.3847999999999925e-05, 2.4777000000000132e-05, 2.3792000000001645e-05, 2.091699999999877e-05, 2.3833999999996885e-05, 2.102699999999985e-05, 2.0958000000001475e-05, 2.095900000000095e-05, 2.384700000000045e-05, 2.4805999999998746e-05, 2.093099999999834e-05, 2.5707999999999287e-05, 2.4791999999999176e-05, 2.0929999999998866e-05, 2.187499999999759e-05, 2.09029999999992e-05, 2.4764000000000036e-05, 2.288900000000163e-05, 2.288899999999816e-05, 2.0000000000002655e-05, 1.891700000000024e-05, 2.283299999999988e-05, 2.4750000000000466e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 2.186100000000149e-05, 2.4791999999999176e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.698" endtime="20201112 12:42:33.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.693" endtime="20201112 12:42:33.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.704" endtime="20201112 12:42:33.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.708" endtime="20201112 12:42:33.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.706" endtime="20201112 12:42:33.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.702" endtime="20201112 12:42:33.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.330" endtime="20201112 12:42:33.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.329" endtime="20201112 12:42:33.729"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.738" endtime="20201112 12:42:33.760"></status>
</kw>
<msg timestamp="20201112 12:42:33.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.736" endtime="20201112 12:42:33.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.762" endtime="20201112 12:42:33.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.764" endtime="20201112 12:42:33.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.733" endtime="20201112 12:42:33.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.731" endtime="20201112 12:42:33.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.776" endtime="20201112 12:42:34.063"></status>
</kw>
<msg timestamp="20201112 12:42:34.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024724667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.774" endtime="20201112 12:42:34.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024724667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.067" endtime="20201112 12:42:34.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.075" endtime="20201112 12:42:34.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.771" endtime="20201112 12:42:34.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.768" endtime="20201112 12:42:34.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.082" level="INFO">${RESULT} = [{'time': 0.024743667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9000000000001654e-05, 'source_diff': 1.9000000000001654e-05}, {'time': 0.02477475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:34.078" endtime="20201112 12:42:34.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.095" level="INFO">${ACCURACY} = {'source_diff': [1.9000000000001654e-05, 2.5722000000002326e-05, 2.2847999999998925e-05, 2.1929999999999866e-05, 2.004100000000189e-05, 2.5749999999997997e-05, 2.286099999999902e-05, 2.388899999999916...</msg>
<status status="PASS" starttime="20201112 12:42:34.083" endtime="20201112 12:42:34.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.100" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.099" endtime="20201112 12:42:34.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.102" level="INFO">VALUE: [1.9000000000001654e-05, 2.5722000000002326e-05, 2.2847999999998925e-05, 2.1929999999999866e-05, 2.004100000000189e-05, 2.5749999999997997e-05, 2.286099999999902e-05, 2.388899999999916e-05, 1.8999999999998185e-05, 2.4764000000000036e-05, 2.0028000000001794e-05, 2.093100000000181e-05, 2.287499999999859e-05, 2.0027999999998325e-05, 1.90829999999996e-05, 2.09029999999992e-05, 2.186100000000149e-05, 1.9028000000000794e-05, 2.4777000000000132e-05, 2.3832999999997412e-05, 2.3804999999998272e-05, 2.286099999999902e-05, 1.906900000000003e-05, 2.379100000000217e-05, 2.4805999999998746e-05, 2.098700000000009e-05, 2.3834000000000355e-05, 2.3834000000000355e-05, 2.1929999999999866e-05, 2.0958000000001475e-05, 2.2763999999998036e-05, 2.3832999999997412e-05, 1.9013999999997755e-05, 2.1929999999999866e-05, 2.287500000000206e-05, 2.569500000000266e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 2.568099999999962e-05, 1.998699999999909e-05, 2.2806000000000215e-05, 2.5764000000001036e-05, 2.1929999999999866e-05, 2.4804999999999272e-05, 2.287499999999859e-05, 2.5764000000001036e-05, 2.484700000000145e-05, 2.3763999999999036e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.101" endtime="20201112 12:42:34.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.096" endtime="20201112 12:42:34.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.106" endtime="20201112 12:42:34.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.109" endtime="20201112 12:42:34.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.108" endtime="20201112 12:42:34.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.104" endtime="20201112 12:42:34.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.730" endtime="20201112 12:42:34.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.729" endtime="20201112 12:42:34.130"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.139" endtime="20201112 12:42:34.162"></status>
</kw>
<msg timestamp="20201112 12:42:34.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.138" endtime="20201112 12:42:34.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.164" endtime="20201112 12:42:34.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.167" endtime="20201112 12:42:34.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.135" endtime="20201112 12:42:34.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.133" endtime="20201112 12:42:34.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.176" endtime="20201112 12:42:34.477"></status>
</kw>
<msg timestamp="20201112 12:42:34.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025123778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025176278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.175" endtime="20201112 12:42:34.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025123778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025176278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.487" endtime="20201112 12:42:34.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.500" endtime="20201112 12:42:34.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.172" endtime="20201112 12:42:34.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.171" endtime="20201112 12:42:34.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.507" level="INFO">${RESULT} = [{'time': 0.025176278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000000046e-05, 'source_diff': 5.250000000000046e-05}, {'time': 0.025237181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.504" endtime="20201112 12:42:34.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.520" level="INFO">${ACCURACY} = {'source_diff': [5.250000000000046e-05, 5.532000000000106e-05, 5.159699999999698e-05, 5.059699999999945e-05, 5.248600000000089e-05, 5.161100000000002e-05, 4.967999999999986e-05, 5.444500000000019e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:34.508" endtime="20201112 12:42:34.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.525" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.524" endtime="20201112 12:42:34.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.527" level="INFO">VALUE: [5.250000000000046e-05, 5.532000000000106e-05, 5.159699999999698e-05, 5.059699999999945e-05, 5.248600000000089e-05, 5.161100000000002e-05, 4.967999999999986e-05, 5.444500000000019e-05, 5.158399999999688e-05, 5.437499999999887e-05, 5.4444000000000714e-05, 5.6457999999998815e-05, 5.155600000000121e-05, 4.958400000000182e-05, 5.444500000000019e-05, 5.3513999999997564e-05, 5.348600000000189e-05, 5.054200000000064e-05, 5.061099999999902e-05, 5.063899999999816e-05, 5.063900000000163e-05, 5.638900000000044e-05, 5.3513999999997564e-05, 5.154200000000164e-05, 4.959699999999845e-05, 5.06530000000012e-05, 5.345800000000275e-05, 5.532000000000106e-05, 5.062500000000206e-05, 5.540299999999901e-05, 5.058400000000282e-05, 5.444499999999672e-05, 5.533400000000063e-05, 4.962500000000106e-05, 5.151399999999903e-05, 5.159700000000045e-05, 5.348600000000189e-05, 5.537499999999987e-05, 5.43609999999993e-05, 5.254199999999917e-05, 5.534700000000073e-05, 4.961099999999802e-05, 5.159700000000045e-05, 5.541700000000205e-05, 5.161100000000002e-05, 5.540299999999901e-05, 5.25279999999996e-05, 5.347299999999833e-05, 5.631899999999912e-05, 5.4415999999998105e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.526" endtime="20201112 12:42:34.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.521" endtime="20201112 12:42:34.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.531" endtime="20201112 12:42:34.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.535" endtime="20201112 12:42:34.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.533" endtime="20201112 12:42:34.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.529" endtime="20201112 12:42:34.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.131" endtime="20201112 12:42:34.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.131" endtime="20201112 12:42:34.556"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.564" endtime="20201112 12:42:34.584"></status>
</kw>
<msg timestamp="20201112 12:42:34.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.562" endtime="20201112 12:42:34.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.586" endtime="20201112 12:42:34.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.588" endtime="20201112 12:42:34.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.560" endtime="20201112 12:42:34.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.558" endtime="20201112 12:42:34.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.598" endtime="20201112 12:42:34.884"></status>
</kw>
<msg timestamp="20201112 12:42:34.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.596" endtime="20201112 12:42:34.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.888" endtime="20201112 12:42:34.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.896" endtime="20201112 12:42:34.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.594" endtime="20201112 12:42:34.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.592" endtime="20201112 12:42:34.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.903" level="INFO">${RESULT} = [{'time': 0.021821583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.198599999999999e-05, 'source_diff': 6.198599999999999e-05}, {'time': 0.021882069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.900" endtime="20201112 12:42:34.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.916" level="INFO">${ACCURACY} = {'source_diff': [6.198599999999999e-05, 5.5415999999999105e-05, 5.541699999999858e-05, 4.956999999999878e-05, 5.538899999999944e-05, 5.336100000000177e-05, 5.25279999999996e-05, 5.154199999999817e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:34.904" endtime="20201112 12:42:34.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.921" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.920" endtime="20201112 12:42:34.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.923" level="INFO">VALUE: [6.198599999999999e-05, 5.5415999999999105e-05, 5.541699999999858e-05, 4.956999999999878e-05, 5.538899999999944e-05, 5.336100000000177e-05, 5.25279999999996e-05, 5.154199999999817e-05, 5.338900000000091e-05, 5.159700000000045e-05, 5.247200000000132e-05, 4.965200000000072e-05, 5.541700000000205e-05, 5.540299999999901e-05, 5.15140000000025e-05, 5.3471999999998854e-05, 5.257000000000178e-05, 5.049999999999846e-05, 5.068100000000034e-05, 5.149999999999946e-05, 5.348700000000137e-05, 5.540299999999901e-05, 5.6319999999998593e-05, 5.063900000000163e-05, 5.63610000000013e-05, 5.155500000000174e-05, 5.066700000000077e-05, 5.051399999999803e-05, 5.159700000000045e-05, 5.4471999999999854e-05, 4.956999999999878e-05, 5.257000000000178e-05, 5.054200000000064e-05, 5.5486000000000424e-05, 5.145800000000075e-05, 5.2429999999999144e-05, 5.254199999999917e-05, 5.638900000000044e-05, 5.247200000000132e-05, 5.638900000000044e-05, 5.444500000000019e-05, 5.43479999999992e-05, 5.156900000000131e-05, 5.4291999999997453e-05, 5.540299999999901e-05, 5.241699999999905e-05, 5.622300000000108e-05, 5.636200000000077e-05, 5.2457999999998284e-05, 4.967999999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.922" endtime="20201112 12:42:34.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.917" endtime="20201112 12:42:34.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.927" endtime="20201112 12:42:34.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.930" endtime="20201112 12:42:34.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.929" endtime="20201112 12:42:34.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.925" endtime="20201112 12:42:34.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.556" endtime="20201112 12:42:34.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.556" endtime="20201112 12:42:34.951"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.960" endtime="20201112 12:42:34.982"></status>
</kw>
<msg timestamp="20201112 12:42:34.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.958" endtime="20201112 12:42:34.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.984" endtime="20201112 12:42:34.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.986" endtime="20201112 12:42:34.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.956" endtime="20201112 12:42:34.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.954" endtime="20201112 12:42:34.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.996" endtime="20201112 12:42:35.282"></status>
</kw>
<msg timestamp="20201112 12:42:35.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.995" endtime="20201112 12:42:35.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.286" endtime="20201112 12:42:35.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.294" endtime="20201112 12:42:35.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.992" endtime="20201112 12:42:35.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.990" endtime="20201112 12:42:35.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.301" level="INFO">${RESULT} = [{'time': 0.022925056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208400000000044e-05, 'source_diff': 6.208400000000044e-05}, {'time': 0.022986153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.297" endtime="20201112 12:42:35.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.315" level="INFO">${ACCURACY} = {'source_diff': [6.208400000000044e-05, 5.5305999999998023e-05, 5.256899999999884e-05, 5.052800000000107e-05, 5.351300000000156e-05, 5.533300000000116e-05, 5.540299999999901e-05, 5.532000000000106e-05...</msg>
<status status="PASS" starttime="20201112 12:42:35.302" endtime="20201112 12:42:35.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.320" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.319" endtime="20201112 12:42:35.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.322" level="INFO">VALUE: [6.208400000000044e-05, 5.5305999999998023e-05, 5.256899999999884e-05, 5.052800000000107e-05, 5.351300000000156e-05, 5.533300000000116e-05, 5.540299999999901e-05, 5.532000000000106e-05, 5.255599999999874e-05, 5.244400000000218e-05, 5.543100000000162e-05, 4.969399999999943e-05, 5.444500000000019e-05, 5.061099999999902e-05, 5.434699999999973e-05, 5.159799999999992e-05, 5.149999999999946e-05, 5.2457999999998284e-05, 5.4471999999999854e-05, 5.248600000000089e-05, 5.243099999999862e-05, 5.058299999999988e-05, 5.6250000000000744e-05, 5.63619999999973e-05, 5.149999999999946e-05, 5.538899999999944e-05, 4.961100000000149e-05, 4.969499999999891e-05, 5.350000000000146e-05, 5.245800000000175e-05, 5.159700000000045e-05, 5.540300000000248e-05, 5.6291999999999454e-05, 5.061200000000196e-05, 5.15409999999987e-05, 5.4430000000001144e-05, 5.343099999999962e-05, 4.961100000000149e-05, 5.450000000000246e-05, 5.154200000000164e-05, 5.061100000000249e-05, 5.143000000000161e-05, 5.537499999999987e-05, 5.3402000000001004e-05, 5.155499999999827e-05, 5.344499999999919e-05, 5.348600000000189e-05, 5.244500000000166e-05, 5.538900000000291e-05, 5.25279999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.321" endtime="20201112 12:42:35.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.316" endtime="20201112 12:42:35.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.326" endtime="20201112 12:42:35.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.329" endtime="20201112 12:42:35.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.328" endtime="20201112 12:42:35.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.324" endtime="20201112 12:42:35.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.952" endtime="20201112 12:42:35.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.952" endtime="20201112 12:42:35.350"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.359" endtime="20201112 12:42:35.377"></status>
</kw>
<msg timestamp="20201112 12:42:35.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.357" endtime="20201112 12:42:35.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.379" endtime="20201112 12:42:35.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.381" endtime="20201112 12:42:35.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.355" endtime="20201112 12:42:35.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.352" endtime="20201112 12:42:35.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.391" endtime="20201112 12:42:35.676"></status>
</kw>
<msg timestamp="20201112 12:42:35.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021038819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.390" endtime="20201112 12:42:35.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021038819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.681" endtime="20201112 12:42:35.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.689" endtime="20201112 12:42:35.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.387" endtime="20201112 12:42:35.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.386" endtime="20201112 12:42:35.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.695" level="INFO">${RESULT} = [{'time': 0.021038819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9125000000000965e-05, 'source_diff': 3.9125000000000965e-05}, {'time': 0.0210995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.692" endtime="20201112 12:42:35.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.709" level="INFO">${ACCURACY} = {'source_diff': [3.9125000000000965e-05, 5.248600000000089e-05, 5.638900000000044e-05, 5.336100000000177e-05, 5.159700000000045e-05, 5.434699999999973e-05, 5.2430000000002613e-05, 5.0652000000001723e-...</msg>
<status status="PASS" starttime="20201112 12:42:35.696" endtime="20201112 12:42:35.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.713" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.712" endtime="20201112 12:42:35.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.716" level="INFO">VALUE: [3.9125000000000965e-05, 5.248600000000089e-05, 5.638900000000044e-05, 5.336100000000177e-05, 5.159700000000045e-05, 5.434699999999973e-05, 5.2430000000002613e-05, 5.0652000000001723e-05, 5.43479999999992e-05, 5.5416000000002574e-05, 5.5429999999998675e-05, 5.533300000000116e-05, 5.351400000000103e-05, 5.43609999999993e-05, 5.348600000000189e-05, 4.956899999999931e-05, 5.251400000000003e-05, 5.149999999999946e-05, 5.158300000000088e-05, 5.055600000000021e-05, 5.063900000000163e-05, 5.541699999999858e-05, 5.627800000000335e-05, 5.534700000000073e-05, 5.636200000000077e-05, 5.2471999999997854e-05, 5.444500000000019e-05, 5.634700000000173e-05, 5.25409999999997e-05, 5.3443999999999714e-05, 5.252800000000307e-05, 5.147200000000032e-05, 5.636200000000077e-05, 5.154199999999817e-05, 5.3513999999997564e-05, 5.438899999999844e-05, 4.966699999999977e-05, 5.4430000000001144e-05, 5.3416000000000574e-05, 5.2471999999997854e-05, 5.441700000000105e-05, 5.534700000000073e-05, 5.0637999999998684e-05, 5.6277999999999884e-05, 5.543099999999815e-05, 4.958399999999835e-05, 5.245800000000175e-05, 5.348600000000189e-05, 5.152800000000207e-05, 5.059800000000239e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.714" endtime="20201112 12:42:35.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.710" endtime="20201112 12:42:35.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.719" endtime="20201112 12:42:35.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.723" endtime="20201112 12:42:35.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.722" endtime="20201112 12:42:35.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.718" endtime="20201112 12:42:35.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.351" endtime="20201112 12:42:35.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.350" endtime="20201112 12:42:35.744"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.753" endtime="20201112 12:42:35.775"></status>
</kw>
<msg timestamp="20201112 12:42:35.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.751" endtime="20201112 12:42:35.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.777" endtime="20201112 12:42:35.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.779" endtime="20201112 12:42:35.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.749" endtime="20201112 12:42:35.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.747" endtime="20201112 12:42:35.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.789" endtime="20201112 12:42:36.074"></status>
</kw>
<msg timestamp="20201112 12:42:36.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.788" endtime="20201112 12:42:36.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.078" endtime="20201112 12:42:36.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.087" endtime="20201112 12:42:36.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.785" endtime="20201112 12:42:36.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.783" endtime="20201112 12:42:36.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.093" level="INFO">${RESULT} = [{'time': 0.023791625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.108299999999997e-05, 'source_diff': 6.108299999999997e-05}, {'time': 0.023852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.090" endtime="20201112 12:42:36.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.107" level="INFO">${ACCURACY} = {'source_diff': [6.108299999999997e-05, 5.541700000000205e-05, 4.969499999999891e-05, 5.437499999999887e-05, 5.4443999999997245e-05, 5.2443999999998714e-05, 4.969399999999943e-05, 5.445899999999976e-0...</msg>
<status status="PASS" starttime="20201112 12:42:36.094" endtime="20201112 12:42:36.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.111" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.110" endtime="20201112 12:42:36.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.114" level="INFO">VALUE: [6.108299999999997e-05, 5.541700000000205e-05, 4.969499999999891e-05, 5.437499999999887e-05, 5.4443999999997245e-05, 5.2443999999998714e-05, 4.969399999999943e-05, 5.445899999999976e-05, 5.355500000000027e-05, 5.3387999999997965e-05, 5.3499999999997994e-05, 5.441700000000105e-05, 5.255499999999927e-05, 5.3485999999998424e-05, 5.337500000000134e-05, 5.541700000000205e-05, 5.35280000000006e-05, 5.161100000000002e-05, 5.340300000000048e-05, 5.545900000000076e-05, 5.5305999999998023e-05, 5.159700000000045e-05, 5.2457999999998284e-05, 5.4485999999999424e-05, 5.148599999999989e-05, 5.161100000000002e-05, 5.6430000000003144e-05, 5.3430000000000144e-05, 5.068000000000086e-05, 5.157000000000078e-05, 5.062499999999859e-05, 5.05140000000015e-05, 5.4471999999999854e-05, 5.255499999999927e-05, 4.966699999999977e-05, 5.25279999999996e-05, 5.529099999999898e-05, 5.158400000000035e-05, 5.351400000000103e-05, 5.244400000000218e-05, 5.445899999999976e-05, 5.158400000000035e-05, 5.532000000000106e-05, 5.254200000000264e-05, 5.351400000000103e-05, 5.351400000000103e-05, 5.638900000000044e-05, 5.151399999999903e-05, 5.063900000000163e-05, 5.158400000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.112" endtime="20201112 12:42:36.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.108" endtime="20201112 12:42:36.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.117" endtime="20201112 12:42:36.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.120" endtime="20201112 12:42:36.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.119" endtime="20201112 12:42:36.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.116" endtime="20201112 12:42:36.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.745" endtime="20201112 12:42:36.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.745" endtime="20201112 12:42:36.141"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.150" endtime="20201112 12:42:36.172"></status>
</kw>
<msg timestamp="20201112 12:42:36.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.148" endtime="20201112 12:42:36.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.173" endtime="20201112 12:42:36.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.176" endtime="20201112 12:42:36.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.146" endtime="20201112 12:42:36.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.144" endtime="20201112 12:42:36.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.186" endtime="20201112 12:42:36.470"></status>
</kw>
<msg timestamp="20201112 12:42:36.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023508681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:36.184" endtime="20201112 12:42:36.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023508681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:36.475" endtime="20201112 12:42:36.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.483" endtime="20201112 12:42:36.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.182" endtime="20201112 12:42:36.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.180" endtime="20201112 12:42:36.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.490" level="INFO">${RESULT} = [{'time': 0.0235535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4819000000001497e-05, 'source_diff': 4.4819000000001497e-05}, {'time': 0.023613931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.486" endtime="20201112 12:42:36.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.503" level="INFO">${ACCURACY} = {'source_diff': [4.4819000000001497e-05, 4.966699999999977e-05, 5.3499999999997994e-05, 5.247200000000132e-05, 5.148599999999989e-05, 5.256899999999884e-05, 5.063900000000163e-05, 5.529200000000192e-0...</msg>
<status status="PASS" starttime="20201112 12:42:36.491" endtime="20201112 12:42:36.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.507" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.506" endtime="20201112 12:42:36.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.510" level="INFO">VALUE: [4.4819000000001497e-05, 4.966699999999977e-05, 5.3499999999997994e-05, 5.247200000000132e-05, 5.148599999999989e-05, 5.256899999999884e-05, 5.063900000000163e-05, 5.529200000000192e-05, 5.254199999999917e-05, 5.149999999999946e-05, 5.634700000000173e-05, 5.445899999999976e-05, 5.433399999999963e-05, 5.358299999999941e-05, 5.059699999999945e-05, 5.058299999999988e-05, 5.6388000000000965e-05, 5.5429999999998675e-05, 5.3430000000000144e-05, 5.4471999999999854e-05, 5.05140000000015e-05, 5.062500000000206e-05, 5.147200000000032e-05, 5.3513999999997564e-05, 5.5263999999999314e-05, 5.252800000000307e-05, 5.532000000000106e-05, 5.254200000000264e-05, 5.7221999999999135e-05, 5.06530000000012e-05, 5.243099999999862e-05, 5.066600000000129e-05, 5.051399999999803e-05, 5.35280000000006e-05, 5.5401999999999535e-05, 5.245800000000175e-05, 4.968099999999934e-05, 5.4458000000000284e-05, 5.052800000000107e-05, 5.454200000000117e-05, 5.337500000000134e-05, 5.3388000000001434e-05, 5.350000000000146e-05, 5.161100000000002e-05, 5.436100000000277e-05, 5.348600000000189e-05, 5.245900000000123e-05, 5.255500000000274e-05, 5.054100000000117e-05, 5.16530000000022e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.508" endtime="20201112 12:42:36.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.504" endtime="20201112 12:42:36.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.513" endtime="20201112 12:42:36.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.517" endtime="20201112 12:42:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.516" endtime="20201112 12:42:36.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.512" endtime="20201112 12:42:36.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.142" endtime="20201112 12:42:36.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.142" endtime="20201112 12:42:36.538"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.547" endtime="20201112 12:42:36.569"></status>
</kw>
<msg timestamp="20201112 12:42:36.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.545" endtime="20201112 12:42:36.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.570" endtime="20201112 12:42:36.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.572" endtime="20201112 12:42:36.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.543" endtime="20201112 12:42:36.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.541" endtime="20201112 12:42:36.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.582" endtime="20201112 12:42:36.868"></status>
</kw>
<msg timestamp="20201112 12:42:36.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.581" endtime="20201112 12:42:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.872" endtime="20201112 12:42:36.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.880" endtime="20201112 12:42:36.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.578" endtime="20201112 12:42:36.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.577" endtime="20201112 12:42:36.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.887" level="INFO">${RESULT} = [{'time': 0.023497639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8695000000001376e-05, 'source_diff': 4.8695000000001376e-05}, {'time': 0.023558542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:36.884" endtime="20201112 12:42:36.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.902" level="INFO">${ACCURACY} = {'source_diff': [4.8695000000001376e-05, 5.05279999999976e-05, 5.63749999999974e-05, 5.438900000000191e-05, 5.5415999999999105e-05, 5.3430000000000144e-05, 5.358300000000288e-05, 5.438900000000191e-05...</msg>
<status status="PASS" starttime="20201112 12:42:36.888" endtime="20201112 12:42:36.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.906" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.905" endtime="20201112 12:42:36.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.909" level="INFO">VALUE: [4.8695000000001376e-05, 5.05279999999976e-05, 5.63749999999974e-05, 5.438900000000191e-05, 5.5415999999999105e-05, 5.3430000000000144e-05, 5.358300000000288e-05, 5.438900000000191e-05, 5.63749999999974e-05, 5.3430000000000144e-05, 5.531900000000159e-05, 5.540299999999901e-05, 5.341700000000005e-05, 5.154200000000164e-05, 5.1486999999999367e-05, 5.056900000000031e-05, 4.969399999999943e-05, 5.341700000000005e-05, 5.149999999999946e-05, 5.350000000000146e-05, 5.5415999999999105e-05, 5.054100000000117e-05, 5.443100000000062e-05, 5.6291999999999454e-05, 5.0651999999998254e-05, 5.062499999999859e-05, 5.538899999999944e-05, 5.248700000000037e-05, 5.3499999999997994e-05, 5.152800000000207e-05, 5.248600000000089e-05, 5.541699999999858e-05, 5.3499999999997994e-05, 5.154200000000164e-05, 5.348600000000189e-05, 5.533300000000116e-05, 5.062500000000206e-05, 5.3443999999999714e-05, 5.251299999999709e-05, 5.152800000000207e-05, 4.963900000000063e-05, 5.627800000000335e-05, 5.155499999999827e-05, 5.151299999999956e-05, 5.251400000000003e-05, 5.340300000000048e-05, 5.149999999999946e-05, 5.637500000000087e-05, 5.148599999999989e-05, 5.059699999999945e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.907" endtime="20201112 12:42:36.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.902" endtime="20201112 12:42:36.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.917" endtime="20201112 12:42:36.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.920" endtime="20201112 12:42:36.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.919" endtime="20201112 12:42:36.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.915" endtime="20201112 12:42:36.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.539" endtime="20201112 12:42:36.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.539" endtime="20201112 12:42:36.941"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.950" endtime="20201112 12:42:36.970"></status>
</kw>
<msg timestamp="20201112 12:42:36.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.948" endtime="20201112 12:42:36.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.972" endtime="20201112 12:42:36.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.974" endtime="20201112 12:42:36.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.946" endtime="20201112 12:42:36.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.943" endtime="20201112 12:42:36.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.984" endtime="20201112 12:42:37.268"></status>
</kw>
<msg timestamp="20201112 12:42:37.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.983" endtime="20201112 12:42:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.273" endtime="20201112 12:42:37.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.281" endtime="20201112 12:42:37.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.980" endtime="20201112 12:42:37.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.978" endtime="20201112 12:42:37.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.288" level="INFO">${RESULT} = [{'time': 0.022770778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0096999999999355e-05, 'source_diff': 4.0096999999999355e-05}, {'time': 0.022831486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:37.284" endtime="20201112 12:42:37.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.301" level="INFO">${ACCURACY} = {'source_diff': [4.0096999999999355e-05, 5.156900000000131e-05, 5.3443999999999714e-05, 5.3471999999998854e-05, 5.251400000000003e-05, 5.052800000000107e-05, 5.4430000000001144e-05, 5.3457999999999284...</msg>
<status status="PASS" starttime="20201112 12:42:37.289" endtime="20201112 12:42:37.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.306" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.305" endtime="20201112 12:42:37.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.308" level="INFO">VALUE: [4.0096999999999355e-05, 5.156900000000131e-05, 5.3443999999999714e-05, 5.3471999999998854e-05, 5.251400000000003e-05, 5.052800000000107e-05, 5.4430000000001144e-05, 5.3457999999999284e-05, 5.058299999999988e-05, 5.447299999999933e-05, 5.4429999999997675e-05, 5.062500000000206e-05, 5.062499999999859e-05, 5.347200000000232e-05, 5.53610000000003e-05, 5.5429999999998675e-05, 5.441699999999758e-05, 5.631899999999912e-05, 5.152800000000207e-05, 5.347200000000232e-05, 5.244500000000166e-05, 5.4458000000000284e-05, 5.154199999999817e-05, 5.633299999999869e-05, 5.158300000000088e-05, 5.344499999999919e-05, 5.537499999999987e-05, 5.2457999999998284e-05, 5.159700000000045e-05, 5.53610000000003e-05, 5.063899999999816e-05, 4.969399999999943e-05, 5.055600000000021e-05, 5.156900000000131e-05, 5.162499999999959e-05, 4.961100000000149e-05, 5.250000000000046e-05, 5.2457999999998284e-05, 5.155499999999827e-05, 5.541700000000205e-05, 5.154200000000164e-05, 4.962500000000106e-05, 5.06530000000012e-05, 5.061099999999902e-05, 5.3471999999998854e-05, 5.538899999999944e-05, 5.534700000000073e-05, 4.9667000000003236e-05, 5.0637999999998684e-05, 5.4402000000002004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.307" endtime="20201112 12:42:37.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.302" endtime="20201112 12:42:37.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.311" endtime="20201112 12:42:37.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.315" endtime="20201112 12:42:37.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.313" endtime="20201112 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.310" endtime="20201112 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.942" endtime="20201112 12:42:37.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.941" endtime="20201112 12:42:37.336"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.344" endtime="20201112 12:42:37.367"></status>
</kw>
<msg timestamp="20201112 12:42:37.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.343" endtime="20201112 12:42:37.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.368" endtime="20201112 12:42:37.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.371" endtime="20201112 12:42:37.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.340" endtime="20201112 12:42:37.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.338" endtime="20201112 12:42:37.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.381" endtime="20201112 12:42:37.667"></status>
</kw>
<msg timestamp="20201112 12:42:37.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024855264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.379" endtime="20201112 12:42:37.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024855264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.671" endtime="20201112 12:42:37.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.679" endtime="20201112 12:42:37.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.377" endtime="20201112 12:42:37.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.375" endtime="20201112 12:42:37.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.686" level="INFO">${RESULT} = [{'time': 0.024912542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7278000000000884e-05, 'source_diff': 5.7278000000000884e-05}, {'time': 0.024973903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:37.683" endtime="20201112 12:42:37.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.699" level="INFO">${ACCURACY} = {'source_diff': [5.7278000000000884e-05, 5.3485999999998424e-05, 5.148599999999989e-05, 5.444500000000019e-05, 5.3471999999998854e-05, 5.6305999999999023e-05, 5.4416000000001574e-05, 5.347199999999885...</msg>
<status status="PASS" starttime="20201112 12:42:37.687" endtime="20201112 12:42:37.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.704" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.703" endtime="20201112 12:42:37.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.707" level="INFO">VALUE: [5.7278000000000884e-05, 5.3485999999998424e-05, 5.148599999999989e-05, 5.444500000000019e-05, 5.3471999999998854e-05, 5.6305999999999023e-05, 5.4416000000001574e-05, 5.3471999999998854e-05, 5.443099999999715e-05, 5.147200000000032e-05, 5.633299999999869e-05, 5.53610000000003e-05, 5.538899999999944e-05, 4.968099999999934e-05, 5.243100000000209e-05, 5.058299999999988e-05, 5.633299999999869e-05, 5.052699999999813e-05, 5.157000000000078e-05, 5.638900000000044e-05, 5.340300000000048e-05, 5.545900000000076e-05, 5.4471999999999854e-05, 5.062499999999859e-05, 5.2443999999998714e-05, 5.4458000000000284e-05, 5.3471999999998854e-05, 5.6250000000000744e-05, 5.4430000000001144e-05, 5.061099999999902e-05, 5.444500000000019e-05, 5.337499999999787e-05, 5.3443999999999714e-05, 5.156900000000131e-05, 4.968099999999934e-05, 5.63610000000013e-05, 5.340300000000048e-05, 5.158400000000035e-05, 5.441700000000105e-05, 5.243099999999862e-05, 5.4416000000001574e-05, 5.248600000000089e-05, 5.06530000000012e-05, 5.240300000000295e-05, 5.543100000000162e-05, 5.0652000000001723e-05, 5.159700000000045e-05, 5.33479999999982e-05, 5.4444000000000714e-05, 5.541700000000205e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.705" endtime="20201112 12:42:37.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.701" endtime="20201112 12:42:37.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.710" endtime="20201112 12:42:37.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.714" endtime="20201112 12:42:37.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.712" endtime="20201112 12:42:37.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.709" endtime="20201112 12:42:37.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.337" endtime="20201112 12:42:37.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.336" endtime="20201112 12:42:37.735"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.743" endtime="20201112 12:42:37.765"></status>
</kw>
<msg timestamp="20201112 12:42:37.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.742" endtime="20201112 12:42:37.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.766" endtime="20201112 12:42:37.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.769" endtime="20201112 12:42:37.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.739" endtime="20201112 12:42:37.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.737" endtime="20201112 12:42:37.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.779" endtime="20201112 12:42:38.065"></status>
</kw>
<msg timestamp="20201112 12:42:38.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.777" endtime="20201112 12:42:38.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.070" endtime="20201112 12:42:38.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.078" endtime="20201112 12:42:38.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.775" endtime="20201112 12:42:38.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.773" endtime="20201112 12:42:38.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.085" level="INFO">${RESULT} = [{'time': 0.023025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.872200000000104e-05, 'source_diff': 4.872200000000104e-05}, {'time': 0.023086958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.081" endtime="20201112 12:42:38.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.098" level="INFO">${ACCURACY} = {'source_diff': [4.872200000000104e-05, 5.4471999999999854e-05, 5.063899999999816e-05, 5.149999999999946e-05, 5.63610000000013e-05, 5.541700000000205e-05, 5.53610000000003e-05, 5.159799999999992e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:38.086" endtime="20201112 12:42:38.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.103" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.102" endtime="20201112 12:42:38.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.105" level="INFO">VALUE: [4.872200000000104e-05, 5.4471999999999854e-05, 5.063899999999816e-05, 5.149999999999946e-05, 5.63610000000013e-05, 5.541700000000205e-05, 5.53610000000003e-05, 5.159799999999992e-05, 5.530500000000202e-05, 5.062499999999859e-05, 5.637500000000087e-05, 5.147200000000032e-05, 5.159799999999992e-05, 5.054100000000117e-05, 5.159700000000045e-05, 5.541699999999858e-05, 5.437499999999887e-05, 5.4513999999998564e-05, 5.158300000000088e-05, 5.4471999999999854e-05, 4.968099999999934e-05, 5.2485999999997424e-05, 5.159700000000045e-05, 5.158300000000088e-05, 5.543099999999815e-05, 5.5429999999998675e-05, 5.533300000000116e-05, 5.3471999999998854e-05, 5.4444000000000714e-05, 5.347200000000232e-05, 5.445899999999976e-05, 5.341700000000005e-05, 5.161100000000002e-05, 5.440300000000148e-05, 5.062499999999859e-05, 5.444500000000019e-05, 5.058299999999988e-05, 5.4458000000000284e-05, 5.162499999999959e-05, 5.159700000000045e-05, 5.341700000000005e-05, 5.351400000000103e-05, 5.255600000000221e-05, 5.4471999999999854e-05, 5.634700000000173e-05, 5.245800000000175e-05, 5.634700000000173e-05, 4.96940000000029e-05, 5.061100000000249e-05, 5.437499999999887e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.104" endtime="20201112 12:42:38.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.099" endtime="20201112 12:42:38.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.109" endtime="20201112 12:42:38.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.112" endtime="20201112 12:42:38.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.111" endtime="20201112 12:42:38.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.107" endtime="20201112 12:42:38.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.736" endtime="20201112 12:42:38.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.735" endtime="20201112 12:42:38.133"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.142" endtime="20201112 12:42:38.166"></status>
</kw>
<msg timestamp="20201112 12:42:38.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.140" endtime="20201112 12:42:38.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.168" endtime="20201112 12:42:38.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.170" endtime="20201112 12:42:38.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.138" endtime="20201112 12:42:38.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.136" endtime="20201112 12:42:38.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.180" endtime="20201112 12:42:38.466"></status>
</kw>
<msg timestamp="20201112 12:42:38.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021352431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.179" endtime="20201112 12:42:38.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021352431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.470" endtime="20201112 12:42:38.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.479" endtime="20201112 12:42:38.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.176" endtime="20201112 12:42:38.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.175" endtime="20201112 12:42:38.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.486" level="INFO">${RESULT} = [{'time': 0.021414542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.211100000000011e-05, 'source_diff': 6.211100000000011e-05}, {'time': 0.021475097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.482" endtime="20201112 12:42:38.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.500" level="INFO">${ACCURACY} = {'source_diff': [6.211100000000011e-05, 5.062499999999859e-05, 5.251400000000003e-05, 5.158400000000035e-05, 5.250000000000046e-05, 5.254199999999917e-05, 5.2457999999998284e-05, 5.155500000000174e-05...</msg>
<status status="PASS" starttime="20201112 12:42:38.487" endtime="20201112 12:42:38.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.504" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.503" endtime="20201112 12:42:38.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.507" level="INFO">VALUE: [6.211100000000011e-05, 5.062499999999859e-05, 5.251400000000003e-05, 5.158400000000035e-05, 5.250000000000046e-05, 5.254199999999917e-05, 5.2457999999998284e-05, 5.155500000000174e-05, 5.4457999999996815e-05, 5.6250000000000744e-05, 5.4444000000000714e-05, 5.443100000000062e-05, 5.2457999999998284e-05, 5.25279999999996e-05, 5.444500000000019e-05, 5.436100000000277e-05, 5.6277999999999884e-05, 5.441699999999758e-05, 5.251400000000003e-05, 5.43609999999993e-05, 5.059799999999892e-05, 5.341700000000005e-05, 5.059800000000239e-05, 5.147200000000032e-05, 5.347200000000232e-05, 5.540299999999901e-05, 5.537499999999987e-05, 5.262500000000059e-05, 5.2443999999998714e-05, 5.534700000000073e-05, 5.25279999999996e-05, 5.25409999999997e-05, 5.434699999999973e-05, 5.5401999999999535e-05, 5.062499999999859e-05, 5.33609999999983e-05, 5.058299999999988e-05, 4.9709000000001946e-05, 5.437499999999887e-05, 4.966600000000029e-05, 5.433300000000016e-05, 5.063900000000163e-05, 5.3457999999999284e-05, 5.340300000000048e-05, 5.63610000000013e-05, 5.348600000000189e-05, 5.434699999999973e-05, 5.3485999999998424e-05, 4.966600000000029e-05, 5.531999999999759e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.506" endtime="20201112 12:42:38.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.501" endtime="20201112 12:42:38.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.511" endtime="20201112 12:42:38.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.514" endtime="20201112 12:42:38.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.512" endtime="20201112 12:42:38.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.509" endtime="20201112 12:42:38.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.134" endtime="20201112 12:42:38.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.133" endtime="20201112 12:42:38.535"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.543" endtime="20201112 12:42:38.563"></status>
</kw>
<msg timestamp="20201112 12:42:38.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.542" endtime="20201112 12:42:38.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.565" endtime="20201112 12:42:38.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.567" endtime="20201112 12:42:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.539" endtime="20201112 12:42:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.537" endtime="20201112 12:42:38.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.577" endtime="20201112 12:42:38.864"></status>
</kw>
<msg timestamp="20201112 12:42:38.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.576" endtime="20201112 12:42:38.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.868" endtime="20201112 12:42:38.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.876" endtime="20201112 12:42:38.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.573" endtime="20201112 12:42:38.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.571" endtime="20201112 12:42:38.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.883" level="INFO">${RESULT} = [{'time': 0.021540833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9151999999999816e-05, 'source_diff': 5.9151999999999816e-05}, {'time': 0.021601944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:38.879" endtime="20201112 12:42:38.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.896" level="INFO">${ACCURACY} = {'source_diff': [5.9151999999999816e-05, 5.437500000000234e-05, 5.4429999999997675e-05, 5.533300000000116e-05, 5.25409999999997e-05, 4.959700000000192e-05, 5.445899999999976e-05, 5.2443999999998714e-0...</msg>
<status status="PASS" starttime="20201112 12:42:38.884" endtime="20201112 12:42:38.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.901" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.900" endtime="20201112 12:42:38.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.903" level="INFO">VALUE: [5.9151999999999816e-05, 5.437500000000234e-05, 5.4429999999997675e-05, 5.533300000000116e-05, 5.25409999999997e-05, 4.959700000000192e-05, 5.445899999999976e-05, 5.2443999999998714e-05, 5.061099999999902e-05, 5.3485999999998424e-05, 5.533300000000116e-05, 5.158399999999688e-05, 5.248700000000037e-05, 5.345800000000275e-05, 5.147200000000032e-05, 5.640300000000001e-05, 5.337500000000134e-05, 5.063900000000163e-05, 5.4458000000000284e-05, 5.629200000000292e-05, 5.159700000000045e-05, 5.258399999999788e-05, 5.530499999999855e-05, 5.636099999999783e-05, 5.543099999999815e-05, 5.150000000000293e-05, 5.158300000000088e-05, 5.156899999999784e-05, 5.430600000000049e-05, 5.158400000000035e-05, 5.243099999999862e-05, 5.3499999999997994e-05, 5.531900000000159e-05, 5.348700000000137e-05, 5.434699999999973e-05, 5.637500000000087e-05, 5.245900000000123e-05, 5.063900000000163e-05, 5.344500000000266e-05, 5.251400000000003e-05, 5.43479999999992e-05, 5.063900000000163e-05, 5.055600000000021e-05, 5.637500000000087e-05, 5.443100000000062e-05, 5.061100000000249e-05, 5.634700000000173e-05, 5.531899999999812e-05, 5.638900000000044e-05, 5.241699999999905e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.902" endtime="20201112 12:42:38.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.897" endtime="20201112 12:42:38.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.907" endtime="20201112 12:42:38.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.910" endtime="20201112 12:42:38.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.909" endtime="20201112 12:42:38.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.905" endtime="20201112 12:42:38.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.536" endtime="20201112 12:42:38.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.535" endtime="20201112 12:42:38.931"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.940" endtime="20201112 12:42:38.960"></status>
</kw>
<msg timestamp="20201112 12:42:38.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.938" endtime="20201112 12:42:38.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.961" endtime="20201112 12:42:38.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.964" endtime="20201112 12:42:38.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.936" endtime="20201112 12:42:38.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.933" endtime="20201112 12:42:38.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.974" endtime="20201112 12:42:39.261"></status>
</kw>
<msg timestamp="20201112 12:42:39.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.972" endtime="20201112 12:42:39.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.265" endtime="20201112 12:42:39.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.273" endtime="20201112 12:42:39.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.970" endtime="20201112 12:42:39.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.968" endtime="20201112 12:42:39.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.280" level="INFO">${RESULT} = [{'time': 0.022248681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6319999999998593e-05, 'source_diff': 5.6319999999998593e-05}, {'time': 0.022309514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:39.276" endtime="20201112 12:42:39.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.293" level="INFO">${ACCURACY} = {'source_diff': [5.6319999999998593e-05, 4.972199999999857e-05, 5.5429999999998675e-05, 5.159700000000045e-05, 5.540299999999901e-05, 5.637500000000087e-05, 4.96530000000002e-05, 5.256899999999884e-05...</msg>
<status status="PASS" starttime="20201112 12:42:39.281" endtime="20201112 12:42:39.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.298" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.297" endtime="20201112 12:42:39.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.300" level="INFO">VALUE: [5.6319999999998593e-05, 4.972199999999857e-05, 5.5429999999998675e-05, 5.159700000000045e-05, 5.540299999999901e-05, 5.637500000000087e-05, 4.96530000000002e-05, 5.256899999999884e-05, 5.054200000000064e-05, 5.634699999999826e-05, 5.059699999999945e-05, 5.255499999999927e-05, 5.348600000000189e-05, 5.529100000000245e-05, 5.634700000000173e-05, 5.254199999999917e-05, 5.061099999999902e-05, 5.1429999999998144e-05, 5.347200000000232e-05, 5.543100000000162e-05, 5.529099999999898e-05, 5.165299999999873e-05, 5.448600000000289e-05, 5.161100000000002e-05, 5.348600000000189e-05, 5.241700000000252e-05, 5.541699999999858e-05, 5.637500000000087e-05, 5.054200000000064e-05, 5.351400000000103e-05, 5.63749999999974e-05, 5.14729999999998e-05, 5.4471999999999854e-05, 5.543099999999815e-05, 5.529099999999898e-05, 5.5457999999997815e-05, 5.441700000000105e-05, 5.248600000000089e-05, 5.5416000000002574e-05, 5.540300000000248e-05, 5.336100000000177e-05, 5.451400000000203e-05, 5.25409999999997e-05, 5.43340000000031e-05, 5.4444000000000714e-05, 5.444500000000019e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.5401999999999535e-05, 4.956999999999878e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.299" endtime="20201112 12:42:39.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.294" endtime="20201112 12:42:39.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.304" endtime="20201112 12:42:39.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.307" endtime="20201112 12:42:39.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.306" endtime="20201112 12:42:39.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.302" endtime="20201112 12:42:39.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.932" endtime="20201112 12:42:39.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.931" endtime="20201112 12:42:39.328"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.337" endtime="20201112 12:42:39.357"></status>
</kw>
<msg timestamp="20201112 12:42:39.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.335" endtime="20201112 12:42:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.359" endtime="20201112 12:42:39.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.361" endtime="20201112 12:42:39.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.333" endtime="20201112 12:42:39.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.330" endtime="20201112 12:42:39.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.371" endtime="20201112 12:42:39.656"></status>
</kw>
<msg timestamp="20201112 12:42:39.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.370" endtime="20201112 12:42:39.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.660" endtime="20201112 12:42:39.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.669" endtime="20201112 12:42:39.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.367" endtime="20201112 12:42:39.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.365" endtime="20201112 12:42:39.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.675" level="INFO">${RESULT} = [{'time': 0.022071667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.009799999999883e-05, 'source_diff': 4.009799999999883e-05}, {'time': 0.022132458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:39.672" endtime="20201112 12:42:39.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.689" level="INFO">${ACCURACY} = {'source_diff': [4.009799999999883e-05, 5.43609999999993e-05, 5.350000000000146e-05, 5.441699999999758e-05, 5.3513999999997564e-05, 5.6264000000000314e-05, 5.059699999999945e-05, 5.541700000000205e-05...</msg>
<status status="PASS" starttime="20201112 12:42:39.676" endtime="20201112 12:42:39.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.693" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.692" endtime="20201112 12:42:39.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.696" level="INFO">VALUE: [4.009799999999883e-05, 5.43609999999993e-05, 5.350000000000146e-05, 5.441699999999758e-05, 5.3513999999997564e-05, 5.6264000000000314e-05, 5.059699999999945e-05, 5.541700000000205e-05, 5.161100000000002e-05, 5.2471999999997854e-05, 5.338899999999744e-05, 5.248600000000089e-05, 5.533300000000116e-05, 5.3485999999998424e-05, 5.257000000000178e-05, 5.337499999999787e-05, 5.061099999999902e-05, 5.34869999999979e-05, 5.241700000000252e-05, 5.3485999999998424e-05, 5.052800000000107e-05, 5.537499999999987e-05, 5.4471999999999854e-05, 5.149999999999946e-05, 5.447299999999933e-05, 5.5291999999998453e-05, 5.4457999999996815e-05, 5.343099999999962e-05, 5.063899999999816e-05, 5.634699999999826e-05, 5.529100000000245e-05, 5.061099999999902e-05, 5.4401999999998535e-05, 5.5429999999998675e-05, 5.530499999999855e-05, 5.6277999999999884e-05, 5.3499999999997994e-05, 5.334699999999873e-05, 5.638900000000044e-05, 5.533299999999769e-05, 5.159700000000045e-05, 5.0651999999998254e-05, 5.161100000000002e-05, 5.054100000000117e-05, 5.254199999999917e-05, 5.6277999999999884e-05, 4.9707999999999e-05, 5.338900000000091e-05, 5.255499999999927e-05, 4.966600000000029e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.694" endtime="20201112 12:42:39.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.690" endtime="20201112 12:42:39.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.699" endtime="20201112 12:42:39.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.703" endtime="20201112 12:42:39.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.701" endtime="20201112 12:42:39.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.698" endtime="20201112 12:42:39.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.329" endtime="20201112 12:42:39.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.328" endtime="20201112 12:42:39.724"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.732" endtime="20201112 12:42:39.754"></status>
</kw>
<msg timestamp="20201112 12:42:39.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.731" endtime="20201112 12:42:39.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.756" endtime="20201112 12:42:39.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.758" endtime="20201112 12:42:39.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.728" endtime="20201112 12:42:39.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.726" endtime="20201112 12:42:39.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.768" endtime="20201112 12:42:40.054"></status>
</kw>
<msg timestamp="20201112 12:42:40.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023481389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.767" endtime="20201112 12:42:40.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023481389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.058" endtime="20201112 12:42:40.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.066" endtime="20201112 12:42:40.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.764" endtime="20201112 12:42:40.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.762" endtime="20201112 12:42:40.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.073" level="INFO">${RESULT} = [{'time': 0.023481389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9096999999998355e-05, 'source_diff': 3.9096999999998355e-05}, {'time': 0.023542111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:40.069" endtime="20201112 12:42:40.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.087" level="INFO">${ACCURACY} = {'source_diff': [3.9096999999998355e-05, 5.434699999999973e-05, 5.254200000000264e-05, 5.059699999999945e-05, 5.059699999999945e-05, 5.438899999999844e-05, 5.4458000000000284e-05, 5.443100000000062e-0...</msg>
<status status="PASS" starttime="20201112 12:42:40.074" endtime="20201112 12:42:40.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.092" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.091" endtime="20201112 12:42:40.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.094" level="INFO">VALUE: [3.9096999999998355e-05, 5.434699999999973e-05, 5.254200000000264e-05, 5.059699999999945e-05, 5.059699999999945e-05, 5.438899999999844e-05, 5.4458000000000284e-05, 5.443100000000062e-05, 5.052699999999813e-05, 4.959699999999845e-05, 5.538899999999944e-05, 5.436100000000277e-05, 5.351400000000103e-05, 5.350000000000146e-05, 5.151399999999903e-05, 5.341700000000005e-05, 5.061099999999902e-05, 5.63610000000013e-05, 5.250000000000046e-05, 5.3430000000000144e-05, 5.541700000000205e-05, 5.538899999999944e-05, 5.151399999999903e-05, 4.966699999999977e-05, 5.248600000000089e-05, 5.063899999999816e-05, 4.968099999999934e-05, 5.058399999999935e-05, 5.154200000000164e-05, 4.9707999999999e-05, 5.058299999999988e-05, 5.250000000000046e-05, 5.538899999999944e-05, 5.53610000000003e-05, 5.441700000000105e-05, 5.25279999999996e-05, 5.063900000000163e-05, 5.631899999999912e-05, 5.15279999999986e-05, 5.254199999999917e-05, 5.3485999999998424e-05, 5.53480000000002e-05, 5.254199999999917e-05, 5.063900000000163e-05, 5.256899999999884e-05, 5.438899999999844e-05, 5.247299999999733e-05, 5.065299999999773e-05, 4.9737000000001086e-05, 5.438899999999844e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.093" endtime="20201112 12:42:40.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.088" endtime="20201112 12:42:40.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.098" endtime="20201112 12:42:40.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.101" endtime="20201112 12:42:40.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.099" endtime="20201112 12:42:40.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.096" endtime="20201112 12:42:40.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.725" endtime="20201112 12:42:40.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.724" endtime="20201112 12:42:40.122"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.130" endtime="20201112 12:42:40.151"></status>
</kw>
<msg timestamp="20201112 12:42:40.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.129" endtime="20201112 12:42:40.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.152" endtime="20201112 12:42:40.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.155" endtime="20201112 12:42:40.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.126" endtime="20201112 12:42:40.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.124" endtime="20201112 12:42:40.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.165" endtime="20201112 12:42:40.451"></status>
</kw>
<msg timestamp="20201112 12:42:40.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.163" endtime="20201112 12:42:40.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.455" endtime="20201112 12:42:40.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.463" endtime="20201112 12:42:40.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.161" endtime="20201112 12:42:40.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.159" endtime="20201112 12:42:40.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.470" level="INFO">${RESULT} = [{'time': 0.022113056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.159799999999992e-05, 'source_diff': 5.159799999999992e-05}, {'time': 0.022174236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.467" endtime="20201112 12:42:40.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.483" level="INFO">${ACCURACY} = {'source_diff': [5.159799999999992e-05, 5.3443999999999714e-05, 5.441700000000105e-05, 5.533400000000063e-05, 5.538900000000291e-05, 5.15279999999986e-05, 5.156900000000131e-05, 5.25279999999996e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:40.471" endtime="20201112 12:42:40.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.488" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.487" endtime="20201112 12:42:40.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.490" level="INFO">VALUE: [5.159799999999992e-05, 5.3443999999999714e-05, 5.441700000000105e-05, 5.533400000000063e-05, 5.538900000000291e-05, 5.15279999999986e-05, 5.156900000000131e-05, 5.25279999999996e-05, 5.055600000000021e-05, 4.969399999999943e-05, 5.156900000000131e-05, 5.254199999999917e-05, 5.062499999999859e-05, 5.433300000000016e-05, 5.055600000000021e-05, 5.347299999999833e-05, 5.5416000000002574e-05, 5.255499999999927e-05, 5.540299999999901e-05, 5.533400000000063e-05, 5.059699999999945e-05, 5.537499999999987e-05, 5.252700000000013e-05, 5.4458000000000284e-05, 5.2457999999998284e-05, 5.634700000000173e-05, 5.058299999999988e-05, 5.158400000000035e-05, 5.531900000000159e-05, 5.63610000000013e-05, 5.054100000000117e-05, 5.250000000000046e-05, 5.162499999999959e-05, 5.25279999999996e-05, 5.532000000000106e-05, 5.348600000000189e-05, 5.5249999999999744e-05, 5.345899999999876e-05, 5.533399999999716e-05, 5.3499999999997994e-05, 5.058299999999988e-05, 5.437499999999887e-05, 5.53610000000003e-05, 5.532000000000106e-05, 5.247200000000132e-05, 5.345800000000275e-05, 5.245800000000175e-05, 5.155600000000121e-05, 5.4471999999999854e-05, 5.4415999999998105e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.489" endtime="20201112 12:42:40.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.484" endtime="20201112 12:42:40.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.494" endtime="20201112 12:42:40.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.497" endtime="20201112 12:42:40.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.496" endtime="20201112 12:42:40.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.492" endtime="20201112 12:42:40.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.123" endtime="20201112 12:42:40.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.122" endtime="20201112 12:42:40.518"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.527" endtime="20201112 12:42:40.549"></status>
</kw>
<msg timestamp="20201112 12:42:40.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.525" endtime="20201112 12:42:40.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.551" endtime="20201112 12:42:40.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.553" endtime="20201112 12:42:40.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.523" endtime="20201112 12:42:40.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.521" endtime="20201112 12:42:40.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.563" endtime="20201112 12:42:40.849"></status>
</kw>
<msg timestamp="20201112 12:42:40.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.561" endtime="20201112 12:42:40.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.853" endtime="20201112 12:42:40.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.861" endtime="20201112 12:42:40.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.559" endtime="20201112 12:42:40.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.557" endtime="20201112 12:42:40.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.868" level="INFO">${RESULT} = [{'time': 0.022576889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9153000000000104e-05, 'source_diff': 3.9153000000000104e-05}, {'time': 0.022638444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:40.865" endtime="20201112 12:42:40.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.881" level="INFO">${ACCURACY} = {'source_diff': [3.9153000000000104e-05, 5.25409999999997e-05, 5.4458000000000284e-05, 5.059699999999945e-05, 5.25279999999996e-05, 5.06530000000012e-05, 5.157000000000078e-05, 4.963900000000063e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:40.869" endtime="20201112 12:42:40.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.886" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.885" endtime="20201112 12:42:40.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.889" level="INFO">VALUE: [3.9153000000000104e-05, 5.25409999999997e-05, 5.4458000000000284e-05, 5.059699999999945e-05, 5.25279999999996e-05, 5.06530000000012e-05, 5.157000000000078e-05, 4.963900000000063e-05, 5.241700000000252e-05, 5.158300000000088e-05, 5.252700000000013e-05, 5.061099999999902e-05, 5.25279999999996e-05, 5.255600000000221e-05, 5.338900000000091e-05, 5.637500000000087e-05, 4.963900000000063e-05, 5.4430000000001144e-05, 5.340300000000048e-05, 5.059699999999945e-05, 5.543099999999815e-05, 5.154200000000164e-05, 5.256999999999831e-05, 5.541699999999858e-05, 5.3499999999997994e-05, 4.956899999999931e-05, 5.3485999999998424e-05, 5.350000000000146e-05, 5.059699999999945e-05, 5.6319999999998593e-05, 4.966600000000029e-05, 5.061100000000249e-05, 5.158300000000088e-05, 5.15279999999986e-05, 5.161100000000002e-05, 5.3485999999998424e-05, 5.445899999999976e-05, 5.247200000000132e-05, 5.149999999999946e-05, 4.963900000000063e-05, 5.637500000000087e-05, 5.156900000000131e-05, 5.062499999999859e-05, 5.251400000000003e-05, 5.143100000000109e-05, 5.63610000000013e-05, 5.062500000000206e-05, 5.351400000000103e-05, 4.961100000000149e-05, 5.629099999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.888" endtime="20201112 12:42:40.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.882" endtime="20201112 12:42:40.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.893" endtime="20201112 12:42:40.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.896" endtime="20201112 12:42:40.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.894" endtime="20201112 12:42:40.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.891" endtime="20201112 12:42:40.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.519" endtime="20201112 12:42:40.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.519" endtime="20201112 12:42:40.917"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.925" endtime="20201112 12:42:40.944"></status>
</kw>
<msg timestamp="20201112 12:42:40.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.924" endtime="20201112 12:42:40.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.946" endtime="20201112 12:42:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.948" endtime="20201112 12:42:40.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.921" endtime="20201112 12:42:40.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.919" endtime="20201112 12:42:40.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.958" endtime="20201112 12:42:41.243"></status>
</kw>
<msg timestamp="20201112 12:42:41.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020912597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.957" endtime="20201112 12:42:41.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020912597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.248" endtime="20201112 12:42:41.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.256" endtime="20201112 12:42:41.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.954" endtime="20201112 12:42:41.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.952" endtime="20201112 12:42:41.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.263" level="INFO">${RESULT} = [{'time': 0.020965125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.25279999999996e-05, 'source_diff': 5.25279999999996e-05}, {'time': 0.021026125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:41.259" endtime="20201112 12:42:41.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.276" level="INFO">${ACCURACY} = {'source_diff': [5.25279999999996e-05, 5.4471999999999854e-05, 5.432000000000006e-05, 5.251400000000003e-05, 5.062499999999859e-05, 5.529099999999898e-05, 5.537499999999987e-05, 5.3401999999997535e-05...</msg>
<status status="PASS" starttime="20201112 12:42:41.264" endtime="20201112 12:42:41.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.281" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.280" endtime="20201112 12:42:41.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.283" level="INFO">VALUE: [5.25279999999996e-05, 5.4471999999999854e-05, 5.432000000000006e-05, 5.251400000000003e-05, 5.062499999999859e-05, 5.529099999999898e-05, 5.537499999999987e-05, 5.3401999999997535e-05, 5.251400000000003e-05, 5.531899999999812e-05, 5.250000000000046e-05, 5.53610000000003e-05, 5.4458000000000284e-05, 5.436200000000224e-05, 5.4429999999997675e-05, 5.350000000000146e-05, 5.054200000000064e-05, 5.155599999999774e-05, 5.6222000000001604e-05, 5.4499999999998994e-05, 5.25279999999996e-05, 5.4458000000000284e-05, 5.240299999999948e-05, 5.53610000000003e-05, 5.4444000000000714e-05, 5.4401999999998535e-05, 5.4458000000000284e-05, 5.155499999999827e-05, 5.532000000000106e-05, 5.3416000000000574e-05, 5.3485999999998424e-05, 5.434699999999973e-05, 5.540299999999901e-05, 5.443099999999715e-05, 5.5277999999998884e-05, 5.351299999999809e-05, 5.638900000000044e-05, 5.338900000000091e-05, 5.148599999999989e-05, 5.065299999999773e-05, 5.5430000000002144e-05, 5.052800000000107e-05, 5.155599999999774e-05, 5.06530000000012e-05, 5.343100000000309e-05, 5.350000000000146e-05, 5.633400000000163e-05, 5.061199999999849e-05, 5.534699999999726e-05, 5.5401999999999535e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.282" endtime="20201112 12:42:41.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.277" endtime="20201112 12:42:41.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.287" endtime="20201112 12:42:41.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.290" endtime="20201112 12:42:41.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.289" endtime="20201112 12:42:41.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.285" endtime="20201112 12:42:41.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.918" endtime="20201112 12:42:41.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.917" endtime="20201112 12:42:41.311"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.320" endtime="20201112 12:42:41.342"></status>
</kw>
<msg timestamp="20201112 12:42:41.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.318" endtime="20201112 12:42:41.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.344" endtime="20201112 12:42:41.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.346" endtime="20201112 12:42:41.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.316" endtime="20201112 12:42:41.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.313" endtime="20201112 12:42:41.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.356" endtime="20201112 12:42:41.641"></status>
</kw>
<msg timestamp="20201112 12:42:41.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.355" endtime="20201112 12:42:41.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.646" endtime="20201112 12:42:41.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.654" endtime="20201112 12:42:41.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.352" endtime="20201112 12:42:41.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.350" endtime="20201112 12:42:41.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.660" level="INFO">${RESULT} = [{'time': 0.023626319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870800000000147e-05, 'source_diff': 4.870800000000147e-05}, {'time': 0.023687153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.657" endtime="20201112 12:42:41.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.675" level="INFO">${ACCURACY} = {'source_diff': [4.870800000000147e-05, 5.159700000000045e-05, 5.537500000000334e-05, 5.441699999999758e-05, 5.629099999999998e-05, 5.062500000000206e-05, 5.445899999999976e-05, 5.255499999999927e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:41.661" endtime="20201112 12:42:41.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.679" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.678" endtime="20201112 12:42:41.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.682" level="INFO">VALUE: [4.870800000000147e-05, 5.159700000000045e-05, 5.537500000000334e-05, 5.441699999999758e-05, 5.629099999999998e-05, 5.062500000000206e-05, 5.445899999999976e-05, 5.255499999999927e-05, 5.638899999999697e-05, 5.4458000000000284e-05, 5.3457999999999284e-05, 5.537500000000334e-05, 5.158300000000088e-05, 5.159700000000045e-05, 5.159799999999992e-05, 5.437499999999887e-05, 5.254200000000264e-05, 5.5443999999998245e-05, 5.351400000000103e-05, 5.158399999999688e-05, 5.445899999999976e-05, 5.437499999999887e-05, 5.157000000000078e-05, 5.0638000000002154e-05, 5.3485999999998424e-05, 5.255499999999927e-05, 5.540299999999901e-05, 5.530600000000149e-05, 5.444500000000019e-05, 5.348600000000189e-05, 5.445899999999976e-05, 5.637500000000087e-05, 5.437499999999887e-05, 5.062499999999859e-05, 5.6277999999999884e-05, 5.157000000000078e-05, 5.35410000000007e-05, 5.058399999999935e-05, 4.9638000000001153e-05, 5.4443999999997245e-05, 5.354200000000017e-05, 4.958400000000182e-05, 5.3471999999998854e-05, 5.156900000000131e-05, 5.4471999999999854e-05, 5.25409999999997e-05, 5.158300000000088e-05, 5.054200000000064e-05, 5.159700000000045e-05, 5.25279999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.681" endtime="20201112 12:42:41.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.676" endtime="20201112 12:42:41.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.686" endtime="20201112 12:42:41.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.689" endtime="20201112 12:42:41.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.687" endtime="20201112 12:42:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.684" endtime="20201112 12:42:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.312" endtime="20201112 12:42:41.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.311" endtime="20201112 12:42:41.710"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.719" endtime="20201112 12:42:41.739"></status>
</kw>
<msg timestamp="20201112 12:42:41.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.717" endtime="20201112 12:42:41.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.740" endtime="20201112 12:42:41.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.743" endtime="20201112 12:42:41.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.714" endtime="20201112 12:42:41.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.712" endtime="20201112 12:42:41.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.752" endtime="20201112 12:42:42.039"></status>
</kw>
<msg timestamp="20201112 12:42:42.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.751" endtime="20201112 12:42:42.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.043" endtime="20201112 12:42:42.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.051" endtime="20201112 12:42:42.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.748" endtime="20201112 12:42:42.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.747" endtime="20201112 12:42:42.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.058" level="INFO">${RESULT} = [{'time': 0.021739681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.912500000000015e-05, 'source_diff': 5.912500000000015e-05}, {'time': 0.021800958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.054" endtime="20201112 12:42:42.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.071" level="INFO">${ACCURACY} = {'source_diff': [5.912500000000015e-05, 5.3499999999997994e-05, 5.537499999999987e-05, 5.154200000000164e-05, 5.6319999999998593e-05, 5.537499999999987e-05, 5.440300000000148e-05, 5.063899999999816e-0...</msg>
<status status="PASS" starttime="20201112 12:42:42.059" endtime="20201112 12:42:42.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.076" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.075" endtime="20201112 12:42:42.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.078" level="INFO">VALUE: [5.912500000000015e-05, 5.3499999999997994e-05, 5.537499999999987e-05, 5.154200000000164e-05, 5.6319999999998593e-05, 5.537499999999987e-05, 5.440300000000148e-05, 5.063899999999816e-05, 5.250000000000046e-05, 5.350000000000146e-05, 5.062499999999859e-05, 5.443100000000062e-05, 5.438899999999844e-05, 4.963900000000063e-05, 5.157000000000078e-05, 5.4471999999999854e-05, 5.059699999999945e-05, 4.963900000000063e-05, 5.261099999999755e-05, 5.248600000000089e-05, 5.058299999999988e-05, 5.247200000000132e-05, 5.344499999999919e-05, 5.154199999999817e-05, 5.6319999999998593e-05, 5.250000000000046e-05, 5.154200000000164e-05, 4.96530000000002e-05, 5.05279999999976e-05, 5.15409999999987e-05, 5.3443999999999714e-05, 5.633300000000216e-05, 5.3457999999999284e-05, 5.3443999999999714e-05, 5.3443999999999714e-05, 5.161100000000002e-05, 5.537499999999987e-05, 5.533400000000063e-05, 5.244500000000166e-05, 5.155600000000121e-05, 5.056900000000031e-05, 5.150000000000293e-05, 5.537499999999987e-05, 5.536199999999977e-05, 5.056900000000031e-05, 5.066700000000077e-05, 5.441699999999758e-05, 5.632000000000206e-05, 5.438900000000191e-05, 5.055500000000074e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.077" endtime="20201112 12:42:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.072" endtime="20201112 12:42:42.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.086" endtime="20201112 12:42:42.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.089" endtime="20201112 12:42:42.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.088" endtime="20201112 12:42:42.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.084" endtime="20201112 12:42:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.711" endtime="20201112 12:42:42.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.710" endtime="20201112 12:42:42.110"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.119" endtime="20201112 12:42:42.140"></status>
</kw>
<msg timestamp="20201112 12:42:42.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.117" endtime="20201112 12:42:42.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.142" endtime="20201112 12:42:42.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.144" endtime="20201112 12:42:42.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.114" endtime="20201112 12:42:42.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.112" endtime="20201112 12:42:42.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.154" endtime="20201112 12:42:42.441"></status>
</kw>
<msg timestamp="20201112 12:42:42.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.153" endtime="20201112 12:42:42.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.445" endtime="20201112 12:42:42.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.453" endtime="20201112 12:42:42.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.150" endtime="20201112 12:42:42.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.148" endtime="20201112 12:42:42.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.460" level="INFO">${RESULT} = [{'time': 0.023514722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.108299999999997e-05, 'source_diff': 6.108299999999997e-05}, {'time': 0.023575986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.457" endtime="20201112 12:42:42.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.473" level="INFO">${ACCURACY} = {'source_diff': [6.108299999999997e-05, 5.158300000000088e-05, 5.352700000000113e-05, 5.63749999999974e-05, 5.338899999999744e-05, 5.541699999999858e-05, 5.165299999999873e-05, 5.062499999999859e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:42.461" endtime="20201112 12:42:42.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.478" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.477" endtime="20201112 12:42:42.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.480" level="INFO">VALUE: [6.108299999999997e-05, 5.158300000000088e-05, 5.352700000000113e-05, 5.63749999999974e-05, 5.338899999999744e-05, 5.541699999999858e-05, 5.165299999999873e-05, 5.062499999999859e-05, 5.149999999999946e-05, 5.35280000000006e-05, 5.250000000000046e-05, 5.15140000000025e-05, 5.050000000000193e-05, 4.966600000000029e-05, 5.633299999999869e-05, 5.537499999999987e-05, 5.4471999999999854e-05, 5.255599999999874e-05, 5.63610000000013e-05, 5.530499999999855e-05, 5.3513999999997564e-05, 5.6236000000001174e-05, 5.158299999999741e-05, 5.350000000000146e-05, 5.351300000000156e-05, 5.055600000000021e-05, 5.44730000000028e-05, 5.158400000000035e-05, 5.055500000000074e-05, 5.061099999999902e-05, 5.25279999999996e-05, 5.6277999999999884e-05, 4.967999999999986e-05, 5.062500000000206e-05, 5.155499999999827e-05, 5.243099999999862e-05, 5.3485999999998424e-05, 4.9665999999996824e-05, 5.063900000000163e-05, 5.158300000000088e-05, 5.063900000000163e-05, 5.250000000000046e-05, 5.256900000000231e-05, 5.156900000000131e-05, 4.966600000000029e-05, 5.5402000000003004e-05, 5.63610000000013e-05, 5.3415999999997105e-05, 5.055500000000074e-05, 5.255599999999874e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.479" endtime="20201112 12:42:42.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.474" endtime="20201112 12:42:42.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.484" endtime="20201112 12:42:42.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.487" endtime="20201112 12:42:42.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.486" endtime="20201112 12:42:42.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.482" endtime="20201112 12:42:42.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.111" endtime="20201112 12:42:42.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.110" endtime="20201112 12:42:42.508"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.517" endtime="20201112 12:42:42.537"></status>
</kw>
<msg timestamp="20201112 12:42:42.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.515" endtime="20201112 12:42:42.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.538" endtime="20201112 12:42:42.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.541" endtime="20201112 12:42:42.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.513" endtime="20201112 12:42:42.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.511" endtime="20201112 12:42:42.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.551" endtime="20201112 12:42:42.836"></status>
</kw>
<msg timestamp="20201112 12:42:42.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.549" endtime="20201112 12:42:42.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.841" endtime="20201112 12:42:42.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.849" endtime="20201112 12:42:42.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.547" endtime="20201112 12:42:42.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.545" endtime="20201112 12:42:42.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.856" level="INFO">${RESULT} = [{'time': 0.022085792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.53610000000003e-05, 'source_diff': 5.53610000000003e-05}, {'time': 0.022147389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:42.852" endtime="20201112 12:42:42.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.869" level="INFO">${ACCURACY} = {'source_diff': [5.53610000000003e-05, 5.341700000000005e-05, 5.351400000000103e-05, 5.248600000000089e-05, 5.055500000000074e-05, 4.962499999999759e-05, 5.062500000000206e-05, 5.441699999999758e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:42.857" endtime="20201112 12:42:42.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.874" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.873" endtime="20201112 12:42:42.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.876" level="INFO">VALUE: [5.53610000000003e-05, 5.341700000000005e-05, 5.351400000000103e-05, 5.248600000000089e-05, 5.055500000000074e-05, 4.962499999999759e-05, 5.062500000000206e-05, 5.441699999999758e-05, 5.634700000000173e-05, 5.538899999999944e-05, 5.434699999999973e-05, 5.3485999999998424e-05, 5.3457999999999284e-05, 5.6264000000000314e-05, 5.254200000000264e-05, 5.155600000000121e-05, 5.6277999999999884e-05, 5.533400000000063e-05, 5.3485999999998424e-05, 5.061099999999902e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.532000000000106e-05, 4.96530000000002e-05, 5.3499999999997994e-05, 5.251400000000003e-05, 5.538899999999944e-05, 5.3485999999998424e-05, 5.4458000000000284e-05, 5.350000000000146e-05, 5.058299999999988e-05, 5.531900000000159e-05, 5.256899999999884e-05, 5.4416000000001574e-05, 5.15140000000025e-05, 5.061099999999902e-05, 5.055500000000074e-05, 5.541700000000205e-05, 5.637500000000087e-05, 5.25279999999996e-05, 5.63610000000013e-05, 5.351300000000156e-05, 5.151299999999956e-05, 5.15140000000025e-05, 4.968099999999934e-05, 5.154100000000217e-05, 5.4458000000000284e-05, 5.252700000000013e-05, 4.96530000000002e-05, 5.440299999999801e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.875" endtime="20201112 12:42:42.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.870" endtime="20201112 12:42:42.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.880" endtime="20201112 12:42:42.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.883" endtime="20201112 12:42:42.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.882" endtime="20201112 12:42:42.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.878" endtime="20201112 12:42:42.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.509" endtime="20201112 12:42:42.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.509" endtime="20201112 12:42:42.904"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.913" endtime="20201112 12:42:42.933"></status>
</kw>
<msg timestamp="20201112 12:42:42.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.911" endtime="20201112 12:42:42.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.935" endtime="20201112 12:42:42.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.938" endtime="20201112 12:42:42.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.909" endtime="20201112 12:42:42.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.907" endtime="20201112 12:42:42.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.948" endtime="20201112 12:42:43.233"></status>
</kw>
<msg timestamp="20201112 12:42:43.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.946" endtime="20201112 12:42:43.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.237" endtime="20201112 12:42:43.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.245" endtime="20201112 12:42:43.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.943" endtime="20201112 12:42:43.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.942" endtime="20201112 12:42:43.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.252" level="INFO">${RESULT} = [{'time': 0.023068111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1068999999997746e-05, 'source_diff': 4.1068999999997746e-05}, {'time': 0.023129264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:43.249" endtime="20201112 12:42:43.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.311" level="INFO">${ACCURACY} = {'source_diff': [4.1068999999997746e-05, 5.058299999999988e-05, 5.05279999999976e-05, 5.3457999999999284e-05, 5.25279999999996e-05, 5.050000000000193e-05, 5.538899999999944e-05, 4.956999999999878e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:43.253" endtime="20201112 12:42:43.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.316" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.315" endtime="20201112 12:42:43.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.319" level="INFO">VALUE: [4.1068999999997746e-05, 5.058299999999988e-05, 5.05279999999976e-05, 5.3457999999999284e-05, 5.25279999999996e-05, 5.050000000000193e-05, 5.538899999999944e-05, 4.956999999999878e-05, 5.5401999999999535e-05, 5.155500000000174e-05, 5.43479999999992e-05, 5.061099999999902e-05, 5.4471999999999854e-05, 5.25279999999996e-05, 5.241699999999905e-05, 5.538899999999944e-05, 5.340300000000048e-05, 5.251400000000003e-05, 5.6264000000000314e-05, 5.156900000000131e-05, 4.955499999999974e-05, 5.540299999999901e-05, 5.637500000000087e-05, 5.434699999999973e-05, 5.061099999999902e-05, 5.250000000000046e-05, 5.062499999999859e-05, 5.6250000000000744e-05, 5.255500000000274e-05, 5.531999999999759e-05, 5.251400000000003e-05, 5.4443999999997245e-05, 5.337500000000134e-05, 5.06530000000012e-05, 5.158300000000088e-05, 5.532000000000106e-05, 5.540299999999901e-05, 5.445899999999976e-05, 5.531899999999812e-05, 5.440299999999801e-05, 5.627800000000335e-05, 5.4416000000001574e-05, 5.156899999999784e-05, 5.245899999999776e-05, 5.633399999999816e-05, 4.955499999999974e-05, 5.543099999999815e-05, 5.062500000000206e-05, 5.6264000000000314e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.317" endtime="20201112 12:42:43.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.312" endtime="20201112 12:42:43.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.322" endtime="20201112 12:42:43.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.326" endtime="20201112 12:42:43.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.324" endtime="20201112 12:42:43.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.320" endtime="20201112 12:42:43.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.905" endtime="20201112 12:42:43.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.905" endtime="20201112 12:42:43.347"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.355" endtime="20201112 12:42:43.376"></status>
</kw>
<msg timestamp="20201112 12:42:43.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.354" endtime="20201112 12:42:43.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.378" endtime="20201112 12:42:43.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.380" endtime="20201112 12:42:43.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.351" endtime="20201112 12:42:43.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.349" endtime="20201112 12:42:43.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.389" endtime="20201112 12:42:43.676"></status>
</kw>
<msg timestamp="20201112 12:42:43.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.388" endtime="20201112 12:42:43.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.680" endtime="20201112 12:42:43.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.688" endtime="20201112 12:42:43.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.385" endtime="20201112 12:42:43.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.383" endtime="20201112 12:42:43.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.695" level="INFO">${RESULT} = [{'time': 0.022427139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.498599999999952e-05, 'source_diff': 6.498599999999952e-05}, {'time': 0.022488042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.692" endtime="20201112 12:42:43.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.709" level="INFO">${ACCURACY} = {'source_diff': [6.498599999999952e-05, 5.062499999999859e-05, 5.149999999999946e-05, 5.534699999999726e-05, 5.350000000000146e-05, 5.25279999999996e-05, 5.3471999999998854e-05, 5.148599999999989e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:43.696" endtime="20201112 12:42:43.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.713" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.712" endtime="20201112 12:42:43.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.716" level="INFO">VALUE: [6.498599999999952e-05, 5.062499999999859e-05, 5.149999999999946e-05, 5.534699999999726e-05, 5.350000000000146e-05, 5.25279999999996e-05, 5.3471999999998854e-05, 5.148599999999989e-05, 5.062499999999859e-05, 5.158400000000035e-05, 5.538900000000291e-05, 5.245800000000175e-05, 5.3513999999997564e-05, 5.062499999999859e-05, 5.16530000000022e-05, 5.055500000000074e-05, 5.4458000000000284e-05, 5.348600000000189e-05, 5.5401999999999535e-05, 5.059699999999945e-05, 5.15140000000025e-05, 5.5416000000002574e-05, 5.540299999999901e-05, 5.156900000000131e-05, 5.254200000000264e-05, 5.062499999999859e-05, 5.2457999999998284e-05, 5.055600000000021e-05, 5.641699999999958e-05, 5.4416000000001574e-05, 5.062499999999859e-05, 4.9707999999999e-05, 5.444500000000019e-05, 5.541699999999858e-05, 5.63610000000013e-05, 5.059799999999892e-05, 5.4277999999997883e-05, 5.634700000000173e-05, 5.25279999999996e-05, 5.163899999999916e-05, 5.633400000000163e-05, 5.5305999999998023e-05, 5.063900000000163e-05, 5.538899999999944e-05, 5.4471999999999854e-05, 5.059700000000292e-05, 5.3430000000000144e-05, 5.533299999999769e-05, 5.254200000000264e-05, 5.637500000000087e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.714" endtime="20201112 12:42:43.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.710" endtime="20201112 12:42:43.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.719" endtime="20201112 12:42:43.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.723" endtime="20201112 12:42:43.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.721" endtime="20201112 12:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.718" endtime="20201112 12:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.348" endtime="20201112 12:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.347" endtime="20201112 12:42:43.744"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.752" endtime="20201112 12:42:43.773"></status>
</kw>
<msg timestamp="20201112 12:42:43.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.751" endtime="20201112 12:42:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.775" endtime="20201112 12:42:43.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.777" endtime="20201112 12:42:43.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.748" endtime="20201112 12:42:43.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.746" endtime="20201112 12:42:43.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.786" endtime="20201112 12:42:44.073"></status>
</kw>
<msg timestamp="20201112 12:42:44.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.784" endtime="20201112 12:42:44.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.077" endtime="20201112 12:42:44.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.085" endtime="20201112 12:42:44.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.782" endtime="20201112 12:42:44.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.780" endtime="20201112 12:42:44.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.093" level="INFO">${RESULT} = [{'time': 0.022737958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0193999999999526e-05, 'source_diff': 6.0193999999999526e-05}, {'time': 0.022799125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:44.089" endtime="20201112 12:42:44.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.106" level="INFO">${ACCURACY} = {'source_diff': [6.0193999999999526e-05, 5.255599999999874e-05, 5.434699999999973e-05, 5.441699999999758e-05, 5.261100000000102e-05, 5.531900000000159e-05, 5.441699999999758e-05, 5.445899999999976e-05...</msg>
<status status="PASS" starttime="20201112 12:42:44.094" endtime="20201112 12:42:44.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.110" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.109" endtime="20201112 12:42:44.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.113" level="INFO">VALUE: [6.0193999999999526e-05, 5.255599999999874e-05, 5.434699999999973e-05, 5.441699999999758e-05, 5.261100000000102e-05, 5.531900000000159e-05, 5.441699999999758e-05, 5.445899999999976e-05, 5.6291999999999454e-05, 5.062499999999859e-05, 5.062499999999859e-05, 5.056900000000031e-05, 5.25279999999996e-05, 5.155600000000121e-05, 5.533400000000063e-05, 5.258299999999841e-05, 5.06530000000012e-05, 5.058299999999988e-05, 5.3485999999998424e-05, 5.338899999999744e-05, 5.4458000000000284e-05, 5.340300000000048e-05, 5.537499999999987e-05, 5.062499999999859e-05, 5.637500000000087e-05, 5.433399999999963e-05, 5.634699999999826e-05, 5.25409999999997e-05, 5.6264000000000314e-05, 5.345899999999876e-05, 5.543099999999815e-05, 5.437499999999887e-05, 5.345899999999876e-05, 5.531999999999759e-05, 5.538899999999944e-05, 5.149999999999946e-05, 5.25409999999997e-05, 5.052800000000107e-05, 5.159799999999992e-05, 5.150000000000293e-05, 5.25409999999997e-05, 5.3485999999998424e-05, 5.05140000000015e-05, 5.4430000000001144e-05, 5.054100000000117e-05, 5.637500000000087e-05, 5.05279999999976e-05, 5.350000000000146e-05, 5.533300000000116e-05, 5.637500000000087e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.111" endtime="20201112 12:42:44.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.107" endtime="20201112 12:42:44.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.116" endtime="20201112 12:42:44.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.120" endtime="20201112 12:42:44.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.118" endtime="20201112 12:42:44.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.115" endtime="20201112 12:42:44.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.745" endtime="20201112 12:42:44.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.744" endtime="20201112 12:42:44.141"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.149" endtime="20201112 12:42:44.170"></status>
</kw>
<msg timestamp="20201112 12:42:44.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.148" endtime="20201112 12:42:44.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.171" endtime="20201112 12:42:44.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.173" endtime="20201112 12:42:44.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.145" endtime="20201112 12:42:44.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.143" endtime="20201112 12:42:44.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.182" endtime="20201112 12:42:44.469"></status>
</kw>
<msg timestamp="20201112 12:42:44.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.181" endtime="20201112 12:42:44.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.473" endtime="20201112 12:42:44.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.482" endtime="20201112 12:42:44.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.178" endtime="20201112 12:42:44.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.177" endtime="20201112 12:42:44.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.488" level="INFO">${RESULT} = [{'time': 0.022560056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7138999999998534e-05, 'source_diff': 3.7138999999998534e-05}, {'time': 0.022621542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:44.485" endtime="20201112 12:42:44.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.502" level="INFO">${ACCURACY} = {'source_diff': [3.7138999999998534e-05, 5.537499999999987e-05, 5.4444000000000714e-05, 5.154199999999817e-05, 4.967999999999986e-05, 5.054200000000064e-05, 5.350000000000146e-05, 5.438899999999844e-0...</msg>
<status status="PASS" starttime="20201112 12:42:44.489" endtime="20201112 12:42:44.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.506" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.505" endtime="20201112 12:42:44.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.509" level="INFO">VALUE: [3.7138999999998534e-05, 5.537499999999987e-05, 5.4444000000000714e-05, 5.154199999999817e-05, 4.967999999999986e-05, 5.054200000000064e-05, 5.350000000000146e-05, 5.438899999999844e-05, 5.25279999999996e-05, 5.440299999999801e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.2430000000002613e-05, 5.633300000000216e-05, 5.5415999999999105e-05, 5.437499999999887e-05, 5.247200000000132e-05, 5.444500000000019e-05, 5.53610000000003e-05, 4.965200000000072e-05, 5.451400000000203e-05, 5.630499999999955e-05, 5.537499999999987e-05, 5.344499999999919e-05, 5.061099999999902e-05, 5.055600000000021e-05, 5.3457999999999284e-05, 5.540299999999901e-05, 5.437500000000234e-05, 5.250000000000046e-05, 5.158300000000088e-05, 5.058299999999988e-05, 5.4458000000000284e-05, 5.158300000000088e-05, 5.152800000000207e-05, 5.543099999999815e-05, 5.2415999999999574e-05, 5.252700000000013e-05, 5.637500000000087e-05, 5.53480000000002e-05, 5.251400000000003e-05, 5.351400000000103e-05, 5.355599999999974e-05, 5.247200000000132e-05, 5.158400000000035e-05, 5.634700000000173e-05, 5.250000000000046e-05, 4.963900000000063e-05, 5.159799999999992e-05, 5.145900000000023e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.507" endtime="20201112 12:42:44.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.502" endtime="20201112 12:42:44.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.512" endtime="20201112 12:42:44.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.516" endtime="20201112 12:42:44.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.514" endtime="20201112 12:42:44.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.510" endtime="20201112 12:42:44.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.142" endtime="20201112 12:42:44.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.141" endtime="20201112 12:42:44.536"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.545" endtime="20201112 12:42:44.567"></status>
</kw>
<msg timestamp="20201112 12:42:44.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.544" endtime="20201112 12:42:44.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.569" endtime="20201112 12:42:44.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.571" endtime="20201112 12:42:44.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.541" endtime="20201112 12:42:44.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.539" endtime="20201112 12:42:44.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.580" endtime="20201112 12:42:44.866"></status>
</kw>
<msg timestamp="20201112 12:42:44.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.579" endtime="20201112 12:42:44.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.871" endtime="20201112 12:42:44.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.879" endtime="20201112 12:42:44.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.576" endtime="20201112 12:42:44.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.575" endtime="20201112 12:42:44.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.886" level="INFO">${RESULT} = [{'time': 0.023634083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.400000000000156e-05, 'source_diff': 6.400000000000156e-05}, {'time': 0.023695625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.882" endtime="20201112 12:42:44.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.900" level="INFO">${ACCURACY} = {'source_diff': [6.400000000000156e-05, 5.634700000000173e-05, 5.4458000000000284e-05, 5.258400000000135e-05, 5.159699999999698e-05, 5.148599999999989e-05, 5.250000000000046e-05, 5.063900000000163e-05...</msg>
<status status="PASS" starttime="20201112 12:42:44.887" endtime="20201112 12:42:44.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.905" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.904" endtime="20201112 12:42:44.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.907" level="INFO">VALUE: [6.400000000000156e-05, 5.634700000000173e-05, 5.4458000000000284e-05, 5.258400000000135e-05, 5.159699999999698e-05, 5.148599999999989e-05, 5.250000000000046e-05, 5.063900000000163e-05, 5.631899999999912e-05, 5.5486000000000424e-05, 5.6250000000000744e-05, 5.062500000000206e-05, 5.063900000000163e-05, 5.054200000000064e-05, 5.636099999999783e-05, 5.543100000000162e-05, 5.245800000000175e-05, 5.0638000000002154e-05, 5.540300000000248e-05, 5.063899999999816e-05, 5.35280000000006e-05, 5.437499999999887e-05, 5.257000000000178e-05, 5.35280000000006e-05, 5.538900000000291e-05, 5.063900000000163e-05, 5.445899999999976e-05, 5.149999999999946e-05, 5.356999999999931e-05, 5.055600000000021e-05, 5.255600000000221e-05, 5.7235999999998705e-05, 5.5429999999998675e-05, 5.247200000000132e-05, 5.159700000000045e-05, 5.53610000000003e-05, 5.248600000000089e-05, 4.966699999999977e-05, 5.145800000000075e-05, 5.155500000000174e-05, 5.158400000000035e-05, 5.158399999999688e-05, 5.6249999999997274e-05, 5.155600000000121e-05, 5.158300000000088e-05, 5.35280000000006e-05, 5.4471999999999854e-05, 5.0652000000001723e-05, 5.6264000000000314e-05, 5.144500000000066e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.906" endtime="20201112 12:42:44.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.901" endtime="20201112 12:42:44.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.911" endtime="20201112 12:42:44.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.914" endtime="20201112 12:42:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.913" endtime="20201112 12:42:44.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.909" endtime="20201112 12:42:44.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.537" endtime="20201112 12:42:44.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.537" endtime="20201112 12:42:44.935"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.944" endtime="20201112 12:42:44.965"></status>
</kw>
<msg timestamp="20201112 12:42:44.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.942" endtime="20201112 12:42:44.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.966" endtime="20201112 12:42:44.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.969" endtime="20201112 12:42:44.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.939" endtime="20201112 12:42:44.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.937" endtime="20201112 12:42:44.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.978" endtime="20201112 12:42:45.263"></status>
</kw>
<msg timestamp="20201112 12:42:45.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.976" endtime="20201112 12:42:45.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.267" endtime="20201112 12:42:45.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.276" endtime="20201112 12:42:45.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.974" endtime="20201112 12:42:45.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.972" endtime="20201112 12:42:45.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.282" level="INFO">${RESULT} = [{'time': 0.021991764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.968099999999934e-05, 'source_diff': 4.968099999999934e-05}, {'time': 0.022053306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.279" endtime="20201112 12:42:45.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.296" level="INFO">${ACCURACY} = {'source_diff': [4.968099999999934e-05, 5.448700000000237e-05, 5.151299999999956e-05, 5.5430000000002144e-05, 5.056900000000031e-05, 5.633299999999869e-05, 5.161100000000002e-05, 5.541700000000205e-05...</msg>
<status status="PASS" starttime="20201112 12:42:45.283" endtime="20201112 12:42:45.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.300" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.299" endtime="20201112 12:42:45.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.303" level="INFO">VALUE: [4.968099999999934e-05, 5.448700000000237e-05, 5.151299999999956e-05, 5.5430000000002144e-05, 5.056900000000031e-05, 5.633299999999869e-05, 5.161100000000002e-05, 5.541700000000205e-05, 5.437499999999887e-05, 5.537499999999987e-05, 5.351400000000103e-05, 5.251400000000003e-05, 5.5415999999999105e-05, 5.347200000000232e-05, 5.058299999999988e-05, 5.147200000000032e-05, 5.250000000000046e-05, 5.252700000000013e-05, 4.9681000000002806e-05, 5.637500000000087e-05, 5.6291999999999454e-05, 5.155600000000121e-05, 5.062499999999859e-05, 5.149999999999946e-05, 5.254199999999917e-05, 5.066700000000077e-05, 5.543100000000162e-05, 5.3499999999997994e-05, 5.158399999999688e-05, 5.254199999999917e-05, 5.259800000000092e-05, 5.254199999999917e-05, 5.257000000000178e-05, 5.251300000000056e-05, 5.054200000000064e-05, 5.3485999999998424e-05, 5.062499999999859e-05, 5.054200000000064e-05, 5.3513999999997564e-05, 5.4458000000000284e-05, 5.25279999999996e-05, 5.533400000000063e-05, 5.634699999999826e-05, 5.441700000000105e-05, 5.155599999999774e-05, 5.540299999999901e-05, 5.532000000000106e-05, 5.443100000000062e-05, 5.543099999999815e-05, 5.633300000000216e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.301" endtime="20201112 12:42:45.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.297" endtime="20201112 12:42:45.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.306" endtime="20201112 12:42:45.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.310" endtime="20201112 12:42:45.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.308" endtime="20201112 12:42:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.305" endtime="20201112 12:42:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.936" endtime="20201112 12:42:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.935" endtime="20201112 12:42:45.331"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.339" endtime="20201112 12:42:45.361"></status>
</kw>
<msg timestamp="20201112 12:42:45.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.338" endtime="20201112 12:42:45.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.362" endtime="20201112 12:42:45.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.365" endtime="20201112 12:42:45.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.335" endtime="20201112 12:42:45.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.333" endtime="20201112 12:42:45.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.374" endtime="20201112 12:42:45.660"></status>
</kw>
<msg timestamp="20201112 12:42:45.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.372" endtime="20201112 12:42:45.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.665" endtime="20201112 12:42:45.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.673" endtime="20201112 12:42:45.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.369" endtime="20201112 12:42:45.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.368" endtime="20201112 12:42:45.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.680" level="INFO">${RESULT} = [{'time': 0.023248486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8707999999998e-05, 'source_diff': 4.8707999999998e-05}, {'time': 0.023309722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 12:42:45.676" endtime="20201112 12:42:45.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.693" level="INFO">${ACCURACY} = {'source_diff': [4.8707999999998e-05, 5.345800000000275e-05, 5.5415999999999105e-05, 5.441700000000105e-05, 5.066700000000077e-05, 5.633299999999869e-05, 5.340300000000048e-05, 5.540299999999901e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:45.680" endtime="20201112 12:42:45.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.697" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.696" endtime="20201112 12:42:45.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.700" level="INFO">VALUE: [4.8707999999998e-05, 5.345800000000275e-05, 5.5415999999999105e-05, 5.441700000000105e-05, 5.066700000000077e-05, 5.633299999999869e-05, 5.340300000000048e-05, 5.540299999999901e-05, 5.255499999999927e-05, 5.3402000000001004e-05, 5.158300000000088e-05, 5.05409999999977e-05, 5.252700000000013e-05, 4.955499999999974e-05, 5.630499999999955e-05, 5.156899999999784e-05, 5.147200000000032e-05, 5.541699999999858e-05, 5.244500000000166e-05, 5.254199999999917e-05, 5.1471999999996854e-05, 5.540299999999901e-05, 5.6250000000000744e-05, 5.4485999999999424e-05, 5.240299999999948e-05, 5.158400000000035e-05, 5.43609999999993e-05, 4.966600000000029e-05, 5.63749999999974e-05, 5.241699999999905e-05, 5.641699999999958e-05, 5.156900000000131e-05, 5.338900000000091e-05, 5.4444000000000714e-05, 5.161100000000002e-05, 5.054200000000064e-05, 5.251400000000003e-05, 5.531899999999812e-05, 5.443100000000062e-05, 5.530600000000149e-05, 5.15140000000025e-05, 4.968099999999934e-05, 5.630499999999955e-05, 5.350000000000146e-05, 4.975000000000118e-05, 5.3499999999997994e-05, 5.433300000000016e-05, 5.251300000000056e-05, 5.640300000000001e-05, 5.150000000000293e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.698" endtime="20201112 12:42:45.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.694" endtime="20201112 12:42:45.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.703" endtime="20201112 12:42:45.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.707" endtime="20201112 12:42:45.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.705" endtime="20201112 12:42:45.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.702" endtime="20201112 12:42:45.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.332" endtime="20201112 12:42:45.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.331" endtime="20201112 12:42:45.728"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.736" endtime="20201112 12:42:45.757"></status>
</kw>
<msg timestamp="20201112 12:42:45.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.735" endtime="20201112 12:42:45.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.759" endtime="20201112 12:42:45.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.761" endtime="20201112 12:42:45.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.732" endtime="20201112 12:42:45.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.730" endtime="20201112 12:42:45.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.770" endtime="20201112 12:42:46.058"></status>
</kw>
<msg timestamp="20201112 12:42:46.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.769" endtime="20201112 12:42:46.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.062" endtime="20201112 12:42:46.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.071" endtime="20201112 12:42:46.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.766" endtime="20201112 12:42:46.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.764" endtime="20201112 12:42:46.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.077" level="INFO">${RESULT} = [{'time': 0.023163111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.158300000000088e-05, 'source_diff': 5.158300000000088e-05}, {'time': 0.023223972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.074" endtime="20201112 12:42:46.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.091" level="INFO">${ACCURACY} = {'source_diff': [5.158300000000088e-05, 5.3499999999997994e-05, 5.6236000000001174e-05, 5.441700000000105e-05, 5.444500000000019e-05, 5.348600000000189e-05, 5.348600000000189e-05, 5.062499999999859e-0...</msg>
<status status="PASS" starttime="20201112 12:42:46.078" endtime="20201112 12:42:46.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.095" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.094" endtime="20201112 12:42:46.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.098" level="INFO">VALUE: [5.158300000000088e-05, 5.3499999999997994e-05, 5.6236000000001174e-05, 5.441700000000105e-05, 5.444500000000019e-05, 5.348600000000189e-05, 5.348600000000189e-05, 5.062499999999859e-05, 5.248600000000089e-05, 5.062500000000206e-05, 5.148599999999989e-05, 5.4499999999998994e-05, 5.638900000000044e-05, 4.96530000000002e-05, 5.350000000000146e-05, 5.149999999999946e-05, 5.444500000000019e-05, 5.255599999999874e-05, 5.059699999999945e-05, 5.443100000000062e-05, 5.444500000000019e-05, 5.636200000000077e-05, 5.156900000000131e-05, 5.541700000000205e-05, 5.541699999999858e-05, 5.159700000000045e-05, 5.6277999999999884e-05, 5.538899999999944e-05, 5.3485999999998424e-05, 5.058299999999988e-05, 5.162499999999959e-05, 5.6443999999999245e-05, 5.063899999999816e-05, 5.063900000000163e-05, 5.3485999999998424e-05, 5.338900000000091e-05, 5.637500000000087e-05, 5.444500000000019e-05, 5.062500000000206e-05, 5.156999999999731e-05, 5.062500000000206e-05, 5.162499999999959e-05, 5.25409999999997e-05, 5.433399999999963e-05, 5.541700000000205e-05, 4.967999999999986e-05, 5.636099999999783e-05, 5.540300000000248e-05, 5.444500000000019e-05, 5.533400000000063e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.096" endtime="20201112 12:42:46.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.092" endtime="20201112 12:42:46.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.101" endtime="20201112 12:42:46.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.105" endtime="20201112 12:42:46.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.103" endtime="20201112 12:42:46.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.100" endtime="20201112 12:42:46.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.729" endtime="20201112 12:42:46.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.728" endtime="20201112 12:42:46.126"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.134" endtime="20201112 12:42:46.156"></status>
</kw>
<msg timestamp="20201112 12:42:46.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.132" endtime="20201112 12:42:46.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.157" endtime="20201112 12:42:46.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.160" endtime="20201112 12:42:46.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.130" endtime="20201112 12:42:46.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.128" endtime="20201112 12:42:46.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.169" endtime="20201112 12:42:46.456"></status>
</kw>
<msg timestamp="20201112 12:42:46.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.167" endtime="20201112 12:42:46.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.460" endtime="20201112 12:42:46.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.468" endtime="20201112 12:42:46.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.165" endtime="20201112 12:42:46.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.163" endtime="20201112 12:42:46.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.475" level="INFO">${RESULT} = [{'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.506999999999959e-05, 'source_diff': 8.506999999999959e-05}, {'time': 0.022253625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.471" endtime="20201112 12:42:46.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.489" level="INFO">${ACCURACY} = {'source_diff': [8.506999999999959e-05, 8.316699999999858e-05, 8.120900000000222e-05, 8.402799999999988e-05, 8.113800000000143e-05, 8.21390000000019e-05, 8.206900000000059e-05, 8.686100000000058e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:46.476" endtime="20201112 12:42:46.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.494" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.493" endtime="20201112 12:42:46.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.496" level="INFO">VALUE: [8.506999999999959e-05, 8.316699999999858e-05, 8.120900000000222e-05, 8.402799999999988e-05, 8.113800000000143e-05, 8.21390000000019e-05, 8.206900000000059e-05, 8.686100000000058e-05, 8.404199999999945e-05, 8.502800000000088e-05, 8.508299999999969e-05, 8.116700000000004e-05, 8.493100000000336e-05, 8.115199999999753e-05, 8.405599999999902e-05, 8.502800000000088e-05, 8.31659999999991e-05, 8.115300000000047e-05, 8.502800000000088e-05, 8.306900000000159e-05, 8.400000000000074e-05, 8.590199999999881e-05, 8.501300000000184e-05, 8.599999999999927e-05, 8.309700000000073e-05, 8.022200000000132e-05, 8.591700000000133e-05, 8.316699999999858e-05, 8.39729999999976e-05, 8.112499999999787e-05, 8.312499999999987e-05, 8.700000000000027e-05, 8.2152000000002e-05, 8.309700000000073e-05, 8.411099999999783e-05, 8.11109999999983e-05, 8.502800000000088e-05, 8.31110000000003e-05, 8.120800000000275e-05, 8.597200000000013e-05, 8.116700000000004e-05, 8.219399999999724e-05, 8.594399999999752e-05, 8.406900000000259e-05, 8.21390000000019e-05, 8.405499999999955e-05, 8.208300000000016e-05, 8.504200000000045e-05, 8.59859999999997e-05, 8.218100000000061e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.495" endtime="20201112 12:42:46.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.490" endtime="20201112 12:42:46.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.500" endtime="20201112 12:42:46.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.503" endtime="20201112 12:42:46.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.502" endtime="20201112 12:42:46.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.498" endtime="20201112 12:42:46.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.126" endtime="20201112 12:42:46.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.126" endtime="20201112 12:42:46.524"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.533" endtime="20201112 12:42:46.553"></status>
</kw>
<msg timestamp="20201112 12:42:46.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.531" endtime="20201112 12:42:46.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.554" endtime="20201112 12:42:46.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.557" endtime="20201112 12:42:46.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.529" endtime="20201112 12:42:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.527" endtime="20201112 12:42:46.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.565" endtime="20201112 12:42:46.852"></status>
</kw>
<msg timestamp="20201112 12:42:46.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:46.564" endtime="20201112 12:42:46.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:46.856" endtime="20201112 12:42:46.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.864" endtime="20201112 12:42:46.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.561" endtime="20201112 12:42:46.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.560" endtime="20201112 12:42:46.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.871" level="INFO">${RESULT} = [{'time': 0.020488875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.687500000000096e-05, 'source_diff': 6.687500000000096e-05}, {'time': 0.020580306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.868" endtime="20201112 12:42:46.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.884" level="INFO">${ACCURACY} = {'source_diff': [6.687500000000096e-05, 8.11390000000009e-05, 8.41110000000013e-05, 8.41110000000013e-05, 8.683300000000144e-05, 8.601400000000231e-05, 8.126400000000103e-05, 8.690299999999929e-05, 8....</msg>
<status status="PASS" starttime="20201112 12:42:46.872" endtime="20201112 12:42:46.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.889" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.888" endtime="20201112 12:42:46.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.892" level="INFO">VALUE: [6.687500000000096e-05, 8.11390000000009e-05, 8.41110000000013e-05, 8.41110000000013e-05, 8.683300000000144e-05, 8.601400000000231e-05, 8.126400000000103e-05, 8.690299999999929e-05, 8.220899999999975e-05, 8.304099999999898e-05, 8.60980000000032e-05, 8.209699999999973e-05, 8.595800000000056e-05, 8.119499999999918e-05, 8.31110000000003e-05, 8.505600000000002e-05, 8.215300000000147e-05, 8.406899999999912e-05, 8.506900000000012e-05, 8.208399999999963e-05, 8.12780000000006e-05, 8.208300000000016e-05, 8.22780000000016e-05, 8.508400000000263e-05, 8.686100000000058e-05, 8.125000000000146e-05, 8.597200000000013e-05, 8.408300000000216e-05, 8.412500000000087e-05, 8.41249999999974e-05, 8.400000000000074e-05, 8.122200000000232e-05, 8.213899999999844e-05, 8.591700000000133e-05, 8.405599999999902e-05, 8.406899999999912e-05, 8.309699999999726e-05, 8.59859999999997e-05, 8.497199999999913e-05, 8.124999999999799e-05, 8.306900000000159e-05, 8.120799999999928e-05, 8.21390000000019e-05, 8.412500000000087e-05, 8.30980000000002e-05, 8.39859999999977e-05, 8.413900000000044e-05, 8.688899999999972e-05, 8.595900000000004e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.890" endtime="20201112 12:42:46.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.885" endtime="20201112 12:42:46.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.896" endtime="20201112 12:42:46.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.900" endtime="20201112 12:42:46.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.898" endtime="20201112 12:42:46.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.894" endtime="20201112 12:42:46.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.525" endtime="20201112 12:42:46.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.524" endtime="20201112 12:42:46.921"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.929" endtime="20201112 12:42:46.949"></status>
</kw>
<msg timestamp="20201112 12:42:46.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.928" endtime="20201112 12:42:46.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.951" endtime="20201112 12:42:46.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.953" endtime="20201112 12:42:46.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.925" endtime="20201112 12:42:46.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.923" endtime="20201112 12:42:46.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.962" endtime="20201112 12:42:47.249"></status>
</kw>
<msg timestamp="20201112 12:42:47.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020952222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.961" endtime="20201112 12:42:47.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020952222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.253" endtime="20201112 12:42:47.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.262" endtime="20201112 12:42:47.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.958" endtime="20201112 12:42:47.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.956" endtime="20201112 12:42:47.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.268" level="INFO">${RESULT} = [{'time': 0.020952222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.07499999999979e-05, 'source_diff': 7.07499999999979e-05}, {'time': 0.021043472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:47.265" endtime="20201112 12:42:47.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.281" level="INFO">${ACCURACY} = {'source_diff': [7.07499999999979e-05, 8.401400000000031e-05, 8.120800000000275e-05, 8.39859999999977e-05, 8.222199999999985e-05, 8.116700000000004e-05, 8.690300000000276e-05, 8.601400000000231e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:42:47.269" endtime="20201112 12:42:47.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.286" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.285" endtime="20201112 12:42:47.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.288" level="INFO">VALUE: [7.07499999999979e-05, 8.401400000000031e-05, 8.120800000000275e-05, 8.39859999999977e-05, 8.222199999999985e-05, 8.116700000000004e-05, 8.690300000000276e-05, 8.601400000000231e-05, 8.123600000000189e-05, 8.208300000000016e-05, 8.506999999999959e-05, 8.123599999999842e-05, 8.215199999999853e-05, 8.597200000000013e-05, 8.594399999999752e-05, 8.215199999999853e-05, 8.398600000000117e-05, 8.499999999999827e-05, 8.606900000000112e-05, 8.401400000000031e-05, 8.015300000000294e-05, 8.219500000000018e-05, 8.305500000000202e-05, 8.406899999999912e-05, 8.311199999999977e-05, 8.017999999999914e-05, 8.506900000000012e-05, 8.597200000000013e-05, 8.494399999999999e-05, 8.690299999999929e-05, 8.406999999999859e-05, 8.690300000000276e-05, 8.304200000000192e-05, 8.022200000000132e-05, 8.501400000000131e-05, 8.595800000000056e-05, 8.693099999999843e-05, 8.2152999999998e-05, 8.407000000000206e-05, 8.116700000000004e-05, 8.6944999999998e-05, 8.49859999999987e-05, 8.505600000000002e-05, 8.499999999999827e-05, 8.105599999999949e-05, 8.504200000000045e-05, 8.125000000000146e-05, 8.213799999999896e-05, 8.118099999999961e-05, 8.116700000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.287" endtime="20201112 12:42:47.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.282" endtime="20201112 12:42:47.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.297" endtime="20201112 12:42:47.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.300" endtime="20201112 12:42:47.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.299" endtime="20201112 12:42:47.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.295" endtime="20201112 12:42:47.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.921" endtime="20201112 12:42:47.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.921" endtime="20201112 12:42:47.321"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.330" endtime="20201112 12:42:47.351"></status>
</kw>
<msg timestamp="20201112 12:42:47.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.328" endtime="20201112 12:42:47.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.352" endtime="20201112 12:42:47.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.355" endtime="20201112 12:42:47.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.325" endtime="20201112 12:42:47.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.323" endtime="20201112 12:42:47.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.364" endtime="20201112 12:42:47.651"></status>
</kw>
<msg timestamp="20201112 12:42:47.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.362" endtime="20201112 12:42:47.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.655" endtime="20201112 12:42:47.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.664" endtime="20201112 12:42:47.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.360" endtime="20201112 12:42:47.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.358" endtime="20201112 12:42:47.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.670" level="INFO">${RESULT} = [{'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.175000000000155e-05, 'source_diff': 9.175000000000155e-05}, {'time': 0.022544583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.667" endtime="20201112 12:42:47.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.684" level="INFO">${ACCURACY} = {'source_diff': [9.175000000000155e-05, 8.216600000000157e-05, 8.218000000000114e-05, 8.697199999999766e-05, 8.412500000000087e-05, 8.599999999999927e-05, 8.505600000000002e-05, 8.3152999999999e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:42:47.671" endtime="20201112 12:42:47.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.688" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.687" endtime="20201112 12:42:47.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.691" level="INFO">VALUE: [9.175000000000155e-05, 8.216600000000157e-05, 8.218000000000114e-05, 8.697199999999766e-05, 8.412500000000087e-05, 8.599999999999927e-05, 8.505600000000002e-05, 8.3152999999999e-05, 8.216700000000104e-05, 8.608300000000069e-05, 8.692999999999895e-05, 8.502700000000141e-05, 8.31390000000029e-05, 8.599999999999927e-05, 8.59859999999997e-05, 8.217999999999767e-05, 8.218100000000061e-05, 8.59859999999997e-05, 8.120799999999928e-05, 8.401400000000031e-05, 8.120799999999928e-05, 8.122199999999885e-05, 8.405499999999955e-05, 8.313899999999944e-05, 8.59859999999997e-05, 8.316600000000257e-05, 8.320900000000075e-05, 8.313899999999944e-05, 8.506900000000012e-05, 8.029199999999917e-05, 8.408299999999869e-05, 8.69730000000006e-05, 8.506900000000012e-05, 8.599999999999927e-05, 8.125000000000146e-05, 8.605600000000102e-05, 8.218100000000061e-05, 8.123599999999842e-05, 8.123599999999842e-05, 8.701399999999984e-05, 8.511099999999883e-05, 8.316700000000204e-05, 8.508300000000316e-05, 8.695800000000156e-05, 8.411099999999783e-05, 8.508400000000263e-05, 8.124999999999799e-05, 8.408299999999869e-05, 8.602799999999841e-05, 8.413900000000044e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.689" endtime="20201112 12:42:47.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.685" endtime="20201112 12:42:47.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.694" endtime="20201112 12:42:47.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.698" endtime="20201112 12:42:47.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.696" endtime="20201112 12:42:47.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.693" endtime="20201112 12:42:47.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.322" endtime="20201112 12:42:47.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.321" endtime="20201112 12:42:47.719"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.727" endtime="20201112 12:42:47.747"></status>
</kw>
<msg timestamp="20201112 12:42:47.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.726" endtime="20201112 12:42:47.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.749" endtime="20201112 12:42:47.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.751" endtime="20201112 12:42:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.723" endtime="20201112 12:42:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.721" endtime="20201112 12:42:47.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.760" endtime="20201112 12:42:48.047"></status>
</kw>
<msg timestamp="20201112 12:42:48.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.759" endtime="20201112 12:42:48.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.052" endtime="20201112 12:42:48.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.060" endtime="20201112 12:42:48.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.756" endtime="20201112 12:42:48.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.755" endtime="20201112 12:42:48.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.066" level="INFO">${RESULT} = [{'time': 0.021787236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069400000000309e-05, 'source_diff': 7.069400000000309e-05}, {'time': 0.021878778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.063" endtime="20201112 12:42:48.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.081" level="INFO">${ACCURACY} = {'source_diff': [7.069400000000309e-05, 8.686100000000058e-05, 8.213899999999844e-05, 8.016699999999904e-05, 8.319500000000118e-05, 8.497199999999913e-05, 8.413900000000044e-05, 8.694399999999852e-05,...</msg>
<status status="PASS" starttime="20201112 12:42:48.067" endtime="20201112 12:42:48.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.086" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.085" endtime="20201112 12:42:48.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.088" level="INFO">VALUE: [7.069400000000309e-05, 8.686100000000058e-05, 8.213899999999844e-05, 8.016699999999904e-05, 8.319500000000118e-05, 8.497199999999913e-05, 8.413900000000044e-05, 8.694399999999852e-05, 8.604199999999798e-05, 8.305599999999802e-05, 8.41110000000013e-05, 8.31110000000003e-05, 8.112500000000133e-05, 8.318100000000161e-05, 8.112500000000133e-05, 8.318100000000161e-05, 8.111100000000177e-05, 8.120799999999928e-05, 8.399999999999727e-05, 8.600000000000274e-05, 8.2152999999998e-05, 8.59859999999997e-05, 8.219500000000018e-05, 8.592999999999795e-05, 8.316699999999858e-05, 8.602700000000241e-05, 8.129200000000017e-05, 8.315300000000247e-05, 8.497199999999913e-05, 8.125000000000146e-05, 8.306900000000159e-05, 8.508399999999916e-05, 8.404199999999945e-05, 8.02779999999996e-05, 8.218000000000114e-05, 8.405499999999955e-05, 8.405599999999902e-05, 8.126400000000103e-05, 8.412500000000087e-05, 8.601399999999884e-05, 8.498600000000217e-05, 8.601399999999884e-05, 8.594500000000047e-05, 8.219400000000071e-05, 8.402799999999988e-05, 8.319399999999824e-05, 8.21109999999993e-05, 8.418099999999915e-05, 8.215300000000147e-05, 8.304200000000192e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.087" endtime="20201112 12:42:48.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.082" endtime="20201112 12:42:48.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.092" endtime="20201112 12:42:48.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.095" endtime="20201112 12:42:48.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.093" endtime="20201112 12:42:48.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.090" endtime="20201112 12:42:48.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.719" endtime="20201112 12:42:48.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.719" endtime="20201112 12:42:48.116"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.124" endtime="20201112 12:42:48.148"></status>
</kw>
<msg timestamp="20201112 12:42:48.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.123" endtime="20201112 12:42:48.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.149" endtime="20201112 12:42:48.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.152" endtime="20201112 12:42:48.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.120" endtime="20201112 12:42:48.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.118" endtime="20201112 12:42:48.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.161" endtime="20201112 12:42:48.447"></status>
</kw>
<msg timestamp="20201112 12:42:48.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.159" endtime="20201112 12:42:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021177153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.451" endtime="20201112 12:42:48.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.460" endtime="20201112 12:42:48.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.157" endtime="20201112 12:42:48.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.155" endtime="20201112 12:42:48.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.467" level="INFO">${RESULT} = [{'time': 0.021243875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.672199999999823e-05, 'source_diff': 6.672199999999823e-05}, {'time': 0.021334792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.463" endtime="20201112 12:42:48.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.480" level="INFO">${ACCURACY} = {'source_diff': [6.672199999999823e-05, 8.126400000000103e-05, 8.412500000000087e-05, 8.509699999999926e-05, 8.495799999999956e-05, 8.700000000000027e-05, 8.30130000000033e-05, 8.416699999999958e-05, ...</msg>
<status status="PASS" starttime="20201112 12:42:48.468" endtime="20201112 12:42:48.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.484" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.483" endtime="20201112 12:42:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.487" level="INFO">VALUE: [6.672199999999823e-05, 8.126400000000103e-05, 8.412500000000087e-05, 8.509699999999926e-05, 8.495799999999956e-05, 8.700000000000027e-05, 8.30130000000033e-05, 8.416699999999958e-05, 8.701300000000037e-05, 8.315300000000247e-05, 8.402700000000041e-05, 8.411200000000077e-05, 8.412500000000087e-05, 8.400000000000074e-05, 8.601400000000231e-05, 8.691699999999886e-05, 8.226400000000203e-05, 8.402700000000041e-05, 8.695900000000104e-05, 8.220800000000028e-05, 8.398600000000117e-05, 8.125000000000146e-05, 8.595800000000056e-05, 8.502800000000088e-05, 8.122199999999885e-05, 8.501400000000131e-05, 8.220800000000028e-05, 8.498600000000217e-05, 8.313899999999944e-05, 8.224999999999899e-05, 8.494399999999999e-05, 8.605499999999808e-05, 8.302800000000235e-05, 8.4153e-05, 8.306900000000159e-05, 8.305500000000202e-05, 8.222199999999985e-05, 8.597200000000013e-05, 8.222199999999985e-05, 8.02779999999996e-05, 8.397300000000107e-05, 8.222199999999985e-05, 8.305600000000149e-05, 8.413900000000044e-05, 8.220799999999681e-05, 8.212499999999887e-05, 8.316699999999858e-05, 8.319500000000118e-05, 8.317999999999867e-05, 8.602800000000188e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.485" endtime="20201112 12:42:48.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.481" endtime="20201112 12:42:48.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.490" endtime="20201112 12:42:48.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.494" endtime="20201112 12:42:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.492" endtime="20201112 12:42:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.489" endtime="20201112 12:42:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.117" endtime="20201112 12:42:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.116" endtime="20201112 12:42:48.515"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.523" endtime="20201112 12:42:48.547"></status>
</kw>
<msg timestamp="20201112 12:42:48.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.521" endtime="20201112 12:42:48.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.549" endtime="20201112 12:42:48.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.551" endtime="20201112 12:42:48.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.519" endtime="20201112 12:42:48.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.517" endtime="20201112 12:42:48.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.560" endtime="20201112 12:42:48.846"></status>
</kw>
<msg timestamp="20201112 12:42:48.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.558" endtime="20201112 12:42:48.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.850" endtime="20201112 12:42:48.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.858" endtime="20201112 12:42:48.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.556" endtime="20201112 12:42:48.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.554" endtime="20201112 12:42:48.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.865" level="INFO">${RESULT} = [{'time': 0.024574972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.25690000000015e-05, 'source_diff': 7.25690000000015e-05}, {'time': 0.024666569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:48.862" endtime="20201112 12:42:48.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.878" level="INFO">${ACCURACY} = {'source_diff': [7.25690000000015e-05, 8.122199999999885e-05, 8.220800000000028e-05, 8.600000000000274e-05, 8.687500000000015e-05, 8.02779999999996e-05, 8.216700000000104e-05, 8.318100000000161e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:42:48.866" endtime="20201112 12:42:48.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.883" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.882" endtime="20201112 12:42:48.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.885" level="INFO">VALUE: [7.25690000000015e-05, 8.122199999999885e-05, 8.220800000000028e-05, 8.600000000000274e-05, 8.687500000000015e-05, 8.02779999999996e-05, 8.216700000000104e-05, 8.318100000000161e-05, 8.494499999999947e-05, 8.21659999999981e-05, 8.302699999999941e-05, 8.022199999999785e-05, 8.122199999999885e-05, 8.316700000000204e-05, 8.026300000000056e-05, 8.11109999999983e-05, 8.226399999999856e-05, 8.313899999999944e-05, 8.216700000000104e-05, 8.404199999999945e-05, 8.20970000000032e-05, 8.412500000000087e-05, 8.304099999999898e-05, 8.125000000000146e-05, 8.412500000000087e-05, 8.493000000000042e-05, 8.513900000000144e-05, 8.212499999999887e-05, 8.404200000000292e-05, 8.59859999999997e-05, 8.304200000000192e-05, 8.695899999999757e-05, 8.491700000000033e-05, 8.41110000000013e-05, 8.49720000000026e-05, 8.315300000000247e-05, 8.219400000000071e-05, 8.307000000000106e-05, 8.508299999999969e-05, 8.604200000000145e-05, 8.590299999999829e-05, 8.600000000000274e-05, 8.602799999999841e-05, 8.398600000000117e-05, 8.124999999999799e-05, 8.312499999999987e-05, 8.406899999999912e-05, 8.587499999999915e-05, 8.700000000000027e-05, 8.31110000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.884" endtime="20201112 12:42:48.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.879" endtime="20201112 12:42:48.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.889" endtime="20201112 12:42:48.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.892" endtime="20201112 12:42:48.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.891" endtime="20201112 12:42:48.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.887" endtime="20201112 12:42:48.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.515" endtime="20201112 12:42:48.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.515" endtime="20201112 12:42:48.913"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.923" endtime="20201112 12:42:48.944"></status>
</kw>
<msg timestamp="20201112 12:42:48.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.921" endtime="20201112 12:42:48.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.945" endtime="20201112 12:42:48.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.948" endtime="20201112 12:42:48.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.918" endtime="20201112 12:42:48.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.916" endtime="20201112 12:42:48.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.957" endtime="20201112 12:42:49.243"></status>
</kw>
<msg timestamp="20201112 12:42:49.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:48.955" endtime="20201112 12:42:49.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:49.247" endtime="20201112 12:42:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.255" endtime="20201112 12:42:49.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.953" endtime="20201112 12:42:49.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.951" endtime="20201112 12:42:49.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.262" level="INFO">${RESULT} = [{'time': 0.023024403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.74030000000002e-05, 'source_diff': 7.74030000000002e-05}, {'time': 0.023116347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:49.259" endtime="20201112 12:42:49.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.275" level="INFO">${ACCURACY} = {'source_diff': [7.74030000000002e-05, 8.21659999999981e-05, 8.312499999999987e-05, 8.602699999999894e-05, 8.12780000000006e-05, 8.416699999999958e-05, 8.320799999999781e-05, 8.216700000000104e-05, 8....</msg>
<status status="PASS" starttime="20201112 12:42:49.263" endtime="20201112 12:42:49.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.280" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.279" endtime="20201112 12:42:49.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.282" level="INFO">VALUE: [7.74030000000002e-05, 8.21659999999981e-05, 8.312499999999987e-05, 8.602699999999894e-05, 8.12780000000006e-05, 8.416699999999958e-05, 8.320799999999781e-05, 8.216700000000104e-05, 8.029199999999917e-05, 8.123599999999842e-05, 8.500000000000174e-05, 8.218100000000061e-05, 8.3152999999999e-05, 8.600000000000274e-05, 8.49859999999987e-05, 8.12780000000006e-05, 8.495899999999904e-05, 8.601399999999884e-05, 8.22230000000028e-05, 8.69310000000019e-05, 8.122199999999885e-05, 8.604199999999798e-05, 8.508399999999916e-05, 8.31659999999991e-05, 8.23049999999978e-05, 8.595799999999709e-05, 8.606900000000112e-05, 8.023600000000089e-05, 8.395799999999856e-05, 8.508399999999916e-05, 8.31659999999991e-05, 8.412500000000087e-05, 8.59729999999996e-05, 8.59859999999997e-05, 8.216700000000104e-05, 8.026400000000003e-05, 8.495799999999956e-05, 8.698599999999723e-05, 8.611099999999983e-05, 8.227699999999866e-05, 8.315199999999953e-05, 8.509699999999926e-05, 8.309700000000073e-05, 8.412500000000087e-05, 8.413900000000044e-05, 8.506999999999959e-05, 8.031999999999831e-05, 8.126399999999756e-05, 8.400000000000074e-05, 8.316699999999858e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.281" endtime="20201112 12:42:49.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.276" endtime="20201112 12:42:49.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.286" endtime="20201112 12:42:49.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.289" endtime="20201112 12:42:49.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.288" endtime="20201112 12:42:49.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.284" endtime="20201112 12:42:49.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.914" endtime="20201112 12:42:49.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.913" endtime="20201112 12:42:49.310"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.319" endtime="20201112 12:42:49.345"></status>
</kw>
<msg timestamp="20201112 12:42:49.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.317" endtime="20201112 12:42:49.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.346" endtime="20201112 12:42:49.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.349" endtime="20201112 12:42:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.315" endtime="20201112 12:42:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.313" endtime="20201112 12:42:49.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.358" endtime="20201112 12:42:49.645"></status>
</kw>
<msg timestamp="20201112 12:42:49.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.356" endtime="20201112 12:42:49.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.649" endtime="20201112 12:42:49.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.658" endtime="20201112 12:42:49.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.354" endtime="20201112 12:42:49.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.352" endtime="20201112 12:42:49.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.664" level="INFO">${RESULT} = [{'time': 0.022815903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.25699999999975e-05, 'source_diff': 7.25699999999975e-05}, {'time': 0.022908222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:49.661" endtime="20201112 12:42:49.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.679" level="INFO">${ACCURACY} = {'source_diff': [7.25699999999975e-05, 8.122199999999885e-05, 8.306899999999812e-05, 8.509699999999926e-05, 8.592999999999795e-05, 8.601399999999884e-05, 8.11109999999983e-05, 8.601399999999884e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:42:49.665" endtime="20201112 12:42:49.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.683" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.682" endtime="20201112 12:42:49.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.686" level="INFO">VALUE: [7.25699999999975e-05, 8.122199999999885e-05, 8.306899999999812e-05, 8.509699999999926e-05, 8.592999999999795e-05, 8.601399999999884e-05, 8.11109999999983e-05, 8.601399999999884e-05, 8.212500000000234e-05, 8.301299999999984e-05, 8.317999999999867e-05, 8.686100000000058e-05, 8.591599999999838e-05, 8.505500000000055e-05, 8.691700000000233e-05, 8.412500000000087e-05, 8.115199999999753e-05, 8.695900000000104e-05, 8.116700000000004e-05, 8.21390000000019e-05, 8.313799999999996e-05, 8.304200000000192e-05, 8.402799999999988e-05, 8.602799999999841e-05, 8.215300000000147e-05, 8.304200000000192e-05, 8.21390000000019e-05, 8.315199999999953e-05, 8.308300000000116e-05, 8.591699999999786e-05, 8.118100000000308e-05, 8.693099999999843e-05, 8.497199999999913e-05, 8.697200000000113e-05, 8.401400000000031e-05, 8.604099999999851e-05, 8.116600000000057e-05, 8.505500000000055e-05, 8.308300000000116e-05, 8.212499999999887e-05, 8.690299999999929e-05, 8.123600000000189e-05, 8.501400000000131e-05, 8.687500000000015e-05, 8.404199999999945e-05, 8.700000000000027e-05, 8.688899999999972e-05, 8.504200000000045e-05, 8.222199999999985e-05, 8.109699999999873e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.684" endtime="20201112 12:42:49.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.680" endtime="20201112 12:42:49.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.689" endtime="20201112 12:42:49.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.693" endtime="20201112 12:42:49.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.691" endtime="20201112 12:42:49.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.688" endtime="20201112 12:42:49.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.311" endtime="20201112 12:42:49.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.311" endtime="20201112 12:42:49.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.782" endtime="20201112 12:42:49.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.718" endtime="20201112 12:42:49.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.716" endtime="20201112 12:42:49.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.715" endtime="20201112 12:42:49.739"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:09.702" endtime="20201112 12:42:49.739" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.746" endtime="20201112 12:42:49.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.745" endtime="20201112 12:42:49.766"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.780" endtime="20201112 12:42:49.798"></status>
</kw>
<msg timestamp="20201112 12:42:49.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.778" endtime="20201112 12:42:49.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.800" endtime="20201112 12:42:49.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.804" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:49.803" endtime="20201112 12:42:49.805"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:49.775" endtime="20201112 12:42:49.805"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:49.772" endtime="20201112 12:42:49.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.771" endtime="20201112 12:42:49.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:49.810" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:49.809" endtime="20201112 12:42:49.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.807" endtime="20201112 12:42:49.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.770" endtime="20201112 12:42:49.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.770" endtime="20201112 12:42:49.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.812" endtime="20201112 12:42:49.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.769" endtime="20201112 12:42:49.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.767" endtime="20201112 12:42:49.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.743" endtime="20201112 12:42:49.814"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.825" endtime="20201112 12:42:49.844"></status>
</kw>
<msg timestamp="20201112 12:42:49.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.823" endtime="20201112 12:42:49.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.846" endtime="20201112 12:42:49.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.848" endtime="20201112 12:42:49.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.820" endtime="20201112 12:42:49.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.818" endtime="20201112 12:42:49.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.857" endtime="20201112 12:42:50.143"></status>
</kw>
<msg timestamp="20201112 12:42:50.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073267236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073275444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.856" endtime="20201112 12:42:50.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073267236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073275444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.147" endtime="20201112 12:42:50.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.156" endtime="20201112 12:42:50.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.853" endtime="20201112 12:42:50.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.851" endtime="20201112 12:42:50.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.162" level="INFO">${RESULT} = [{'time': 0.073275444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.073291556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.159" endtime="20201112 12:42:50.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.176" level="INFO">${ACCURACY} = {'source_diff': [8.207999999995663e-06, 8.208999999995137e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.221999999988294e-06, 8.26400000000782e-06, 8.23600000000868e-06, 8.208000000009541e-06, 8...</msg>
<status status="PASS" starttime="20201112 12:42:50.163" endtime="20201112 12:42:50.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.181" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.180" endtime="20201112 12:42:50.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.183" level="INFO">VALUE: [8.207999999995663e-06, 8.208999999995137e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.221999999988294e-06, 8.26400000000782e-06, 8.23600000000868e-06, 8.208000000009541e-06, 8.250000000001312e-06, 8.208999999995137e-06, 8.221999999988294e-06, 8.235999999994803e-06, 8.222000000002172e-06, 8.222999999987768e-06, 8.207999999995663e-06, 8.181000000009875e-06, 8.208000000009541e-06, 8.222000000002172e-06, 8.208000000009541e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.236999999994277e-06, 8.235999999994803e-06, 8.235999999994803e-06, 8.235999999994803e-06, 8.319000000006627e-06, 8.223000000001646e-06, 8.235999999994803e-06, 8.180000000010401e-06, 8.235999999994803e-06, 8.209000000009015e-06, 8.23600000000868e-06, 8.250000000001312e-06, 8.26400000000782e-06, 8.250000000001312e-06, 8.194000000003032e-06, 8.207999999995663e-06, 8.207999999995663e-06, 8.208000000009541e-06, 8.194000000003032e-06, 8.221999999988294e-06, 8.263999999993943e-06, 8.235999999994803e-06, 8.291999999993083e-06, 8.209000000009015e-06, 8.222000000002172e-06, 8.207999999995663e-06, 8.194000000003032e-06, 8.222000000002172e-06, 8.152999999996857e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.182" endtime="20201112 12:42:50.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.177" endtime="20201112 12:42:50.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.186" endtime="20201112 12:42:50.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.190" endtime="20201112 12:42:50.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.188" endtime="20201112 12:42:50.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.185" endtime="20201112 12:42:50.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.816" endtime="20201112 12:42:50.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.816" endtime="20201112 12:42:50.211"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.220" endtime="20201112 12:42:50.241"></status>
</kw>
<msg timestamp="20201112 12:42:50.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.218" endtime="20201112 12:42:50.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.242" endtime="20201112 12:42:50.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.245" endtime="20201112 12:42:50.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.216" endtime="20201112 12:42:50.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.214" endtime="20201112 12:42:50.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.253" endtime="20201112 12:42:50.538"></status>
</kw>
<msg timestamp="20201112 12:42:50.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:50.252" endtime="20201112 12:42:50.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:50.542" endtime="20201112 12:42:50.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.550" endtime="20201112 12:42:50.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.249" endtime="20201112 12:42:50.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.248" endtime="20201112 12:42:50.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.557" level="INFO">${RESULT} = [{'time': 0.0215475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.021563069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:50.553" endtime="20201112 12:42:50.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.571" level="INFO">${ACCURACY} = {'source_diff': [8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.208000000002602e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:50.558" endtime="20201112 12:42:50.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.575" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.574" endtime="20201112 12:42:50.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.578" level="INFO">VALUE: [8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.181000000002936e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.263999999997412e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.181000000002936e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.576" endtime="20201112 12:42:50.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.572" endtime="20201112 12:42:50.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.581" endtime="20201112 12:42:50.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.585" endtime="20201112 12:42:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.583" endtime="20201112 12:42:50.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.579" endtime="20201112 12:42:50.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.212" endtime="20201112 12:42:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.211" endtime="20201112 12:42:50.606"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.614" endtime="20201112 12:42:50.632"></status>
</kw>
<msg timestamp="20201112 12:42:50.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.613" endtime="20201112 12:42:50.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.634" endtime="20201112 12:42:50.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.636" endtime="20201112 12:42:50.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.610" endtime="20201112 12:42:50.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.608" endtime="20201112 12:42:50.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.645" endtime="20201112 12:42:50.930"></status>
</kw>
<msg timestamp="20201112 12:42:50.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023503444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.644" endtime="20201112 12:42:50.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023503444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.934" endtime="20201112 12:42:50.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.942" endtime="20201112 12:42:50.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.641" endtime="20201112 12:42:50.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.639" endtime="20201112 12:42:50.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.951" level="INFO">${RESULT} = [{'time': 0.023503444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.023517931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.947" endtime="20201112 12:42:50.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.964" level="INFO">${ACCURACY} = {'source_diff': [8.207999999999133e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.277000000000978e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:50.952" endtime="20201112 12:42:50.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.969" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.968" endtime="20201112 12:42:50.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.971" level="INFO">VALUE: [8.207999999999133e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.277000000000978e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201112 12:42:50.970" endtime="20201112 12:42:50.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.965" endtime="20201112 12:42:50.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.975" endtime="20201112 12:42:50.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.978" endtime="20201112 12:42:50.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.977" endtime="20201112 12:42:50.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.973" endtime="20201112 12:42:50.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.607" endtime="20201112 12:42:50.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.606" endtime="20201112 12:42:50.999"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.008" endtime="20201112 12:42:51.024"></status>
</kw>
<msg timestamp="20201112 12:42:51.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.007" endtime="20201112 12:42:51.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.025" endtime="20201112 12:42:51.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.028" endtime="20201112 12:42:51.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.004" endtime="20201112 12:42:51.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.002" endtime="20201112 12:42:51.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.037" endtime="20201112 12:42:51.323"></status>
</kw>
<msg timestamp="20201112 12:42:51.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.035" endtime="20201112 12:42:51.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.328" endtime="20201112 12:42:51.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.336" endtime="20201112 12:42:51.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.032" endtime="20201112 12:42:51.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.031" endtime="20201112 12:42:51.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.343" level="INFO">${RESULT} = [{'time': 0.021756042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.021769472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.339" endtime="20201112 12:42:51.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.356" level="INFO">${ACCURACY} = {'source_diff': [8.222999999998176e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.235999999998272e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:51.344" endtime="20201112 12:42:51.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.361" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.360" endtime="20201112 12:42:51.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.363" level="INFO">VALUE: [8.222999999998176e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.292000000000022e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.153000000000327e-06, 8.264000000000882e-06, 8.222999999998176e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.236999999997746e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.222999999998176e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.362" endtime="20201112 12:42:51.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.357" endtime="20201112 12:42:51.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.367" endtime="20201112 12:42:51.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.370" endtime="20201112 12:42:51.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.368" endtime="20201112 12:42:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.365" endtime="20201112 12:42:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.000" endtime="20201112 12:42:51.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.000" endtime="20201112 12:42:51.391"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.399" endtime="20201112 12:42:51.417"></status>
</kw>
<msg timestamp="20201112 12:42:51.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.398" endtime="20201112 12:42:51.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.419" endtime="20201112 12:42:51.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.421" endtime="20201112 12:42:51.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.395" endtime="20201112 12:42:51.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.393" endtime="20201112 12:42:51.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.430" endtime="20201112 12:42:51.717"></status>
</kw>
<msg timestamp="20201112 12:42:51.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.429" endtime="20201112 12:42:51.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.721" endtime="20201112 12:42:51.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.730" endtime="20201112 12:42:51.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.426" endtime="20201112 12:42:51.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.424" endtime="20201112 12:42:51.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.736" level="INFO">${RESULT} = [{'time': 0.022059361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.022072833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.733" endtime="20201112 12:42:51.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.750" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.250000000001312e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:51.737" endtime="20201112 12:42:51.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.754" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.753" endtime="20201112 12:42:51.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.757" level="INFO">VALUE: [8.235999999998272e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.223000000001646e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.151999999997384e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.181000000002936e-06, 8.236000000001742e-06, 8.263000000001408e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.181000000002936e-06, 8.305000000000118e-06, 8.222000000002172e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.756" endtime="20201112 12:42:51.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.751" endtime="20201112 12:42:51.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.761" endtime="20201112 12:42:51.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.764" endtime="20201112 12:42:51.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.762" endtime="20201112 12:42:51.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.759" endtime="20201112 12:42:51.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.392" endtime="20201112 12:42:51.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.391" endtime="20201112 12:42:51.785"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.793" endtime="20201112 12:42:51.813"></status>
</kw>
<msg timestamp="20201112 12:42:51.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.792" endtime="20201112 12:42:51.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.815" endtime="20201112 12:42:51.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.817" endtime="20201112 12:42:51.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.789" endtime="20201112 12:42:51.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.787" endtime="20201112 12:42:51.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.826" endtime="20201112 12:42:52.114"></status>
</kw>
<msg timestamp="20201112 12:42:52.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.824" endtime="20201112 12:42:52.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.118" endtime="20201112 12:42:52.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.126" endtime="20201112 12:42:52.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.822" endtime="20201112 12:42:52.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.820" endtime="20201112 12:42:52.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.133" level="INFO">${RESULT} = [{'time': 0.024838236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.024852361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.130" endtime="20201112 12:42:52.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.146" level="INFO">${ACCURACY} = {'source_diff': [8.193999999999563e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.180999999999466e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:52.134" endtime="20201112 12:42:52.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.151" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.150" endtime="20201112 12:42:52.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.153" level="INFO">VALUE: [8.193999999999563e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.195000000002506e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.223000000001646e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201112 12:42:52.152" endtime="20201112 12:42:52.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.147" endtime="20201112 12:42:52.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.157" endtime="20201112 12:42:52.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.160" endtime="20201112 12:42:52.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.159" endtime="20201112 12:42:52.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.155" endtime="20201112 12:42:52.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.786" endtime="20201112 12:42:52.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.785" endtime="20201112 12:42:52.181"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.190" endtime="20201112 12:42:52.205"></status>
</kw>
<msg timestamp="20201112 12:42:52.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.188" endtime="20201112 12:42:52.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.206" endtime="20201112 12:42:52.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.208" endtime="20201112 12:42:52.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.186" endtime="20201112 12:42:52.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.183" endtime="20201112 12:42:52.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.218" endtime="20201112 12:42:52.503"></status>
</kw>
<msg timestamp="20201112 12:42:52.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.216" endtime="20201112 12:42:52.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.508" endtime="20201112 12:42:52.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.516" endtime="20201112 12:42:52.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.213" endtime="20201112 12:42:52.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.212" endtime="20201112 12:42:52.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.522" level="INFO">${RESULT} = [{'time': 0.020586847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.020603194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.519" endtime="20201112 12:42:52.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.536" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:52.523" endtime="20201112 12:42:52.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.540" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.539" endtime="20201112 12:42:52.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.543" level="INFO">VALUE: [8.235999999998272e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.167000000003366e-06, 8.194000000003032e-06, 8.139000000000757e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.180999999999466e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201112 12:42:52.541" endtime="20201112 12:42:52.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.537" endtime="20201112 12:42:52.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.552" endtime="20201112 12:42:52.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.556" endtime="20201112 12:42:52.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.554" endtime="20201112 12:42:52.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.551" endtime="20201112 12:42:52.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.182" endtime="20201112 12:42:52.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.181" endtime="20201112 12:42:52.577"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.585" endtime="20201112 12:42:52.603"></status>
</kw>
<msg timestamp="20201112 12:42:52.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.584" endtime="20201112 12:42:52.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.604" endtime="20201112 12:42:52.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.607" endtime="20201112 12:42:52.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.581" endtime="20201112 12:42:52.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.579" endtime="20201112 12:42:52.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.616" endtime="20201112 12:42:52.903"></status>
</kw>
<msg timestamp="20201112 12:42:52.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.614" endtime="20201112 12:42:52.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.908" endtime="20201112 12:42:52.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.916" endtime="20201112 12:42:52.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.612" endtime="20201112 12:42:52.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.610" endtime="20201112 12:42:52.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.922" level="INFO">${RESULT} = [{'time': 0.021823458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.277000000000978e-06, 'source_diff': 8.277000000000978e-06}, {'time': 0.021840389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.919" endtime="20201112 12:42:52.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.936" level="INFO">${ACCURACY} = {'source_diff': [8.277000000000978e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.222999999998176e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:52.923" endtime="20201112 12:42:52.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.940" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.939" endtime="20201112 12:42:52.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.943" level="INFO">VALUE: [8.277000000000978e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.222999999998176e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.165999999996953e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.222999999998176e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.165999999996953e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.166000000000423e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.208000000002602e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201112 12:42:52.941" endtime="20201112 12:42:52.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.937" endtime="20201112 12:42:52.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.946" endtime="20201112 12:42:52.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.950" endtime="20201112 12:42:52.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.948" endtime="20201112 12:42:52.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.945" endtime="20201112 12:42:52.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.578" endtime="20201112 12:42:52.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.577" endtime="20201112 12:42:52.970"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.980" endtime="20201112 12:42:52.999"></status>
</kw>
<msg timestamp="20201112 12:42:52.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.978" endtime="20201112 12:42:53.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.001" endtime="20201112 12:42:53.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.003" endtime="20201112 12:42:53.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.975" endtime="20201112 12:42:53.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.973" endtime="20201112 12:42:53.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.012" endtime="20201112 12:42:53.298"></status>
</kw>
<msg timestamp="20201112 12:42:53.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.010" endtime="20201112 12:42:53.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.303" endtime="20201112 12:42:53.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.311" endtime="20201112 12:42:53.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.008" endtime="20201112 12:42:53.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.006" endtime="20201112 12:42:53.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.318" level="INFO">${RESULT} = [{'time': 0.024990569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.025003361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.314" endtime="20201112 12:42:53.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.331" level="INFO">${ACCURACY} = {'source_diff': [8.250000000001312e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.235999999998272e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:53.319" endtime="20201112 12:42:53.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.336" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.335" endtime="20201112 12:42:53.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.338" level="INFO">VALUE: [8.250000000001312e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.249999999997842e-06, 8.263000000001408e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.249999999997842e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.152000000000853e-06, 8.222999999998176e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.263999999997412e-06, 8.209000000002076e-06, 8.276999999997509e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 12:42:53.337" endtime="20201112 12:42:53.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.332" endtime="20201112 12:42:53.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.342" endtime="20201112 12:42:53.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.345" endtime="20201112 12:42:53.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.343" endtime="20201112 12:42:53.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.340" endtime="20201112 12:42:53.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.971" endtime="20201112 12:42:53.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.971" endtime="20201112 12:42:53.366"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.374" endtime="20201112 12:42:53.394"></status>
</kw>
<msg timestamp="20201112 12:42:53.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.373" endtime="20201112 12:42:53.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.395" endtime="20201112 12:42:53.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.398" endtime="20201112 12:42:53.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.370" endtime="20201112 12:42:53.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.368" endtime="20201112 12:42:53.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.407" endtime="20201112 12:42:53.692"></status>
</kw>
<msg timestamp="20201112 12:42:53.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.405" endtime="20201112 12:42:53.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.697" endtime="20201112 12:42:53.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.705" endtime="20201112 12:42:53.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.403" endtime="20201112 12:42:53.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.401" endtime="20201112 12:42:53.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.712" level="INFO">${RESULT} = [{'time': 0.021486875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.021502667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.708" endtime="20201112 12:42:53.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.725" level="INFO">${ACCURACY} = {'source_diff': [8.221999999998703e-06, 8.208999999998606e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.193999999999563e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:53.712" endtime="20201112 12:42:53.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.730" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.729" endtime="20201112 12:42:53.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.732" level="INFO">VALUE: [8.221999999998703e-06, 8.208999999998606e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.236999999997746e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.222999999998176e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.263000000001408e-06, 8.153000000000327e-06, 8.195000000002506e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.194999999999036e-06]</msg>
<status status="PASS" starttime="20201112 12:42:53.731" endtime="20201112 12:42:53.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.726" endtime="20201112 12:42:53.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.736" endtime="20201112 12:42:53.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.739" endtime="20201112 12:42:53.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.738" endtime="20201112 12:42:53.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.734" endtime="20201112 12:42:53.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.367" endtime="20201112 12:42:53.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.366" endtime="20201112 12:42:53.760"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.769" endtime="20201112 12:42:53.787"></status>
</kw>
<msg timestamp="20201112 12:42:53.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.767" endtime="20201112 12:42:53.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.789" endtime="20201112 12:42:53.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.791" endtime="20201112 12:42:53.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.765" endtime="20201112 12:42:53.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.763" endtime="20201112 12:42:53.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.800" endtime="20201112 12:42:54.087"></status>
</kw>
<msg timestamp="20201112 12:42:54.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.798" endtime="20201112 12:42:54.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.091" endtime="20201112 12:42:54.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.099" endtime="20201112 12:42:54.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.796" endtime="20201112 12:42:54.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.794" endtime="20201112 12:42:54.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.106" level="INFO">${RESULT} = [{'time': 0.024176889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.024189903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.103" endtime="20201112 12:42:54.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.120" level="INFO">${ACCURACY} = {'source_diff': [8.236000000001742e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.222000000002172e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:54.107" endtime="20201112 12:42:54.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.124" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.123" endtime="20201112 12:42:54.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.127" level="INFO">VALUE: [8.236000000001742e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.209000000002076e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.292000000000022e-06, 8.236999999997746e-06, 8.236000000001742e-06, 8.277999999996982e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.305999999999591e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.318999999999688e-06]</msg>
<status status="PASS" starttime="20201112 12:42:54.125" endtime="20201112 12:42:54.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.121" endtime="20201112 12:42:54.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.130" endtime="20201112 12:42:54.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.133" endtime="20201112 12:42:54.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.132" endtime="20201112 12:42:54.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.128" endtime="20201112 12:42:54.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.761" endtime="20201112 12:42:54.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.760" endtime="20201112 12:42:54.154"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.163" endtime="20201112 12:42:54.180"></status>
</kw>
<msg timestamp="20201112 12:42:54.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.161" endtime="20201112 12:42:54.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.181" endtime="20201112 12:42:54.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.184" endtime="20201112 12:42:54.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.159" endtime="20201112 12:42:54.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.157" endtime="20201112 12:42:54.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.193" endtime="20201112 12:42:54.480"></status>
</kw>
<msg timestamp="20201112 12:42:54.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.191" endtime="20201112 12:42:54.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.484" endtime="20201112 12:42:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.493" endtime="20201112 12:42:54.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.189" endtime="20201112 12:42:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.187" endtime="20201112 12:42:54.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.499" level="INFO">${RESULT} = [{'time': 0.021860847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.021876764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.496" endtime="20201112 12:42:54.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.513" level="INFO">${ACCURACY} = {'source_diff': [8.249999999997842e-06, 8.235999999998272e-06, 8.292000000000022e-06, 8.250000000001312e-06, 8.153000000000327e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:54.500" endtime="20201112 12:42:54.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.517" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.516" endtime="20201112 12:42:54.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.520" level="INFO">VALUE: [8.249999999997842e-06, 8.235999999998272e-06, 8.292000000000022e-06, 8.250000000001312e-06, 8.153000000000327e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201112 12:42:54.518" endtime="20201112 12:42:54.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.514" endtime="20201112 12:42:54.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.523" endtime="20201112 12:42:54.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.527" endtime="20201112 12:42:54.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.525" endtime="20201112 12:42:54.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.522" endtime="20201112 12:42:54.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.155" endtime="20201112 12:42:54.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.155" endtime="20201112 12:42:54.548"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.556" endtime="20201112 12:42:54.576"></status>
</kw>
<msg timestamp="20201112 12:42:54.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.554" endtime="20201112 12:42:54.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.577" endtime="20201112 12:42:54.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.580" endtime="20201112 12:42:54.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.552" endtime="20201112 12:42:54.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.550" endtime="20201112 12:42:54.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.589" endtime="20201112 12:42:54.874"></status>
</kw>
<msg timestamp="20201112 12:42:54.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.587" endtime="20201112 12:42:54.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.878" endtime="20201112 12:42:54.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.887" endtime="20201112 12:42:54.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.585" endtime="20201112 12:42:54.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.583" endtime="20201112 12:42:54.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.893" level="INFO">${RESULT} = [{'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.020559222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.890" endtime="20201112 12:42:54.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.907" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.221999999998703e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:54.894" endtime="20201112 12:42:54.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.911" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.910" endtime="20201112 12:42:54.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.914" level="INFO">VALUE: [8.235999999998272e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.263999999997412e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.237000000001216e-06, 8.222999999998176e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.153000000000327e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.223000000001646e-06]</msg>
<status status="PASS" starttime="20201112 12:42:54.912" endtime="20201112 12:42:54.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.908" endtime="20201112 12:42:54.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.917" endtime="20201112 12:42:54.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.921" endtime="20201112 12:42:54.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.919" endtime="20201112 12:42:54.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.916" endtime="20201112 12:42:54.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.548" endtime="20201112 12:42:54.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.548" endtime="20201112 12:42:54.941"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.950" endtime="20201112 12:42:54.968"></status>
</kw>
<msg timestamp="20201112 12:42:54.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.949" endtime="20201112 12:42:54.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.970" endtime="20201112 12:42:54.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.972" endtime="20201112 12:42:54.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.946" endtime="20201112 12:42:54.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.944" endtime="20201112 12:42:54.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.981" endtime="20201112 12:42:55.268"></status>
</kw>
<msg timestamp="20201112 12:42:55.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023471125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.979" endtime="20201112 12:42:55.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023471125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.272" endtime="20201112 12:42:55.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.280" endtime="20201112 12:42:55.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.977" endtime="20201112 12:42:55.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.975" endtime="20201112 12:42:55.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.287" level="INFO">${RESULT} = [{'time': 0.023471125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.023486847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.283" endtime="20201112 12:42:55.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.300" level="INFO">${ACCURACY} = {'source_diff': [8.207999999999133e-06, 8.236000000001742e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.125000000001187e-06, 8.236000000001742e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:55.288" endtime="20201112 12:42:55.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.305" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.304" endtime="20201112 12:42:55.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.307" level="INFO">VALUE: [8.207999999999133e-06, 8.236000000001742e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.125000000001187e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.292000000000022e-06, 8.237000000001216e-06, 8.152999999996857e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.166999999999897e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.277000000000978e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.262999999997939e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 12:42:55.306" endtime="20201112 12:42:55.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.301" endtime="20201112 12:42:55.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.311" endtime="20201112 12:42:55.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.314" endtime="20201112 12:42:55.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.313" endtime="20201112 12:42:55.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.309" endtime="20201112 12:42:55.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.942" endtime="20201112 12:42:55.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.942" endtime="20201112 12:42:55.335"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.344" endtime="20201112 12:42:55.359"></status>
</kw>
<msg timestamp="20201112 12:42:55.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.342" endtime="20201112 12:42:55.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.361" endtime="20201112 12:42:55.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.363" endtime="20201112 12:42:55.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.340" endtime="20201112 12:42:55.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.338" endtime="20201112 12:42:55.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.372" endtime="20201112 12:42:55.658"></status>
</kw>
<msg timestamp="20201112 12:42:55.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.371" endtime="20201112 12:42:55.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.662" endtime="20201112 12:42:55.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.670" endtime="20201112 12:42:55.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.368" endtime="20201112 12:42:55.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.367" endtime="20201112 12:42:55.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.677" level="INFO">${RESULT} = [{'time': 0.021630764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.021643569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.674" endtime="20201112 12:42:55.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.691" level="INFO">${ACCURACY} = {'source_diff': [8.194999999999036e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.236000000001742e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:55.678" endtime="20201112 12:42:55.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.695" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.694" endtime="20201112 12:42:55.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.698" level="INFO">VALUE: [8.194999999999036e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.236999999997746e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 12:42:55.696" endtime="20201112 12:42:55.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.691" endtime="20201112 12:42:55.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.701" endtime="20201112 12:42:55.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.704" endtime="20201112 12:42:55.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.703" endtime="20201112 12:42:55.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.699" endtime="20201112 12:42:55.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.336" endtime="20201112 12:42:55.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.336" endtime="20201112 12:42:55.725"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.734" endtime="20201112 12:42:55.753"></status>
</kw>
<msg timestamp="20201112 12:42:55.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.732" endtime="20201112 12:42:55.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.754" endtime="20201112 12:42:55.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.757" endtime="20201112 12:42:55.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.730" endtime="20201112 12:42:55.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.728" endtime="20201112 12:42:55.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.766" endtime="20201112 12:42:56.053"></status>
</kw>
<msg timestamp="20201112 12:42:56.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02333825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:55.764" endtime="20201112 12:42:56.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02333825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:56.057" endtime="20201112 12:42:56.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.065" endtime="20201112 12:42:56.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.762" endtime="20201112 12:42:56.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.760" endtime="20201112 12:42:56.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.072" level="INFO">${RESULT} = [{'time': 0.02333825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.023355736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:56.069" endtime="20201112 12:42:56.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.085" level="INFO">${ACCURACY} = {'source_diff': [8.208000000002602e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.153000000000327e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:56.073" endtime="20201112 12:42:56.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.090" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.089" endtime="20201112 12:42:56.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.092" level="INFO">VALUE: [8.208000000002602e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.152999999996857e-06, 8.235999999998272e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.263000000001408e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.305000000000118e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.208000000002602e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201112 12:42:56.091" endtime="20201112 12:42:56.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.086" endtime="20201112 12:42:56.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.096" endtime="20201112 12:42:56.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.099" endtime="20201112 12:42:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.098" endtime="20201112 12:42:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.094" endtime="20201112 12:42:56.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.726" endtime="20201112 12:42:56.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.726" endtime="20201112 12:42:56.120"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.129" endtime="20201112 12:42:56.144"></status>
</kw>
<msg timestamp="20201112 12:42:56.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.127" endtime="20201112 12:42:56.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.145" endtime="20201112 12:42:56.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.148" endtime="20201112 12:42:56.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.125" endtime="20201112 12:42:56.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.122" endtime="20201112 12:42:56.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.157" endtime="20201112 12:42:56.443"></status>
</kw>
<msg timestamp="20201112 12:42:56.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.155" endtime="20201112 12:42:56.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.447" endtime="20201112 12:42:56.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.456" endtime="20201112 12:42:56.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.153" endtime="20201112 12:42:56.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.151" endtime="20201112 12:42:56.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.462" level="INFO">${RESULT} = [{'time': 0.020528167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.020543333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.459" endtime="20201112 12:42:56.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.476" level="INFO">${ACCURACY} = {'source_diff': [8.208999999998606e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.250000000001312e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:56.463" endtime="20201112 12:42:56.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.480" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.479" endtime="20201112 12:42:56.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.482" level="INFO">VALUE: [8.208999999998606e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.237000000001216e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201112 12:42:56.481" endtime="20201112 12:42:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.477" endtime="20201112 12:42:56.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.486" endtime="20201112 12:42:56.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.489" endtime="20201112 12:42:56.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.488" endtime="20201112 12:42:56.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.484" endtime="20201112 12:42:56.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.121" endtime="20201112 12:42:56.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.120" endtime="20201112 12:42:56.510"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.519" endtime="20201112 12:42:56.535"></status>
</kw>
<msg timestamp="20201112 12:42:56.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.517" endtime="20201112 12:42:56.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.537" endtime="20201112 12:42:56.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.539" endtime="20201112 12:42:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.515" endtime="20201112 12:42:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.513" endtime="20201112 12:42:56.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.548" endtime="20201112 12:42:56.835"></status>
</kw>
<msg timestamp="20201112 12:42:56.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.547" endtime="20201112 12:42:56.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.840" endtime="20201112 12:42:56.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.848" endtime="20201112 12:42:56.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.544" endtime="20201112 12:42:56.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.542" endtime="20201112 12:42:56.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.855" level="INFO">${RESULT} = [{'time': 0.022119292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.022134389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.851" endtime="20201112 12:42:56.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.868" level="INFO">${ACCURACY} = {'source_diff': [8.222999999998176e-06, 8.236000000001742e-06, 8.263000000001408e-06, 8.222999999998176e-06, 8.195000000002506e-06, 8.166000000000423e-06, 8.138000000001283e-06, 8.264000000000882e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:56.856" endtime="20201112 12:42:56.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.873" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.872" endtime="20201112 12:42:56.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.875" level="INFO">VALUE: [8.222999999998176e-06, 8.236000000001742e-06, 8.263000000001408e-06, 8.222999999998176e-06, 8.195000000002506e-06, 8.166000000000423e-06, 8.138000000001283e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.263999999997412e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.291000000000548e-06, 8.249999999997842e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.167000000003366e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201112 12:42:56.874" endtime="20201112 12:42:56.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.869" endtime="20201112 12:42:56.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.879" endtime="20201112 12:42:56.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.882" endtime="20201112 12:42:56.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.880" endtime="20201112 12:42:56.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.877" endtime="20201112 12:42:56.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.511" endtime="20201112 12:42:56.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.511" endtime="20201112 12:42:56.903"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.911" endtime="20201112 12:42:56.930"></status>
</kw>
<msg timestamp="20201112 12:42:56.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.910" endtime="20201112 12:42:56.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.931" endtime="20201112 12:42:56.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.934" endtime="20201112 12:42:56.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.907" endtime="20201112 12:42:56.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.905" endtime="20201112 12:42:56.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.943" endtime="20201112 12:42:57.229"></status>
</kw>
<msg timestamp="20201112 12:42:57.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.941" endtime="20201112 12:42:57.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.233" endtime="20201112 12:42:57.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.241" endtime="20201112 12:42:57.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.939" endtime="20201112 12:42:57.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.937" endtime="20201112 12:42:57.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.248" level="INFO">${RESULT} = [{'time': 0.021480694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.021498931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.244" endtime="20201112 12:42:57.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.261" level="INFO">${ACCURACY} = {'source_diff': [8.236000000001742e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.180999999999466e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:57.249" endtime="20201112 12:42:57.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.266" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.265" endtime="20201112 12:42:57.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.268" level="INFO">VALUE: [8.236000000001742e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.152000000000853e-06, 8.209000000002076e-06, 8.153000000000327e-06, 8.223000000001646e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.165999999996953e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 12:42:57.267" endtime="20201112 12:42:57.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.262" endtime="20201112 12:42:57.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.272" endtime="20201112 12:42:57.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.275" endtime="20201112 12:42:57.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.274" endtime="20201112 12:42:57.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.270" endtime="20201112 12:42:57.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.904" endtime="20201112 12:42:57.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.903" endtime="20201112 12:42:57.296"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.305" endtime="20201112 12:42:57.320"></status>
</kw>
<msg timestamp="20201112 12:42:57.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.303" endtime="20201112 12:42:57.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.321" endtime="20201112 12:42:57.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.324" endtime="20201112 12:42:57.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.300" endtime="20201112 12:42:57.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.298" endtime="20201112 12:42:57.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.333" endtime="20201112 12:42:57.621"></status>
</kw>
<msg timestamp="20201112 12:42:57.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:57.331" endtime="20201112 12:42:57.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:57.625" endtime="20201112 12:42:57.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.634" endtime="20201112 12:42:57.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.328" endtime="20201112 12:42:57.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.327" endtime="20201112 12:42:57.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.640" level="INFO">${RESULT} = [{'time': 0.020223208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.020235708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.637" endtime="20201112 12:42:57.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.654" level="INFO">${ACCURACY} = {'source_diff': [8.207999999999133e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.291000000000548e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.208999999998606e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:57.641" endtime="20201112 12:42:57.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.658" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.657" endtime="20201112 12:42:57.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.661" level="INFO">VALUE: [8.207999999999133e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.291000000000548e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.264000000000882e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.124999999997717e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.263999999997412e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201112 12:42:57.659" endtime="20201112 12:42:57.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.655" endtime="20201112 12:42:57.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.668" endtime="20201112 12:42:57.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.672" endtime="20201112 12:42:57.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.670" endtime="20201112 12:42:57.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.667" endtime="20201112 12:42:57.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.297" endtime="20201112 12:42:57.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.296" endtime="20201112 12:42:57.693"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.701" endtime="20201112 12:42:57.720"></status>
</kw>
<msg timestamp="20201112 12:42:57.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.700" endtime="20201112 12:42:57.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.721" endtime="20201112 12:42:57.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.724" endtime="20201112 12:42:57.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.697" endtime="20201112 12:42:57.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.695" endtime="20201112 12:42:57.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.733" endtime="20201112 12:42:58.019"></status>
</kw>
<msg timestamp="20201112 12:42:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.731" endtime="20201112 12:42:58.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.023" endtime="20201112 12:42:58.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.031" endtime="20201112 12:42:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.729" endtime="20201112 12:42:58.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.727" endtime="20201112 12:42:58.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.038" level="INFO">${RESULT} = [{'time': 0.020476556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.020493542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.035" endtime="20201112 12:42:58.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.052" level="INFO">${ACCURACY} = {'source_diff': [8.223000000001646e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.208999999998606e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:58.039" endtime="20201112 12:42:58.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.057" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.055" endtime="20201112 12:42:58.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.059" level="INFO">VALUE: [8.223000000001646e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.166000000000423e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.125000000001187e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.237000000001216e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201112 12:42:58.058" endtime="20201112 12:42:58.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.053" endtime="20201112 12:42:58.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.063" endtime="20201112 12:42:58.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.067" endtime="20201112 12:42:58.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.065" endtime="20201112 12:42:58.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.061" endtime="20201112 12:42:58.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.693" endtime="20201112 12:42:58.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.693" endtime="20201112 12:42:58.088"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.096" endtime="20201112 12:42:58.113"></status>
</kw>
<msg timestamp="20201112 12:42:58.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.095" endtime="20201112 12:42:58.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.114" endtime="20201112 12:42:58.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.117" endtime="20201112 12:42:58.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.092" endtime="20201112 12:42:58.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.090" endtime="20201112 12:42:58.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.126" endtime="20201112 12:42:58.412"></status>
</kw>
<msg timestamp="20201112 12:42:58.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:58.124" endtime="20201112 12:42:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:58.417" endtime="20201112 12:42:58.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.425" endtime="20201112 12:42:58.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.122" endtime="20201112 12:42:58.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.120" endtime="20201112 12:42:58.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.432" level="INFO">${RESULT} = [{'time': 0.02235425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.022368403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:58.428" endtime="20201112 12:42:58.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.445" level="INFO">${ACCURACY} = {'source_diff': [8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.292000000000022e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:58.433" endtime="20201112 12:42:58.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.449" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.448" endtime="20201112 12:42:58.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.452" level="INFO">VALUE: [8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.292000000000022e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.249999999997842e-06, 8.292000000000022e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.264000000000882e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.292000000000022e-06, 8.179999999999993e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201112 12:42:58.450" endtime="20201112 12:42:58.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.446" endtime="20201112 12:42:58.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.456" endtime="20201112 12:42:58.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.459" endtime="20201112 12:42:58.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.457" endtime="20201112 12:42:58.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.454" endtime="20201112 12:42:58.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.089" endtime="20201112 12:42:58.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.088" endtime="20201112 12:42:58.480"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.488" endtime="20201112 12:42:58.505"></status>
</kw>
<msg timestamp="20201112 12:42:58.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.487" endtime="20201112 12:42:58.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.507" endtime="20201112 12:42:58.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.509" endtime="20201112 12:42:58.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.484" endtime="20201112 12:42:58.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.482" endtime="20201112 12:42:58.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.518" endtime="20201112 12:42:58.806"></status>
</kw>
<msg timestamp="20201112 12:42:58.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.517" endtime="20201112 12:42:58.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.810" endtime="20201112 12:42:58.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.819" endtime="20201112 12:42:58.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.514" endtime="20201112 12:42:58.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.513" endtime="20201112 12:42:58.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.825" level="INFO">${RESULT} = [{'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.022099889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.822" endtime="20201112 12:42:58.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.839" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.208999999998606e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:58.826" endtime="20201112 12:42:58.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.843" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.842" endtime="20201112 12:42:58.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.846" level="INFO">VALUE: [8.235999999998272e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.153000000000327e-06, 8.223000000001646e-06, 8.292000000000022e-06, 8.305000000000118e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.305999999999591e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.166000000000423e-06, 8.236999999997746e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 12:42:58.844" endtime="20201112 12:42:58.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.840" endtime="20201112 12:42:58.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.849" endtime="20201112 12:42:58.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.853" endtime="20201112 12:42:58.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.851" endtime="20201112 12:42:58.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.848" endtime="20201112 12:42:58.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.481" endtime="20201112 12:42:58.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.480" endtime="20201112 12:42:58.873"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.882" endtime="20201112 12:42:58.902"></status>
</kw>
<msg timestamp="20201112 12:42:58.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.880" endtime="20201112 12:42:58.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.903" endtime="20201112 12:42:58.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.906" endtime="20201112 12:42:58.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.878" endtime="20201112 12:42:58.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.876" endtime="20201112 12:42:58.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.915" endtime="20201112 12:42:59.204"></status>
</kw>
<msg timestamp="20201112 12:42:59.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.913" endtime="20201112 12:42:59.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.208" endtime="20201112 12:42:59.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.217" endtime="20201112 12:42:59.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.911" endtime="20201112 12:42:59.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.909" endtime="20201112 12:42:59.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.223" level="INFO">${RESULT} = [{'time': 0.020281056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.020294069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.220" endtime="20201112 12:42:59.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.237" level="INFO">${ACCURACY} = {'source_diff': [8.208999999998606e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.209000000002076e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:59.224" endtime="20201112 12:42:59.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.241" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.240" endtime="20201112 12:42:59.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.244" level="INFO">VALUE: [8.208999999998606e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.305999999999591e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.209000000002076e-06]</msg>
<status status="PASS" starttime="20201112 12:42:59.242" endtime="20201112 12:42:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.238" endtime="20201112 12:42:59.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.247" endtime="20201112 12:42:59.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.251" endtime="20201112 12:42:59.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.249" endtime="20201112 12:42:59.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.246" endtime="20201112 12:42:59.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.874" endtime="20201112 12:42:59.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.874" endtime="20201112 12:42:59.271"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.280" endtime="20201112 12:42:59.299"></status>
</kw>
<msg timestamp="20201112 12:42:59.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.278" endtime="20201112 12:42:59.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.300" endtime="20201112 12:42:59.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.303" endtime="20201112 12:42:59.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.276" endtime="20201112 12:42:59.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.274" endtime="20201112 12:42:59.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.311" endtime="20201112 12:42:59.597"></status>
</kw>
<msg timestamp="20201112 12:42:59.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024222528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.310" endtime="20201112 12:42:59.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024222528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.601" endtime="20201112 12:42:59.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.610" endtime="20201112 12:42:59.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.307" endtime="20201112 12:42:59.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.306" endtime="20201112 12:42:59.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.616" level="INFO">${RESULT} = [{'time': 0.024230764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.024249486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.613" endtime="20201112 12:42:59.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.630" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.237000000001216e-06,...</msg>
<status status="PASS" starttime="20201112 12:42:59.617" endtime="20201112 12:42:59.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.634" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.633" endtime="20201112 12:42:59.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.637" level="INFO">VALUE: [8.235999999998272e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.237000000001216e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.153000000000327e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.194999999999036e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.236999999997746e-06, 8.222000000002172e-06, 8.249999999997842e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.305999999999591e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.236999999997746e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201112 12:42:59.635" endtime="20201112 12:42:59.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.631" endtime="20201112 12:42:59.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.640" endtime="20201112 12:42:59.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.644" endtime="20201112 12:42:59.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.642" endtime="20201112 12:42:59.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.639" endtime="20201112 12:42:59.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.272" endtime="20201112 12:42:59.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.272" endtime="20201112 12:42:59.665"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.673" endtime="20201112 12:42:59.690"></status>
</kw>
<msg timestamp="20201112 12:42:59.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.672" endtime="20201112 12:42:59.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.692" endtime="20201112 12:42:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.694" endtime="20201112 12:42:59.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.669" endtime="20201112 12:42:59.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.667" endtime="20201112 12:42:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.703" endtime="20201112 12:42:59.990"></status>
</kw>
<msg timestamp="20201112 12:42:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.701" endtime="20201112 12:42:59.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.994" endtime="20201112 12:43:00.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.002" endtime="20201112 12:43:00.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.699" endtime="20201112 12:43:00.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.697" endtime="20201112 12:43:00.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.009" level="INFO">${RESULT} = [{'time': 0.022819319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.022837625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.006" endtime="20201112 12:43:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.022" level="INFO">${ACCURACY} = {'source_diff': [8.208000000002602e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.249999999997842e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.208000000002602e-06,...</msg>
<status status="PASS" starttime="20201112 12:43:00.010" endtime="20201112 12:43:00.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.027" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.026" endtime="20201112 12:43:00.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.029" level="INFO">VALUE: [8.208000000002602e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.249999999997842e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.278000000000452e-06, 8.222000000002172e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.249999999997842e-06]</msg>
<status status="PASS" starttime="20201112 12:43:00.028" endtime="20201112 12:43:00.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.023" endtime="20201112 12:43:00.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.033" endtime="20201112 12:43:00.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.036" endtime="20201112 12:43:00.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.035" endtime="20201112 12:43:00.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.031" endtime="20201112 12:43:00.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.666" endtime="20201112 12:43:00.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.665" endtime="20201112 12:43:00.057"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.066" endtime="20201112 12:43:00.084"></status>
</kw>
<msg timestamp="20201112 12:43:00.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.064" endtime="20201112 12:43:00.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.086" endtime="20201112 12:43:00.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.088" endtime="20201112 12:43:00.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.062" endtime="20201112 12:43:00.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.060" endtime="20201112 12:43:00.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.098" endtime="20201112 12:43:00.385"></status>
</kw>
<msg timestamp="20201112 12:43:00.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.096" endtime="20201112 12:43:00.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.389" endtime="20201112 12:43:00.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.398" endtime="20201112 12:43:00.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.094" endtime="20201112 12:43:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.092" endtime="20201112 12:43:00.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.404" level="INFO">${RESULT} = [{'time': 0.022202639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.02221925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:00.401" endtime="20201112 12:43:00.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.418" level="INFO">${ACCURACY} = {'source_diff': [8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.235999999998272e-06,...</msg>
<status status="PASS" starttime="20201112 12:43:00.405" endtime="20201112 12:43:00.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.422" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.421" endtime="20201112 12:43:00.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.425" level="INFO">VALUE: [8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.152000000000853e-06, 8.235999999998272e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.290999999997078e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.250000000001312e-06, 8.166999999999897e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 12:43:00.423" endtime="20201112 12:43:00.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.419" endtime="20201112 12:43:00.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.428" endtime="20201112 12:43:00.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.432" endtime="20201112 12:43:00.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.430" endtime="20201112 12:43:00.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.427" endtime="20201112 12:43:00.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.058" endtime="20201112 12:43:00.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.058" endtime="20201112 12:43:00.453"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.461" endtime="20201112 12:43:00.479"></status>
</kw>
<msg timestamp="20201112 12:43:00.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.460" endtime="20201112 12:43:00.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.481" endtime="20201112 12:43:00.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.483" endtime="20201112 12:43:00.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.457" endtime="20201112 12:43:00.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.455" endtime="20201112 12:43:00.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.492" endtime="20201112 12:43:00.780"></status>
</kw>
<msg timestamp="20201112 12:43:00.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.491" endtime="20201112 12:43:00.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.784" endtime="20201112 12:43:00.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.792" endtime="20201112 12:43:00.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.488" endtime="20201112 12:43:00.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.487" endtime="20201112 12:43:00.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.799" level="INFO">${RESULT} = [{'time': 0.023652736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.023668653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.795" endtime="20201112 12:43:00.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.812" level="INFO">${ACCURACY} = {'source_diff': [8.193999999999563e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06,...</msg>
<status status="PASS" starttime="20201112 12:43:00.800" endtime="20201112 12:43:00.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.817" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.816" endtime="20201112 12:43:00.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.819" level="INFO">VALUE: [8.193999999999563e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.223000000001646e-06, 8.235999999998272e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.264000000000882e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.235999999998272e-06, 8.318999999999688e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201112 12:43:00.818" endtime="20201112 12:43:00.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.813" endtime="20201112 12:43:00.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.823" endtime="20201112 12:43:00.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.826" endtime="20201112 12:43:00.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.825" endtime="20201112 12:43:00.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.821" endtime="20201112 12:43:00.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.454" endtime="20201112 12:43:00.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.453" endtime="20201112 12:43:00.847"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.855" endtime="20201112 12:43:00.871"></status>
</kw>
<msg timestamp="20201112 12:43:00.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.854" endtime="20201112 12:43:00.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.872" endtime="20201112 12:43:00.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.875" endtime="20201112 12:43:00.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.851" endtime="20201112 12:43:00.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.849" endtime="20201112 12:43:00.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.884" endtime="20201112 12:43:01.171"></status>
</kw>
<msg timestamp="20201112 12:43:01.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.882" endtime="20201112 12:43:01.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.176" endtime="20201112 12:43:01.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.184" endtime="20201112 12:43:01.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.880" endtime="20201112 12:43:01.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.878" endtime="20201112 12:43:01.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.191" level="INFO">${RESULT} = [{'time': 0.021241389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.021254639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.187" endtime="20201112 12:43:01.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.204" level="INFO">${ACCURACY} = {'source_diff': [8.292000000000022e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.153000000000327e-06, 8.153000000000327e-06, 8.193999999999563e-06,...</msg>
<status status="PASS" starttime="20201112 12:43:01.192" endtime="20201112 12:43:01.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.209" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.208" endtime="20201112 12:43:01.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.211" level="INFO">VALUE: [8.292000000000022e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.153000000000327e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.305999999999591e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.262999999997939e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.237000000001216e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.249999999997842e-06, 8.223000000001646e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201112 12:43:01.210" endtime="20201112 12:43:01.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.205" endtime="20201112 12:43:01.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.215" endtime="20201112 12:43:01.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.218" endtime="20201112 12:43:01.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.217" endtime="20201112 12:43:01.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.213" endtime="20201112 12:43:01.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.848" endtime="20201112 12:43:01.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.847" endtime="20201112 12:43:01.239"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.248" endtime="20201112 12:43:01.264"></status>
</kw>
<msg timestamp="20201112 12:43:01.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.246" endtime="20201112 12:43:01.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.265" endtime="20201112 12:43:01.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.268" endtime="20201112 12:43:01.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.243" endtime="20201112 12:43:01.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.241" endtime="20201112 12:43:01.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.277" endtime="20201112 12:43:01.565"></status>
</kw>
<msg timestamp="20201112 12:43:01.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:01.275" endtime="20201112 12:43:01.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:01.569" endtime="20201112 12:43:01.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.577" endtime="20201112 12:43:01.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.273" endtime="20201112 12:43:01.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.271" endtime="20201112 12:43:01.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.584" level="INFO">${RESULT} = [{'time': 0.0211385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.021155319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:01.580" endtime="20201112 12:43:01.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.597" level="INFO">${ACCURACY} = {'source_diff': [8.264000000000882e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.207999999999133e-06,...</msg>
<status status="PASS" starttime="20201112 12:43:01.585" endtime="20201112 12:43:01.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.602" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.601" endtime="20201112 12:43:01.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.604" level="INFO">VALUE: [8.264000000000882e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.152999999996857e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.263999999997412e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.236999999997746e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.292000000000022e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.209000000002076e-06, 8.278000000000452e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.221999999998703e-06]</msg>
<status status="PASS" starttime="20201112 12:43:01.603" endtime="20201112 12:43:01.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.598" endtime="20201112 12:43:01.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.608" endtime="20201112 12:43:01.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.611" endtime="20201112 12:43:01.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.610" endtime="20201112 12:43:01.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.606" endtime="20201112 12:43:01.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.240" endtime="20201112 12:43:01.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.239" endtime="20201112 12:43:01.632"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.641" endtime="20201112 12:43:01.663"></status>
</kw>
<msg timestamp="20201112 12:43:01.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.639" endtime="20201112 12:43:01.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.665" endtime="20201112 12:43:01.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.667" endtime="20201112 12:43:01.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.637" endtime="20201112 12:43:01.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.634" endtime="20201112 12:43:01.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.676" endtime="20201112 12:43:01.965"></status>
</kw>
<msg timestamp="20201112 12:43:01.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.675" endtime="20201112 12:43:01.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.969" endtime="20201112 12:43:01.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.978" endtime="20201112 12:43:01.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.672" endtime="20201112 12:43:01.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.670" endtime="20201112 12:43:01.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.984" level="INFO">${RESULT} = [{'time': 0.024977181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.025008056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.981" endtime="20201112 12:43:01.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.998" level="INFO">${ACCURACY} = {'source_diff': [9.153000000001327e-06, 2.2555999999999965e-05, 2.4457999999998037e-05, 2.3485999999999646e-05, 2.6332999999999912e-05, 2.3485999999999646e-05, 2.358300000000063e-05, 2.158400000000157...</msg>
<status status="PASS" starttime="20201112 12:43:01.985" endtime="20201112 12:43:01.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.002" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.001" endtime="20201112 12:43:02.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.005" level="INFO">VALUE: [9.153000000001327e-06, 2.2555999999999965e-05, 2.4457999999998037e-05, 2.3485999999999646e-05, 2.6332999999999912e-05, 2.3485999999999646e-05, 2.358300000000063e-05, 2.1584000000001574e-05, 2.5402000000000757e-05, 2.0651999999999476e-05, 2.3472000000000076e-05, 2.54169999999998e-05, 2.4457999999998037e-05, 2.543099999999937e-05, 2.544499999999894e-05, 2.5360999999998052e-05, 2.162499999999734e-05, 2.158299999999863e-05, 1.9708000000000225e-05, 2.065299999999895e-05, 2.4500000000000216e-05, 2.256900000000006e-05, 2.4486000000000646e-05, 2.4513999999999786e-05, 2.161100000000124e-05, 2.4471999999997607e-05, 2.5443999999999467e-05, 2.158299999999863e-05, 2.0584000000000574e-05, 2.161099999999777e-05, 2.156900000000253e-05, 2.162500000000081e-05, 2.063899999999938e-05, 2.3512999999999312e-05, 2.5429999999999897e-05, 2.64170000000008e-05, 2.4415999999999327e-05, 2.0598000000000144e-05, 2.544499999999894e-05, 2.3526999999998882e-05, 2.4486000000000646e-05, 2.638899999999819e-05, 2.540300000000023e-05, 2.4457999999998037e-05, 2.443099999999837e-05, 2.445899999999751e-05, 2.448700000000012e-05, 2.636100000000252e-05, 2.3513999999998786e-05, 2.3513999999998786e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.003" endtime="20201112 12:43:02.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.999" endtime="20201112 12:43:02.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.008" endtime="20201112 12:43:02.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.012" endtime="20201112 12:43:02.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.010" endtime="20201112 12:43:02.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.007" endtime="20201112 12:43:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.633" endtime="20201112 12:43:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.632" endtime="20201112 12:43:02.036"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.054" endtime="20201112 12:43:02.077"></status>
</kw>
<msg timestamp="20201112 12:43:02.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.051" endtime="20201112 12:43:02.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.081" endtime="20201112 12:43:02.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.086" endtime="20201112 12:43:02.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.045" endtime="20201112 12:43:02.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.041" endtime="20201112 12:43:02.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.104" endtime="20201112 12:43:02.400"></status>
</kw>
<msg timestamp="20201112 12:43:02.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036279153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036304556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.101" endtime="20201112 12:43:02.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036279153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036304556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.405" endtime="20201112 12:43:02.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.413" endtime="20201112 12:43:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.096" endtime="20201112 12:43:02.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.092" endtime="20201112 12:43:02.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.420" level="INFO">${RESULT} = [{'time': 0.036304556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.540300000000023e-05, 'source_diff': 2.540300000000023e-05}, {'time': 0.036335208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.416" endtime="20201112 12:43:02.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.433" level="INFO">${ACCURACY} = {'source_diff': [2.540300000000023e-05, 2.4514000000003255e-05, 2.065300000000242e-05, 2.4471999999997607e-05, 2.6332999999996443e-05, 2.537500000000109e-05, 2.255500000000049e-05, 2.062500000000328e-...</msg>
<status status="PASS" starttime="20201112 12:43:02.420" endtime="20201112 12:43:02.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.437" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.436" endtime="20201112 12:43:02.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.440" level="INFO">VALUE: [2.540300000000023e-05, 2.4514000000003255e-05, 2.065300000000242e-05, 2.4471999999997607e-05, 2.6332999999996443e-05, 2.537500000000109e-05, 2.255500000000049e-05, 2.062500000000328e-05, 2.3430000000004836e-05, 2.065300000000242e-05, 2.3500000000002685e-05, 2.063900000000285e-05, 2.256900000000006e-05, 2.161099999999777e-05, 2.544499999999894e-05, 2.062500000000328e-05, 2.062499999999634e-05, 2.4500000000003685e-05, 2.4443999999998467e-05, 2.3513999999995316e-05, 2.066699999999505e-05, 2.3527999999994886e-05, 2.256900000000006e-05, 2.065300000000242e-05, 2.063899999999591e-05, 2.54169999999998e-05, 2.543099999999937e-05, 2.2528000000000825e-05, 2.538900000000066e-05, 2.2500000000001685e-05, 2.638900000000166e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.256900000000006e-05, 2.6319999999996346e-05, 2.347300000000302e-05, 2.1597999999997675e-05, 2.162499999999734e-05, 2.6374999999995152e-05, 2.2486000000002115e-05, 2.345899999999651e-05, 2.2500000000001685e-05, 2.4457999999998037e-05, 2.3527999999994886e-05, 2.065300000000242e-05, 2.063900000000285e-05, 2.158300000000557e-05, 1.9652000000001946e-05, 2.4486000000004116e-05, 2.4514000000003255e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.438" endtime="20201112 12:43:02.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.434" endtime="20201112 12:43:02.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.443" endtime="20201112 12:43:02.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.447" endtime="20201112 12:43:02.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.445" endtime="20201112 12:43:02.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.442" endtime="20201112 12:43:02.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.038" endtime="20201112 12:43:02.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.036" endtime="20201112 12:43:02.468"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.476" endtime="20201112 12:43:02.496"></status>
</kw>
<msg timestamp="20201112 12:43:02.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.475" endtime="20201112 12:43:02.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.498" endtime="20201112 12:43:02.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.500" endtime="20201112 12:43:02.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.472" endtime="20201112 12:43:02.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.470" endtime="20201112 12:43:02.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.509" endtime="20201112 12:43:02.796"></status>
</kw>
<msg timestamp="20201112 12:43:02.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.508" endtime="20201112 12:43:02.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023178667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.800" endtime="20201112 12:43:02.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.808" endtime="20201112 12:43:02.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.505" endtime="20201112 12:43:02.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.503" endtime="20201112 12:43:02.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.815" level="INFO">${RESULT} = [{'time': 0.023213667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.023244097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.812" endtime="20201112 12:43:02.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.829" level="INFO">${ACCURACY} = {'source_diff': [3.500000000000031e-05, 2.6415999999997858e-05, 2.5401999999997288e-05, 2.4415999999999327e-05, 2.4457999999998037e-05, 2.543099999999937e-05, 2.2528000000000825e-05, 2.44169999999988e...</msg>
<status status="PASS" starttime="20201112 12:43:02.816" endtime="20201112 12:43:02.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.833" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.832" endtime="20201112 12:43:02.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.838" level="INFO">VALUE: [3.500000000000031e-05, 2.6415999999997858e-05, 2.5401999999997288e-05, 2.4415999999999327e-05, 2.4457999999998037e-05, 2.543099999999937e-05, 2.2528000000000825e-05, 2.44169999999988e-05, 2.636100000000252e-05, 2.3541999999997926e-05, 2.258299999999963e-05, 2.066700000000199e-05, 2.158299999999863e-05, 2.5416000000000327e-05, 2.15830000000021e-05, 2.445900000000098e-05, 2.05969999999972e-05, 2.6360999999999052e-05, 2.15830000000021e-05, 2.5443999999999467e-05, 2.161099999999777e-05, 2.066700000000199e-05, 2.444500000000141e-05, 2.444500000000141e-05, 2.3513999999998786e-05, 2.537500000000109e-05, 2.4429999999998897e-05, 2.1570000000002004e-05, 2.3512999999999312e-05, 1.9651999999998476e-05, 2.4555999999998496e-05, 2.4500000000000216e-05, 2.2555999999999965e-05, 2.155499999999949e-05, 2.1598000000001144e-05, 2.256900000000006e-05, 2.4472000000001076e-05, 2.1583999999998105e-05, 2.256900000000006e-05, 2.159700000000167e-05, 2.065299999999895e-05, 1.9708000000000225e-05, 2.159700000000167e-05, 2.6334000000002855e-05, 2.6332999999999912e-05, 2.1541999999999395e-05, 2.543099999999937e-05, 2.4472000000001076e-05, 2.4443999999998467e-05, 2.7319000000001342e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.835" endtime="20201112 12:43:02.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.830" endtime="20201112 12:43:02.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.852" endtime="20201112 12:43:02.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.859" endtime="20201112 12:43:02.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.855" endtime="20201112 12:43:02.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.848" endtime="20201112 12:43:02.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.469" endtime="20201112 12:43:02.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.468" endtime="20201112 12:43:02.883"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.901" endtime="20201112 12:43:02.925"></status>
</kw>
<msg timestamp="20201112 12:43:02.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.898" endtime="20201112 12:43:02.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.928" endtime="20201112 12:43:02.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.933" endtime="20201112 12:43:02.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.893" endtime="20201112 12:43:02.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.888" endtime="20201112 12:43:02.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.944" endtime="20201112 12:43:03.231"></status>
</kw>
<msg timestamp="20201112 12:43:03.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037831944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037865014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.943" endtime="20201112 12:43:03.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037831944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037865014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.235" endtime="20201112 12:43:03.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.244" endtime="20201112 12:43:03.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.940" endtime="20201112 12:43:03.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.938" endtime="20201112 12:43:03.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.251" level="INFO">${RESULT} = [{'time': 0.037865014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30700000000031e-05, 'source_diff': 3.30700000000031e-05}, {'time': 0.037895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201112 12:43:03.247" endtime="20201112 12:43:03.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.264" level="INFO">${ACCURACY} = {'source_diff': [3.30700000000031e-05, 2.4485999999997177e-05, 2.6402999999994292e-05, 2.445899999999751e-05, 2.536100000000152e-05, 2.54169999999998e-05, 2.638900000000166e-05, 2.0569000000005e-05, 2...</msg>
<status status="PASS" starttime="20201112 12:43:03.251" endtime="20201112 12:43:03.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.268" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.267" endtime="20201112 12:43:03.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.271" level="INFO">VALUE: [3.30700000000031e-05, 2.4485999999997177e-05, 2.6402999999994292e-05, 2.445899999999751e-05, 2.536100000000152e-05, 2.54169999999998e-05, 2.638900000000166e-05, 2.0569000000005e-05, 2.2528000000000825e-05, 2.3514000000002255e-05, 2.3514000000002255e-05, 2.636100000000252e-05, 1.962500000000228e-05, 2.7320000000004285e-05, 2.345899999999651e-05, 2.3472000000003546e-05, 2.638900000000166e-05, 2.158299999999863e-05, 2.063899999999591e-05, 2.6362000000001995e-05, 2.4348000000000425e-05, 2.2514000000001255e-05, 2.544500000000588e-05, 2.6388999999994722e-05, 2.161099999999777e-05, 2.066699999999505e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.3528000000001825e-05, 1.962500000000228e-05, 2.2500000000001685e-05, 2.158300000000557e-05, 2.068100000000156e-05, 2.5429999999999897e-05, 2.447299999999708e-05, 2.640300000000123e-05, 2.059700000000414e-05, 2.159700000000514e-05, 2.4486000000004116e-05, 2.445899999999751e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.2514000000001255e-05, 2.3500000000002685e-05, 2.447300000000402e-05, 2.2569999999999535e-05, 2.3527999999994886e-05, 2.062499999999634e-05, 2.3486000000003115e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.269" endtime="20201112 12:43:03.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.265" endtime="20201112 12:43:03.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.274" endtime="20201112 12:43:03.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.278" endtime="20201112 12:43:03.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.276" endtime="20201112 12:43:03.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.273" endtime="20201112 12:43:03.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.885" endtime="20201112 12:43:03.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.884" endtime="20201112 12:43:03.299"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.307" endtime="20201112 12:43:03.328"></status>
</kw>
<msg timestamp="20201112 12:43:03.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.306" endtime="20201112 12:43:03.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.330" endtime="20201112 12:43:03.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.332" endtime="20201112 12:43:03.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.303" endtime="20201112 12:43:03.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.301" endtime="20201112 12:43:03.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.341" endtime="20201112 12:43:03.627"></status>
</kw>
<msg timestamp="20201112 12:43:03.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02104975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.339" endtime="20201112 12:43:03.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02104975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:03.632" endtime="20201112 12:43:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.640" endtime="20201112 12:43:03.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.337" endtime="20201112 12:43:03.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.335" endtime="20201112 12:43:03.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.647" level="INFO">${RESULT} = [{'time': 0.021082819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3069000000000154e-05, 'source_diff': 3.3069000000000154e-05}, {'time': 0.021114194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:03.643" endtime="20201112 12:43:03.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.660" level="INFO">${ACCURACY} = {'source_diff': [3.3069000000000154e-05, 2.6374999999998622e-05, 2.063899999999938e-05, 2.2541999999996926e-05, 2.3541999999997926e-05, 2.065300000000242e-05, 2.4458000000001506e-05, 2.255599999999996...</msg>
<status status="PASS" starttime="20201112 12:43:03.648" endtime="20201112 12:43:03.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.665" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.664" endtime="20201112 12:43:03.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.667" level="INFO">VALUE: [3.3069000000000154e-05, 2.6374999999998622e-05, 2.063899999999938e-05, 2.2541999999996926e-05, 2.3541999999997926e-05, 2.065300000000242e-05, 2.4458000000001506e-05, 2.2555999999999965e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.444500000000141e-05, 2.156899999999906e-05, 2.44169999999988e-05, 2.3513999999998786e-05, 2.3542000000001395e-05, 2.063899999999938e-05, 2.258299999999963e-05, 2.4486000000000646e-05, 2.7306000000001246e-05, 2.3526999999998882e-05, 2.347299999999955e-05, 2.6319999999999816e-05, 2.065299999999895e-05, 2.4444000000001936e-05, 2.6332999999999912e-05, 2.062499999999981e-05, 2.3513999999998786e-05, 2.1584000000001574e-05, 2.3528000000001825e-05, 2.447300000000055e-05, 2.6361999999998526e-05, 2.2554999999997022e-05, 2.2541999999996926e-05, 2.163899999999691e-05, 2.1612000000000714e-05, 2.537500000000109e-05, 2.1597999999997675e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.063899999999938e-05, 2.6361999999998526e-05, 2.4499999999996747e-05, 2.638900000000166e-05, 2.0665999999999046e-05, 2.447300000000055e-05, 2.3526999999998882e-05, 2.161100000000124e-05, 2.637500000000209e-05, 2.4472000000001076e-05, 2.5513999999997317e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.666" endtime="20201112 12:43:03.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.661" endtime="20201112 12:43:03.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.671" endtime="20201112 12:43:03.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.674" endtime="20201112 12:43:03.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.672" endtime="20201112 12:43:03.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.669" endtime="20201112 12:43:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.300" endtime="20201112 12:43:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.299" endtime="20201112 12:43:03.695"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.703" endtime="20201112 12:43:03.723"></status>
</kw>
<msg timestamp="20201112 12:43:03.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.702" endtime="20201112 12:43:03.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.724" endtime="20201112 12:43:03.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.727" endtime="20201112 12:43:03.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.699" endtime="20201112 12:43:03.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.697" endtime="20201112 12:43:03.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.736" endtime="20201112 12:43:04.023"></status>
</kw>
<msg timestamp="20201112 12:43:04.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.734" endtime="20201112 12:43:04.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.028" endtime="20201112 12:43:04.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.036" endtime="20201112 12:43:04.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.732" endtime="20201112 12:43:04.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.730" endtime="20201112 12:43:04.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.043" level="INFO">${RESULT} = [{'time': 0.021882847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.021913361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.039" endtime="20201112 12:43:04.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.056" level="INFO">${ACCURACY} = {'source_diff': [9.139000000001757e-06, 2.062499999999981e-05, 2.5443999999999467e-05, 2.15969999999982e-05, 2.1612000000000714e-05, 2.4500000000000216e-05, 2.061100000000024e-05, 2.3513999999998786e-...</msg>
<status status="PASS" starttime="20201112 12:43:04.044" endtime="20201112 12:43:04.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.061" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.060" endtime="20201112 12:43:04.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.063" level="INFO">VALUE: [9.139000000001757e-06, 2.062499999999981e-05, 2.5443999999999467e-05, 2.15969999999982e-05, 2.1612000000000714e-05, 2.4500000000000216e-05, 2.061100000000024e-05, 2.3513999999998786e-05, 2.1637999999997437e-05, 2.0555999999997965e-05, 2.538900000000066e-05, 2.063899999999938e-05, 2.4443999999998467e-05, 2.640300000000123e-05, 1.9694000000000655e-05, 2.4472000000001076e-05, 2.3526999999998882e-05, 2.447300000000055e-05, 1.969500000000013e-05, 2.2443999999999936e-05, 2.538900000000066e-05, 2.544500000000241e-05, 2.3528000000001825e-05, 2.063899999999938e-05, 2.255500000000049e-05, 2.1570000000002004e-05, 1.963899999999838e-05, 2.3513999999998786e-05, 2.161099999999777e-05, 2.065299999999895e-05, 2.161100000000124e-05, 2.6374999999998622e-05, 2.455500000000249e-05, 2.4472000000001076e-05, 2.255500000000049e-05, 2.6306000000000246e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.4485999999997177e-05, 2.059700000000067e-05, 2.6346999999999482e-05, 2.3526999999998882e-05, 2.063899999999938e-05, 2.2584000000002574e-05, 2.445900000000098e-05, 2.15830000000021e-05, 2.3444000000000936e-05, 2.3570000000000535e-05, 2.2597999999998675e-05, 2.5444000000002936e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.062" endtime="20201112 12:43:04.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.057" endtime="20201112 12:43:04.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.067" endtime="20201112 12:43:04.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.070" endtime="20201112 12:43:04.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.068" endtime="20201112 12:43:04.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.065" endtime="20201112 12:43:04.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.696" endtime="20201112 12:43:04.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.695" endtime="20201112 12:43:04.091"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.099" endtime="20201112 12:43:04.119"></status>
</kw>
<msg timestamp="20201112 12:43:04.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.098" endtime="20201112 12:43:04.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.121" endtime="20201112 12:43:04.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.123" endtime="20201112 12:43:04.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.095" endtime="20201112 12:43:04.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.093" endtime="20201112 12:43:04.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.132" endtime="20201112 12:43:04.419"></status>
</kw>
<msg timestamp="20201112 12:43:04.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.131" endtime="20201112 12:43:04.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.423" endtime="20201112 12:43:04.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.431" endtime="20201112 12:43:04.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.128" endtime="20201112 12:43:04.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.126" endtime="20201112 12:43:04.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.438" level="INFO">${RESULT} = [{'time': 0.022834194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.022865361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.435" endtime="20201112 12:43:04.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.452" level="INFO">${ACCURACY} = {'source_diff': [1.1971999999998983e-05, 2.5429999999999897e-05, 2.443100000000184e-05, 2.540299999999676e-05, 2.4443999999998467e-05, 2.536100000000152e-05, 2.161099999999777e-05, 2.544499999999894e-...</msg>
<status status="PASS" starttime="20201112 12:43:04.439" endtime="20201112 12:43:04.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.456" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.455" endtime="20201112 12:43:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.458" level="INFO">VALUE: [1.1971999999998983e-05, 2.5429999999999897e-05, 2.443100000000184e-05, 2.540299999999676e-05, 2.4443999999998467e-05, 2.536100000000152e-05, 2.161099999999777e-05, 2.544499999999894e-05, 2.441700000000227e-05, 2.640299999999776e-05, 2.156900000000253e-05, 2.062499999999981e-05, 2.1598000000001144e-05, 2.262499999999834e-05, 2.537500000000109e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.2555999999999965e-05, 2.344500000000041e-05, 2.0584000000000574e-05, 2.4472000000001076e-05, 2.4500000000000216e-05, 2.637500000000209e-05, 2.161100000000124e-05, 1.962499999999881e-05, 2.537499999999762e-05, 2.4500000000000216e-05, 2.059700000000067e-05, 2.4486000000000646e-05, 2.638899999999819e-05, 2.1570000000002004e-05, 2.156899999999906e-05, 2.066700000000199e-05, 2.536100000000152e-05, 2.6401999999998288e-05, 2.4430000000002366e-05, 2.2500000000001685e-05, 2.3554999999998022e-05, 2.2555999999999965e-05, 2.3472000000000076e-05, 2.2554999999997022e-05, 2.15969999999982e-05, 1.9693999999997186e-05, 2.4554999999999022e-05, 2.348699999999912e-05, 2.2514000000001255e-05, 2.2583999999999105e-05, 2.638899999999819e-05, 2.640300000000123e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.457" endtime="20201112 12:43:04.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.452" endtime="20201112 12:43:04.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.462" endtime="20201112 12:43:04.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.466" endtime="20201112 12:43:04.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.464" endtime="20201112 12:43:04.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.461" endtime="20201112 12:43:04.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.092" endtime="20201112 12:43:04.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.091" endtime="20201112 12:43:04.486"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.495" endtime="20201112 12:43:04.516"></status>
</kw>
<msg timestamp="20201112 12:43:04.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.493" endtime="20201112 12:43:04.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.517" endtime="20201112 12:43:04.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.520" endtime="20201112 12:43:04.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.491" endtime="20201112 12:43:04.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.489" endtime="20201112 12:43:04.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.529" endtime="20201112 12:43:04.815"></status>
</kw>
<msg timestamp="20201112 12:43:04.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024122153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.527" endtime="20201112 12:43:04.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024122153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.820" endtime="20201112 12:43:04.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.828" endtime="20201112 12:43:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.525" endtime="20201112 12:43:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.523" endtime="20201112 12:43:04.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.835" level="INFO">${RESULT} = [{'time': 0.024122153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3570000000000535e-05, 'source_diff': 2.3570000000000535e-05}, {'time': 0.024152583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.831" endtime="20201112 12:43:04.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.848" level="INFO">${ACCURACY} = {'source_diff': [2.3570000000000535e-05, 2.6401999999998288e-05, 2.255500000000049e-05, 2.3512999999999312e-05, 2.4486000000000646e-05, 2.161100000000124e-05, 2.1541999999999395e-05, 2.545899999999851...</msg>
<status status="PASS" starttime="20201112 12:43:04.836" endtime="20201112 12:43:04.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.853" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.852" endtime="20201112 12:43:04.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.855" level="INFO">VALUE: [2.3570000000000535e-05, 2.6401999999998288e-05, 2.255500000000049e-05, 2.3512999999999312e-05, 2.4486000000000646e-05, 2.161100000000124e-05, 2.1541999999999395e-05, 2.545899999999851e-05, 2.15969999999982e-05, 2.4457999999998037e-05, 2.5444000000002936e-05, 2.538899999999719e-05, 2.3486000000003115e-05, 2.2500000000001685e-05, 2.4457999999998037e-05, 2.2555999999999965e-05, 2.3443999999997467e-05, 2.3499999999999216e-05, 2.3541999999997926e-05, 2.543099999999937e-05, 2.063899999999938e-05, 2.5443999999999467e-05, 2.1597999999997675e-05, 2.162500000000081e-05, 2.2569999999999535e-05, 2.0637999999999906e-05, 2.537499999999762e-05, 2.445899999999751e-05, 2.065299999999895e-05, 2.3528000000001825e-05, 2.0679999999998616e-05, 2.6374999999998622e-05, 2.543099999999937e-05, 2.6387999999998718e-05, 2.1598000000001144e-05, 2.3527999999998356e-05, 2.256900000000006e-05, 2.447300000000055e-05, 2.6332999999999912e-05, 2.1569999999998535e-05, 2.262499999999834e-05, 2.161099999999777e-05, 2.3499999999999216e-05, 2.4500000000000216e-05, 2.4472000000001076e-05, 2.25969999999992e-05, 2.3542000000001395e-05, 2.7347000000000482e-05, 2.4472000000001076e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.854" endtime="20201112 12:43:04.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.849" endtime="20201112 12:43:04.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.859" endtime="20201112 12:43:04.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.862" endtime="20201112 12:43:04.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.861" endtime="20201112 12:43:04.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.857" endtime="20201112 12:43:04.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.487" endtime="20201112 12:43:04.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.487" endtime="20201112 12:43:04.883"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.892" endtime="20201112 12:43:04.914"></status>
</kw>
<msg timestamp="20201112 12:43:04.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.890" endtime="20201112 12:43:04.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.915" endtime="20201112 12:43:04.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.918" endtime="20201112 12:43:04.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.887" endtime="20201112 12:43:04.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.885" endtime="20201112 12:43:04.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.927" endtime="20201112 12:43:05.213"></status>
</kw>
<msg timestamp="20201112 12:43:05.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024559361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.925" endtime="20201112 12:43:05.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024559361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.217" endtime="20201112 12:43:05.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.225" endtime="20201112 12:43:05.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.923" endtime="20201112 12:43:05.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.921" endtime="20201112 12:43:05.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.232" level="INFO">${RESULT} = [{'time': 0.024585694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.633300000000338e-05, 'source_diff': 2.633300000000338e-05}, {'time': 0.024615958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.229" endtime="20201112 12:43:05.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.245" level="INFO">${ACCURACY} = {'source_diff': [2.633300000000338e-05, 2.061100000000024e-05, 2.2540999999997452e-05, 2.3499999999999216e-05, 2.256900000000006e-05, 2.541700000000327e-05, 2.445900000000098e-05, 2.162500000000081e-0...</msg>
<status status="PASS" starttime="20201112 12:43:05.233" endtime="20201112 12:43:05.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.250" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.249" endtime="20201112 12:43:05.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.252" level="INFO">VALUE: [2.633300000000338e-05, 2.061100000000024e-05, 2.2540999999997452e-05, 2.3499999999999216e-05, 2.256900000000006e-05, 2.541700000000327e-05, 2.445900000000098e-05, 2.162500000000081e-05, 2.2528000000000825e-05, 2.443099999999837e-05, 2.055499999999849e-05, 2.6388000000002187e-05, 2.062499999999981e-05, 2.5486000000001646e-05, 2.543099999999937e-05, 2.445900000000098e-05, 2.1555999999998965e-05, 2.438899999999966e-05, 2.3514000000002255e-05, 2.4472000000001076e-05, 2.541700000000327e-05, 2.2542000000000395e-05, 2.2513999999997786e-05, 2.066699999999852e-05, 2.44169999999988e-05, 2.2514000000001255e-05, 2.162500000000081e-05, 2.5388000000001187e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.6347999999998956e-05, 2.059700000000067e-05, 2.3499999999999216e-05, 2.065299999999895e-05, 2.543100000000284e-05, 2.6333999999999386e-05, 2.537500000000109e-05, 2.05830000000011e-05, 2.6374999999998622e-05, 2.1583999999998105e-05, 2.4486000000000646e-05, 2.062499999999981e-05, 2.066699999999852e-05, 2.4415999999999327e-05, 2.2569999999999535e-05, 2.640300000000123e-05, 2.4486000000000646e-05, 2.5416000000000327e-05, 2.543099999999937e-05, 2.1569999999998535e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.251" endtime="20201112 12:43:05.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.246" endtime="20201112 12:43:05.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.256" endtime="20201112 12:43:05.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.259" endtime="20201112 12:43:05.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.258" endtime="20201112 12:43:05.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.254" endtime="20201112 12:43:05.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.884" endtime="20201112 12:43:05.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.883" endtime="20201112 12:43:05.280"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.289" endtime="20201112 12:43:05.311"></status>
</kw>
<msg timestamp="20201112 12:43:05.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.287" endtime="20201112 12:43:05.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.312" endtime="20201112 12:43:05.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.315" endtime="20201112 12:43:05.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.285" endtime="20201112 12:43:05.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.283" endtime="20201112 12:43:05.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.324" endtime="20201112 12:43:05.612"></status>
</kw>
<msg timestamp="20201112 12:43:05.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024072333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.322" endtime="20201112 12:43:05.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024072333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.616" endtime="20201112 12:43:05.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.624" endtime="20201112 12:43:05.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.319" endtime="20201112 12:43:05.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.318" endtime="20201112 12:43:05.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.631" level="INFO">${RESULT} = [{'time': 0.024072333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.115200000000304e-05, 'source_diff': 3.115200000000304e-05}, {'time': 0.024102972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.628" endtime="20201112 12:43:05.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.645" level="INFO">${ACCURACY} = {'source_diff': [3.115200000000304e-05, 2.065299999999895e-05, 2.5457999999999037e-05, 2.540300000000023e-05, 2.4458000000001506e-05, 2.3513999999998786e-05, 2.6346999999999482e-05, 2.3444000000000936...</msg>
<status status="PASS" starttime="20201112 12:43:05.632" endtime="20201112 12:43:05.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.649" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.648" endtime="20201112 12:43:05.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.651" level="INFO">VALUE: [3.115200000000304e-05, 2.065299999999895e-05, 2.5457999999999037e-05, 2.540300000000023e-05, 2.4458000000001506e-05, 2.3513999999998786e-05, 2.6346999999999482e-05, 2.3444000000000936e-05, 2.2542000000000395e-05, 2.638900000000166e-05, 2.637500000000209e-05, 2.4472000000001076e-05, 2.538900000000066e-05, 2.6333999999999386e-05, 2.4485999999997177e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.3541999999997926e-05, 2.4458000000001506e-05, 2.5443999999999467e-05, 2.059700000000067e-05, 2.062499999999981e-05, 2.2555999999999965e-05, 2.3528000000001825e-05, 2.6430000000000897e-05, 2.5443999999999467e-05, 2.344500000000041e-05, 2.2514000000001255e-05, 2.162500000000081e-05, 2.644499999999994e-05, 2.4485999999997177e-05, 2.4486000000000646e-05, 2.258299999999963e-05, 2.3513999999998786e-05, 2.1527999999999825e-05, 2.3514000000002255e-05, 2.256900000000006e-05, 2.638900000000166e-05, 2.1569999999998535e-05, 2.15830000000021e-05, 2.6374999999998622e-05, 2.4486000000000646e-05, 2.255500000000049e-05, 2.543099999999937e-05, 2.0665999999999046e-05, 2.062499999999981e-05, 2.066699999999852e-05, 2.537500000000109e-05, 2.64170000000008e-05, 2.161099999999777e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.650" endtime="20201112 12:43:05.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.645" endtime="20201112 12:43:05.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.655" endtime="20201112 12:43:05.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.659" endtime="20201112 12:43:05.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.657" endtime="20201112 12:43:05.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.653" endtime="20201112 12:43:05.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.281" endtime="20201112 12:43:05.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.281" endtime="20201112 12:43:05.679"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.688" endtime="20201112 12:43:05.707"></status>
</kw>
<msg timestamp="20201112 12:43:05.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.687" endtime="20201112 12:43:05.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.709" endtime="20201112 12:43:05.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.711" endtime="20201112 12:43:05.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.684" endtime="20201112 12:43:05.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.682" endtime="20201112 12:43:05.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.720" endtime="20201112 12:43:06.005"></status>
</kw>
<msg timestamp="20201112 12:43:06.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.719" endtime="20201112 12:43:06.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.009" endtime="20201112 12:43:06.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.018" endtime="20201112 12:43:06.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.716" endtime="20201112 12:43:06.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.714" endtime="20201112 12:43:06.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.024" level="INFO">${RESULT} = [{'time': 0.021818889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.544500000000241e-05, 'source_diff': 2.544500000000241e-05}, {'time': 0.021849444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.021" endtime="20201112 12:43:06.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.038" level="INFO">${ACCURACY} = {'source_diff': [2.544500000000241e-05, 2.0665999999999046e-05, 2.2485999999998646e-05, 2.3472000000000076e-05, 2.355500000000149e-05, 2.4554999999999022e-05, 2.065299999999895e-05, 2.537499999999762e...</msg>
<status status="PASS" starttime="20201112 12:43:06.025" endtime="20201112 12:43:06.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.042" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.041" endtime="20201112 12:43:06.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.045" level="INFO">VALUE: [2.544500000000241e-05, 2.0665999999999046e-05, 2.2485999999998646e-05, 2.3472000000000076e-05, 2.355500000000149e-05, 2.4554999999999022e-05, 2.065299999999895e-05, 2.537499999999762e-05, 2.3527999999998356e-05, 2.444500000000141e-05, 2.3528000000001825e-05, 2.345899999999998e-05, 2.059700000000067e-05, 2.540300000000023e-05, 2.6402000000001757e-05, 2.638899999999819e-05, 2.4458000000001506e-05, 2.3485999999999646e-05, 2.5388000000001187e-05, 2.2542000000000395e-05, 2.5429999999999897e-05, 2.3514000000002255e-05, 2.4485999999997177e-05, 2.3528000000001825e-05, 2.537500000000109e-05, 2.155499999999949e-05, 2.063899999999938e-05, 2.3499999999999216e-05, 2.255500000000049e-05, 2.544499999999894e-05, 2.1570000000002004e-05, 2.059700000000067e-05, 2.544499999999894e-05, 2.063899999999938e-05, 2.1570000000002004e-05, 1.966700000000099e-05, 2.0665999999999046e-05, 2.4472000000001076e-05, 2.3500000000002685e-05, 2.0611999999999714e-05, 2.4486000000000646e-05, 1.9679999999997616e-05, 2.4486000000000646e-05, 2.6319999999999816e-05, 2.3513999999998786e-05, 2.4500000000000216e-05, 2.638899999999819e-05, 2.543099999999937e-05, 2.062499999999981e-05, 2.345899999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.043" endtime="20201112 12:43:06.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.039" endtime="20201112 12:43:06.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.049" endtime="20201112 12:43:06.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.052" endtime="20201112 12:43:06.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.050" endtime="20201112 12:43:06.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.047" endtime="20201112 12:43:06.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.680" endtime="20201112 12:43:06.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.680" endtime="20201112 12:43:06.073"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.081" endtime="20201112 12:43:06.099"></status>
</kw>
<msg timestamp="20201112 12:43:06.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.080" endtime="20201112 12:43:06.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.100" endtime="20201112 12:43:06.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.103" endtime="20201112 12:43:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.077" endtime="20201112 12:43:06.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.075" endtime="20201112 12:43:06.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.112" endtime="20201112 12:43:06.400"></status>
</kw>
<msg timestamp="20201112 12:43:06.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.110" endtime="20201112 12:43:06.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.404" endtime="20201112 12:43:06.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.412" endtime="20201112 12:43:06.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.108" endtime="20201112 12:43:06.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.106" endtime="20201112 12:43:06.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.419" level="INFO">${RESULT} = [{'time': 0.020421514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2000000000001593e-05, 'source_diff': 1.2000000000001593e-05}, {'time': 0.020452639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.415" endtime="20201112 12:43:06.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.432" level="INFO">${ACCURACY} = {'source_diff': [1.2000000000001593e-05, 2.541700000000327e-05, 2.4472000000001076e-05, 2.063900000000285e-05, 2.447300000000055e-05, 2.061100000000024e-05, 2.538900000000066e-05, 2.641699999999733e-0...</msg>
<status status="PASS" starttime="20201112 12:43:06.420" endtime="20201112 12:43:06.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.437" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.436" endtime="20201112 12:43:06.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.439" level="INFO">VALUE: [1.2000000000001593e-05, 2.541700000000327e-05, 2.4472000000001076e-05, 2.063900000000285e-05, 2.447300000000055e-05, 2.061100000000024e-05, 2.538900000000066e-05, 2.641699999999733e-05, 2.356900000000106e-05, 2.1500000000000685e-05, 2.2500000000001685e-05, 2.540300000000023e-05, 2.64170000000008e-05, 2.062499999999981e-05, 2.440299999999923e-05, 2.2528000000000825e-05, 2.545899999999851e-05, 2.347299999999955e-05, 2.154099999999992e-05, 2.2528000000000825e-05, 2.258299999999963e-05, 2.638899999999819e-05, 2.2583999999999105e-05, 2.6361999999998526e-05, 2.1555999999998965e-05, 2.3499999999999216e-05, 2.638899999999819e-05, 2.261099999999877e-05, 2.634700000000295e-05, 2.6347999999998956e-05, 2.161099999999777e-05, 2.54169999999998e-05, 2.2485999999998646e-05, 2.5443999999999467e-05, 2.256900000000006e-05, 2.545900000000198e-05, 2.2555999999999965e-05, 2.445900000000098e-05, 2.261099999999877e-05, 2.255500000000049e-05, 2.543099999999937e-05, 2.156899999999906e-05, 2.063900000000285e-05, 2.443099999999837e-05, 2.2528000000000825e-05, 2.063900000000285e-05, 2.3513999999998786e-05, 2.6374999999998622e-05, 2.352700000000235e-05, 2.2514000000001255e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.438" endtime="20201112 12:43:06.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.433" endtime="20201112 12:43:06.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.443" endtime="20201112 12:43:06.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.446" endtime="20201112 12:43:06.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.444" endtime="20201112 12:43:06.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.441" endtime="20201112 12:43:06.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.074" endtime="20201112 12:43:06.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.073" endtime="20201112 12:43:06.467"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.476" endtime="20201112 12:43:06.498"></status>
</kw>
<msg timestamp="20201112 12:43:06.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.474" endtime="20201112 12:43:06.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.499" endtime="20201112 12:43:06.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.502" endtime="20201112 12:43:06.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.471" endtime="20201112 12:43:06.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.469" endtime="20201112 12:43:06.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.511" endtime="20201112 12:43:06.798"></status>
</kw>
<msg timestamp="20201112 12:43:06.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.509" endtime="20201112 12:43:06.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.802" endtime="20201112 12:43:06.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.811" endtime="20201112 12:43:06.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.507" endtime="20201112 12:43:06.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.505" endtime="20201112 12:43:06.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.817" level="INFO">${RESULT} = [{'time': 0.023052639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5931000000000278e-05, 'source_diff': 1.5931000000000278e-05}, {'time': 0.023083028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.814" endtime="20201112 12:43:06.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.831" level="INFO">${ACCURACY} = {'source_diff': [1.5931000000000278e-05, 2.640299999999776e-05, 2.2569999999999535e-05, 2.6346999999999482e-05, 2.3415999999998327e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.3584000000000105...</msg>
<status status="PASS" starttime="20201112 12:43:06.818" endtime="20201112 12:43:06.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.836" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.834" endtime="20201112 12:43:06.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.838" level="INFO">VALUE: [1.5931000000000278e-05, 2.640299999999776e-05, 2.2569999999999535e-05, 2.6346999999999482e-05, 2.3415999999998327e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.3584000000000105e-05, 2.3513999999998786e-05, 2.438899999999966e-05, 2.2527999999997356e-05, 2.445900000000098e-05, 2.3485999999999646e-05, 2.063899999999938e-05, 1.97089999999997e-05, 2.254100000000092e-05, 2.162499999999734e-05, 2.345899999999998e-05, 2.540300000000023e-05, 1.962499999999881e-05, 2.0666000000002516e-05, 2.54169999999998e-05, 2.4555999999998496e-05, 2.255500000000049e-05, 2.2569999999999535e-05, 2.063899999999938e-05, 2.065300000000242e-05, 2.538900000000066e-05, 2.2542000000000395e-05, 2.25830000000031e-05, 2.3541999999997926e-05, 2.637500000000209e-05, 2.063899999999938e-05, 2.4443999999998467e-05, 2.2555999999999965e-05, 2.6319000000000342e-05, 2.4458000000001506e-05, 2.4429999999998897e-05, 2.159700000000167e-05, 2.256900000000006e-05, 2.351300000000278e-05, 2.255500000000049e-05, 2.638899999999819e-05, 2.441700000000227e-05, 2.537499999999762e-05, 2.256900000000006e-05, 2.5485999999998177e-05, 2.4457999999998037e-05, 2.2472000000002545e-05, 2.0665999999999046e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.837" endtime="20201112 12:43:06.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.832" endtime="20201112 12:43:06.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.842" endtime="20201112 12:43:06.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.845" endtime="20201112 12:43:06.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.844" endtime="20201112 12:43:06.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.840" endtime="20201112 12:43:06.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.468" endtime="20201112 12:43:06.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.467" endtime="20201112 12:43:06.866"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.875" endtime="20201112 12:43:06.893"></status>
</kw>
<msg timestamp="20201112 12:43:06.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.873" endtime="20201112 12:43:06.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.895" endtime="20201112 12:43:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.897" endtime="20201112 12:43:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.870" endtime="20201112 12:43:06.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.868" endtime="20201112 12:43:06.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.906" endtime="20201112 12:43:07.193"></status>
</kw>
<msg timestamp="20201112 12:43:07.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:06.905" endtime="20201112 12:43:07.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:07.198" endtime="20201112 12:43:07.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.207" endtime="20201112 12:43:07.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.902" endtime="20201112 12:43:07.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.900" endtime="20201112 12:43:07.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.214" level="INFO">${RESULT} = [{'time': 0.0208915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9708000000000225e-05, 'source_diff': 1.9708000000000225e-05}, {'time': 0.020921986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.210" endtime="20201112 12:43:07.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.227" level="INFO">${ACCURACY} = {'source_diff': [1.9708000000000225e-05, 2.4458000000001506e-05, 2.355500000000149e-05, 2.1666000000000046e-05, 2.063899999999938e-05, 2.3500000000002685e-05, 2.445900000000098e-05, 2.540300000000023e...</msg>
<status status="PASS" starttime="20201112 12:43:07.215" endtime="20201112 12:43:07.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.232" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.231" endtime="20201112 12:43:07.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.234" level="INFO">VALUE: [1.9708000000000225e-05, 2.4458000000001506e-05, 2.355500000000149e-05, 2.1666000000000046e-05, 2.063899999999938e-05, 2.3500000000002685e-05, 2.445900000000098e-05, 2.540300000000023e-05, 2.0651999999999476e-05, 2.3527999999998356e-05, 2.0652000000002946e-05, 2.161099999999777e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.15969999999982e-05, 2.4429999999998897e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.440299999999923e-05, 2.2499999999998216e-05, 2.4513999999999786e-05, 2.445900000000098e-05, 2.4444000000001936e-05, 2.161100000000124e-05, 2.062499999999981e-05, 2.3485999999999646e-05, 2.162500000000081e-05, 1.9708000000000225e-05, 2.3542000000001395e-05, 2.448700000000012e-05, 2.3528000000001825e-05, 2.255500000000049e-05, 2.3513999999998786e-05, 2.062499999999981e-05, 2.0611999999999714e-05, 2.5416000000000327e-05, 2.265300000000095e-05, 2.3542000000001395e-05, 2.4472000000001076e-05, 2.6332999999999912e-05, 2.544500000000241e-05, 2.063899999999938e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.6374999999998622e-05, 2.065299999999895e-05, 2.1556000000002434e-05, 2.4458000000001506e-05, 2.063899999999938e-05, 2.065299999999895e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.233" endtime="20201112 12:43:07.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.228" endtime="20201112 12:43:07.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.238" endtime="20201112 12:43:07.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.241" endtime="20201112 12:43:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.239" endtime="20201112 12:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.236" endtime="20201112 12:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.867" endtime="20201112 12:43:07.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.866" endtime="20201112 12:43:07.262"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.270" endtime="20201112 12:43:07.290"></status>
</kw>
<msg timestamp="20201112 12:43:07.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.269" endtime="20201112 12:43:07.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.291" endtime="20201112 12:43:07.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.294" endtime="20201112 12:43:07.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.266" endtime="20201112 12:43:07.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.264" endtime="20201112 12:43:07.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.303" endtime="20201112 12:43:07.590"></status>
</kw>
<msg timestamp="20201112 12:43:07.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:07.301" endtime="20201112 12:43:07.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:07.595" endtime="20201112 12:43:07.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.603" endtime="20201112 12:43:07.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.299" endtime="20201112 12:43:07.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.297" endtime="20201112 12:43:07.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.610" level="INFO">${RESULT} = [{'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.113899999999947e-05, 'source_diff': 3.113899999999947e-05}, {'time': 0.02208675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:07.606" endtime="20201112 12:43:07.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.623" level="INFO">${ACCURACY} = {'source_diff': [3.113899999999947e-05, 2.062499999999981e-05, 2.4401999999999757e-05, 2.3528000000001825e-05, 2.44169999999988e-05, 2.444499999999794e-05, 1.970900000000317e-05, 2.3458000000000506e-0...</msg>
<status status="PASS" starttime="20201112 12:43:07.611" endtime="20201112 12:43:07.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.628" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.626" endtime="20201112 12:43:07.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.630" level="INFO">VALUE: [3.113899999999947e-05, 2.062499999999981e-05, 2.4401999999999757e-05, 2.3528000000001825e-05, 2.44169999999988e-05, 2.444499999999794e-05, 1.970900000000317e-05, 2.3458000000000506e-05, 2.156899999999906e-05, 2.2499999999998216e-05, 2.063899999999938e-05, 2.163900000000038e-05, 2.4513999999999786e-05, 2.3542000000001395e-05, 2.2542000000000395e-05, 2.2499999999998216e-05, 2.062499999999981e-05, 2.4472000000001076e-05, 2.1569999999998535e-05, 2.3471999999996607e-05, 2.644499999999994e-05, 2.158299999999863e-05, 2.3472000000000076e-05, 2.441700000000227e-05, 2.356900000000106e-05, 2.063899999999938e-05, 2.0611999999999714e-05, 2.1570000000002004e-05, 2.54169999999998e-05, 2.3500000000002685e-05, 2.6374999999998622e-05, 2.3485999999999646e-05, 2.54169999999998e-05, 2.25969999999992e-05, 2.544499999999894e-05, 2.444499999999794e-05, 2.5429999999999897e-05, 2.5416000000000327e-05, 2.544499999999894e-05, 2.640300000000123e-05, 2.2569999999999535e-05, 2.156899999999906e-05, 2.4457999999998037e-05, 2.4472000000001076e-05, 2.158299999999863e-05, 2.15969999999982e-05, 2.437500000000009e-05, 2.543100000000284e-05, 2.445900000000098e-05, 2.338899999999866e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.629" endtime="20201112 12:43:07.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.624" endtime="20201112 12:43:07.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.634" endtime="20201112 12:43:07.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.637" endtime="20201112 12:43:07.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.635" endtime="20201112 12:43:07.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.632" endtime="20201112 12:43:07.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.263" endtime="20201112 12:43:07.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.262" endtime="20201112 12:43:07.658"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.666" endtime="20201112 12:43:07.689"></status>
</kw>
<msg timestamp="20201112 12:43:07.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.665" endtime="20201112 12:43:07.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.690" endtime="20201112 12:43:07.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.693" endtime="20201112 12:43:07.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.662" endtime="20201112 12:43:07.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.660" endtime="20201112 12:43:07.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.702" endtime="20201112 12:43:07.988"></status>
</kw>
<msg timestamp="20201112 12:43:07.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.700" endtime="20201112 12:43:07.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.993" endtime="20201112 12:43:08.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.001" endtime="20201112 12:43:08.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.698" endtime="20201112 12:43:08.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.696" endtime="20201112 12:43:08.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.008" level="INFO">${RESULT} = [{'time': 0.022886389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.065299999999895e-05, 'source_diff': 2.065299999999895e-05}, {'time': 0.022917236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.004" endtime="20201112 12:43:08.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.021" level="INFO">${ACCURACY} = {'source_diff': [2.065299999999895e-05, 2.2528000000000825e-05, 2.444500000000141e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.5443999999999467e-05, 2.352700000000235e-05, 2.156899999999906e-0...</msg>
<status status="PASS" starttime="20201112 12:43:08.009" endtime="20201112 12:43:08.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.026" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.025" endtime="20201112 12:43:08.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.028" level="INFO">VALUE: [2.065299999999895e-05, 2.2528000000000825e-05, 2.444500000000141e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.5443999999999467e-05, 2.352700000000235e-05, 2.156899999999906e-05, 2.256900000000006e-05, 2.2569999999999535e-05, 2.256900000000006e-05, 2.4401999999999757e-05, 2.444500000000141e-05, 2.063900000000285e-05, 2.3541999999997926e-05, 1.9708000000000225e-05, 2.3528000000001825e-05, 2.443099999999837e-05, 2.4415999999999327e-05, 2.4443999999998467e-05, 2.162500000000081e-05, 2.5472000000002076e-05, 2.2555999999999965e-05, 2.1570000000002004e-05, 2.2540999999997452e-05, 2.255500000000049e-05, 2.2584000000002574e-05, 2.340299999999823e-05, 2.061100000000024e-05, 2.2583999999999105e-05, 2.354100000000192e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.1598000000001144e-05, 2.158299999999863e-05, 2.3527999999998356e-05, 2.4513999999999786e-05, 2.2513999999997786e-05, 2.540300000000023e-05, 2.3582999999997162e-05, 2.3513999999998786e-05, 2.061100000000024e-05, 2.3486000000003115e-05, 2.6374999999998622e-05, 2.54169999999998e-05, 2.4472000000001076e-05, 1.9694000000000655e-05, 2.156899999999906e-05, 2.6333999999999386e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.027" endtime="20201112 12:43:08.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.022" endtime="20201112 12:43:08.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.036" endtime="20201112 12:43:08.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.040" endtime="20201112 12:43:08.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.038" endtime="20201112 12:43:08.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.035" endtime="20201112 12:43:08.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.659" endtime="20201112 12:43:08.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.658" endtime="20201112 12:43:08.061"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.069" endtime="20201112 12:43:08.088"></status>
</kw>
<msg timestamp="20201112 12:43:08.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.068" endtime="20201112 12:43:08.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.090" endtime="20201112 12:43:08.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.092" endtime="20201112 12:43:08.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.065" endtime="20201112 12:43:08.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.063" endtime="20201112 12:43:08.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.101" endtime="20201112 12:43:08.389"></status>
</kw>
<msg timestamp="20201112 12:43:08.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.099" endtime="20201112 12:43:08.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.393" endtime="20201112 12:43:08.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.401" endtime="20201112 12:43:08.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.097" endtime="20201112 12:43:08.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.095" endtime="20201112 12:43:08.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.408" level="INFO">${RESULT} = [{'time': 0.022067278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.544499999999894e-05, 'source_diff': 2.544499999999894e-05}, {'time': 0.022098264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.405" endtime="20201112 12:43:08.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.422" level="INFO">${ACCURACY} = {'source_diff': [2.544499999999894e-05, 2.05830000000011e-05, 2.254100000000092e-05, 2.5443999999999467e-05, 2.1597999999997675e-05, 2.538900000000066e-05, 2.1569999999998535e-05, 2.540300000000023e-0...</msg>
<status status="PASS" starttime="20201112 12:43:08.409" endtime="20201112 12:43:08.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.426" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.425" endtime="20201112 12:43:08.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.428" level="INFO">VALUE: [2.544499999999894e-05, 2.05830000000011e-05, 2.254100000000092e-05, 2.5443999999999467e-05, 2.1597999999997675e-05, 2.538900000000066e-05, 2.1569999999998535e-05, 2.540300000000023e-05, 2.161099999999777e-05, 2.638900000000166e-05, 2.544499999999894e-05, 2.540300000000023e-05, 2.434700000000095e-05, 2.44169999999988e-05, 2.3472000000000076e-05, 1.968100000000056e-05, 2.5443999999999467e-05, 2.3527999999998356e-05, 2.638899999999819e-05, 2.2528000000000825e-05, 2.3540999999998452e-05, 2.159700000000167e-05, 2.255500000000049e-05, 2.2597999999998675e-05, 2.5485999999998177e-05, 2.158299999999863e-05, 2.3472000000000076e-05, 2.063899999999938e-05, 2.3444000000000936e-05, 2.3458000000000506e-05, 2.545899999999851e-05, 2.5402000000000757e-05, 2.2499999999998216e-05, 2.638900000000166e-05, 2.448700000000012e-05, 2.05830000000011e-05, 2.061100000000024e-05, 2.3527999999998356e-05, 2.3528000000001825e-05, 2.638900000000166e-05, 2.6374999999998622e-05, 2.05830000000011e-05, 2.155499999999949e-05, 2.25830000000031e-05, 2.54169999999998e-05, 2.1583999999998105e-05, 2.343099999999737e-05, 2.256900000000006e-05, 2.3499999999999216e-05, 2.2485999999998646e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.427" endtime="20201112 12:43:08.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.422" endtime="20201112 12:43:08.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.432" endtime="20201112 12:43:08.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.435" endtime="20201112 12:43:08.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.434" endtime="20201112 12:43:08.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.430" endtime="20201112 12:43:08.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.062" endtime="20201112 12:43:08.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.061" endtime="20201112 12:43:08.456"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.465" endtime="20201112 12:43:08.486"></status>
</kw>
<msg timestamp="20201112 12:43:08.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.464" endtime="20201112 12:43:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.487" endtime="20201112 12:43:08.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.490" endtime="20201112 12:43:08.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.461" endtime="20201112 12:43:08.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.459" endtime="20201112 12:43:08.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.499" endtime="20201112 12:43:08.787"></status>
</kw>
<msg timestamp="20201112 12:43:08.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023202764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.497" endtime="20201112 12:43:08.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023202764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.791" endtime="20201112 12:43:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.800" endtime="20201112 12:43:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.495" endtime="20201112 12:43:08.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.493" endtime="20201112 12:43:08.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.806" level="INFO">${RESULT} = [{'time': 0.023202764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.02323275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:08.803" endtime="20201112 12:43:08.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.819" level="INFO">${ACCURACY} = {'source_diff': [3.21250000000009e-05, 1.9708000000000225e-05, 2.256900000000006e-05, 2.3514000000002255e-05, 2.6374999999998622e-05, 2.0637999999999906e-05, 2.2499999999998216e-05, 2.1652000000000476...</msg>
<status status="PASS" starttime="20201112 12:43:08.807" endtime="20201112 12:43:08.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.824" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.823" endtime="20201112 12:43:08.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.826" level="INFO">VALUE: [3.21250000000009e-05, 1.9708000000000225e-05, 2.256900000000006e-05, 2.3514000000002255e-05, 2.6374999999998622e-05, 2.0637999999999906e-05, 2.2499999999998216e-05, 2.1652000000000476e-05, 2.063899999999938e-05, 2.161100000000124e-05, 2.162500000000081e-05, 2.261099999999877e-05, 2.355500000000149e-05, 2.538900000000066e-05, 2.3485999999999646e-05, 2.256900000000006e-05, 2.063899999999938e-05, 2.5514000000000786e-05, 2.3540999999998452e-05, 2.162500000000081e-05, 2.4457999999998037e-05, 2.4500000000000216e-05, 2.155499999999949e-05, 2.4457999999998037e-05, 2.5430000000003367e-05, 2.5429999999999897e-05, 2.066699999999852e-05, 2.161100000000124e-05, 2.258299999999963e-05, 2.15969999999982e-05, 2.4458000000001506e-05, 1.9638000000002376e-05, 2.0584000000000574e-05, 2.2527999999997356e-05, 2.637500000000209e-05, 2.637500000000209e-05, 2.062499999999981e-05, 2.4500000000000216e-05, 2.062499999999981e-05, 2.4500000000000216e-05, 2.061099999999677e-05, 2.448700000000012e-05, 2.1541999999999395e-05, 2.162499999999734e-05, 2.3500000000002685e-05, 2.5458000000002506e-05, 2.638900000000166e-05, 2.255500000000049e-05, 2.159700000000167e-05, 2.4486000000000646e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.825" endtime="20201112 12:43:08.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.820" endtime="20201112 12:43:08.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.830" endtime="20201112 12:43:08.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.833" endtime="20201112 12:43:08.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.832" endtime="20201112 12:43:08.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.828" endtime="20201112 12:43:08.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.457" endtime="20201112 12:43:08.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.457" endtime="20201112 12:43:08.854"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.863" endtime="20201112 12:43:08.883"></status>
</kw>
<msg timestamp="20201112 12:43:08.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.861" endtime="20201112 12:43:08.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.884" endtime="20201112 12:43:08.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.887" endtime="20201112 12:43:08.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.859" endtime="20201112 12:43:08.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.857" endtime="20201112 12:43:08.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.896" endtime="20201112 12:43:09.183"></status>
</kw>
<msg timestamp="20201112 12:43:09.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.894" endtime="20201112 12:43:09.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.187" endtime="20201112 12:43:09.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.196" endtime="20201112 12:43:09.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.892" endtime="20201112 12:43:09.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.890" endtime="20201112 12:43:09.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.202" level="INFO">${RESULT} = [{'time': 0.022292514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.594499999999903e-05, 'source_diff': 3.594499999999903e-05}, {'time': 0.022322556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:09.199" endtime="20201112 12:43:09.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.216" level="INFO">${ACCURACY} = {'source_diff': [3.594499999999903e-05, 2.1612000000000714e-05, 2.6319999999999816e-05, 2.4443999999998467e-05, 2.543099999999937e-05, 2.448700000000012e-05, 2.638900000000166e-05, 2.348699999999912e-...</msg>
<status status="PASS" starttime="20201112 12:43:09.203" endtime="20201112 12:43:09.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.220" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.219" endtime="20201112 12:43:09.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.223" level="INFO">VALUE: [3.594499999999903e-05, 2.1612000000000714e-05, 2.6319999999999816e-05, 2.4443999999998467e-05, 2.543099999999937e-05, 2.448700000000012e-05, 2.638900000000166e-05, 2.348699999999912e-05, 2.4499999999996747e-05, 2.254100000000092e-05, 2.4457999999998037e-05, 2.5486000000001646e-05, 2.54169999999998e-05, 2.1569999999998535e-05, 2.44169999999988e-05, 2.159700000000167e-05, 2.345899999999998e-05, 2.258299999999963e-05, 2.5443999999999467e-05, 2.062499999999981e-05, 1.9638000000002376e-05, 2.4415999999999327e-05, 2.54169999999998e-05, 2.25969999999992e-05, 1.968099999999709e-05, 2.1569999999998535e-05, 2.2514000000001255e-05, 2.3526999999998882e-05, 2.4471999999997607e-05, 2.443099999999837e-05, 2.061100000000024e-05, 2.4471999999997607e-05, 2.2527999999997356e-05, 2.6346999999999482e-05, 2.443099999999837e-05, 2.544500000000241e-05, 2.5429999999999897e-05, 2.544500000000241e-05, 2.354100000000192e-05, 2.6319999999999816e-05, 2.1584000000001574e-05, 2.2583999999999105e-05, 2.5429999999999897e-05, 2.261099999999877e-05, 2.634700000000295e-05, 2.2569999999999535e-05, 2.158299999999863e-05, 2.3485999999999646e-05, 2.15830000000021e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.221" endtime="20201112 12:43:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.217" endtime="20201112 12:43:09.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.226" endtime="20201112 12:43:09.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.230" endtime="20201112 12:43:09.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.229" endtime="20201112 12:43:09.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.225" endtime="20201112 12:43:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.855" endtime="20201112 12:43:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.855" endtime="20201112 12:43:09.251"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.260" endtime="20201112 12:43:09.279"></status>
</kw>
<msg timestamp="20201112 12:43:09.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.258" endtime="20201112 12:43:09.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.281" endtime="20201112 12:43:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.283" endtime="20201112 12:43:09.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.256" endtime="20201112 12:43:09.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.254" endtime="20201112 12:43:09.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.292" endtime="20201112 12:43:09.580"></status>
</kw>
<msg timestamp="20201112 12:43:09.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.291" endtime="20201112 12:43:09.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.584" endtime="20201112 12:43:09.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.592" endtime="20201112 12:43:09.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.288" endtime="20201112 12:43:09.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.287" endtime="20201112 12:43:09.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.599" level="INFO">${RESULT} = [{'time': 0.022206389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.022237, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:09.596" endtime="20201112 12:43:09.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.612" level="INFO">${ACCURACY} = {'source_diff': [1.2958000000000414e-05, 2.158299999999863e-05, 2.3458000000000506e-05, 2.640300000000123e-05, 2.4415999999999327e-05, 1.966700000000099e-05, 2.6362000000001995e-05, 2.638900000000166e...</msg>
<status status="PASS" starttime="20201112 12:43:09.600" endtime="20201112 12:43:09.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.617" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.616" endtime="20201112 12:43:09.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.619" level="INFO">VALUE: [1.2958000000000414e-05, 2.158299999999863e-05, 2.3458000000000506e-05, 2.640300000000123e-05, 2.4415999999999327e-05, 1.966700000000099e-05, 2.6362000000001995e-05, 2.638900000000166e-05, 2.3457999999997037e-05, 2.1569999999998535e-05, 2.638899999999819e-05, 2.062499999999981e-05, 2.063899999999938e-05, 2.6305000000000772e-05, 2.065299999999895e-05, 2.2540999999997452e-05, 2.2569999999999535e-05, 2.4472000000001076e-05, 2.345899999999998e-05, 2.158299999999863e-05, 2.5443999999999467e-05, 2.358300000000063e-05, 2.155499999999949e-05, 2.3514000000002255e-05, 2.3500000000002685e-05, 2.6387999999998718e-05, 2.15969999999982e-05, 2.1542000000002864e-05, 2.1598000000001144e-05, 2.161100000000124e-05, 2.063899999999938e-05, 2.3514000000002255e-05, 2.1584000000001574e-05, 2.441700000000227e-05, 2.4457999999998037e-05, 2.162499999999734e-05, 2.6332999999999912e-05, 2.252700000000135e-05, 2.162500000000081e-05, 2.065300000000242e-05, 2.0556000000001434e-05, 2.637500000000209e-05, 2.3514000000002255e-05, 2.4486000000000646e-05, 2.1541999999999395e-05, 2.444499999999794e-05, 2.165299999999995e-05, 2.15830000000021e-05, 2.159700000000167e-05, 2.2528000000000825e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.618" endtime="20201112 12:43:09.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.613" endtime="20201112 12:43:09.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.623" endtime="20201112 12:43:09.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.626" endtime="20201112 12:43:09.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.625" endtime="20201112 12:43:09.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.621" endtime="20201112 12:43:09.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.252" endtime="20201112 12:43:09.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.252" endtime="20201112 12:43:09.647"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.656" endtime="20201112 12:43:09.676"></status>
</kw>
<msg timestamp="20201112 12:43:09.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.654" endtime="20201112 12:43:09.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.678" endtime="20201112 12:43:09.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.680" endtime="20201112 12:43:09.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.652" endtime="20201112 12:43:09.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.650" endtime="20201112 12:43:09.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.689" endtime="20201112 12:43:09.976"></status>
</kw>
<msg timestamp="20201112 12:43:09.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:09.688" endtime="20201112 12:43:09.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:09.980" endtime="20201112 12:43:09.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.989" endtime="20201112 12:43:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.685" endtime="20201112 12:43:09.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.684" endtime="20201112 12:43:09.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.995" level="INFO">${RESULT} = [{'time': 0.023067, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.581900000000025e-05, 'source_diff': 1.581900000000025e-05}, {'time': 0.023097375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:09.992" endtime="20201112 12:43:09.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.009" level="INFO">${ACCURACY} = {'source_diff': [1.581900000000025e-05, 2.3513999999998786e-05, 2.161099999999777e-05, 2.5443999999999467e-05, 2.2514000000001255e-05, 2.537500000000109e-05, 2.25969999999992e-05, 2.4556000000001965e-...</msg>
<status status="PASS" starttime="20201112 12:43:09.996" endtime="20201112 12:43:10.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.013" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.012" endtime="20201112 12:43:10.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.016" level="INFO">VALUE: [1.581900000000025e-05, 2.3513999999998786e-05, 2.161099999999777e-05, 2.5443999999999467e-05, 2.2514000000001255e-05, 2.537500000000109e-05, 2.25969999999992e-05, 2.4556000000001965e-05, 2.063899999999938e-05, 2.2555999999999965e-05, 2.44169999999988e-05, 2.345899999999998e-05, 2.5429999999999897e-05, 2.065299999999895e-05, 2.4500000000000216e-05, 1.9708000000000225e-05, 2.7333000000000912e-05, 2.15969999999982e-05, 2.638899999999819e-05, 2.543099999999937e-05, 2.3513999999998786e-05, 2.2569999999999535e-05, 2.252700000000135e-05, 2.538900000000066e-05, 2.2555999999999965e-05, 2.4429999999998897e-05, 2.2514000000001255e-05, 2.059700000000067e-05, 2.445900000000098e-05, 2.161100000000124e-05, 2.2542000000000395e-05, 1.9694000000000655e-05, 2.54169999999998e-05, 2.066700000000199e-05, 2.1569999999998535e-05, 2.443099999999837e-05, 2.638900000000166e-05, 2.3542000000001395e-05, 2.162499999999734e-05, 2.4541999999998926e-05, 2.15830000000021e-05, 2.061100000000024e-05, 2.3499999999999216e-05, 2.0665999999999046e-05, 2.6360999999999052e-05, 2.2500000000001685e-05, 2.2542000000000395e-05, 2.3514000000002255e-05, 1.9651999999998476e-05, 2.3499999999999216e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.015" endtime="20201112 12:43:10.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.010" endtime="20201112 12:43:10.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.020" endtime="20201112 12:43:10.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.023" endtime="20201112 12:43:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.021" endtime="20201112 12:43:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.018" endtime="20201112 12:43:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.648" endtime="20201112 12:43:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.648" endtime="20201112 12:43:10.045"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.053" endtime="20201112 12:43:10.073"></status>
</kw>
<msg timestamp="20201112 12:43:10.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.052" endtime="20201112 12:43:10.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.074" endtime="20201112 12:43:10.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.077" endtime="20201112 12:43:10.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.049" endtime="20201112 12:43:10.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.047" endtime="20201112 12:43:10.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.085" endtime="20201112 12:43:10.374"></status>
</kw>
<msg timestamp="20201112 12:43:10.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.084" endtime="20201112 12:43:10.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.378" endtime="20201112 12:43:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.386" endtime="20201112 12:43:10.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.081" endtime="20201112 12:43:10.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.080" endtime="20201112 12:43:10.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.393" level="INFO">${RESULT} = [{'time': 0.023347222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.962500000000228e-05, 'source_diff': 1.962500000000228e-05}, {'time': 0.023377806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.390" endtime="20201112 12:43:10.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.406" level="INFO">${ACCURACY} = {'source_diff': [1.962500000000228e-05, 2.2569999999999535e-05, 2.3486000000003115e-05, 2.2527999999997356e-05, 2.4472000000001076e-05, 2.354100000000192e-05, 2.2513999999997786e-05, 2.541600000000032...</msg>
<status status="PASS" starttime="20201112 12:43:10.394" endtime="20201112 12:43:10.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.411" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.410" endtime="20201112 12:43:10.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.413" level="INFO">VALUE: [1.962500000000228e-05, 2.2569999999999535e-05, 2.3486000000003115e-05, 2.2527999999997356e-05, 2.4472000000001076e-05, 2.354100000000192e-05, 2.2513999999997786e-05, 2.5416000000000327e-05, 2.3542000000001395e-05, 2.3500000000002685e-05, 2.055500000000196e-05, 2.3458000000000506e-05, 2.161100000000124e-05, 2.638899999999819e-05, 2.4429999999998897e-05, 2.15969999999982e-05, 2.5499999999997747e-05, 2.061099999999677e-05, 2.6333999999999386e-05, 2.4486000000000646e-05, 2.0652000000002946e-05, 2.543100000000284e-05, 2.4443999999998467e-05, 2.347299999999955e-05, 2.161100000000124e-05, 1.9694000000000655e-05, 2.065300000000242e-05, 2.4443999999998467e-05, 1.9708000000000225e-05, 2.638900000000166e-05, 2.6346999999999482e-05, 2.063899999999938e-05, 2.3513999999998786e-05, 2.1541999999999395e-05, 2.15830000000021e-05, 2.2513999999997786e-05, 2.1598000000001144e-05, 2.5443999999999467e-05, 2.2485999999998646e-05, 2.6360999999999052e-05, 2.1527999999999825e-05, 2.54169999999998e-05, 2.162499999999734e-05, 2.54169999999998e-05, 2.2527999999997356e-05, 2.345899999999998e-05, 2.251300000000178e-05, 2.2540999999997452e-05, 2.15969999999982e-05, 2.063899999999938e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.412" endtime="20201112 12:43:10.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.407" endtime="20201112 12:43:10.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.417" endtime="20201112 12:43:10.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.420" endtime="20201112 12:43:10.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.419" endtime="20201112 12:43:10.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.415" endtime="20201112 12:43:10.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.045" endtime="20201112 12:43:10.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.045" endtime="20201112 12:43:10.441"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.450" endtime="20201112 12:43:10.470"></status>
</kw>
<msg timestamp="20201112 12:43:10.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.448" endtime="20201112 12:43:10.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.472" endtime="20201112 12:43:10.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.474" endtime="20201112 12:43:10.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.446" endtime="20201112 12:43:10.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.443" endtime="20201112 12:43:10.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.483" endtime="20201112 12:43:10.771"></status>
</kw>
<msg timestamp="20201112 12:43:10.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.482" endtime="20201112 12:43:10.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.775" endtime="20201112 12:43:10.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.783" endtime="20201112 12:43:10.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.479" endtime="20201112 12:43:10.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.478" endtime="20201112 12:43:10.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.790" level="INFO">${RESULT} = [{'time': 0.023078375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.023108861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:10.787" endtime="20201112 12:43:10.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.803" level="INFO">${ACCURACY} = {'source_diff': [2.2542000000000395e-05, 2.4458000000001506e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.5402000000000757e-05, 2.6346999999999482e-05, 2.5402000000000757e-05, 2.0637999999999...</msg>
<status status="PASS" starttime="20201112 12:43:10.791" endtime="20201112 12:43:10.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.808" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.807" endtime="20201112 12:43:10.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.810" level="INFO">VALUE: [2.2542000000000395e-05, 2.4458000000001506e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.5402000000000757e-05, 2.6346999999999482e-05, 2.5402000000000757e-05, 2.0637999999999906e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.3541999999997926e-05, 2.444499999999794e-05, 2.537500000000109e-05, 2.061100000000024e-05, 2.3514000000002255e-05, 2.54169999999998e-05, 2.640299999999776e-05, 2.6318999999996873e-05, 2.2513999999997786e-05, 2.5457999999999037e-05, 2.4457999999998037e-05, 2.4415999999999327e-05, 2.05969999999972e-05, 1.9708000000000225e-05, 2.5457999999999037e-05, 2.4472000000001076e-05, 2.54169999999998e-05, 2.059700000000067e-05, 1.966700000000099e-05, 2.154099999999992e-05, 2.3485999999999646e-05, 2.5443999999999467e-05, 2.162500000000081e-05, 2.441700000000227e-05, 2.44030000000027e-05, 2.6415999999997858e-05, 2.638899999999819e-05, 2.1583999999998105e-05, 2.3485999999999646e-05, 2.4513999999999786e-05, 2.063899999999938e-05, 2.258299999999963e-05, 2.061100000000024e-05, 2.156899999999906e-05, 2.444500000000141e-05, 2.0665999999999046e-05, 2.447299999999708e-05, 2.2541999999996926e-05, 2.638899999999819e-05, 2.062500000000328e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.809" endtime="20201112 12:43:10.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.804" endtime="20201112 12:43:10.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.814" endtime="20201112 12:43:10.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.817" endtime="20201112 12:43:10.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.816" endtime="20201112 12:43:10.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.812" endtime="20201112 12:43:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.442" endtime="20201112 12:43:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.441" endtime="20201112 12:43:10.838"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.847" endtime="20201112 12:43:10.869"></status>
</kw>
<msg timestamp="20201112 12:43:10.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.845" endtime="20201112 12:43:10.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.870" endtime="20201112 12:43:10.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.872" endtime="20201112 12:43:10.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.843" endtime="20201112 12:43:10.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.841" endtime="20201112 12:43:10.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.881" endtime="20201112 12:43:11.167"></status>
</kw>
<msg timestamp="20201112 12:43:11.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.880" endtime="20201112 12:43:11.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.171" endtime="20201112 12:43:11.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.179" endtime="20201112 12:43:11.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.877" endtime="20201112 12:43:11.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.876" endtime="20201112 12:43:11.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.186" level="INFO">${RESULT} = [{'time': 0.022626778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0221999999999888e-05, 'source_diff': 3.0221999999999888e-05}, {'time': 0.022656931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.183" endtime="20201112 12:43:11.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.200" level="INFO">${ACCURACY} = {'source_diff': [3.0221999999999888e-05, 2.1612000000000714e-05, 2.1598000000001144e-05, 2.1500000000000685e-05, 2.1541999999999395e-05, 2.2542000000000395e-05, 2.6346999999999482e-05, 2.5416999999999...</msg>
<status status="PASS" starttime="20201112 12:43:11.187" endtime="20201112 12:43:11.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.204" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.203" endtime="20201112 12:43:11.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.207" level="INFO">VALUE: [3.0221999999999888e-05, 2.1612000000000714e-05, 2.1598000000001144e-05, 2.1500000000000685e-05, 2.1541999999999395e-05, 2.2542000000000395e-05, 2.6346999999999482e-05, 2.54169999999998e-05, 2.1486000000001115e-05, 2.063900000000285e-05, 2.4472000000001076e-05, 2.2555999999999965e-05, 2.5416000000000327e-05, 2.3485999999999646e-05, 2.0665999999999046e-05, 2.061100000000024e-05, 2.636100000000252e-05, 2.2542000000000395e-05, 2.0665999999999046e-05, 2.15830000000021e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.356900000000106e-05, 2.5500000000001216e-05, 2.540300000000023e-05, 2.638899999999819e-05, 2.440299999999923e-05, 2.6332999999999912e-05, 2.1528000000003295e-05, 2.2569999999999535e-05, 2.6319000000000342e-05, 2.061100000000024e-05, 2.2528000000000825e-05, 2.6332999999999912e-05, 2.1584000000001574e-05, 2.638900000000166e-05, 2.5429999999999897e-05, 2.538900000000066e-05, 2.1541999999999395e-05, 2.356900000000106e-05, 2.2542000000000395e-05, 2.158299999999863e-05, 2.441700000000227e-05, 2.2528000000000825e-05, 2.537500000000109e-05, 2.0721999999997326e-05, 2.640299999999776e-05, 2.3472000000000076e-05, 2.2555999999999965e-05, 1.9666000000001516e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.205" endtime="20201112 12:43:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.200" endtime="20201112 12:43:11.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.210" endtime="20201112 12:43:11.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.214" endtime="20201112 12:43:11.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.212" endtime="20201112 12:43:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.208" endtime="20201112 12:43:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.839" endtime="20201112 12:43:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.839" endtime="20201112 12:43:11.235"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.243" endtime="20201112 12:43:11.264"></status>
</kw>
<msg timestamp="20201112 12:43:11.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.242" endtime="20201112 12:43:11.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.266" endtime="20201112 12:43:11.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.268" endtime="20201112 12:43:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.239" endtime="20201112 12:43:11.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.237" endtime="20201112 12:43:11.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.278" endtime="20201112 12:43:11.564"></status>
</kw>
<msg timestamp="20201112 12:43:11.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023370125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.276" endtime="20201112 12:43:11.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023370125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.568" endtime="20201112 12:43:11.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.576" endtime="20201112 12:43:11.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.273" endtime="20201112 12:43:11.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.272" endtime="20201112 12:43:11.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.583" level="INFO">${RESULT} = [{'time': 0.023394625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4500000000000216e-05, 'source_diff': 2.4500000000000216e-05}, {'time': 0.023425361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.580" endtime="20201112 12:43:11.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.597" level="INFO">${ACCURACY} = {'source_diff': [2.4500000000000216e-05, 2.066699999999852e-05, 2.161099999999777e-05, 2.4458000000001506e-05, 2.3513999999998786e-05, 2.6334000000002855e-05, 2.158299999999863e-05, 2.161100000000124e...</msg>
<status status="PASS" starttime="20201112 12:43:11.584" endtime="20201112 12:43:11.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.601" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.600" endtime="20201112 12:43:11.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.603" level="INFO">VALUE: [2.4500000000000216e-05, 2.066699999999852e-05, 2.161099999999777e-05, 2.4458000000001506e-05, 2.3513999999998786e-05, 2.6334000000002855e-05, 2.158299999999863e-05, 2.161100000000124e-05, 2.2555999999999965e-05, 2.448700000000012e-05, 2.2569999999999535e-05, 2.3527999999998356e-05, 2.161100000000124e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.438899999999966e-05, 2.6332999999999912e-05, 2.6374999999998622e-05, 1.9680000000001086e-05, 2.4500000000000216e-05, 2.1598000000001144e-05, 2.3528000000001825e-05, 2.5443999999999467e-05, 2.2527999999997356e-05, 2.1598000000001144e-05, 1.965299999999795e-05, 2.4472000000001076e-05, 2.161100000000124e-05, 2.063899999999938e-05, 2.5429999999999897e-05, 2.2569999999999535e-05, 2.6471999999999607e-05, 2.162499999999734e-05, 2.065299999999895e-05, 2.6429999999997428e-05, 2.3500000000002685e-05, 2.440299999999923e-05, 2.2555999999999965e-05, 2.159700000000167e-05, 2.640300000000123e-05, 1.9749999999998935e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.6319999999999816e-05, 2.059700000000067e-05, 2.6362000000001995e-05, 2.2528000000000825e-05, 2.537500000000109e-05, 2.161099999999777e-05, 2.443100000000184e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.602" endtime="20201112 12:43:11.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.597" endtime="20201112 12:43:11.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.607" endtime="20201112 12:43:11.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.610" endtime="20201112 12:43:11.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.609" endtime="20201112 12:43:11.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.605" endtime="20201112 12:43:11.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.235" endtime="20201112 12:43:11.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.235" endtime="20201112 12:43:11.631"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.640" endtime="20201112 12:43:11.660"></status>
</kw>
<msg timestamp="20201112 12:43:11.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.638" endtime="20201112 12:43:11.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.662" endtime="20201112 12:43:11.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.664" endtime="20201112 12:43:11.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.636" endtime="20201112 12:43:11.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.634" endtime="20201112 12:43:11.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.673" endtime="20201112 12:43:11.960"></status>
</kw>
<msg timestamp="20201112 12:43:11.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.672" endtime="20201112 12:43:11.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.965" endtime="20201112 12:43:11.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.973" endtime="20201112 12:43:11.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.669" endtime="20201112 12:43:11.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.668" endtime="20201112 12:43:11.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.980" level="INFO">${RESULT} = [{'time': 0.023461639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.023492722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.976" endtime="20201112 12:43:11.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.993" level="INFO">${ACCURACY} = {'source_diff': [8.221999999998703e-06, 2.061100000000024e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.2513999999997786e-05, 2.2512999999998312e-05, 2.15830000000021e-05, 2.161099999999777e-05...</msg>
<status status="PASS" starttime="20201112 12:43:11.981" endtime="20201112 12:43:11.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.997" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.996" endtime="20201112 12:43:11.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.000" level="INFO">VALUE: [8.221999999998703e-06, 2.061100000000024e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.2513999999997786e-05, 2.2512999999998312e-05, 2.15830000000021e-05, 2.161099999999777e-05, 2.638899999999819e-05, 2.262499999999834e-05, 2.1569999999998535e-05, 2.4444000000001936e-05, 1.961100000000271e-05, 2.161100000000124e-05, 2.3528000000001825e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.536100000000152e-05, 2.5486000000001646e-05, 2.638899999999819e-05, 2.258299999999963e-05, 2.640300000000123e-05, 2.540300000000023e-05, 2.2528000000000825e-05, 2.638900000000166e-05, 2.3542000000001395e-05, 2.4486000000000646e-05, 2.3514000000002255e-05, 2.6332999999999912e-05, 2.5387999999997718e-05, 2.1583999999998105e-05, 2.066699999999852e-05, 1.969500000000013e-05, 2.638900000000166e-05, 2.2500000000001685e-05, 2.256900000000006e-05, 2.4471999999997607e-05, 2.637500000000209e-05, 2.2569999999999535e-05, 2.537500000000109e-05, 2.3458000000000506e-05, 1.969499999999666e-05, 2.638900000000166e-05, 2.5443999999999467e-05, 2.066699999999852e-05, 2.445900000000098e-05, 2.537500000000109e-05, 2.063899999999938e-05, 2.4472000000001076e-05, 2.5429999999999897e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.998" endtime="20201112 12:43:12.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.994" endtime="20201112 12:43:12.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.004" endtime="20201112 12:43:12.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.007" endtime="20201112 12:43:12.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.005" endtime="20201112 12:43:12.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.002" endtime="20201112 12:43:12.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.632" endtime="20201112 12:43:12.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.632" endtime="20201112 12:43:12.028"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.036" endtime="20201112 12:43:12.058"></status>
</kw>
<msg timestamp="20201112 12:43:12.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.035" endtime="20201112 12:43:12.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.060" endtime="20201112 12:43:12.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.062" endtime="20201112 12:43:12.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.032" endtime="20201112 12:43:12.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.030" endtime="20201112 12:43:12.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.071" endtime="20201112 12:43:12.359"></status>
</kw>
<msg timestamp="20201112 12:43:12.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.070" endtime="20201112 12:43:12.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.363" endtime="20201112 12:43:12.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.371" endtime="20201112 12:43:12.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.067" endtime="20201112 12:43:12.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.065" endtime="20201112 12:43:12.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.378" level="INFO">${RESULT} = [{'time': 0.023803875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2027999999997263e-05, 'source_diff': 1.2027999999997263e-05}, {'time': 0.023834111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:12.374" endtime="20201112 12:43:12.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.391" level="INFO">${ACCURACY} = {'source_diff': [1.2027999999997263e-05, 2.161100000000124e-05, 2.062499999999981e-05, 2.5429999999999897e-05, 2.638900000000166e-05, 2.068100000000156e-05, 2.3514000000002255e-05, 2.2555999999999965e...</msg>
<status status="PASS" starttime="20201112 12:43:12.379" endtime="20201112 12:43:12.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.396" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.395" endtime="20201112 12:43:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.398" level="INFO">VALUE: [1.2027999999997263e-05, 2.161100000000124e-05, 2.062499999999981e-05, 2.5429999999999897e-05, 2.638900000000166e-05, 2.068100000000156e-05, 2.3514000000002255e-05, 2.2555999999999965e-05, 2.2541999999996926e-05, 2.4415999999999327e-05, 2.54169999999998e-05, 2.161100000000124e-05, 2.4472000000001076e-05, 2.5444000000002936e-05, 2.3472000000000076e-05, 2.3527999999998356e-05, 2.4486000000000646e-05, 2.159700000000167e-05, 2.64170000000008e-05, 2.3527999999998356e-05, 2.161100000000124e-05, 2.2528000000000825e-05, 2.4430000000002366e-05, 1.9708000000000225e-05, 2.6374999999998622e-05, 2.4457999999998037e-05, 2.540300000000023e-05, 2.159700000000167e-05, 2.6374999999998622e-05, 2.6416000000001327e-05, 2.256900000000006e-05, 2.3512999999999312e-05, 2.0722000000000795e-05, 2.15830000000021e-05, 2.063900000000285e-05, 2.2514000000001255e-05, 2.531900000000281e-05, 2.066699999999852e-05, 2.2514000000001255e-05, 2.255500000000049e-05, 2.3513999999998786e-05, 2.161100000000124e-05, 2.2528000000000825e-05, 2.5499999999997747e-05, 2.7333000000000912e-05, 2.068100000000156e-05, 2.638900000000166e-05, 2.252700000000135e-05, 2.158299999999863e-05, 2.6374999999998622e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.397" endtime="20201112 12:43:12.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.392" endtime="20201112 12:43:12.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.402" endtime="20201112 12:43:12.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.405" endtime="20201112 12:43:12.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.403" endtime="20201112 12:43:12.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.400" endtime="20201112 12:43:12.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.029" endtime="20201112 12:43:12.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.028" endtime="20201112 12:43:12.426"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.435" endtime="20201112 12:43:12.455"></status>
</kw>
<msg timestamp="20201112 12:43:12.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.433" endtime="20201112 12:43:12.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.456" endtime="20201112 12:43:12.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.459" endtime="20201112 12:43:12.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.430" endtime="20201112 12:43:12.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.428" endtime="20201112 12:43:12.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.468" endtime="20201112 12:43:12.754"></status>
</kw>
<msg timestamp="20201112 12:43:12.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.466" endtime="20201112 12:43:12.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.758" endtime="20201112 12:43:12.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.767" endtime="20201112 12:43:12.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.464" endtime="20201112 12:43:12.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.462" endtime="20201112 12:43:12.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.773" level="INFO">${RESULT} = [{'time': 0.022619056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7777999999999544e-05, 'source_diff': 1.7777999999999544e-05}, {'time': 0.022649819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:12.770" endtime="20201112 12:43:12.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.787" level="INFO">${ACCURACY} = {'source_diff': [1.7777999999999544e-05, 2.637500000000209e-05, 2.261099999999877e-05, 2.255500000000049e-05, 2.155500000000296e-05, 2.538900000000066e-05, 2.3485999999999646e-05, 2.6429999999997428e-...</msg>
<status status="PASS" starttime="20201112 12:43:12.774" endtime="20201112 12:43:12.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.791" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.790" endtime="20201112 12:43:12.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.794" level="INFO">VALUE: [1.7777999999999544e-05, 2.637500000000209e-05, 2.261099999999877e-05, 2.255500000000049e-05, 2.155500000000296e-05, 2.538900000000066e-05, 2.3485999999999646e-05, 2.6429999999997428e-05, 2.444500000000141e-05, 2.062499999999981e-05, 2.3513999999998786e-05, 1.97089999999997e-05, 2.0514000000002724e-05, 2.544499999999894e-05, 2.5458000000002506e-05, 2.4472000000001076e-05, 2.537500000000109e-05, 2.441700000000227e-05, 2.637500000000209e-05, 2.445899999999751e-05, 2.543099999999937e-05, 2.1598000000001144e-05, 2.4429999999998897e-05, 2.538900000000066e-05, 2.159700000000167e-05, 2.640300000000123e-05, 2.54169999999998e-05, 2.4472000000001076e-05, 2.6332999999999912e-05, 2.4415999999999327e-05, 2.3541999999997926e-05, 2.444499999999794e-05, 2.4457999999998037e-05, 2.6401999999998288e-05, 2.061100000000024e-05, 2.1569999999998535e-05, 2.0652000000002946e-05, 1.97089999999997e-05, 2.5360999999998052e-05, 2.445900000000098e-05, 2.162500000000081e-05, 2.54169999999998e-05, 2.066699999999852e-05, 2.4472000000001076e-05, 2.3443999999997467e-05, 2.1527999999999825e-05, 2.1556000000002434e-05, 2.444499999999794e-05, 2.159700000000167e-05, 2.5415999999996858e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.792" endtime="20201112 12:43:12.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.788" endtime="20201112 12:43:12.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.797" endtime="20201112 12:43:12.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.801" endtime="20201112 12:43:12.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.799" endtime="20201112 12:43:12.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.796" endtime="20201112 12:43:12.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.427" endtime="20201112 12:43:12.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.426" endtime="20201112 12:43:12.822"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.831" endtime="20201112 12:43:12.851"></status>
</kw>
<msg timestamp="20201112 12:43:12.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.829" endtime="20201112 12:43:12.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.853" endtime="20201112 12:43:12.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.856" endtime="20201112 12:43:12.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.827" endtime="20201112 12:43:12.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.824" endtime="20201112 12:43:12.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.865" endtime="20201112 12:43:13.151"></status>
</kw>
<msg timestamp="20201112 12:43:13.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.863" endtime="20201112 12:43:13.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.156" endtime="20201112 12:43:13.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.164" endtime="20201112 12:43:13.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.860" endtime="20201112 12:43:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.859" endtime="20201112 12:43:13.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.170" level="INFO">${RESULT} = [{'time': 0.023815167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.023845458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:13.167" endtime="20201112 12:43:13.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.184" level="INFO">${ACCURACY} = {'source_diff': [1.3959000000000887e-05, 2.4429999999998897e-05, 2.638899999999819e-05, 2.3485999999999646e-05, 2.6346999999999482e-05, 2.0708000000001225e-05, 2.441700000000227e-05, 2.062499999999981...</msg>
<status status="PASS" starttime="20201112 12:43:13.171" endtime="20201112 12:43:13.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.188" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.187" endtime="20201112 12:43:13.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.191" level="INFO">VALUE: [1.3959000000000887e-05, 2.4429999999998897e-05, 2.638899999999819e-05, 2.3485999999999646e-05, 2.6346999999999482e-05, 2.0708000000001225e-05, 2.441700000000227e-05, 2.062499999999981e-05, 2.1612000000000714e-05, 2.4472000000001076e-05, 2.540300000000023e-05, 2.538899999999719e-05, 2.1541999999999395e-05, 2.1569999999998535e-05, 2.4416000000002797e-05, 2.163900000000038e-05, 1.966700000000099e-05, 2.538900000000066e-05, 2.3472000000000076e-05, 2.07090000000007e-05, 2.2570000000003004e-05, 2.6332999999999912e-05, 2.638900000000166e-05, 2.1652000000000476e-05, 2.445900000000098e-05, 2.3458000000000506e-05, 2.6374999999998622e-05, 2.159700000000167e-05, 2.2555999999999965e-05, 2.1597999999997675e-05, 2.4472000000001076e-05, 2.543099999999937e-05, 2.15830000000021e-05, 2.347299999999955e-05, 2.063899999999938e-05, 2.638899999999819e-05, 2.3499999999999216e-05, 2.062499999999981e-05, 2.543099999999937e-05, 2.0651999999999476e-05, 2.1569999999998535e-05, 2.6319000000000342e-05, 1.966700000000099e-05, 2.638899999999819e-05, 1.961099999999924e-05, 2.7333000000000912e-05, 2.066699999999852e-05, 1.9694000000000655e-05, 2.155499999999949e-05, 2.156899999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.189" endtime="20201112 12:43:13.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.185" endtime="20201112 12:43:13.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.198" endtime="20201112 12:43:13.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.201" endtime="20201112 12:43:13.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.200" endtime="20201112 12:43:13.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.196" endtime="20201112 12:43:13.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.822" endtime="20201112 12:43:13.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.822" endtime="20201112 12:43:13.222"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.231" endtime="20201112 12:43:13.253"></status>
</kw>
<msg timestamp="20201112 12:43:13.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.229" endtime="20201112 12:43:13.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.255" endtime="20201112 12:43:13.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.257" endtime="20201112 12:43:13.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.227" endtime="20201112 12:43:13.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.225" endtime="20201112 12:43:13.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.266" endtime="20201112 12:43:13.554"></status>
</kw>
<msg timestamp="20201112 12:43:13.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025031208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.265" endtime="20201112 12:43:13.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025031208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.559" endtime="20201112 12:43:13.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.567" endtime="20201112 12:43:13.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.262" endtime="20201112 12:43:13.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.260" endtime="20201112 12:43:13.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.573" level="INFO">${RESULT} = [{'time': 0.025041347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.025071597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:13.570" endtime="20201112 12:43:13.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.587" level="INFO">${ACCURACY} = {'source_diff': [1.0138999999999287e-05, 2.163900000000038e-05, 2.543099999999937e-05, 2.544499999999894e-05, 2.543099999999937e-05, 1.9708000000000225e-05, 2.6360999999999052e-05, 2.5471999999998607e...</msg>
<status status="PASS" starttime="20201112 12:43:13.574" endtime="20201112 12:43:13.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.591" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.590" endtime="20201112 12:43:13.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.594" level="INFO">VALUE: [1.0138999999999287e-05, 2.163900000000038e-05, 2.543099999999937e-05, 2.544499999999894e-05, 2.543099999999937e-05, 1.9708000000000225e-05, 2.6360999999999052e-05, 2.5471999999998607e-05, 2.54169999999998e-05, 1.968100000000056e-05, 2.5429999999999897e-05, 2.351300000000278e-05, 2.443099999999837e-05, 2.2513999999997786e-05, 2.3513999999998786e-05, 2.063899999999938e-05, 2.161100000000124e-05, 2.3541999999997926e-05, 2.0598000000000144e-05, 2.07090000000007e-05, 2.6387999999998718e-05, 2.6374999999998622e-05, 2.6362000000001995e-05, 2.1598000000001144e-05, 2.3499999999999216e-05, 2.161099999999777e-05, 2.2513999999997786e-05, 2.065299999999895e-05, 2.3526999999998882e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.356900000000106e-05, 2.3528000000001825e-05, 2.637500000000209e-05, 2.0637999999999906e-05, 2.0598000000000144e-05, 2.2528000000000825e-05, 1.9637999999998906e-05, 2.5443999999999467e-05, 2.445900000000098e-05, 2.7346999999997013e-05, 2.352700000000235e-05, 2.1584000000001574e-05, 2.3512999999999312e-05, 2.15830000000021e-05, 2.258299999999963e-05, 2.540300000000023e-05, 2.063900000000285e-05, 2.448700000000012e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.592" endtime="20201112 12:43:13.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.588" endtime="20201112 12:43:13.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.597" endtime="20201112 12:43:13.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.601" endtime="20201112 12:43:13.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.599" endtime="20201112 12:43:13.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.596" endtime="20201112 12:43:13.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.223" endtime="20201112 12:43:13.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.223" endtime="20201112 12:43:13.622"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.630" endtime="20201112 12:43:13.650"></status>
</kw>
<msg timestamp="20201112 12:43:13.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.629" endtime="20201112 12:43:13.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.651" endtime="20201112 12:43:13.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.654" endtime="20201112 12:43:13.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.626" endtime="20201112 12:43:13.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.624" endtime="20201112 12:43:13.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.663" endtime="20201112 12:43:13.949"></status>
</kw>
<msg timestamp="20201112 12:43:13.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.661" endtime="20201112 12:43:13.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.954" endtime="20201112 12:43:13.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.962" endtime="20201112 12:43:13.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.659" endtime="20201112 12:43:13.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.657" endtime="20201112 12:43:13.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.970" level="INFO">${RESULT} = [{'time': 0.022574444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6387999999998718e-05, 'source_diff': 2.6387999999998718e-05}, {'time': 0.022605292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:13.966" endtime="20201112 12:43:13.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.983" level="INFO">${ACCURACY} = {'source_diff': [2.6387999999998718e-05, 2.544499999999894e-05, 2.256900000000006e-05, 2.3472000000000076e-05, 2.061100000000024e-05, 1.9749999999998935e-05, 2.4486000000000646e-05, 2.3528000000001825...</msg>
<status status="PASS" starttime="20201112 12:43:13.971" endtime="20201112 12:43:13.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.988" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.987" endtime="20201112 12:43:13.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.990" level="INFO">VALUE: [2.6387999999998718e-05, 2.544499999999894e-05, 2.256900000000006e-05, 2.3472000000000076e-05, 2.061100000000024e-05, 1.9749999999998935e-05, 2.4486000000000646e-05, 2.3528000000001825e-05, 2.256900000000006e-05, 2.64170000000008e-05, 2.35970000000002e-05, 2.065299999999895e-05, 2.0679999999998616e-05, 2.6333999999999386e-05, 2.0611999999999714e-05, 2.2514000000001255e-05, 2.065299999999895e-05, 2.445900000000098e-05, 2.159700000000167e-05, 2.156900000000253e-05, 2.2542000000000395e-05, 2.641699999999733e-05, 2.3528000000001825e-05, 2.4500000000000216e-05, 2.3528000000001825e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.640300000000123e-05, 2.6401999999998288e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.4486000000000646e-05, 2.5457999999999037e-05, 2.444500000000141e-05, 2.256900000000006e-05, 2.156899999999906e-05, 2.062499999999981e-05, 2.0680000000002086e-05, 2.640300000000123e-05, 2.4500000000000216e-05, 2.159700000000167e-05, 2.6346999999999482e-05, 2.44169999999988e-05, 2.638899999999819e-05, 2.258299999999963e-05, 2.440299999999923e-05, 2.2514000000001255e-05, 2.354100000000192e-05, 2.258299999999963e-05, 1.962499999999881e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.989" endtime="20201112 12:43:13.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.984" endtime="20201112 12:43:13.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.994" endtime="20201112 12:43:13.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.997" endtime="20201112 12:43:14.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.996" endtime="20201112 12:43:14.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.992" endtime="20201112 12:43:14.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.623" endtime="20201112 12:43:14.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.622" endtime="20201112 12:43:14.018"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.027" endtime="20201112 12:43:14.052"></status>
</kw>
<msg timestamp="20201112 12:43:14.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.026" endtime="20201112 12:43:14.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.054" endtime="20201112 12:43:14.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.056" endtime="20201112 12:43:14.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.023" endtime="20201112 12:43:14.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.021" endtime="20201112 12:43:14.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.065" endtime="20201112 12:43:14.353"></status>
</kw>
<msg timestamp="20201112 12:43:14.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022885514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.064" endtime="20201112 12:43:14.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022885514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.357" endtime="20201112 12:43:14.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.365" endtime="20201112 12:43:14.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.061" endtime="20201112 12:43:14.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.060" endtime="20201112 12:43:14.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.372" level="INFO">${RESULT} = [{'time': 0.022885514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.280599999999859e-05, 'source_diff': 6.280599999999859e-05}, {'time': 0.022946819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.368" endtime="20201112 12:43:14.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.385" level="INFO">${ACCURACY} = {'source_diff': [6.280599999999859e-05, 5.706899999999987e-05, 5.215299999999923e-05, 5.2221999999997604e-05, 5.3193999999999464e-05, 5.122200000000007e-05, 5.2221999999997604e-05, 5.606900000000234e-...</msg>
<status status="PASS" starttime="20201112 12:43:14.373" endtime="20201112 12:43:14.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.390" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.389" endtime="20201112 12:43:14.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.392" level="INFO">VALUE: [6.280599999999859e-05, 5.706899999999987e-05, 5.215299999999923e-05, 5.2221999999997604e-05, 5.3193999999999464e-05, 5.122200000000007e-05, 5.2221999999997604e-05, 5.606900000000234e-05, 5.605600000000224e-05, 5.116700000000127e-05, 5.225000000000021e-05, 5.127800000000182e-05, 5.033299999999963e-05, 5.597300000000083e-05, 5.320899999999851e-05, 5.60549999999993e-05, 5.594499999999822e-05, 5.7028000000000634e-05, 5.415300000000123e-05, 5.320899999999851e-05, 5.691700000000008e-05, 5.511100000000005e-05, 5.505600000000124e-05, 5.413899999999819e-05, 5.5929999999999175e-05, 5.3166000000000324e-05, 5.509799999999995e-05, 5.606899999999887e-05, 5.401400000000153e-05, 5.512499999999962e-05, 5.613900000000019e-05, 5.693099999999965e-05, 5.129200000000139e-05, 5.691700000000008e-05, 5.318099999999937e-05, 5.6055999999998773e-05, 5.5957999999998315e-05, 5.613900000000019e-05, 5.127699999999888e-05, 5.5971999999997885e-05, 5.511100000000005e-05, 5.318099999999937e-05, 5.322300000000155e-05, 5.508300000000091e-05, 5.693099999999965e-05, 5.508400000000038e-05, 5.5986000000000924e-05, 5.415300000000123e-05, 5.690300000000051e-05, 5.2221999999997604e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.391" endtime="20201112 12:43:14.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.386" endtime="20201112 12:43:14.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.396" endtime="20201112 12:43:14.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.399" endtime="20201112 12:43:14.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.397" endtime="20201112 12:43:14.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.394" endtime="20201112 12:43:14.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.019" endtime="20201112 12:43:14.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.019" endtime="20201112 12:43:14.420"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.428" endtime="20201112 12:43:14.450"></status>
</kw>
<msg timestamp="20201112 12:43:14.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.427" endtime="20201112 12:43:14.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.452" endtime="20201112 12:43:14.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.454" endtime="20201112 12:43:14.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.424" endtime="20201112 12:43:14.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.422" endtime="20201112 12:43:14.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.463" endtime="20201112 12:43:14.751"></status>
</kw>
<msg timestamp="20201112 12:43:14.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023180125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023226514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.462" endtime="20201112 12:43:14.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023180125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023226514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.755" endtime="20201112 12:43:14.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.763" endtime="20201112 12:43:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.459" endtime="20201112 12:43:14.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.457" endtime="20201112 12:43:14.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.770" level="INFO">${RESULT} = [{'time': 0.023226514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389000000000846e-05, 'source_diff': 4.6389000000000846e-05}, {'time': 0.023287569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:14.767" endtime="20201112 12:43:14.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.784" level="INFO">${ACCURACY} = {'source_diff': [4.6389000000000846e-05, 5.606900000000234e-05, 5.604099999999973e-05, 5.497299999999983e-05, 5.3179999999999894e-05, 5.212500000000009e-05, 5.69870000000014e-05, 5.506900000000134e-05...</msg>
<status status="PASS" starttime="20201112 12:43:14.771" endtime="20201112 12:43:14.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.788" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.787" endtime="20201112 12:43:14.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.791" level="INFO">VALUE: [4.6389000000000846e-05, 5.606900000000234e-05, 5.604099999999973e-05, 5.497299999999983e-05, 5.3179999999999894e-05, 5.212500000000009e-05, 5.69870000000014e-05, 5.506900000000134e-05, 5.404200000000067e-05, 5.509799999999995e-05, 5.509700000000048e-05, 5.4985999999999924e-05, 5.415299999999776e-05, 5.688899999999747e-05, 5.511100000000005e-05, 5.222200000000107e-05, 5.402700000000163e-05, 5.602700000000016e-05, 5.026399999999778e-05, 5.226300000000031e-05, 5.68749999999979e-05, 5.124999999999921e-05, 5.325000000000121e-05, 5.213900000000313e-05, 5.029100000000092e-05, 5.309699999999848e-05, 5.606899999999887e-05, 5.6041999999999204e-05, 5.5957999999998315e-05, 5.2221999999997604e-05, 5.126400000000225e-05, 5.4999999999999494e-05, 5.126399999999878e-05, 5.412499999999862e-05, 5.4999999999999494e-05, 5.225000000000021e-05, 5.606899999999887e-05, 5.688899999999747e-05, 5.508300000000091e-05, 5.412500000000209e-05, 5.40410000000012e-05, 5.415299999999776e-05, 5.309699999999848e-05, 5.4027999999997633e-05, 5.2207999999998034e-05, 5.309700000000195e-05, 5.222200000000107e-05, 5.516699999999833e-05, 5.404200000000067e-05, 5.509700000000048e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.789" endtime="20201112 12:43:14.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.784" endtime="20201112 12:43:14.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.794" endtime="20201112 12:43:14.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.797" endtime="20201112 12:43:14.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.796" endtime="20201112 12:43:14.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.792" endtime="20201112 12:43:14.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.421" endtime="20201112 12:43:14.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.420" endtime="20201112 12:43:14.818"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.827" endtime="20201112 12:43:14.847"></status>
</kw>
<msg timestamp="20201112 12:43:14.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.825" endtime="20201112 12:43:14.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.848" endtime="20201112 12:43:14.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.851" endtime="20201112 12:43:14.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.823" endtime="20201112 12:43:14.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.821" endtime="20201112 12:43:14.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.860" endtime="20201112 12:43:15.148"></status>
</kw>
<msg timestamp="20201112 12:43:15.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.858" endtime="20201112 12:43:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.152" endtime="20201112 12:43:15.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.160" endtime="20201112 12:43:15.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.856" endtime="20201112 12:43:15.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.854" endtime="20201112 12:43:15.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.167" level="INFO">${RESULT} = [{'time': 0.021675083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.563900000000275e-05, 'source_diff': 6.563900000000275e-05}, {'time': 0.021736625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.164" endtime="20201112 12:43:15.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.180" level="INFO">${ACCURACY} = {'source_diff': [6.563900000000275e-05, 5.508299999999744e-05, 5.508300000000091e-05, 5.113899999999866e-05, 5.504200000000167e-05, 5.608300000000191e-05, 5.4152000000001754e-05, 5.126400000000225e-05...</msg>
<status status="PASS" starttime="20201112 12:43:15.168" endtime="20201112 12:43:15.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.185" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.184" endtime="20201112 12:43:15.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.187" level="INFO">VALUE: [6.563900000000275e-05, 5.508299999999744e-05, 5.508300000000091e-05, 5.113899999999866e-05, 5.504200000000167e-05, 5.608300000000191e-05, 5.4152000000001754e-05, 5.126400000000225e-05, 5.6999999999998024e-05, 5.027699999999788e-05, 5.7000000000001494e-05, 5.41670000000008e-05, 5.211199999999999e-05, 5.411099999999905e-05, 5.606899999999887e-05, 5.7013999999997594e-05, 5.509700000000048e-05, 5.2151999999999754e-05, 5.31669999999998e-05, 5.126299999999931e-05, 5.608299999999844e-05, 5.222200000000107e-05, 5.505500000000177e-05, 5.305499999999977e-05, 5.41670000000008e-05, 5.220900000000098e-05, 5.608299999999844e-05, 5.415300000000123e-05, 5.115299999999823e-05, 5.608299999999844e-05, 5.701300000000159e-05, 5.6041999999999204e-05, 5.501400000000253e-05, 5.609700000000148e-05, 5.609700000000148e-05, 5.031999999999953e-05, 5.212500000000009e-05, 5.508299999999744e-05, 5.2193999999998464e-05, 5.404200000000067e-05, 5.7013999999997594e-05, 5.223600000000064e-05, 5.405500000000077e-05, 5.319500000000241e-05, 5.126400000000225e-05, 5.41670000000008e-05, 5.129099999999845e-05, 5.602700000000016e-05, 5.227799999999935e-05, 5.119400000000093e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.186" endtime="20201112 12:43:15.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.181" endtime="20201112 12:43:15.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.191" endtime="20201112 12:43:15.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.194" endtime="20201112 12:43:15.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.193" endtime="20201112 12:43:15.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.189" endtime="20201112 12:43:15.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.819" endtime="20201112 12:43:15.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.819" endtime="20201112 12:43:15.215"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.224" endtime="20201112 12:43:15.244"></status>
</kw>
<msg timestamp="20201112 12:43:15.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.222" endtime="20201112 12:43:15.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.246" endtime="20201112 12:43:15.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.248" endtime="20201112 12:43:15.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.220" endtime="20201112 12:43:15.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.218" endtime="20201112 12:43:15.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.257" endtime="20201112 12:43:15.544"></status>
</kw>
<msg timestamp="20201112 12:43:15.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.256" endtime="20201112 12:43:15.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.549" endtime="20201112 12:43:15.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.557" endtime="20201112 12:43:15.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.253" endtime="20201112 12:43:15.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.251" endtime="20201112 12:43:15.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.563" level="INFO">${RESULT} = [{'time': 0.021771972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.269400000000203e-05, 'source_diff': 6.269400000000203e-05}, {'time': 0.021833903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.560" endtime="20201112 12:43:15.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.577" level="INFO">${ACCURACY} = {'source_diff': [6.269400000000203e-05, 5.507000000000081e-05, 5.695899999999879e-05, 5.6055999999998773e-05, 5.6014000000000064e-05, 5.031900000000006e-05, 5.693099999999965e-05, 5.031900000000006e-0...</msg>
<status status="PASS" starttime="20201112 12:43:15.564" endtime="20201112 12:43:15.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.581" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.580" endtime="20201112 12:43:15.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.584" level="INFO">VALUE: [6.269400000000203e-05, 5.507000000000081e-05, 5.695899999999879e-05, 5.6055999999998773e-05, 5.6014000000000064e-05, 5.031900000000006e-05, 5.693099999999965e-05, 5.031900000000006e-05, 5.6999999999998024e-05, 5.309799999999795e-05, 5.6027999999999634e-05, 5.119500000000041e-05, 5.030499999999702e-05, 5.413900000000166e-05, 5.406899999999687e-05, 5.129200000000139e-05, 5.608300000000191e-05, 5.5041999999998203e-05, 5.406999999999981e-05, 5.507000000000081e-05, 5.034800000000214e-05, 5.5041999999998203e-05, 5.220899999999751e-05, 5.118000000000136e-05, 5.6916000000000605e-05, 5.030599999999996e-05, 5.706899999999987e-05, 5.597300000000083e-05, 5.319499999999894e-05, 5.219400000000193e-05, 5.409699999999948e-05, 5.312500000000109e-05, 5.226399999999978e-05, 5.404200000000067e-05, 5.309700000000195e-05, 5.508300000000091e-05, 5.116700000000127e-05, 5.609700000000148e-05, 5.311099999999805e-05, 5.509700000000048e-05, 5.112500000000256e-05, 5.127799999999835e-05, 5.691700000000008e-05, 5.030599999999996e-05, 5.3137999999997715e-05, 5.315300000000023e-05, 5.025000000000168e-05, 5.3179999999999894e-05, 5.308400000000185e-05, 5.129099999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.582" endtime="20201112 12:43:15.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.578" endtime="20201112 12:43:15.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.587" endtime="20201112 12:43:15.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.591" endtime="20201112 12:43:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.589" endtime="20201112 12:43:15.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.586" endtime="20201112 12:43:15.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.216" endtime="20201112 12:43:15.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.216" endtime="20201112 12:43:15.612"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.620" endtime="20201112 12:43:15.640"></status>
</kw>
<msg timestamp="20201112 12:43:15.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.619" endtime="20201112 12:43:15.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.642" endtime="20201112 12:43:15.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.644" endtime="20201112 12:43:15.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.616" endtime="20201112 12:43:15.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.614" endtime="20201112 12:43:15.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.653" endtime="20201112 12:43:15.941"></status>
</kw>
<msg timestamp="20201112 12:43:15.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.651" endtime="20201112 12:43:15.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.945" endtime="20201112 12:43:15.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.953" endtime="20201112 12:43:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.649" endtime="20201112 12:43:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.647" endtime="20201112 12:43:15.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.960" level="INFO">${RESULT} = [{'time': 0.022297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2653000000000135e-05, 'source_diff': 4.2653000000000135e-05}, {'time': 0.022358028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:15.957" endtime="20201112 12:43:15.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.973" level="INFO">${ACCURACY} = {'source_diff': [4.2653000000000135e-05, 5.022199999999907e-05, 5.127800000000182e-05, 5.605500000000277e-05, 5.320900000000198e-05, 5.223600000000064e-05, 5.419499999999994e-05, 5.404099999999773e-05...</msg>
<status status="PASS" starttime="20201112 12:43:15.961" endtime="20201112 12:43:15.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.978" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.977" endtime="20201112 12:43:15.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.980" level="INFO">VALUE: [4.2653000000000135e-05, 5.022199999999907e-05, 5.127800000000182e-05, 5.605500000000277e-05, 5.320900000000198e-05, 5.223600000000064e-05, 5.419499999999994e-05, 5.404099999999773e-05, 5.412499999999862e-05, 5.4985999999999924e-05, 5.222300000000055e-05, 5.406900000000034e-05, 5.218099999999837e-05, 5.5971999999997885e-05, 5.706899999999987e-05, 5.220900000000098e-05, 5.606900000000234e-05, 5.40549999999973e-05, 5.3207999999999034e-05, 5.226399999999978e-05, 5.413899999999819e-05, 5.2165999999999324e-05, 5.223600000000064e-05, 5.4166000000001324e-05, 5.5985999999997454e-05, 5.225000000000021e-05, 5.7000000000001494e-05, 5.40280000000011e-05, 5.608399999999791e-05, 5.225000000000021e-05, 5.127800000000182e-05, 5.512499999999962e-05, 5.6943999999999745e-05, 5.3193999999999464e-05, 5.129099999999845e-05, 5.126400000000225e-05, 5.213899999999966e-05, 5.607000000000181e-05, 5.711099999999858e-05, 5.2221999999997604e-05, 5.3193999999999464e-05, 5.119500000000041e-05, 5.509699999999701e-05, 5.127799999999835e-05, 5.7013999999997594e-05, 5.406900000000034e-05, 5.4152000000001754e-05, 5.7028000000000634e-05, 5.509700000000048e-05, 5.225000000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.979" endtime="20201112 12:43:15.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.974" endtime="20201112 12:43:15.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.984" endtime="20201112 12:43:15.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.987" endtime="20201112 12:43:16.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.986" endtime="20201112 12:43:16.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.982" endtime="20201112 12:43:16.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.612" endtime="20201112 12:43:16.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.612" endtime="20201112 12:43:16.008"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.017" endtime="20201112 12:43:16.038"></status>
</kw>
<msg timestamp="20201112 12:43:16.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.015" endtime="20201112 12:43:16.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.039" endtime="20201112 12:43:16.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.042" endtime="20201112 12:43:16.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.013" endtime="20201112 12:43:16.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.011" endtime="20201112 12:43:16.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.051" endtime="20201112 12:43:16.338"></status>
</kw>
<msg timestamp="20201112 12:43:16.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.049" endtime="20201112 12:43:16.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.342" endtime="20201112 12:43:16.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.351" endtime="20201112 12:43:16.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.047" endtime="20201112 12:43:16.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.045" endtime="20201112 12:43:16.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.358" level="INFO">${RESULT} = [{'time': 0.022546625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.655600000000234e-05, 'source_diff': 6.655600000000234e-05}, {'time': 0.022608125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.354" endtime="20201112 12:43:16.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.371" level="INFO">${ACCURACY} = {'source_diff': [6.655600000000234e-05, 5.318099999999937e-05, 5.015299999999723e-05, 5.7000000000001494e-05, 5.313900000000066e-05, 5.515300000000223e-05, 5.4999999999999494e-05, 5.223700000000012e-0...</msg>
<status status="PASS" starttime="20201112 12:43:16.359" endtime="20201112 12:43:16.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.376" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.375" endtime="20201112 12:43:16.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.378" level="INFO">VALUE: [6.655600000000234e-05, 5.318099999999937e-05, 5.015299999999723e-05, 5.7000000000001494e-05, 5.313900000000066e-05, 5.515300000000223e-05, 5.4999999999999494e-05, 5.223700000000012e-05, 5.4165999999997855e-05, 5.119500000000041e-05, 5.684799999999823e-05, 5.124999999999921e-05, 5.308399999999838e-05, 5.413900000000166e-05, 5.222200000000107e-05, 5.408399999999938e-05, 5.511100000000005e-05, 5.501400000000253e-05, 5.112499999999909e-05, 5.513900000000266e-05, 5.512499999999962e-05, 5.212500000000009e-05, 5.030500000000049e-05, 5.222200000000107e-05, 5.515300000000223e-05, 5.309799999999795e-05, 5.606900000000234e-05, 5.213899999999966e-05, 5.133300000000063e-05, 5.118000000000136e-05, 5.511199999999952e-05, 5.4985999999999924e-05, 5.223700000000012e-05, 5.212500000000009e-05, 5.511100000000005e-05, 5.116700000000127e-05, 5.60549999999993e-05, 5.215299999999923e-05, 5.509700000000048e-05, 5.5957999999998315e-05, 5.40280000000011e-05, 5.222200000000107e-05, 5.6055999999998773e-05, 5.406900000000034e-05, 5.225000000000021e-05, 5.402700000000163e-05, 5.119500000000041e-05, 5.3179999999999894e-05, 5.594499999999822e-05, 5.319500000000241e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.377" endtime="20201112 12:43:16.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.372" endtime="20201112 12:43:16.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.382" endtime="20201112 12:43:16.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.385" endtime="20201112 12:43:16.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.384" endtime="20201112 12:43:16.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.380" endtime="20201112 12:43:16.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.009" endtime="20201112 12:43:16.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.009" endtime="20201112 12:43:16.406"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.415" endtime="20201112 12:43:16.435"></status>
</kw>
<msg timestamp="20201112 12:43:16.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.413" endtime="20201112 12:43:16.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.436" endtime="20201112 12:43:16.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.439" endtime="20201112 12:43:16.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.411" endtime="20201112 12:43:16.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.409" endtime="20201112 12:43:16.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.448" endtime="20201112 12:43:16.736"></status>
</kw>
<msg timestamp="20201112 12:43:16.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.446" endtime="20201112 12:43:16.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.740" endtime="20201112 12:43:16.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.748" endtime="20201112 12:43:16.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.443" endtime="20201112 12:43:16.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.442" endtime="20201112 12:43:16.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.755" level="INFO">${RESULT} = [{'time': 0.021453833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930499999999949e-05, 'source_diff': 4.930499999999949e-05}, {'time': 0.021514931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.751" endtime="20201112 12:43:16.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.768" level="INFO">${ACCURACY} = {'source_diff': [4.930499999999949e-05, 5.227799999999935e-05, 5.130600000000096e-05, 5.511100000000005e-05, 5.3179999999999894e-05, 5.608400000000138e-05, 5.129200000000139e-05, 5.311099999999805e-05...</msg>
<status status="PASS" starttime="20201112 12:43:16.756" endtime="20201112 12:43:16.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.772" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.771" endtime="20201112 12:43:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.775" level="INFO">VALUE: [4.930499999999949e-05, 5.227799999999935e-05, 5.130600000000096e-05, 5.511100000000005e-05, 5.3179999999999894e-05, 5.608400000000138e-05, 5.129200000000139e-05, 5.311099999999805e-05, 5.506900000000134e-05, 5.037499999999834e-05, 5.6055999999998773e-05, 5.413899999999819e-05, 5.025000000000168e-05, 5.508300000000091e-05, 5.412500000000209e-05, 5.12080000000005e-05, 5.6014000000000064e-05, 5.122200000000007e-05, 5.215299999999923e-05, 5.6055999999998773e-05, 5.127799999999835e-05, 5.611099999999758e-05, 5.408399999999938e-05, 5.315300000000023e-05, 5.608299999999844e-05, 5.408399999999938e-05, 5.2207999999998034e-05, 5.511100000000005e-05, 5.6999999999998024e-05, 5.6027999999999634e-05, 5.6041999999999204e-05, 5.5972000000001354e-05, 5.31669999999998e-05, 5.6957999999999315e-05, 5.404200000000067e-05, 5.22080000000015e-05, 5.304199999999967e-05, 5.223600000000064e-05, 5.120899999999998e-05, 5.411099999999905e-05, 5.118099999999737e-05, 5.6985999999998455e-05, 5.509700000000048e-05, 5.509700000000048e-05, 5.21530000000027e-05, 5.318099999999937e-05, 5.225000000000021e-05, 5.597299999999736e-05, 5.030599999999996e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.773" endtime="20201112 12:43:16.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.769" endtime="20201112 12:43:16.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.778" endtime="20201112 12:43:16.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.782" endtime="20201112 12:43:16.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.780" endtime="20201112 12:43:16.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.777" endtime="20201112 12:43:16.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.407" endtime="20201112 12:43:16.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.406" endtime="20201112 12:43:16.803"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.811" endtime="20201112 12:43:16.831"></status>
</kw>
<msg timestamp="20201112 12:43:16.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.810" endtime="20201112 12:43:16.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.833" endtime="20201112 12:43:16.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.835" endtime="20201112 12:43:16.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.807" endtime="20201112 12:43:16.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.805" endtime="20201112 12:43:16.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.844" endtime="20201112 12:43:17.130"></status>
</kw>
<msg timestamp="20201112 12:43:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.843" endtime="20201112 12:43:17.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.134" endtime="20201112 12:43:17.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.143" endtime="20201112 12:43:17.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.840" endtime="20201112 12:43:17.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.838" endtime="20201112 12:43:17.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.150" level="INFO">${RESULT} = [{'time': 0.021795417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.838899999999938e-05, 'source_diff': 4.838899999999938e-05}, {'time': 0.0218565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:17.146" endtime="20201112 12:43:17.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.164" level="INFO">${ACCURACY} = {'source_diff': [4.838899999999938e-05, 5.119400000000093e-05, 5.220900000000098e-05, 5.4194000000000464e-05, 5.7014000000001064e-05, 5.3179999999999894e-05, 5.515300000000223e-05, 5.697300000000183e-...</msg>
<status status="PASS" starttime="20201112 12:43:17.151" endtime="20201112 12:43:17.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.168" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.167" endtime="20201112 12:43:17.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.171" level="INFO">VALUE: [4.838899999999938e-05, 5.119400000000093e-05, 5.220900000000098e-05, 5.4194000000000464e-05, 5.7014000000001064e-05, 5.3179999999999894e-05, 5.515300000000223e-05, 5.697300000000183e-05, 5.126399999999878e-05, 5.4152000000001754e-05, 5.5957999999998315e-05, 5.319499999999894e-05, 5.5957999999998315e-05, 5.508400000000038e-05, 5.511100000000005e-05, 5.118100000000084e-05, 5.319499999999894e-05, 5.415300000000123e-05, 5.5958000000001784e-05, 5.124999999999921e-05, 5.126399999999878e-05, 5.226399999999978e-05, 5.506900000000134e-05, 5.029100000000092e-05, 5.6930000000000175e-05, 5.033299999999963e-05, 5.51670000000018e-05, 5.4999999999999494e-05, 5.606999999999834e-05, 5.126400000000225e-05, 5.4180000000000894e-05, 5.40280000000011e-05, 5.702700000000116e-05, 5.127800000000182e-05, 5.691700000000008e-05, 5.225000000000021e-05, 5.511100000000005e-05, 5.40280000000011e-05, 5.3207999999999034e-05, 5.512499999999962e-05, 5.413899999999819e-05, 5.225000000000021e-05, 5.025000000000168e-05, 5.227699999999988e-05, 5.130600000000096e-05, 5.129200000000139e-05, 5.595899999999779e-05, 5.127799999999835e-05, 5.223600000000064e-05, 5.6055999999998773e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.170" endtime="20201112 12:43:17.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.165" endtime="20201112 12:43:17.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.175" endtime="20201112 12:43:17.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.178" endtime="20201112 12:43:17.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.177" endtime="20201112 12:43:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.173" endtime="20201112 12:43:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.804" endtime="20201112 12:43:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.803" endtime="20201112 12:43:17.200"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.209" endtime="20201112 12:43:17.228"></status>
</kw>
<msg timestamp="20201112 12:43:17.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.207" endtime="20201112 12:43:17.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.229" endtime="20201112 12:43:17.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.232" endtime="20201112 12:43:17.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.204" endtime="20201112 12:43:17.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.202" endtime="20201112 12:43:17.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.241" endtime="20201112 12:43:17.529"></status>
</kw>
<msg timestamp="20201112 12:43:17.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.240" endtime="20201112 12:43:17.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.533" endtime="20201112 12:43:17.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.542" endtime="20201112 12:43:17.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.237" endtime="20201112 12:43:17.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.235" endtime="20201112 12:43:17.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.549" level="INFO">${RESULT} = [{'time': 0.021953389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.465300000000132e-05, 'source_diff': 6.465300000000132e-05}, {'time': 0.022015069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.545" endtime="20201112 12:43:17.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.562" level="INFO">${ACCURACY} = {'source_diff': [6.465300000000132e-05, 5.119400000000093e-05, 5.41670000000008e-05, 5.308400000000185e-05, 5.2151999999999754e-05, 5.038899999999791e-05, 5.213899999999966e-05, 5.3207999999999034e-05...</msg>
<status status="PASS" starttime="20201112 12:43:17.550" endtime="20201112 12:43:17.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.567" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.566" endtime="20201112 12:43:17.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.570" level="INFO">VALUE: [6.465300000000132e-05, 5.119400000000093e-05, 5.41670000000008e-05, 5.308400000000185e-05, 5.2151999999999754e-05, 5.038899999999791e-05, 5.213899999999966e-05, 5.3207999999999034e-05, 5.6014000000000064e-05, 5.607000000000181e-05, 5.305599999999924e-05, 5.511100000000005e-05, 5.5943999999998745e-05, 5.126399999999878e-05, 5.116600000000179e-05, 5.129200000000139e-05, 5.49869999999994e-05, 5.50549999999983e-05, 5.227699999999988e-05, 5.2179999999998894e-05, 5.413900000000166e-05, 5.223600000000064e-05, 5.6916000000000605e-05, 5.223600000000064e-05, 5.3985999999998924e-05, 5.605500000000277e-05, 5.309800000000142e-05, 5.4151999999998285e-05, 5.127799999999835e-05, 5.5957999999998315e-05, 5.3179999999999894e-05, 5.311100000000152e-05, 5.413900000000166e-05, 5.405599999999677e-05, 5.223600000000064e-05, 5.113900000000213e-05, 5.419499999999994e-05, 5.40549999999973e-05, 5.318099999999937e-05, 5.216700000000227e-05, 5.409699999999948e-05, 5.11530000000017e-05, 5.68749999999979e-05, 5.4013999999998064e-05, 5.308299999999891e-05, 5.5958000000001784e-05, 5.226399999999978e-05, 5.4944000000001214e-05, 5.312500000000109e-05, 5.406900000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.568" endtime="20201112 12:43:17.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.563" endtime="20201112 12:43:17.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.574" endtime="20201112 12:43:17.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.577" endtime="20201112 12:43:17.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.576" endtime="20201112 12:43:17.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.572" endtime="20201112 12:43:17.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.200" endtime="20201112 12:43:17.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.200" endtime="20201112 12:43:17.598"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.607" endtime="20201112 12:43:17.630"></status>
</kw>
<msg timestamp="20201112 12:43:17.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.606" endtime="20201112 12:43:17.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.631" endtime="20201112 12:43:17.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.634" endtime="20201112 12:43:17.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.603" endtime="20201112 12:43:17.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.601" endtime="20201112 12:43:17.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.643" endtime="20201112 12:43:17.930"></status>
</kw>
<msg timestamp="20201112 12:43:17.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.642" endtime="20201112 12:43:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.935" endtime="20201112 12:43:17.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.943" endtime="20201112 12:43:17.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.639" endtime="20201112 12:43:17.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.637" endtime="20201112 12:43:17.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.950" level="INFO">${RESULT} = [{'time': 0.025010917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.220900000000098e-05, 'source_diff': 5.220900000000098e-05}, {'time': 0.025071458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.947" endtime="20201112 12:43:17.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.964" level="INFO">${ACCURACY} = {'source_diff': [5.220900000000098e-05, 5.409700000000295e-05, 5.508300000000091e-05, 5.2165999999999324e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.405600000000024e-05, 5.220900000000098e-05...</msg>
<status status="PASS" starttime="20201112 12:43:17.951" endtime="20201112 12:43:17.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.969" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.967" endtime="20201112 12:43:17.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.971" level="INFO">VALUE: [5.220900000000098e-05, 5.409700000000295e-05, 5.508300000000091e-05, 5.2165999999999324e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.405600000000024e-05, 5.220900000000098e-05, 5.313900000000066e-05, 5.125000000000268e-05, 5.311100000000152e-05, 5.5986000000000924e-05, 5.406999999999981e-05, 5.124999999999921e-05, 5.3166000000000324e-05, 5.122299999999955e-05, 5.50410000000022e-05, 5.408399999999938e-05, 5.413899999999819e-05, 5.604099999999973e-05, 5.311099999999805e-05, 5.31669999999998e-05, 5.6930000000000175e-05, 5.59870000000004e-05, 5.227799999999935e-05, 5.511100000000005e-05, 5.7000000000001494e-05, 5.5027999999998634e-05, 5.4958000000000784e-05, 5.512499999999962e-05, 5.608300000000191e-05, 5.124999999999921e-05, 5.408299999999991e-05, 5.315300000000023e-05, 5.5986000000000924e-05, 5.315300000000023e-05, 5.3221999999998604e-05, 5.215299999999923e-05, 5.027799999999735e-05, 5.415299999999776e-05, 5.126299999999931e-05, 5.2165999999999324e-05, 5.315300000000023e-05, 5.2221999999997604e-05, 5.2151999999999754e-05, 5.126400000000225e-05, 5.512499999999962e-05, 5.119500000000041e-05, 5.413900000000166e-05, 5.031999999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.970" endtime="20201112 12:43:17.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.965" endtime="20201112 12:43:17.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.975" endtime="20201112 12:43:17.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.979" endtime="20201112 12:43:17.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.977" endtime="20201112 12:43:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.973" endtime="20201112 12:43:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.599" endtime="20201112 12:43:18.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.599" endtime="20201112 12:43:18.000"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.009" endtime="20201112 12:43:18.032"></status>
</kw>
<msg timestamp="20201112 12:43:18.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.007" endtime="20201112 12:43:18.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.034" endtime="20201112 12:43:18.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.037" endtime="20201112 12:43:18.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.005" endtime="20201112 12:43:18.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.002" endtime="20201112 12:43:18.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.046" endtime="20201112 12:43:18.333"></status>
</kw>
<msg timestamp="20201112 12:43:18.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025600708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.045" endtime="20201112 12:43:18.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025600708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.338" endtime="20201112 12:43:18.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.346" endtime="20201112 12:43:18.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.042" endtime="20201112 12:43:18.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.040" endtime="20201112 12:43:18.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.353" level="INFO">${RESULT} = [{'time': 0.025656778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.607000000000181e-05, 'source_diff': 5.607000000000181e-05}, {'time': 0.025717583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.349" endtime="20201112 12:43:18.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.367" level="INFO">${ACCURACY} = {'source_diff': [5.607000000000181e-05, 5.031900000000006e-05, 5.123600000000311e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.505500000000177e-05, 5.124999999999921e-05, 5.3263999999997313e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:18.354" endtime="20201112 12:43:18.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.372" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.371" endtime="20201112 12:43:18.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.375" level="INFO">VALUE: [5.607000000000181e-05, 5.031900000000006e-05, 5.123600000000311e-05, 5.313900000000066e-05, 5.31669999999998e-05, 5.505500000000177e-05, 5.124999999999921e-05, 5.3263999999997313e-05, 5.409699999999948e-05, 5.502699999999916e-05, 5.219500000000141e-05, 5.50280000000021e-05, 5.602700000000016e-05, 5.222200000000107e-05, 5.413899999999819e-05, 5.120899999999998e-05, 5.3179999999999894e-05, 5.133300000000063e-05, 5.216700000000227e-05, 5.123599999999964e-05, 5.412500000000209e-05, 5.126299999999931e-05, 5.5013999999999064e-05, 5.50549999999983e-05, 5.220900000000098e-05, 5.511100000000005e-05, 5.122299999999955e-05, 5.212500000000009e-05, 5.511100000000005e-05, 5.320899999999851e-05, 5.60280000000031e-05, 5.601299999999712e-05, 5.6041999999999204e-05, 5.415299999999776e-05, 5.406999999999981e-05, 5.6957999999999315e-05, 5.3151999999997285e-05, 5.418100000000037e-05, 5.129200000000139e-05, 5.031900000000006e-05, 5.31669999999998e-05, 5.126399999999878e-05, 5.408399999999938e-05, 5.127800000000182e-05, 5.21669999999988e-05, 5.412499999999862e-05, 5.033299999999963e-05, 5.509700000000048e-05, 5.5986000000000924e-05, 5.508300000000091e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.373" endtime="20201112 12:43:18.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.368" endtime="20201112 12:43:18.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.383" endtime="20201112 12:43:18.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.386" endtime="20201112 12:43:18.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.385" endtime="20201112 12:43:18.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.381" endtime="20201112 12:43:18.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.001" endtime="20201112 12:43:18.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.000" endtime="20201112 12:43:18.407"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.416" endtime="20201112 12:43:18.439"></status>
</kw>
<msg timestamp="20201112 12:43:18.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.415" endtime="20201112 12:43:18.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.441" endtime="20201112 12:43:18.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.444" endtime="20201112 12:43:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.412" endtime="20201112 12:43:18.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.410" endtime="20201112 12:43:18.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.453" endtime="20201112 12:43:18.740"></status>
</kw>
<msg timestamp="20201112 12:43:18.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024760014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.451" endtime="20201112 12:43:18.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024760014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.744" endtime="20201112 12:43:18.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.753" endtime="20201112 12:43:18.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.449" endtime="20201112 12:43:18.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.447" endtime="20201112 12:43:18.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.760" level="INFO">${RESULT} = [{'time': 0.024806486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.647199999999879e-05, 'source_diff': 4.647199999999879e-05}, {'time': 0.024867944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.756" endtime="20201112 12:43:18.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.774" level="INFO">${ACCURACY} = {'source_diff': [4.647199999999879e-05, 5.408299999999991e-05, 5.608299999999844e-05, 5.2207999999998034e-05, 5.21669999999988e-05, 5.131900000000106e-05, 5.1207999999997034e-05, 5.226300000000031e-05...</msg>
<status status="PASS" starttime="20201112 12:43:18.761" endtime="20201112 12:43:18.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.778" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.777" endtime="20201112 12:43:18.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.781" level="INFO">VALUE: [4.647199999999879e-05, 5.408299999999991e-05, 5.608299999999844e-05, 5.2207999999998034e-05, 5.21669999999988e-05, 5.131900000000106e-05, 5.1207999999997034e-05, 5.226300000000031e-05, 5.022199999999907e-05, 5.6041999999999204e-05, 5.12080000000005e-05, 5.5958000000001784e-05, 5.3179999999999894e-05, 5.209700000000095e-05, 5.608399999999791e-05, 5.112499999999909e-05, 5.3179999999999894e-05, 5.215299999999923e-05, 5.029099999999745e-05, 5.122200000000007e-05, 5.129199999999792e-05, 5.126400000000225e-05, 5.594500000000169e-05, 5.119500000000041e-05, 5.509799999999995e-05, 5.506899999999787e-05, 5.693099999999965e-05, 5.6027999999999634e-05, 5.506899999999787e-05, 5.123599999999964e-05, 5.5986000000000924e-05, 5.508400000000038e-05, 5.306899999999934e-05, 5.7014000000001064e-05, 5.597300000000083e-05, 5.219500000000141e-05, 5.219400000000193e-05, 5.41670000000008e-05, 5.606900000000234e-05, 5.6000000000000494e-05, 5.508300000000091e-05, 5.690300000000051e-05, 5.411099999999905e-05, 5.406999999999981e-05, 5.609800000000095e-05, 5.7000000000001494e-05, 5.5971999999997885e-05, 5.127699999999888e-05, 5.119500000000041e-05, 5.218100000000184e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.780" endtime="20201112 12:43:18.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.775" endtime="20201112 12:43:18.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.785" endtime="20201112 12:43:18.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.789" endtime="20201112 12:43:18.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.787" endtime="20201112 12:43:18.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.783" endtime="20201112 12:43:18.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.408" endtime="20201112 12:43:18.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.408" endtime="20201112 12:43:18.810"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.819" endtime="20201112 12:43:18.841"></status>
</kw>
<msg timestamp="20201112 12:43:18.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.817" endtime="20201112 12:43:18.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.842" endtime="20201112 12:43:18.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.845" endtime="20201112 12:43:18.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.814" endtime="20201112 12:43:18.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.812" endtime="20201112 12:43:18.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.854" endtime="20201112 12:43:19.141"></status>
</kw>
<msg timestamp="20201112 12:43:19.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.853" endtime="20201112 12:43:19.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.145" endtime="20201112 12:43:19.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.153" endtime="20201112 12:43:19.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.850" endtime="20201112 12:43:19.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.848" endtime="20201112 12:43:19.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.161" level="INFO">${RESULT} = [{'time': 0.024598083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.551399999999997e-05, 'source_diff': 4.551399999999997e-05}, {'time': 0.024658542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.157" endtime="20201112 12:43:19.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.174" level="INFO">${ACCURACY} = {'source_diff': [4.551399999999997e-05, 5.318099999999937e-05, 5.690300000000051e-05, 5.607000000000181e-05, 5.6930000000000175e-05, 5.5971999999997885e-05, 5.513899999999919e-05, 5.222200000000107e-0...</msg>
<status status="PASS" starttime="20201112 12:43:19.162" endtime="20201112 12:43:19.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.179" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.178" endtime="20201112 12:43:19.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.182" level="INFO">VALUE: [4.551399999999997e-05, 5.318099999999937e-05, 5.690300000000051e-05, 5.607000000000181e-05, 5.6930000000000175e-05, 5.5971999999997885e-05, 5.513899999999919e-05, 5.222200000000107e-05, 5.412500000000209e-05, 5.509700000000048e-05, 5.412500000000209e-05, 5.4985999999999924e-05, 5.031900000000006e-05, 5.2221999999997604e-05, 5.215299999999923e-05, 5.5013999999999064e-05, 5.5027999999998634e-05, 5.320900000000198e-05, 5.4137999999998715e-05, 5.509700000000048e-05, 5.024999999999821e-05, 5.508399999999691e-05, 5.030599999999996e-05, 5.6055999999998773e-05, 5.300000000000096e-05, 5.6014000000000064e-05, 5.60549999999993e-05, 5.413899999999819e-05, 5.019399999999993e-05, 5.3193999999999464e-05, 5.3193999999999464e-05, 5.309699999999848e-05, 5.319500000000241e-05, 5.130600000000096e-05, 5.415299999999776e-05, 5.7028000000000634e-05, 5.511100000000005e-05, 5.3193999999999464e-05, 5.316700000000327e-05, 5.211100000000052e-05, 5.511100000000005e-05, 5.790299999999804e-05, 5.127800000000182e-05, 5.225000000000021e-05, 5.6027999999999634e-05, 5.126399999999878e-05, 5.308400000000185e-05, 5.606899999999887e-05, 5.31669999999998e-05, 5.2207999999998034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.180" endtime="20201112 12:43:19.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.175" endtime="20201112 12:43:19.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.186" endtime="20201112 12:43:19.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.189" endtime="20201112 12:43:19.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.188" endtime="20201112 12:43:19.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.184" endtime="20201112 12:43:19.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.811" endtime="20201112 12:43:19.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.810" endtime="20201112 12:43:19.210"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.219" endtime="20201112 12:43:19.237"></status>
</kw>
<msg timestamp="20201112 12:43:19.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.218" endtime="20201112 12:43:19.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.239" endtime="20201112 12:43:19.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.242" endtime="20201112 12:43:19.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.215" endtime="20201112 12:43:19.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.213" endtime="20201112 12:43:19.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.251" endtime="20201112 12:43:19.537"></status>
</kw>
<msg timestamp="20201112 12:43:19.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020879667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.249" endtime="20201112 12:43:19.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020822639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020879667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.542" endtime="20201112 12:43:19.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.550" endtime="20201112 12:43:19.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.247" endtime="20201112 12:43:19.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.245" endtime="20201112 12:43:19.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.557" level="INFO">${RESULT} = [{'time': 0.020879667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7028000000000634e-05, 'source_diff': 5.7028000000000634e-05}, {'time': 0.020941597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:19.554" endtime="20201112 12:43:19.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.571" level="INFO">${ACCURACY} = {'source_diff': [5.7028000000000634e-05, 5.70550000000003e-05, 5.6041999999999204e-05, 5.3152000000000754e-05, 5.604099999999973e-05, 5.7000000000001494e-05, 5.404200000000067e-05, 5.512499999999962e-...</msg>
<status status="PASS" starttime="20201112 12:43:19.558" endtime="20201112 12:43:19.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.576" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.575" endtime="20201112 12:43:19.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.578" level="INFO">VALUE: [5.7028000000000634e-05, 5.70550000000003e-05, 5.6041999999999204e-05, 5.3152000000000754e-05, 5.604099999999973e-05, 5.7000000000001494e-05, 5.404200000000067e-05, 5.512499999999962e-05, 5.124999999999921e-05, 5.4999999999999494e-05, 5.413899999999819e-05, 5.6999999999998024e-05, 5.411200000000199e-05, 5.406900000000034e-05, 5.129099999999845e-05, 5.227800000000282e-05, 5.220900000000098e-05, 5.60549999999993e-05, 5.123599999999964e-05, 5.32080000000025e-05, 5.130500000000149e-05, 5.605500000000277e-05, 5.212500000000009e-05, 5.7069999999999343e-05, 5.129200000000139e-05, 5.415299999999776e-05, 5.5041999999998203e-05, 5.6930000000000175e-05, 5.22080000000015e-05, 5.6027999999999634e-05, 5.515300000000223e-05, 5.215299999999923e-05, 5.412499999999862e-05, 5.691700000000008e-05, 5.504200000000167e-05, 5.412499999999862e-05, 5.406999999999981e-05, 5.608300000000191e-05, 5.6041999999999204e-05, 5.688900000000094e-05, 5.126399999999878e-05, 5.222200000000107e-05, 5.411099999999905e-05, 5.7000000000001494e-05, 5.511100000000005e-05, 5.412499999999862e-05, 5.5985999999997454e-05, 5.612500000000062e-05, 5.322299999999808e-05, 5.6986000000001924e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.577" endtime="20201112 12:43:19.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.572" endtime="20201112 12:43:19.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.582" endtime="20201112 12:43:19.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.586" endtime="20201112 12:43:19.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.584" endtime="20201112 12:43:19.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.580" endtime="20201112 12:43:19.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.211" endtime="20201112 12:43:19.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.211" endtime="20201112 12:43:19.607"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.616" endtime="20201112 12:43:19.637"></status>
</kw>
<msg timestamp="20201112 12:43:19.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.615" endtime="20201112 12:43:19.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.638" endtime="20201112 12:43:19.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.641" endtime="20201112 12:43:19.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.612" endtime="20201112 12:43:19.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.610" endtime="20201112 12:43:19.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.650" endtime="20201112 12:43:19.938"></status>
</kw>
<msg timestamp="20201112 12:43:19.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020926958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.649" endtime="20201112 12:43:19.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020926958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.942" endtime="20201112 12:43:19.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.951" endtime="20201112 12:43:19.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.646" endtime="20201112 12:43:19.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.644" endtime="20201112 12:43:19.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.958" level="INFO">${RESULT} = [{'time': 0.020977278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.031999999999953e-05, 'source_diff': 5.031999999999953e-05}, {'time': 0.021037986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.955" endtime="20201112 12:43:19.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.972" level="INFO">${ACCURACY} = {'source_diff': [5.031999999999953e-05, 5.509700000000048e-05, 5.2249999999996743e-05, 5.415300000000123e-05, 5.686099999999833e-05, 5.126299999999931e-05, 5.3193999999999464e-05, 5.506900000000134e-0...</msg>
<status status="PASS" starttime="20201112 12:43:19.959" endtime="20201112 12:43:19.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.977" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.976" endtime="20201112 12:43:19.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.979" level="INFO">VALUE: [5.031999999999953e-05, 5.509700000000048e-05, 5.2249999999996743e-05, 5.415300000000123e-05, 5.686099999999833e-05, 5.126299999999931e-05, 5.3193999999999464e-05, 5.506900000000134e-05, 5.316700000000327e-05, 5.126399999999878e-05, 5.030599999999996e-05, 5.225000000000021e-05, 5.226399999999978e-05, 5.4013999999998064e-05, 5.411099999999905e-05, 5.126399999999878e-05, 5.322200000000207e-05, 5.409699999999948e-05, 5.412499999999862e-05, 5.113899999999866e-05, 5.413899999999819e-05, 5.033299999999963e-05, 5.405599999999677e-05, 5.2179999999998894e-05, 5.318099999999937e-05, 5.223700000000012e-05, 5.405500000000077e-05, 5.319499999999894e-05, 5.606999999999834e-05, 5.315300000000023e-05, 5.416699999999733e-05, 5.7028000000000634e-05, 5.706899999999987e-05, 5.11530000000017e-05, 5.411099999999905e-05, 5.6055999999998773e-05, 5.3207999999999034e-05, 5.023599999999864e-05, 5.3179999999999894e-05, 5.608400000000138e-05, 5.595900000000126e-05, 5.033299999999963e-05, 5.604099999999973e-05, 5.311100000000152e-05, 5.607000000000181e-05, 5.3179999999999894e-05, 5.691700000000008e-05, 5.513899999999919e-05, 5.137500000000281e-05, 5.311100000000152e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.978" endtime="20201112 12:43:19.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.973" endtime="20201112 12:43:19.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.983" endtime="20201112 12:43:19.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.987" endtime="20201112 12:43:20.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.985" endtime="20201112 12:43:20.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.981" endtime="20201112 12:43:20.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.608" endtime="20201112 12:43:20.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.608" endtime="20201112 12:43:20.008"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.017" endtime="20201112 12:43:20.037"></status>
</kw>
<msg timestamp="20201112 12:43:20.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.015" endtime="20201112 12:43:20.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.038" endtime="20201112 12:43:20.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.041" endtime="20201112 12:43:20.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.013" endtime="20201112 12:43:20.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.010" endtime="20201112 12:43:20.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.050" endtime="20201112 12:43:20.337"></status>
</kw>
<msg timestamp="20201112 12:43:20.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.049" endtime="20201112 12:43:20.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.341" endtime="20201112 12:43:20.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.349" endtime="20201112 12:43:20.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.046" endtime="20201112 12:43:20.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.044" endtime="20201112 12:43:20.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.356" level="INFO">${RESULT} = [{'time': 0.022111611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.890299999999904e-05, 'source_diff': 5.890299999999904e-05}, {'time': 0.022173153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.353" endtime="20201112 12:43:20.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.370" level="INFO">${ACCURACY} = {'source_diff': [5.890299999999904e-05, 5.406999999999981e-05, 5.506900000000134e-05, 5.5041999999998203e-05, 5.2235999999997174e-05, 5.604099999999973e-05, 5.50280000000021e-05, 5.6985999999998455e-0...</msg>
<status status="PASS" starttime="20201112 12:43:20.357" endtime="20201112 12:43:20.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.375" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.374" endtime="20201112 12:43:20.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.378" level="INFO">VALUE: [5.890299999999904e-05, 5.406999999999981e-05, 5.506900000000134e-05, 5.5041999999998203e-05, 5.2235999999997174e-05, 5.604099999999973e-05, 5.50280000000021e-05, 5.6985999999998455e-05, 5.5027999999998634e-05, 5.6027999999999634e-05, 5.5930000000002644e-05, 5.122200000000007e-05, 5.311100000000152e-05, 5.223600000000064e-05, 5.313899999999719e-05, 5.304199999999967e-05, 5.118100000000084e-05, 5.69870000000014e-05, 5.030500000000049e-05, 5.602700000000016e-05, 5.311100000000152e-05, 5.222200000000107e-05, 5.12080000000005e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.5999999999997024e-05, 5.315300000000023e-05, 5.504200000000167e-05, 5.402699999999816e-05, 5.6971999999998885e-05, 5.6027999999999634e-05, 5.311100000000152e-05, 5.3249999999997744e-05, 5.50549999999983e-05, 5.411200000000199e-05, 5.21669999999988e-05, 5.222200000000107e-05, 5.408399999999938e-05, 5.21669999999988e-05, 5.415299999999776e-05, 5.120899999999998e-05, 5.695899999999879e-05, 5.230500000000249e-05, 5.5027999999998634e-05, 5.411099999999905e-05, 5.608300000000191e-05, 5.409699999999948e-05, 5.2235999999997174e-05, 5.2207999999998034e-05, 5.6000000000000494e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.376" endtime="20201112 12:43:20.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.371" endtime="20201112 12:43:20.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.381" endtime="20201112 12:43:20.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.385" endtime="20201112 12:43:20.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.383" endtime="20201112 12:43:20.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.380" endtime="20201112 12:43:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.009" endtime="20201112 12:43:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.008" endtime="20201112 12:43:20.406"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.416" endtime="20201112 12:43:20.438"></status>
</kw>
<msg timestamp="20201112 12:43:20.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.414" endtime="20201112 12:43:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.440" endtime="20201112 12:43:20.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.443" endtime="20201112 12:43:20.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.411" endtime="20201112 12:43:20.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.409" endtime="20201112 12:43:20.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.452" endtime="20201112 12:43:20.738"></status>
</kw>
<msg timestamp="20201112 12:43:20.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025748458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.451" endtime="20201112 12:43:20.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025748458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.743" endtime="20201112 12:43:20.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.751" endtime="20201112 12:43:20.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.448" endtime="20201112 12:43:20.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.446" endtime="20201112 12:43:20.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.758" level="INFO">${RESULT} = [{'time': 0.025748458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1193999999997464e-05, 'source_diff': 5.1193999999997464e-05}, {'time': 0.025809806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:20.755" endtime="20201112 12:43:20.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.772" level="INFO">${ACCURACY} = {'source_diff': [5.1193999999997464e-05, 5.604200000000267e-05, 5.212500000000009e-05, 5.406900000000034e-05, 5.123599999999964e-05, 5.311199999999752e-05, 5.311200000000099e-05, 5.123599999999964e-05...</msg>
<status status="PASS" starttime="20201112 12:43:20.759" endtime="20201112 12:43:20.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.777" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.776" endtime="20201112 12:43:20.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.779" level="INFO">VALUE: [5.1193999999997464e-05, 5.604200000000267e-05, 5.212500000000009e-05, 5.406900000000034e-05, 5.123599999999964e-05, 5.311199999999752e-05, 5.311200000000099e-05, 5.123599999999964e-05, 5.213899999999966e-05, 5.505600000000124e-05, 5.213899999999966e-05, 5.213899999999966e-05, 5.311100000000152e-05, 5.412500000000209e-05, 5.6014000000000064e-05, 5.6957999999999315e-05, 5.219500000000141e-05, 5.5972000000001354e-05, 5.118100000000084e-05, 5.222300000000055e-05, 5.4985999999999924e-05, 5.313899999999719e-05, 5.511100000000005e-05, 5.312499999999762e-05, 5.497299999999983e-05, 5.506900000000134e-05, 5.119500000000041e-05, 5.409799999999895e-05, 5.218099999999837e-05, 5.122200000000007e-05, 5.691700000000008e-05, 5.219500000000141e-05, 5.50549999999983e-05, 5.1237000000002586e-05, 5.5971999999997885e-05, 5.50280000000021e-05, 5.6014000000000064e-05, 5.120899999999998e-05, 5.3166000000000324e-05, 5.690300000000051e-05, 5.5972000000001354e-05, 5.6014000000000064e-05, 5.304199999999967e-05, 5.4027999999997633e-05, 5.60549999999993e-05, 5.313900000000066e-05, 5.219500000000141e-05, 5.50549999999983e-05, 5.408399999999938e-05, 5.6957999999999315e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.778" endtime="20201112 12:43:20.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.773" endtime="20201112 12:43:20.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.783" endtime="20201112 12:43:20.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.787" endtime="20201112 12:43:20.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.785" endtime="20201112 12:43:20.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.782" endtime="20201112 12:43:20.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.407" endtime="20201112 12:43:20.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.407" endtime="20201112 12:43:20.808"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.817" endtime="20201112 12:43:20.840"></status>
</kw>
<msg timestamp="20201112 12:43:20.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.816" endtime="20201112 12:43:20.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.842" endtime="20201112 12:43:20.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.844" endtime="20201112 12:43:20.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.813" endtime="20201112 12:43:20.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.811" endtime="20201112 12:43:20.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.854" endtime="20201112 12:43:21.141"></status>
</kw>
<msg timestamp="20201112 12:43:21.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025639333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025692458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.852" endtime="20201112 12:43:21.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025639333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025692458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.145" endtime="20201112 12:43:21.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.154" endtime="20201112 12:43:21.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.850" endtime="20201112 12:43:21.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.848" endtime="20201112 12:43:21.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.161" level="INFO">${RESULT} = [{'time': 0.025692458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.312500000000109e-05, 'source_diff': 5.312500000000109e-05}, {'time': 0.025753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.157" endtime="20201112 12:43:21.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.175" level="INFO">${ACCURACY} = {'source_diff': [5.312500000000109e-05, 5.12080000000005e-05, 5.601300000000059e-05, 5.5165999999998855e-05, 5.40410000000012e-05, 5.222200000000107e-05, 5.50280000000021e-05, 5.116700000000127e-05, 5...</msg>
<status status="PASS" starttime="20201112 12:43:21.162" endtime="20201112 12:43:21.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.179" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.178" endtime="20201112 12:43:21.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.182" level="INFO">VALUE: [5.312500000000109e-05, 5.12080000000005e-05, 5.601300000000059e-05, 5.5165999999998855e-05, 5.40410000000012e-05, 5.222200000000107e-05, 5.50280000000021e-05, 5.116700000000127e-05, 5.030599999999996e-05, 5.119400000000093e-05, 5.409700000000295e-05, 5.508400000000038e-05, 5.405600000000024e-05, 5.408400000000285e-05, 5.222200000000107e-05, 5.208399999999738e-05, 5.126400000000225e-05, 5.405600000000024e-05, 5.313899999999719e-05, 5.4985999999999924e-05, 5.512499999999962e-05, 5.512499999999962e-05, 5.4194000000000464e-05, 5.124999999999921e-05, 5.7028000000000634e-05, 5.6027999999999634e-05, 5.129200000000139e-05, 5.023599999999864e-05, 5.222200000000107e-05, 5.508400000000038e-05, 5.3179999999999894e-05, 5.226399999999978e-05, 5.508300000000091e-05, 5.6055999999998773e-05, 5.415300000000123e-05, 5.318099999999937e-05, 5.413900000000166e-05, 5.4999999999999494e-05, 5.133299999999716e-05, 5.318099999999937e-05, 5.509699999999701e-05, 5.319500000000241e-05, 5.50280000000021e-05, 5.509700000000048e-05, 5.608399999999791e-05, 5.219400000000193e-05, 5.606999999999834e-05, 5.2249999999996743e-05, 5.413900000000166e-05, 5.60280000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.180" endtime="20201112 12:43:21.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.176" endtime="20201112 12:43:21.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.186" endtime="20201112 12:43:21.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.189" endtime="20201112 12:43:21.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.188" endtime="20201112 12:43:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.184" endtime="20201112 12:43:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.809" endtime="20201112 12:43:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.808" endtime="20201112 12:43:21.210"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.219" endtime="20201112 12:43:21.242"></status>
</kw>
<msg timestamp="20201112 12:43:21.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.218" endtime="20201112 12:43:21.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.243" endtime="20201112 12:43:21.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.246" endtime="20201112 12:43:21.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.215" endtime="20201112 12:43:21.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.213" endtime="20201112 12:43:21.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.255" endtime="20201112 12:43:21.544"></status>
</kw>
<msg timestamp="20201112 12:43:21.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025179069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.254" endtime="20201112 12:43:21.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025179069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.548" endtime="20201112 12:43:21.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.557" endtime="20201112 12:43:21.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.251" endtime="20201112 12:43:21.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.249" endtime="20201112 12:43:21.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.564" level="INFO">${RESULT} = [{'time': 0.025179069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.648599999999836e-05, 'source_diff': 4.648599999999836e-05}, {'time': 0.025239722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.560" endtime="20201112 12:43:21.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.578" level="INFO">${ACCURACY} = {'source_diff': [4.648599999999836e-05, 5.024999999999821e-05, 5.601300000000059e-05, 5.223600000000064e-05, 5.508300000000091e-05, 5.7000000000001494e-05, 5.608400000000138e-05, 5.415300000000123e-05...</msg>
<status status="PASS" starttime="20201112 12:43:21.565" endtime="20201112 12:43:21.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.582" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.581" endtime="20201112 12:43:21.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.585" level="INFO">VALUE: [4.648599999999836e-05, 5.024999999999821e-05, 5.601300000000059e-05, 5.223600000000064e-05, 5.508300000000091e-05, 5.7000000000001494e-05, 5.608400000000138e-05, 5.415300000000123e-05, 5.6027999999999634e-05, 5.312500000000109e-05, 5.3179999999999894e-05, 5.60549999999993e-05, 5.406900000000034e-05, 5.504200000000167e-05, 5.223600000000064e-05, 5.5013999999999064e-05, 5.602700000000016e-05, 5.412500000000209e-05, 5.226400000000325e-05, 5.126399999999878e-05, 5.2207999999998034e-05, 5.505600000000124e-05, 5.6986000000001924e-05, 5.511100000000005e-05, 5.413900000000166e-05, 5.219400000000193e-05, 5.6944000000003214e-05, 5.126399999999878e-05, 5.4180000000000894e-05, 5.318099999999937e-05, 5.129199999999792e-05, 5.222200000000107e-05, 5.218099999999837e-05, 5.313900000000066e-05, 5.6041999999999204e-05, 5.116700000000127e-05, 5.5999999999997024e-05, 5.6055999999998773e-05, 5.413900000000166e-05, 5.031999999999953e-05, 5.315300000000023e-05, 5.6027999999999634e-05, 5.508400000000038e-05, 5.126399999999878e-05, 5.213899999999966e-05, 5.2193999999998464e-05, 5.606999999999834e-05, 5.7013999999997594e-05, 5.225000000000021e-05, 5.222300000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.583" endtime="20201112 12:43:21.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.579" endtime="20201112 12:43:21.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.589" endtime="20201112 12:43:21.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.592" endtime="20201112 12:43:21.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.591" endtime="20201112 12:43:21.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.587" endtime="20201112 12:43:21.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.211" endtime="20201112 12:43:21.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.211" endtime="20201112 12:43:21.613"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.622" endtime="20201112 12:43:21.649"></status>
</kw>
<msg timestamp="20201112 12:43:21.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.621" endtime="20201112 12:43:21.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.651" endtime="20201112 12:43:21.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.653" endtime="20201112 12:43:21.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.618" endtime="20201112 12:43:21.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.616" endtime="20201112 12:43:21.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.663" endtime="20201112 12:43:21.950"></status>
</kw>
<msg timestamp="20201112 12:43:21.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.661" endtime="20201112 12:43:21.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.954" endtime="20201112 12:43:21.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.963" endtime="20201112 12:43:21.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.658" endtime="20201112 12:43:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.657" endtime="20201112 12:43:21.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.970" level="INFO">${RESULT} = [{'time': 0.024176403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7458999999999696e-05, 'source_diff': 4.7458999999999696e-05}, {'time': 0.024238139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:21.966" endtime="20201112 12:43:21.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.983" level="INFO">${ACCURACY} = {'source_diff': [4.7458999999999696e-05, 5.506999999999734e-05, 5.415300000000123e-05, 5.413900000000166e-05, 5.127799999999835e-05, 5.129099999999845e-05, 5.223600000000064e-05, 5.412500000000209e-05...</msg>
<status status="PASS" starttime="20201112 12:43:21.971" endtime="20201112 12:43:21.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.988" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.987" endtime="20201112 12:43:21.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.991" level="INFO">VALUE: [4.7458999999999696e-05, 5.506999999999734e-05, 5.415300000000123e-05, 5.413900000000166e-05, 5.127799999999835e-05, 5.129099999999845e-05, 5.223600000000064e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.501299999999959e-05, 5.126399999999878e-05, 5.219500000000141e-05, 5.020800000000297e-05, 5.6986000000001924e-05, 5.509700000000048e-05, 5.12080000000005e-05, 5.509799999999995e-05, 5.501400000000253e-05, 5.2221999999997604e-05, 5.415300000000123e-05, 5.604099999999973e-05, 5.613900000000019e-05, 5.3179999999999894e-05, 5.306899999999934e-05, 5.508300000000091e-05, 5.315300000000023e-05, 5.416699999999733e-05, 5.509799999999995e-05, 5.608400000000138e-05, 5.6916000000000605e-05, 5.7014000000001064e-05, 5.511100000000005e-05, 5.7000000000001494e-05, 5.3193999999999464e-05, 5.11530000000017e-05, 5.511100000000005e-05, 5.509699999999701e-05, 5.118100000000084e-05, 5.416699999999733e-05, 5.113900000000213e-05, 5.126400000000225e-05, 5.415299999999776e-05, 5.325000000000121e-05, 5.605600000000224e-05, 5.315299999999676e-05, 5.6943999999999745e-05, 5.509799999999995e-05, 5.225000000000021e-05, 5.2235999999997174e-05, 5.306999999999881e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.989" endtime="20201112 12:43:21.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.984" endtime="20201112 12:43:21.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.995" endtime="20201112 12:43:21.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.998" endtime="20201112 12:43:22.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.997" endtime="20201112 12:43:22.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.993" endtime="20201112 12:43:22.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.614" endtime="20201112 12:43:22.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.614" endtime="20201112 12:43:22.019"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.028" endtime="20201112 12:43:22.051"></status>
</kw>
<msg timestamp="20201112 12:43:22.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.027" endtime="20201112 12:43:22.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.053" endtime="20201112 12:43:22.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.056" endtime="20201112 12:43:22.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.024" endtime="20201112 12:43:22.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.022" endtime="20201112 12:43:22.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.065" endtime="20201112 12:43:22.353"></status>
</kw>
<msg timestamp="20201112 12:43:22.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025158208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.063" endtime="20201112 12:43:22.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025158208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.357" endtime="20201112 12:43:22.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.366" endtime="20201112 12:43:22.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.061" endtime="20201112 12:43:22.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.059" endtime="20201112 12:43:22.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.373" level="INFO">${RESULT} = [{'time': 0.025158208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3582999999999816e-05, 'source_diff': 4.3582999999999816e-05}, {'time': 0.025219292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:22.369" endtime="20201112 12:43:22.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.387" level="INFO">${ACCURACY} = {'source_diff': [4.3582999999999816e-05, 5.309800000000142e-05, 5.413899999999819e-05, 5.416699999999733e-05, 5.112499999999909e-05, 5.218000000000236e-05, 5.11669999999978e-05, 5.4165999999997855e-05...</msg>
<status status="PASS" starttime="20201112 12:43:22.374" endtime="20201112 12:43:22.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.392" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.391" endtime="20201112 12:43:22.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.394" level="INFO">VALUE: [4.3582999999999816e-05, 5.309800000000142e-05, 5.413899999999819e-05, 5.416699999999733e-05, 5.112499999999909e-05, 5.218000000000236e-05, 5.11669999999978e-05, 5.4165999999997855e-05, 5.4972000000000354e-05, 5.320899999999851e-05, 5.126399999999878e-05, 5.7013999999997594e-05, 5.016700000000027e-05, 5.313900000000066e-05, 5.49869999999994e-05, 5.315300000000023e-05, 5.211100000000052e-05, 5.4208000000000034e-05, 5.413900000000166e-05, 5.018099999999984e-05, 5.6014000000000064e-05, 5.5957999999998315e-05, 5.6055999999998773e-05, 5.119400000000093e-05, 5.223600000000064e-05, 5.6027999999999634e-05, 5.4999999999999494e-05, 5.2193999999998464e-05, 5.5958000000001784e-05, 5.318099999999937e-05, 5.119400000000093e-05, 5.213899999999966e-05, 5.125000000000268e-05, 5.49869999999994e-05, 5.602700000000016e-05, 5.309699999999848e-05, 5.223600000000064e-05, 5.211100000000052e-05, 5.408299999999991e-05, 5.219500000000141e-05, 5.408399999999938e-05, 5.124999999999921e-05, 5.126400000000225e-05, 5.4180000000000894e-05, 5.313900000000066e-05, 5.113900000000213e-05, 5.026399999999778e-05, 5.213899999999966e-05, 5.695900000000226e-05, 5.501400000000253e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.393" endtime="20201112 12:43:22.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.388" endtime="20201112 12:43:22.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.398" endtime="20201112 12:43:22.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.402" endtime="20201112 12:43:22.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.400" endtime="20201112 12:43:22.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.396" endtime="20201112 12:43:22.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.020" endtime="20201112 12:43:22.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.020" endtime="20201112 12:43:22.423"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.433" endtime="20201112 12:43:22.453"></status>
</kw>
<msg timestamp="20201112 12:43:22.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.431" endtime="20201112 12:43:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.455" endtime="20201112 12:43:22.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.457" endtime="20201112 12:43:22.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.428" endtime="20201112 12:43:22.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.426" endtime="20201112 12:43:22.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.467" endtime="20201112 12:43:22.753"></status>
</kw>
<msg timestamp="20201112 12:43:22.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.465" endtime="20201112 12:43:22.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.757" endtime="20201112 12:43:22.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.766" endtime="20201112 12:43:22.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.462" endtime="20201112 12:43:22.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.461" endtime="20201112 12:43:22.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.773" level="INFO">${RESULT} = [{'time': 0.023789431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.798699999999893e-05, 'source_diff': 5.798699999999893e-05}, {'time': 0.023850028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.769" endtime="20201112 12:43:22.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.786" level="INFO">${ACCURACY} = {'source_diff': [5.798699999999893e-05, 5.508400000000038e-05, 5.413900000000166e-05, 5.701299999999812e-05, 5.127799999999835e-05, 5.511199999999952e-05, 5.506900000000134e-05, 5.118099999999737e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:22.774" endtime="20201112 12:43:22.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.791" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.790" endtime="20201112 12:43:22.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.794" level="INFO">VALUE: [5.798699999999893e-05, 5.508400000000038e-05, 5.413900000000166e-05, 5.701299999999812e-05, 5.127799999999835e-05, 5.511199999999952e-05, 5.506900000000134e-05, 5.118099999999737e-05, 5.027800000000082e-05, 5.6027999999999634e-05, 5.412499999999862e-05, 5.41670000000008e-05, 5.4013999999998064e-05, 5.027800000000082e-05, 5.795899999999979e-05, 5.126299999999931e-05, 5.411100000000252e-05, 5.502699999999916e-05, 5.509700000000048e-05, 5.225000000000021e-05, 5.22080000000015e-05, 5.3985999999998924e-05, 5.508300000000091e-05, 5.225000000000021e-05, 5.129199999999792e-05, 5.4208000000000034e-05, 5.4999999999999494e-05, 5.222300000000055e-05, 5.222300000000055e-05, 5.127800000000182e-05, 5.702699999999769e-05, 5.701300000000159e-05, 5.506899999999787e-05, 5.225000000000021e-05, 5.593100000000212e-05, 5.508400000000038e-05, 5.127800000000182e-05, 5.50280000000021e-05, 5.212500000000009e-05, 5.030500000000049e-05, 5.4179999999997425e-05, 5.411099999999905e-05, 5.113900000000213e-05, 5.413900000000166e-05, 5.223700000000012e-05, 5.60410000000032e-05, 5.127700000000235e-05, 5.6999999999998024e-05, 5.6014000000000064e-05, 5.7055999999999774e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.792" endtime="20201112 12:43:22.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.787" endtime="20201112 12:43:22.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.798" endtime="20201112 12:43:22.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.801" endtime="20201112 12:43:22.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.800" endtime="20201112 12:43:22.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.796" endtime="20201112 12:43:22.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.424" endtime="20201112 12:43:22.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.423" endtime="20201112 12:43:22.822"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.831" endtime="20201112 12:43:22.850"></status>
</kw>
<msg timestamp="20201112 12:43:22.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.830" endtime="20201112 12:43:22.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.852" endtime="20201112 12:43:22.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.854" endtime="20201112 12:43:22.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.827" endtime="20201112 12:43:22.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.825" endtime="20201112 12:43:22.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.864" endtime="20201112 12:43:23.152"></status>
</kw>
<msg timestamp="20201112 12:43:23.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:22.862" endtime="20201112 12:43:23.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:23.156" endtime="20201112 12:43:23.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.165" endtime="20201112 12:43:23.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.859" endtime="20201112 12:43:23.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.858" endtime="20201112 12:43:23.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.172" level="INFO">${RESULT} = [{'time': 0.021231069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.506900000000134e-05, 'source_diff': 5.506900000000134e-05}, {'time': 0.021292236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.168" endtime="20201112 12:43:23.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.185" level="INFO">${ACCURACY} = {'source_diff': [5.506900000000134e-05, 5.411099999999905e-05, 5.7042000000000204e-05, 5.0237000000001586e-05, 5.693099999999965e-05, 5.3193999999999464e-05, 5.3207999999999034e-05, 5.222200000000107e...</msg>
<status status="PASS" starttime="20201112 12:43:23.173" endtime="20201112 12:43:23.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.190" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.189" endtime="20201112 12:43:23.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.193" level="INFO">VALUE: [5.506900000000134e-05, 5.411099999999905e-05, 5.7042000000000204e-05, 5.0237000000001586e-05, 5.693099999999965e-05, 5.3193999999999464e-05, 5.3207999999999034e-05, 5.222200000000107e-05, 5.129200000000139e-05, 5.21669999999988e-05, 5.3179999999999894e-05, 5.323600000000164e-05, 5.312500000000109e-05, 5.119500000000041e-05, 5.415299999999776e-05, 5.129099999999845e-05, 5.225000000000021e-05, 5.515300000000223e-05, 5.223600000000064e-05, 5.023599999999864e-05, 5.412500000000209e-05, 5.219400000000193e-05, 5.127800000000182e-05, 5.316700000000327e-05, 5.3179999999999894e-05, 5.512499999999962e-05, 5.6985999999998455e-05, 5.127799999999835e-05, 5.222200000000107e-05, 5.129099999999845e-05, 5.313900000000066e-05, 5.6943999999999745e-05, 5.043100000000009e-05, 5.511100000000005e-05, 5.4137999999998715e-05, 5.6027999999999634e-05, 5.511100000000005e-05, 5.7013999999997594e-05, 5.511100000000005e-05, 5.3193999999999464e-05, 5.509700000000048e-05, 5.511199999999952e-05, 5.512499999999962e-05, 5.2179999999998894e-05, 5.5985999999997454e-05, 5.223600000000064e-05, 5.124999999999921e-05, 5.6014000000000064e-05, 5.6000000000000494e-05, 5.406999999999981e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.191" endtime="20201112 12:43:23.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.186" endtime="20201112 12:43:23.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.197" endtime="20201112 12:43:23.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.200" endtime="20201112 12:43:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.199" endtime="20201112 12:43:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.195" endtime="20201112 12:43:23.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.823" endtime="20201112 12:43:23.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.822" endtime="20201112 12:43:23.221"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.230" endtime="20201112 12:43:23.252"></status>
</kw>
<msg timestamp="20201112 12:43:23.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.229" endtime="20201112 12:43:23.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.254" endtime="20201112 12:43:23.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.257" endtime="20201112 12:43:23.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.226" endtime="20201112 12:43:23.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.224" endtime="20201112 12:43:23.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.266" endtime="20201112 12:43:23.554"></status>
</kw>
<msg timestamp="20201112 12:43:23.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.265" endtime="20201112 12:43:23.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.558" endtime="20201112 12:43:23.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.567" endtime="20201112 12:43:23.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.262" endtime="20201112 12:43:23.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.260" endtime="20201112 12:43:23.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.574" level="INFO">${RESULT} = [{'time': 0.024075306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7445000000000126e-05, 'source_diff': 4.7445000000000126e-05}, {'time': 0.024135986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.570" endtime="20201112 12:43:23.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.588" level="INFO">${ACCURACY} = {'source_diff': [4.7445000000000126e-05, 5.411100000000252e-05, 5.40280000000011e-05, 5.218100000000184e-05, 5.409699999999948e-05, 5.118100000000084e-05, 5.6014000000000064e-05, 5.5986000000000924e-0...</msg>
<status status="PASS" starttime="20201112 12:43:23.575" endtime="20201112 12:43:23.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.592" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.591" endtime="20201112 12:43:23.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.595" level="INFO">VALUE: [4.7445000000000126e-05, 5.411100000000252e-05, 5.40280000000011e-05, 5.218100000000184e-05, 5.409699999999948e-05, 5.118100000000084e-05, 5.6014000000000064e-05, 5.5986000000000924e-05, 5.6027999999999634e-05, 5.6000000000000494e-05, 5.405500000000077e-05, 5.315300000000023e-05, 5.21669999999988e-05, 5.220900000000098e-05, 5.029200000000039e-05, 5.2207999999998034e-05, 5.5013999999999064e-05, 5.606999999999834e-05, 5.026399999999778e-05, 5.405500000000077e-05, 5.226399999999978e-05, 5.506999999999734e-05, 5.21669999999988e-05, 5.223600000000064e-05, 5.219499999999794e-05, 5.313900000000066e-05, 5.412499999999862e-05, 5.406999999999981e-05, 5.411100000000252e-05, 5.218099999999837e-05, 5.6041999999999204e-05, 5.4999999999999494e-05, 5.123599999999964e-05, 5.020899999999898e-05, 5.50410000000022e-05, 5.6999999999998024e-05, 5.615299999999976e-05, 5.50410000000022e-05, 5.405600000000024e-05, 5.608300000000191e-05, 5.5943999999998745e-05, 5.218000000000236e-05, 5.225000000000021e-05, 5.415300000000123e-05, 5.2151999999999754e-05, 5.509799999999995e-05, 5.219500000000141e-05, 5.695899999999879e-05, 5.509700000000048e-05, 5.220900000000098e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.593" endtime="20201112 12:43:23.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.588" endtime="20201112 12:43:23.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.603" endtime="20201112 12:43:23.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.606" endtime="20201112 12:43:23.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.605" endtime="20201112 12:43:23.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.601" endtime="20201112 12:43:23.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.222" endtime="20201112 12:43:23.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.222" endtime="20201112 12:43:23.627"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.636" endtime="20201112 12:43:23.659"></status>
</kw>
<msg timestamp="20201112 12:43:23.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.635" endtime="20201112 12:43:23.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.661" endtime="20201112 12:43:23.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.663" endtime="20201112 12:43:23.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.632" endtime="20201112 12:43:23.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.630" endtime="20201112 12:43:23.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.673" endtime="20201112 12:43:23.960"></status>
</kw>
<msg timestamp="20201112 12:43:23.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.671" endtime="20201112 12:43:23.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.964" endtime="20201112 12:43:23.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.973" endtime="20201112 12:43:23.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.668" endtime="20201112 12:43:23.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.667" endtime="20201112 12:43:23.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.980" level="INFO">${RESULT} = [{'time': 0.025055653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2666999999999705e-05, 'source_diff': 4.2666999999999705e-05}, {'time': 0.025117139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.976" endtime="20201112 12:43:23.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.993" level="INFO">${ACCURACY} = {'source_diff': [4.2666999999999705e-05, 5.219500000000141e-05, 5.036100000000224e-05, 5.4151999999998285e-05, 5.693100000000312e-05, 5.318099999999937e-05, 5.412500000000209e-05, 5.412499999999862e-0...</msg>
<status status="PASS" starttime="20201112 12:43:23.981" endtime="20201112 12:43:23.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.998" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.997" endtime="20201112 12:43:23.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.001" level="INFO">VALUE: [4.2666999999999705e-05, 5.219500000000141e-05, 5.036100000000224e-05, 5.4151999999998285e-05, 5.693100000000312e-05, 5.318099999999937e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.222200000000107e-05, 5.413899999999819e-05, 5.7000000000001494e-05, 5.226399999999978e-05, 5.212500000000009e-05, 5.318099999999937e-05, 5.323600000000164e-05, 5.1193999999997464e-05, 5.027799999999735e-05, 5.6986000000001924e-05, 5.225000000000021e-05, 5.515300000000223e-05, 5.226399999999978e-05, 5.413900000000166e-05, 5.594500000000169e-05, 5.226399999999978e-05, 5.511100000000005e-05, 5.115299999999823e-05, 5.127799999999835e-05, 5.408399999999938e-05, 5.2207999999998034e-05, 5.0223000000002016e-05, 5.415299999999776e-05, 5.611100000000105e-05, 5.111099999999952e-05, 5.511100000000005e-05, 5.506900000000134e-05, 5.31669999999998e-05, 5.313900000000066e-05, 5.515299999999876e-05, 5.509799999999995e-05, 5.6971999999998885e-05, 5.688900000000094e-05, 5.218000000000236e-05, 5.223600000000064e-05, 5.220900000000098e-05, 5.6027999999999634e-05, 5.312500000000109e-05, 5.413900000000166e-05, 5.501400000000253e-05, 5.126400000000225e-05, 5.509799999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.999" endtime="20201112 12:43:24.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.995" endtime="20201112 12:43:24.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.005" endtime="20201112 12:43:24.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.008" endtime="20201112 12:43:24.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.007" endtime="20201112 12:43:24.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.003" endtime="20201112 12:43:24.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.628" endtime="20201112 12:43:24.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.628" endtime="20201112 12:43:24.029"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.038" endtime="20201112 12:43:24.062"></status>
</kw>
<msg timestamp="20201112 12:43:24.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.037" endtime="20201112 12:43:24.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.064" endtime="20201112 12:43:24.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.067" endtime="20201112 12:43:24.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.034" endtime="20201112 12:43:24.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.032" endtime="20201112 12:43:24.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.076" endtime="20201112 12:43:24.362"></status>
</kw>
<msg timestamp="20201112 12:43:24.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.074" endtime="20201112 12:43:24.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.367" endtime="20201112 12:43:24.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.375" endtime="20201112 12:43:24.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.072" endtime="20201112 12:43:24.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.070" endtime="20201112 12:43:24.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.382" level="INFO">${RESULT} = [{'time': 0.024847597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2193999999998464e-05, 'source_diff': 5.2193999999998464e-05}, {'time': 0.024908486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:24.379" endtime="20201112 12:43:24.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.396" level="INFO">${ACCURACY} = {'source_diff': [5.2193999999998464e-05, 5.40280000000011e-05, 5.7000000000001494e-05, 5.41670000000008e-05, 5.5971999999997885e-05, 5.222300000000055e-05, 5.211099999999705e-05, 5.60549999999993e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:24.383" endtime="20201112 12:43:24.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.401" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.400" endtime="20201112 12:43:24.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.403" level="INFO">VALUE: [5.2193999999998464e-05, 5.40280000000011e-05, 5.7000000000001494e-05, 5.41670000000008e-05, 5.5971999999997885e-05, 5.222300000000055e-05, 5.211099999999705e-05, 5.60549999999993e-05, 5.4137999999998715e-05, 5.511100000000005e-05, 5.2151999999999754e-05, 5.513899999999919e-05, 5.4999999999999494e-05, 5.413899999999819e-05, 5.412500000000209e-05, 5.116700000000127e-05, 5.7027999999997164e-05, 5.112500000000256e-05, 5.7055999999999774e-05, 5.215299999999923e-05, 5.511100000000005e-05, 5.129200000000139e-05, 5.687500000000137e-05, 5.125000000000268e-05, 5.6014000000000064e-05, 5.129200000000139e-05, 5.225000000000021e-05, 5.5013999999999064e-05, 5.225000000000021e-05, 5.607000000000181e-05, 5.1179999999997894e-05, 5.118000000000136e-05, 5.509700000000048e-05, 5.033299999999963e-05, 5.5013999999999064e-05, 5.225000000000021e-05, 5.693099999999965e-05, 5.511100000000005e-05, 5.495899999999679e-05, 5.601300000000059e-05, 5.113899999999866e-05, 5.6041999999999204e-05, 5.502699999999916e-05, 5.4972000000000354e-05, 5.4151999999998285e-05, 5.7013999999997594e-05, 5.4013999999998064e-05, 5.124999999999921e-05, 5.11669999999978e-05, 5.508300000000091e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.402" endtime="20201112 12:43:24.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.397" endtime="20201112 12:43:24.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.407" endtime="20201112 12:43:24.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.411" endtime="20201112 12:43:24.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.409" endtime="20201112 12:43:24.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.405" endtime="20201112 12:43:24.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.030" endtime="20201112 12:43:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.030" endtime="20201112 12:43:24.432"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.441" endtime="20201112 12:43:24.462"></status>
</kw>
<msg timestamp="20201112 12:43:24.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.439" endtime="20201112 12:43:24.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.464" endtime="20201112 12:43:24.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.467" endtime="20201112 12:43:24.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.437" endtime="20201112 12:43:24.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.434" endtime="20201112 12:43:24.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.477" endtime="20201112 12:43:24.765"></status>
</kw>
<msg timestamp="20201112 12:43:24.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.475" endtime="20201112 12:43:24.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.769" endtime="20201112 12:43:24.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.778" endtime="20201112 12:43:24.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.472" endtime="20201112 12:43:24.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.471" endtime="20201112 12:43:24.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.785" level="INFO">${RESULT} = [{'time': 0.024363681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415300000000123e-05, 'source_diff': 5.415300000000123e-05}, {'time': 0.024425306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.781" endtime="20201112 12:43:24.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.799" level="INFO">${ACCURACY} = {'source_diff': [5.415300000000123e-05, 5.694499999999922e-05, 5.4999999999999494e-05, 5.312499999999762e-05, 5.215299999999923e-05, 5.226399999999978e-05, 5.7971999999999885e-05, 5.125000000000268e-0...</msg>
<status status="PASS" starttime="20201112 12:43:24.786" endtime="20201112 12:43:24.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.803" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.802" endtime="20201112 12:43:24.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.806" level="INFO">VALUE: [5.415300000000123e-05, 5.694499999999922e-05, 5.4999999999999494e-05, 5.312499999999762e-05, 5.215299999999923e-05, 5.226399999999978e-05, 5.7971999999999885e-05, 5.125000000000268e-05, 5.604200000000267e-05, 5.11530000000017e-05, 5.409699999999948e-05, 5.225000000000021e-05, 5.4137999999998715e-05, 5.406999999999981e-05, 5.129099999999845e-05, 5.319400000000293e-05, 5.695899999999879e-05, 5.31669999999998e-05, 5.7000000000001494e-05, 5.605500000000277e-05, 5.209799999999695e-05, 5.12080000000005e-05, 5.127799999999835e-05, 5.413900000000166e-05, 5.6041999999999204e-05, 5.119400000000093e-05, 5.412500000000209e-05, 5.7000000000001494e-05, 5.509700000000048e-05, 5.406999999999981e-05, 5.219500000000141e-05, 5.22080000000015e-05, 5.312500000000109e-05, 5.222200000000107e-05, 5.019399999999993e-05, 5.123599999999964e-05, 5.127699999999888e-05, 5.127799999999835e-05, 5.119400000000093e-05, 5.315299999999676e-05, 5.123599999999964e-05, 5.5958000000001784e-05, 5.1236999999999117e-05, 5.315300000000023e-05, 5.512499999999962e-05, 5.7014000000001064e-05, 5.215299999999923e-05, 5.118100000000084e-05, 5.123599999999964e-05, 5.604099999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.804" endtime="20201112 12:43:24.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.800" endtime="20201112 12:43:24.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.810" endtime="20201112 12:43:24.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.813" endtime="20201112 12:43:24.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.812" endtime="20201112 12:43:24.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.808" endtime="20201112 12:43:24.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.433" endtime="20201112 12:43:24.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.432" endtime="20201112 12:43:24.834"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.843" endtime="20201112 12:43:24.865"></status>
</kw>
<msg timestamp="20201112 12:43:24.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.842" endtime="20201112 12:43:24.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.867" endtime="20201112 12:43:24.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.869" endtime="20201112 12:43:24.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.839" endtime="20201112 12:43:24.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.837" endtime="20201112 12:43:24.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.879" endtime="20201112 12:43:25.166"></status>
</kw>
<msg timestamp="20201112 12:43:25.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.877" endtime="20201112 12:43:25.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.170" endtime="20201112 12:43:25.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.179" endtime="20201112 12:43:25.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.874" endtime="20201112 12:43:25.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.873" endtime="20201112 12:43:25.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.186" level="INFO">${RESULT} = [{'time': 0.023819028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7445000000000126e-05, 'source_diff': 4.7445000000000126e-05}, {'time': 0.023880764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:25.182" endtime="20201112 12:43:25.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.200" level="INFO">${ACCURACY} = {'source_diff': [4.7445000000000126e-05, 5.415299999999776e-05, 5.5971999999997885e-05, 5.031900000000006e-05, 5.41670000000008e-05, 5.606999999999834e-05, 5.120899999999998e-05, 5.412499999999862e-05...</msg>
<status status="PASS" starttime="20201112 12:43:25.187" endtime="20201112 12:43:25.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.205" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.204" endtime="20201112 12:43:25.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.207" level="INFO">VALUE: [4.7445000000000126e-05, 5.415299999999776e-05, 5.5971999999997885e-05, 5.031900000000006e-05, 5.41670000000008e-05, 5.606999999999834e-05, 5.120899999999998e-05, 5.412499999999862e-05, 5.225000000000021e-05, 5.415299999999776e-05, 5.3166000000000324e-05, 5.6999999999998024e-05, 5.3179999999999894e-05, 5.127800000000182e-05, 5.3207999999999034e-05, 5.694499999999922e-05, 5.301400000000053e-05, 5.6041999999999204e-05, 5.6055999999998773e-05, 5.512499999999962e-05, 5.405500000000077e-05, 5.2207999999998034e-05, 5.511100000000005e-05, 5.12080000000005e-05, 5.60549999999993e-05, 5.222200000000107e-05, 5.511100000000005e-05, 5.6027999999999634e-05, 5.126399999999878e-05, 5.319499999999894e-05, 5.509700000000048e-05, 5.4221999999999604e-05, 5.119499999999694e-05, 5.409699999999948e-05, 5.412499999999862e-05, 5.033400000000257e-05, 5.312500000000109e-05, 5.3179999999999894e-05, 5.6999999999998024e-05, 5.412500000000209e-05, 5.309699999999848e-05, 5.13470000000002e-05, 5.027800000000082e-05, 5.7014000000001064e-05, 5.413900000000166e-05, 5.222200000000107e-05, 5.605600000000224e-05, 5.4999999999999494e-05, 5.413900000000166e-05, 5.509699999999701e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.206" endtime="20201112 12:43:25.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.201" endtime="20201112 12:43:25.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.211" endtime="20201112 12:43:25.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.215" endtime="20201112 12:43:25.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.213" endtime="20201112 12:43:25.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.209" endtime="20201112 12:43:25.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.835" endtime="20201112 12:43:25.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.835" endtime="20201112 12:43:25.236"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.245" endtime="20201112 12:43:25.267"></status>
</kw>
<msg timestamp="20201112 12:43:25.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.243" endtime="20201112 12:43:25.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.268" endtime="20201112 12:43:25.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.271" endtime="20201112 12:43:25.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.240" endtime="20201112 12:43:25.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.238" endtime="20201112 12:43:25.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.280" endtime="20201112 12:43:25.568"></status>
</kw>
<msg timestamp="20201112 12:43:25.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024282375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:25.279" endtime="20201112 12:43:25.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024282375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:25.572" endtime="20201112 12:43:25.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.580" endtime="20201112 12:43:25.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.276" endtime="20201112 12:43:25.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.274" endtime="20201112 12:43:25.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.587" level="INFO">${RESULT} = [{'time': 0.024282375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.937499999999734e-05, 'source_diff': 4.937499999999734e-05}, {'time': 0.024343681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:25.584" endtime="20201112 12:43:25.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.601" level="INFO">${ACCURACY} = {'source_diff': [4.937499999999734e-05, 5.506999999999734e-05, 5.5013999999999064e-05, 5.313900000000066e-05, 5.509799999999995e-05, 5.693099999999965e-05, 5.408299999999991e-05, 5.502699999999916e-05...</msg>
<status status="PASS" starttime="20201112 12:43:25.588" endtime="20201112 12:43:25.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.606" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.605" endtime="20201112 12:43:25.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.609" level="INFO">VALUE: [4.937499999999734e-05, 5.506999999999734e-05, 5.5013999999999064e-05, 5.313900000000066e-05, 5.509799999999995e-05, 5.693099999999965e-05, 5.408299999999991e-05, 5.502699999999916e-05, 5.124999999999921e-05, 5.5958000000001784e-05, 5.608400000000138e-05, 5.4027999999997633e-05, 5.213899999999966e-05, 5.31669999999998e-05, 5.7014000000001064e-05, 5.5972000000001354e-05, 5.408299999999991e-05, 5.030499999999702e-05, 5.590299999999951e-05, 5.50280000000021e-05, 5.505600000000124e-05, 5.6930000000000175e-05, 5.312500000000109e-05, 5.215299999999923e-05, 5.408299999999991e-05, 5.127699999999888e-05, 5.027700000000135e-05, 5.2151999999999754e-05, 5.694499999999922e-05, 5.7000000000001494e-05, 5.02079999999995e-05, 5.212500000000009e-05, 5.504099999999873e-05, 5.113899999999866e-05, 5.027700000000135e-05, 5.6000000000000494e-05, 5.312500000000109e-05, 5.5027999999998634e-05, 5.4944000000001214e-05, 5.123599999999964e-05, 5.4929999999998175e-05, 5.4013999999998064e-05, 5.2193999999998464e-05, 5.409699999999948e-05, 5.123599999999964e-05, 5.406900000000034e-05, 5.220900000000098e-05, 5.406900000000034e-05, 5.122200000000007e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.607" endtime="20201112 12:43:25.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.602" endtime="20201112 12:43:25.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.612" endtime="20201112 12:43:25.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.616" endtime="20201112 12:43:25.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.614" endtime="20201112 12:43:25.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.611" endtime="20201112 12:43:25.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.237" endtime="20201112 12:43:25.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.236" endtime="20201112 12:43:25.637"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.646" endtime="20201112 12:43:25.668"></status>
</kw>
<msg timestamp="20201112 12:43:25.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.645" endtime="20201112 12:43:25.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.670" endtime="20201112 12:43:25.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.673" endtime="20201112 12:43:25.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.642" endtime="20201112 12:43:25.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.640" endtime="20201112 12:43:25.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.682" endtime="20201112 12:43:25.969"></status>
</kw>
<msg timestamp="20201112 12:43:25.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024723264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:25.680" endtime="20201112 12:43:25.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024723264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:25.973" endtime="20201112 12:43:25.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.981" endtime="20201112 12:43:25.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.678" endtime="20201112 12:43:25.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.676" endtime="20201112 12:43:25.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.989" level="INFO">${RESULT} = [{'time': 0.0247755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.223600000000064e-05, 'source_diff': 5.223600000000064e-05}, {'time': 0.02483625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:25.985" endtime="20201112 12:43:25.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.003" level="INFO">${ACCURACY} = {'source_diff': [5.223600000000064e-05, 5.606900000000234e-05, 5.594500000000169e-05, 5.313900000000066e-05, 5.030599999999996e-05, 5.2235999999997174e-05, 5.127800000000182e-05, 5.119400000000093e-05...</msg>
<status status="PASS" starttime="20201112 12:43:25.990" endtime="20201112 12:43:26.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.007" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.006" endtime="20201112 12:43:26.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.010" level="INFO">VALUE: [5.223600000000064e-05, 5.606900000000234e-05, 5.594500000000169e-05, 5.313900000000066e-05, 5.030599999999996e-05, 5.2235999999997174e-05, 5.127800000000182e-05, 5.119400000000093e-05, 5.127799999999835e-05, 5.129199999999792e-05, 5.127800000000182e-05, 5.124999999999921e-05, 5.127800000000182e-05, 5.590299999999951e-05, 5.126400000000225e-05, 5.509700000000048e-05, 5.127800000000182e-05, 5.405500000000077e-05, 5.606899999999887e-05, 5.325000000000121e-05, 5.5013999999999064e-05, 5.222200000000107e-05, 5.318099999999937e-05, 5.319499999999894e-05, 5.608300000000191e-05, 5.415300000000123e-05, 5.5986000000000924e-05, 5.508400000000038e-05, 5.415300000000123e-05, 5.511100000000005e-05, 5.030599999999996e-05, 5.409799999999895e-05, 5.220900000000098e-05, 5.2221999999997604e-05, 5.30280000000001e-05, 5.033299999999963e-05, 5.412499999999862e-05, 5.2235999999997174e-05, 5.691700000000008e-05, 5.223600000000064e-05, 5.7014000000001064e-05, 5.40280000000011e-05, 5.605600000000224e-05, 5.319499999999894e-05, 5.693099999999965e-05, 5.412499999999862e-05, 5.131900000000106e-05, 5.606899999999887e-05, 5.509799999999995e-05, 5.213899999999966e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.008" endtime="20201112 12:43:26.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.003" endtime="20201112 12:43:26.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.014" endtime="20201112 12:43:26.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.017" endtime="20201112 12:43:26.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.016" endtime="20201112 12:43:26.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.012" endtime="20201112 12:43:26.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.638" endtime="20201112 12:43:26.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.637" endtime="20201112 12:43:26.038"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.048" endtime="20201112 12:43:26.075"></status>
</kw>
<msg timestamp="20201112 12:43:26.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.046" endtime="20201112 12:43:26.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.076" endtime="20201112 12:43:26.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.079" endtime="20201112 12:43:26.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.043" endtime="20201112 12:43:26.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.041" endtime="20201112 12:43:26.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.088" endtime="20201112 12:43:26.376"></status>
</kw>
<msg timestamp="20201112 12:43:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025451667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.087" endtime="20201112 12:43:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025451667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.381" endtime="20201112 12:43:26.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.389" endtime="20201112 12:43:26.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.084" endtime="20201112 12:43:26.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.082" endtime="20201112 12:43:26.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.396" level="INFO">${RESULT} = [{'time': 0.025451667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.184800000000242e-05, 'source_diff': 8.184800000000242e-05}, {'time': 0.025543222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:26.393" endtime="20201112 12:43:26.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.410" level="INFO">${ACCURACY} = {'source_diff': [8.184800000000242e-05, 8.562500000000237e-05, 8.563899999999847e-05, 8.66249999999999e-05, 8.470799999999931e-05, 8.17910000000012e-05, 8.369400000000221e-05, 8.373600000000092e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:43:26.397" endtime="20201112 12:43:26.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.415" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.414" endtime="20201112 12:43:26.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.417" level="INFO">VALUE: [8.184800000000242e-05, 8.562500000000237e-05, 8.563899999999847e-05, 8.66249999999999e-05, 8.470799999999931e-05, 8.17910000000012e-05, 8.369400000000221e-05, 8.373600000000092e-05, 8.188899999999819e-05, 8.659800000000023e-05, 8.561099999999933e-05, 8.66669999999986e-05, 8.576299999999912e-05, 8.658300000000119e-05, 8.463900000000094e-05, 8.572299999999936e-05, 8.376400000000006e-05, 8.663899999999947e-05, 8.086099999999805e-05, 8.759800000000123e-05, 8.091600000000032e-05, 8.563900000000194e-05, 8.179200000000067e-05, 8.472199999999888e-05, 8.379099999999973e-05, 8.663899999999947e-05, 8.470900000000225e-05, 8.56249999999989e-05, 8.66249999999999e-05, 8.559799999999923e-05, 8.186099999999905e-05, 8.373600000000092e-05, 8.763900000000047e-05, 8.270900000000025e-05, 8.463799999999799e-05, 8.46660000000006e-05, 8.661100000000033e-05, 8.651399999999934e-05, 8.66530000000025e-05, 8.081899999999934e-05, 8.186100000000252e-05, 8.561099999999933e-05, 8.37919999999992e-05, 8.562500000000237e-05, 8.663899999999947e-05, 8.175000000000196e-05, 8.568100000000065e-05, 8.276399999999906e-05, 8.463900000000094e-05, 8.088900000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.416" endtime="20201112 12:43:26.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.411" endtime="20201112 12:43:26.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.421" endtime="20201112 12:43:26.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.425" endtime="20201112 12:43:26.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.423" endtime="20201112 12:43:26.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.419" endtime="20201112 12:43:26.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.039" endtime="20201112 12:43:26.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.039" endtime="20201112 12:43:26.446"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.455" endtime="20201112 12:43:26.478"></status>
</kw>
<msg timestamp="20201112 12:43:26.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.453" endtime="20201112 12:43:26.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.479" endtime="20201112 12:43:26.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.482" endtime="20201112 12:43:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.451" endtime="20201112 12:43:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.449" endtime="20201112 12:43:26.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.492" endtime="20201112 12:43:26.779"></status>
</kw>
<msg timestamp="20201112 12:43:26.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024846, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:26.490" endtime="20201112 12:43:26.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024846, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:26.783" endtime="20201112 12:43:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.792" endtime="20201112 12:43:26.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.487" endtime="20201112 12:43:26.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.486" endtime="20201112 12:43:26.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.799" level="INFO">${RESULT} = [{'time': 0.024846, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.718100000000174e-05, 'source_diff': 9.718100000000174e-05}, {'time': 0.024937764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:26.796" endtime="20201112 12:43:26.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.813" level="INFO">${ACCURACY} = {'source_diff': [9.718100000000174e-05, 8.466700000000008e-05, 8.373599999999745e-05, 8.675000000000002e-05, 8.575000000000249e-05, 8.474999999999802e-05, 8.38049999999993e-05, 8.751400000000034e-05, ...</msg>
<status status="PASS" starttime="20201112 12:43:26.800" endtime="20201112 12:43:26.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.818" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.816" endtime="20201112 12:43:26.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.820" level="INFO">VALUE: [9.718100000000174e-05, 8.466700000000008e-05, 8.373599999999745e-05, 8.675000000000002e-05, 8.575000000000249e-05, 8.474999999999802e-05, 8.38049999999993e-05, 8.751400000000034e-05, 8.381900000000234e-05, 8.283299999999744e-05, 8.09169999999998e-05, 8.477699999999769e-05, 8.475000000000149e-05, 8.665199999999956e-05, 8.474999999999802e-05, 8.475000000000149e-05, 8.284799999999995e-05, 8.763900000000047e-05, 8.38049999999993e-05, 8.190299999999776e-05, 8.472299999999836e-05, 8.188900000000165e-05, 8.66799999999987e-05, 8.761199999999733e-05, 8.668100000000165e-05, 8.281900000000134e-05, 8.174999999999849e-05, 8.379099999999973e-05, 8.368099999999865e-05, 8.283400000000038e-05, 8.37919999999992e-05, 8.570899999999979e-05, 8.654099999999901e-05, 8.47370000000014e-05, 8.475000000000149e-05, 8.273599999999992e-05, 8.570900000000325e-05, 8.272299999999982e-05, 8.463899999999747e-05, 8.28330000000009e-05, 8.177700000000163e-05, 8.369400000000221e-05, 8.092999999999989e-05, 8.475000000000149e-05, 8.473600000000192e-05, 8.187499999999862e-05, 8.187500000000208e-05, 8.666599999999913e-05, 8.570800000000031e-05, 8.38049999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.819" endtime="20201112 12:43:26.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.814" endtime="20201112 12:43:26.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.824" endtime="20201112 12:43:26.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.828" endtime="20201112 12:43:26.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.826" endtime="20201112 12:43:26.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.822" endtime="20201112 12:43:26.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.447" endtime="20201112 12:43:26.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.446" endtime="20201112 12:43:26.849"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.858" endtime="20201112 12:43:26.880"></status>
</kw>
<msg timestamp="20201112 12:43:26.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.856" endtime="20201112 12:43:26.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.882" endtime="20201112 12:43:26.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.885" endtime="20201112 12:43:26.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.853" endtime="20201112 12:43:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.851" endtime="20201112 12:43:26.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.894" endtime="20201112 12:43:27.182"></status>
</kw>
<msg timestamp="20201112 12:43:27.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.892" endtime="20201112 12:43:27.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.186" endtime="20201112 12:43:27.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.195" endtime="20201112 12:43:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.890" endtime="20201112 12:43:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.888" endtime="20201112 12:43:27.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.202" level="INFO">${RESULT} = [{'time': 0.024057181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.233400000000029e-05, 'source_diff': 7.233400000000029e-05}, {'time': 0.024149264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:27.198" endtime="20201112 12:43:27.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.216" level="INFO">${ACCURACY} = {'source_diff': [7.233400000000029e-05, 8.463900000000094e-05, 8.573599999999945e-05, 8.190300000000122e-05, 8.663899999999947e-05, 8.473599999999845e-05, 8.38049999999993e-05, 8.176399999999806e-05, ...</msg>
<status status="PASS" starttime="20201112 12:43:27.203" endtime="20201112 12:43:27.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.220" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.219" endtime="20201112 12:43:27.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.223" level="INFO">VALUE: [7.233400000000029e-05, 8.463900000000094e-05, 8.573599999999945e-05, 8.190300000000122e-05, 8.663899999999947e-05, 8.473599999999845e-05, 8.38049999999993e-05, 8.176399999999806e-05, 8.286100000000005e-05, 8.668000000000217e-05, 8.288899999999919e-05, 8.575000000000249e-05, 8.390299999999976e-05, 8.287499999999962e-05, 8.27919999999982e-05, 8.572199999999988e-05, 8.284799999999995e-05, 8.284700000000048e-05, 8.659699999999729e-05, 8.277799999999863e-05, 8.56249999999989e-05, 8.088900000000065e-05, 8.286100000000005e-05, 8.656899999999815e-05, 8.380599999999877e-05, 8.272199999999688e-05, 8.380600000000224e-05, 8.382000000000181e-05, 8.181999999999981e-05, 8.569400000000074e-05, 8.088900000000065e-05, 8.569500000000022e-05, 8.466700000000008e-05, 8.670900000000079e-05, 8.187500000000208e-05, 8.563899999999847e-05, 8.281900000000134e-05, 8.668000000000217e-05, 8.669399999999827e-05, 8.186100000000252e-05, 8.466599999999713e-05, 8.100000000000121e-05, 8.284700000000048e-05, 8.66799999999987e-05, 8.570899999999979e-05, 8.56660000000016e-05, 8.181999999999981e-05, 8.477699999999769e-05, 8.470900000000225e-05, 8.181900000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.221" endtime="20201112 12:43:27.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.216" endtime="20201112 12:43:27.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.227" endtime="20201112 12:43:27.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.230" endtime="20201112 12:43:27.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.229" endtime="20201112 12:43:27.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.225" endtime="20201112 12:43:27.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.850" endtime="20201112 12:43:27.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.849" endtime="20201112 12:43:27.251"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.260" endtime="20201112 12:43:27.287"></status>
</kw>
<msg timestamp="20201112 12:43:27.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.259" endtime="20201112 12:43:27.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.289" endtime="20201112 12:43:27.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.291" endtime="20201112 12:43:27.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.256" endtime="20201112 12:43:27.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.254" endtime="20201112 12:43:27.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.301" endtime="20201112 12:43:27.588"></status>
</kw>
<msg timestamp="20201112 12:43:27.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.299" endtime="20201112 12:43:27.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.592" endtime="20201112 12:43:27.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.601" endtime="20201112 12:43:27.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.297" endtime="20201112 12:43:27.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.295" endtime="20201112 12:43:27.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.608" level="INFO">${RESULT} = [{'time': 0.023421528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.713899999999956e-05, 'source_diff': 9.713899999999956e-05}, {'time': 0.023512625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:27.604" endtime="20201112 12:43:27.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.622" level="INFO">${ACCURACY} = {'source_diff': [9.713899999999956e-05, 8.569399999999727e-05, 8.186099999999905e-05, 8.668100000000165e-05, 8.565200000000203e-05, 8.28049999999983e-05, 8.188900000000165e-05, 8.379200000000267e-05, ...</msg>
<status status="PASS" starttime="20201112 12:43:27.609" endtime="20201112 12:43:27.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.626" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.625" endtime="20201112 12:43:27.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.629" level="INFO">VALUE: [9.713899999999956e-05, 8.569399999999727e-05, 8.186099999999905e-05, 8.668100000000165e-05, 8.565200000000203e-05, 8.28049999999983e-05, 8.188900000000165e-05, 8.379200000000267e-05, 8.476400000000106e-05, 8.286100000000005e-05, 8.56799999999977e-05, 8.66799999999987e-05, 8.572300000000282e-05, 8.569400000000074e-05, 8.281999999999734e-05, 8.37919999999992e-05, 8.281899999999787e-05, 8.473599999999845e-05, 8.284700000000048e-05, 8.187500000000208e-05, 8.188900000000165e-05, 8.463899999999747e-05, 8.286100000000005e-05, 8.188900000000165e-05, 8.186100000000252e-05, 8.570800000000031e-05, 8.475000000000149e-05, 8.668100000000165e-05, 8.18049999999973e-05, 8.274999999999949e-05, 8.474999999999802e-05, 8.09719999999986e-05, 8.477700000000116e-05, 8.090300000000022e-05, 8.381899999999887e-05, 8.574999999999902e-05, 8.187500000000208e-05, 8.472199999999888e-05, 8.473600000000192e-05, 8.283299999999744e-05, 8.276399999999906e-05, 8.470799999999931e-05, 8.190300000000122e-05, 8.570899999999979e-05, 8.76250000000009e-05, 8.759799999999776e-05, 8.572199999999988e-05, 8.277799999999863e-05, 8.47920000000002e-05, 8.268100000000111e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.627" endtime="20201112 12:43:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.622" endtime="20201112 12:43:27.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.633" endtime="20201112 12:43:27.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.636" endtime="20201112 12:43:27.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.635" endtime="20201112 12:43:27.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.631" endtime="20201112 12:43:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.252" endtime="20201112 12:43:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.252" endtime="20201112 12:43:27.657"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.666" endtime="20201112 12:43:27.689"></status>
</kw>
<msg timestamp="20201112 12:43:27.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.665" endtime="20201112 12:43:27.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.691" endtime="20201112 12:43:27.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.693" endtime="20201112 12:43:27.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.662" endtime="20201112 12:43:27.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.660" endtime="20201112 12:43:27.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.703" endtime="20201112 12:43:27.990"></status>
</kw>
<msg timestamp="20201112 12:43:27.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.701" endtime="20201112 12:43:27.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.995" endtime="20201112 12:43:28.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.003" endtime="20201112 12:43:28.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.699" endtime="20201112 12:43:28.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.697" endtime="20201112 12:43:28.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.010" level="INFO">${RESULT} = [{'time': 0.024311056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.806999999999953e-05, 'source_diff': 7.806999999999953e-05}, {'time': 0.024402111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:28.007" endtime="20201112 12:43:28.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.070" level="INFO">${ACCURACY} = {'source_diff': [7.806999999999953e-05, 8.666700000000208e-05, 8.37919999999992e-05, 8.287499999999962e-05, 8.180600000000024e-05, 8.09169999999998e-05, 8.48050000000003e-05, 8.572199999999988e-05, 8....</msg>
<status status="PASS" starttime="20201112 12:43:28.011" endtime="20201112 12:43:28.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.075" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.074" endtime="20201112 12:43:28.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.077" level="INFO">VALUE: [7.806999999999953e-05, 8.666700000000208e-05, 8.37919999999992e-05, 8.287499999999962e-05, 8.180600000000024e-05, 8.09169999999998e-05, 8.48050000000003e-05, 8.572199999999988e-05, 8.474999999999802e-05, 8.477800000000063e-05, 8.573599999999945e-05, 8.469499999999922e-05, 8.276399999999906e-05, 8.288799999999971e-05, 8.468099999999965e-05, 8.372300000000082e-05, 8.37919999999992e-05, 8.472200000000235e-05, 8.472199999999888e-05, 8.476400000000106e-05, 8.573599999999945e-05, 8.368099999999865e-05, 8.287499999999962e-05, 8.093099999999936e-05, 8.188900000000165e-05, 8.093099999999936e-05, 8.274999999999949e-05, 8.666599999999913e-05, 8.281900000000134e-05, 8.380599999999877e-05, 8.37919999999992e-05, 8.570800000000031e-05, 8.286100000000005e-05, 8.574999999999902e-05, 8.762499999999743e-05, 8.750000000000077e-05, 8.193100000000036e-05, 8.668000000000217e-05, 8.181900000000034e-05, 8.570899999999979e-05, 8.09580000000025e-05, 8.375000000000049e-05, 8.56799999999977e-05, 8.384800000000095e-05, 8.659699999999729e-05, 8.19170000000008e-05, 8.382000000000181e-05, 8.187499999999862e-05, 8.669500000000122e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.076" endtime="20201112 12:43:28.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.071" endtime="20201112 12:43:28.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.081" endtime="20201112 12:43:28.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.085" endtime="20201112 12:43:28.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.083" endtime="20201112 12:43:28.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.079" endtime="20201112 12:43:28.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.658" endtime="20201112 12:43:28.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.658" endtime="20201112 12:43:28.106"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.115" endtime="20201112 12:43:28.136"></status>
</kw>
<msg timestamp="20201112 12:43:28.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.114" endtime="20201112 12:43:28.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.137" endtime="20201112 12:43:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.140" endtime="20201112 12:43:28.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.110" endtime="20201112 12:43:28.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.108" endtime="20201112 12:43:28.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.149" endtime="20201112 12:43:28.435"></status>
</kw>
<msg timestamp="20201112 12:43:28.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.148" endtime="20201112 12:43:28.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.439" endtime="20201112 12:43:28.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.448" endtime="20201112 12:43:28.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.145" endtime="20201112 12:43:28.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.143" endtime="20201112 12:43:28.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.455" level="INFO">${RESULT} = [{'time': 0.022875292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.380599999999877e-05, 'source_diff': 8.380599999999877e-05}, {'time': 0.022967292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:28.452" endtime="20201112 12:43:28.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.469" level="INFO">${ACCURACY} = {'source_diff': [8.380599999999877e-05, 8.668100000000165e-05, 8.570800000000031e-05, 8.569400000000074e-05, 8.188900000000165e-05, 8.570900000000325e-05, 8.761100000000133e-05, 8.758400000000166e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:28.456" endtime="20201112 12:43:28.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.474" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.473" endtime="20201112 12:43:28.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.476" level="INFO">VALUE: [8.380599999999877e-05, 8.668100000000165e-05, 8.570800000000031e-05, 8.569400000000074e-05, 8.188900000000165e-05, 8.570900000000325e-05, 8.761100000000133e-05, 8.758400000000166e-05, 8.570899999999979e-05, 8.188900000000165e-05, 8.287499999999962e-05, 8.666700000000208e-05, 8.666700000000208e-05, 8.193000000000089e-05, 8.569400000000074e-05, 8.187500000000208e-05, 8.379099999999973e-05, 8.472199999999888e-05, 8.38049999999993e-05, 8.083300000000238e-05, 8.66530000000025e-05, 8.569400000000074e-05, 8.76250000000009e-05, 8.66660000000026e-05, 8.28330000000009e-05, 8.286100000000005e-05, 8.474999999999802e-05, 8.573599999999945e-05, 8.665299999999904e-05, 8.09169999999998e-05, 8.187499999999862e-05, 8.090199999999728e-05, 8.475000000000149e-05, 8.376400000000006e-05, 8.473599999999845e-05, 8.283299999999744e-05, 8.37919999999992e-05, 8.187499999999862e-05, 8.093099999999936e-05, 8.572199999999988e-05, 8.572299999999936e-05, 8.475000000000149e-05, 8.187499999999862e-05, 8.561099999999933e-05, 8.27910000000022e-05, 8.380600000000224e-05, 8.188899999999819e-05, 8.76120000000008e-05, 8.568100000000065e-05, 8.762499999999743e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.475" endtime="20201112 12:43:28.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.470" endtime="20201112 12:43:28.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.480" endtime="20201112 12:43:28.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.484" endtime="20201112 12:43:28.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.482" endtime="20201112 12:43:28.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.478" endtime="20201112 12:43:28.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.107" endtime="20201112 12:43:28.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.106" endtime="20201112 12:43:28.505"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.515" endtime="20201112 12:43:28.540"></status>
</kw>
<msg timestamp="20201112 12:43:28.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.513" endtime="20201112 12:43:28.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.541" endtime="20201112 12:43:28.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.544" endtime="20201112 12:43:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.510" endtime="20201112 12:43:28.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.507" endtime="20201112 12:43:28.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.553" endtime="20201112 12:43:28.839"></status>
</kw>
<msg timestamp="20201112 12:43:28.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025755111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02584075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.552" endtime="20201112 12:43:28.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025755111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02584075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.844" endtime="20201112 12:43:28.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.852" endtime="20201112 12:43:28.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.549" endtime="20201112 12:43:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.547" endtime="20201112 12:43:28.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.859" level="INFO">${RESULT} = [{'time': 0.02584075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.563899999999847e-05, 'source_diff': 8.563899999999847e-05}, {'time': 0.025932222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:28.856" endtime="20201112 12:43:28.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.873" level="INFO">${ACCURACY} = {'source_diff': [8.563899999999847e-05, 8.56530000000015e-05, 8.372200000000135e-05, 8.088900000000065e-05, 8.373600000000092e-05, 8.66249999999999e-05, 8.273599999999992e-05, 8.187499999999862e-05, 8...</msg>
<status status="PASS" starttime="20201112 12:43:28.860" endtime="20201112 12:43:28.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.878" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.877" endtime="20201112 12:43:28.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.881" level="INFO">VALUE: [8.563899999999847e-05, 8.56530000000015e-05, 8.372200000000135e-05, 8.088900000000065e-05, 8.373600000000092e-05, 8.66249999999999e-05, 8.273599999999992e-05, 8.187499999999862e-05, 8.274999999999949e-05, 8.48050000000003e-05, 8.179200000000067e-05, 8.654199999999848e-05, 8.376400000000006e-05, 8.369400000000221e-05, 8.56669999999976e-05, 8.761100000000133e-05, 8.376400000000006e-05, 8.094499999999893e-05, 8.468000000000017e-05, 8.286100000000005e-05, 8.372300000000082e-05, 8.568000000000117e-05, 8.370899999999779e-05, 8.281900000000134e-05, 8.084699999999848e-05, 8.56660000000016e-05, 8.655600000000152e-05, 8.17780000000011e-05, 8.752799999999991e-05, 8.190300000000122e-05, 8.372200000000135e-05, 8.472200000000235e-05, 8.851399999999787e-05, 8.183400000000285e-05, 8.184699999999948e-05, 8.27919999999982e-05, 8.180500000000077e-05, 8.756900000000262e-05, 8.177700000000163e-05, 8.763900000000047e-05, 8.17780000000011e-05, 8.665199999999956e-05, 8.655500000000205e-05, 8.657000000000109e-05, 8.374999999999702e-05, 8.769500000000222e-05, 8.370800000000178e-05, 8.573599999999945e-05, 8.367999999999917e-05, 8.184800000000242e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.879" endtime="20201112 12:43:28.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.874" endtime="20201112 12:43:28.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.888" endtime="20201112 12:43:28.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.892" endtime="20201112 12:43:28.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.890" endtime="20201112 12:43:28.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.887" endtime="20201112 12:43:28.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.506" endtime="20201112 12:43:28.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.505" endtime="20201112 12:43:28.913"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.922" endtime="20201112 12:43:28.945"></status>
</kw>
<msg timestamp="20201112 12:43:28.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.920" endtime="20201112 12:43:28.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.947" endtime="20201112 12:43:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.949" endtime="20201112 12:43:28.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.918" endtime="20201112 12:43:28.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.916" endtime="20201112 12:43:28.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.959" endtime="20201112 12:43:29.245"></status>
</kw>
<msg timestamp="20201112 12:43:29.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02460175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.957" endtime="20201112 12:43:29.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02460175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:29.249" endtime="20201112 12:43:29.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.258" endtime="20201112 12:43:29.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.955" endtime="20201112 12:43:29.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.953" endtime="20201112 12:43:29.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.265" level="INFO">${RESULT} = [{'time': 0.024685542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.379200000000267e-05, 'source_diff': 8.379200000000267e-05}, {'time': 0.024776986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:29.261" endtime="20201112 12:43:29.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.279" level="INFO">${ACCURACY} = {'source_diff': [8.379200000000267e-05, 8.094399999999946e-05, 8.187500000000208e-05, 8.572199999999988e-05, 8.283299999999744e-05, 8.377799999999963e-05, 8.284700000000048e-05, 8.380600000000224e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:29.266" endtime="20201112 12:43:29.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.284" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.283" endtime="20201112 12:43:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.286" level="INFO">VALUE: [8.379200000000267e-05, 8.094399999999946e-05, 8.187500000000208e-05, 8.572199999999988e-05, 8.283299999999744e-05, 8.377799999999963e-05, 8.284700000000048e-05, 8.380600000000224e-05, 8.381899999999887e-05, 8.368000000000264e-05, 8.476399999999759e-05, 8.283400000000038e-05, 8.763900000000047e-05, 8.094399999999946e-05, 8.668100000000165e-05, 8.272199999999688e-05, 8.763900000000047e-05, 8.094499999999893e-05, 8.372199999999788e-05, 8.375000000000049e-05, 8.377799999999963e-05, 8.562500000000237e-05, 8.181900000000034e-05, 8.379200000000267e-05, 8.286100000000005e-05, 8.187499999999862e-05, 8.188899999999819e-05, 8.081899999999934e-05, 8.188900000000165e-05, 8.194499999999993e-05, 8.66249999999999e-05, 8.568000000000117e-05, 8.09169999999998e-05, 8.284700000000048e-05, 8.56249999999989e-05, 8.381999999999834e-05, 8.47920000000002e-05, 8.188900000000165e-05, 8.373599999999745e-05, 8.280599999999777e-05, 8.47920000000002e-05, 8.570800000000031e-05, 8.187500000000208e-05, 8.763900000000047e-05, 8.372300000000082e-05, 8.66669999999986e-05, 8.668100000000165e-05, 8.558300000000019e-05, 8.094400000000293e-05, 8.763900000000047e-05]</msg>
<status status="PASS" starttime="20201112 12:43:29.285" endtime="20201112 12:43:29.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.280" endtime="20201112 12:43:29.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.290" endtime="20201112 12:43:29.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.294" endtime="20201112 12:43:29.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.292" endtime="20201112 12:43:29.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.288" endtime="20201112 12:43:29.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.914" endtime="20201112 12:43:29.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.913" endtime="20201112 12:43:29.315"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.324" endtime="20201112 12:43:29.347"></status>
</kw>
<msg timestamp="20201112 12:43:29.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.322" endtime="20201112 12:43:29.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.348" endtime="20201112 12:43:29.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.351" endtime="20201112 12:43:29.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.319" endtime="20201112 12:43:29.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.317" endtime="20201112 12:43:29.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.361" endtime="20201112 12:43:29.647"></status>
</kw>
<msg timestamp="20201112 12:43:29.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.359" endtime="20201112 12:43:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.651" endtime="20201112 12:43:29.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.660" endtime="20201112 12:43:29.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.356" endtime="20201112 12:43:29.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.355" endtime="20201112 12:43:29.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.667" level="INFO">${RESULT} = [{'time': 0.024903736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.090300000000022e-05, 'source_diff': 8.090300000000022e-05}, {'time': 0.024995542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:29.663" endtime="20201112 12:43:29.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.682" level="INFO">${ACCURACY} = {'source_diff': [8.090300000000022e-05, 8.376400000000006e-05, 8.284700000000048e-05, 8.186099999999905e-05, 8.476400000000106e-05, 8.380599999999877e-05, 8.665299999999904e-05, 8.665299999999904e-05,...</msg>
<status status="PASS" starttime="20201112 12:43:29.668" endtime="20201112 12:43:29.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.686" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.685" endtime="20201112 12:43:29.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.689" level="INFO">VALUE: [8.090300000000022e-05, 8.376400000000006e-05, 8.284700000000048e-05, 8.186099999999905e-05, 8.476400000000106e-05, 8.380599999999877e-05, 8.665299999999904e-05, 8.665299999999904e-05, 8.284799999999995e-05, 8.286100000000005e-05, 8.088900000000065e-05, 8.472200000000235e-05, 8.087499999999762e-05, 8.187499999999862e-05, 8.280599999999777e-05, 8.559699999999976e-05, 8.473600000000192e-05, 8.172199999999935e-05, 8.665299999999904e-05, 8.281900000000134e-05, 8.468000000000017e-05, 8.666700000000208e-05, 8.191699999999733e-05, 8.668100000000165e-05, 8.370799999999831e-05, 8.286100000000005e-05, 8.670800000000131e-05, 8.190300000000122e-05, 8.461200000000127e-05, 8.66249999999999e-05, 8.188900000000165e-05, 8.670900000000079e-05, 8.56249999999989e-05, 8.473599999999845e-05, 8.76120000000008e-05, 8.093099999999936e-05, 8.277799999999863e-05, 8.670800000000131e-05, 8.38049999999993e-05, 8.572199999999988e-05, 8.3846999999998e-05, 8.470799999999931e-05, 8.470899999999879e-05, 8.477700000000116e-05, 8.093099999999936e-05, 8.466700000000008e-05, 8.476400000000106e-05, 8.475000000000149e-05, 8.380500000000277e-05, 8.668100000000165e-05]</msg>
<status status="PASS" starttime="20201112 12:43:29.687" endtime="20201112 12:43:29.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.683" endtime="20201112 12:43:29.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.693" endtime="20201112 12:43:29.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.696" endtime="20201112 12:43:29.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.695" endtime="20201112 12:43:29.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.691" endtime="20201112 12:43:29.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.316" endtime="20201112 12:43:29.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.315" endtime="20201112 12:43:29.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.815" endtime="20201112 12:43:29.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.724" endtime="20201112 12:43:29.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.722" endtime="20201112 12:43:29.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.720" endtime="20201112 12:43:29.745"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:49.741" endtime="20201112 12:43:29.745" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:08.222" endtime="20201112 12:43:29.750"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.807" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:43:29.815" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:43:30.900" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:43:29.806" endtime="20201112 12:43:30.901"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.904" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:43:30.902" endtime="20201112 12:43:30.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.804" endtime="20201112 12:43:30.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.907" endtime="20201112 12:43:31.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.906" endtime="20201112 12:43:31.094"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.107" endtime="20201112 12:43:31.126"></status>
</kw>
<msg timestamp="20201112 12:43:31.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.105" endtime="20201112 12:43:31.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.128" endtime="20201112 12:43:31.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.132" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:31.130" endtime="20201112 12:43:31.133"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.103" endtime="20201112 12:43:31.134"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.101" endtime="20201112 12:43:31.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.099" endtime="20201112 12:43:31.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:31.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:31.139" endtime="20201112 12:43:31.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.135" endtime="20201112 12:43:31.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.098" endtime="20201112 12:43:31.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.098" endtime="20201112 12:43:31.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.142" endtime="20201112 12:43:31.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.097" endtime="20201112 12:43:31.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.145" endtime="20201112 12:43:31.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.095" endtime="20201112 12:43:31.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.803" endtime="20201112 12:43:31.147"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.154" endtime="20201112 12:43:31.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.152" endtime="20201112 12:43:31.174"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.188" endtime="20201112 12:43:31.209"></status>
</kw>
<msg timestamp="20201112 12:43:31.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.186" endtime="20201112 12:43:31.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.213" endtime="20201112 12:43:31.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:31.218" endtime="20201112 12:43:31.223"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.183" endtime="20201112 12:43:31.225"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.181" endtime="20201112 12:43:31.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.180" endtime="20201112 12:43:31.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:31.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:31.233" endtime="20201112 12:43:31.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.229" endtime="20201112 12:43:31.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.179" endtime="20201112 12:43:31.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.178" endtime="20201112 12:43:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.239" endtime="20201112 12:43:31.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.177" endtime="20201112 12:43:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.175" endtime="20201112 12:43:31.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.151" endtime="20201112 12:43:31.245"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:31.253" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.273" endtime="20201112 12:43:33.388"></status>
</kw>
<msg timestamp="20201112 12:43:33.388" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 426269, 'wakeups': [436279, 446289, 456298, 466278, 476287, 486297, 49...</msg>
<status status="PASS" starttime="20201112 12:43:31.270" endtime="20201112 12:43:33.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 426269, 'wakeups': [436279, 446289, 456298, 466278, 476287, 486297, 49...</msg>
<status status="PASS" starttime="20201112 12:43:33.390" endtime="20201112 12:43:33.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.393" endtime="20201112 12:43:33.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.264" endtime="20201112 12:43:33.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.257" endtime="20201112 12:43:33.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.399" level="INFO">${RESULT} = {'wakeups': [436279, 446289, 456298, 466278, 476287, 486297, 496276, 506286, 516296, 526275, 536285, 546295, 556274, 566284, 576293, 586273, 596282, 606292, 616271, 626281, 636291, 646270, 656280, 666...</msg>
<status status="PASS" starttime="20201112 12:43:33.397" endtime="20201112 12:43:33.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.403" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:33.402" endtime="20201112 12:43:33.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.405" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:33.404" endtime="20201112 12:43:33.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.399" endtime="20201112 12:43:33.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.410" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:33.409" endtime="20201112 12:43:33.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.413" level="INFO">VALUE: 426269</msg>
<status status="PASS" starttime="20201112 12:43:33.412" endtime="20201112 12:43:33.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.407" endtime="20201112 12:43:33.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.418" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:33.417" endtime="20201112 12:43:33.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.420" level="INFO">VALUE: [436279, 446289, 456298, 466278, 476287, 486297, 496276, 506286, 516296, 526275, 536285, 546295, 556274, 566284, 576293, 586273, 596282, 606292, 616271, 626281, 636291, 646270, 656280, 666290, 676269, 686279, 696289, 706298, 716278, 726287, 736297, 746276, 756286, 766296, 776275, 786285, 796295, 806274, 816284, 826293, 836273, 846282, 856292, 866271, 876281, 886291, 896270, 906280, 916290, 926269, 936279, 946289, 956298, 966278, 976287, 986297, 996276, 1006286, 1016296, 1026275, 1036285, 1046295, 1056274, 1066284, 1076293, 1086273, 1096282, 1106292, 1116271, 1126281, 1136291, 1146270, 1156280, 1166290, 1176269, 1186279, 1196289, 1206298, 1216278, 1226287, 1236297, 1246276, 1256286, 1266296, 1276275, 1286285, 1296295, 1306274, 1316284, 1326293, 1336273, 1346282, 1356292, 1366271, 1376281, 1386291, 1396270, 1406280, 1416290, 1426269]</msg>
<status status="PASS" starttime="20201112 12:43:33.419" endtime="20201112 12:43:33.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.414" endtime="20201112 12:43:33.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.428" endtime="20201112 12:43:33.723"></status>
</kw>
<msg timestamp="20201112 12:43:33.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112300722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122304208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.426" endtime="20201112 12:43:33.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112300722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122304208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.727" endtime="20201112 12:43:33.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.736" endtime="20201112 12:43:33.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.423" endtime="20201112 12:43:33.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.421" endtime="20201112 12:43:33.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.764" level="INFO">${RESULT} = {'source_diff': [0, 0.010003485999999992, 0.010009486000000012, 0.010009472999999991, 0.00997894399999999, 0.010009457999999999, 0.010009458999999998, 0.009978861000000006, 0.01000947200000002, 0.0100...</msg>
<status status="PASS" starttime="20201112 12:43:33.739" endtime="20201112 12:43:33.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.769" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:33.768" endtime="20201112 12:43:33.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.771" level="INFO">VALUE: 0.112300722</msg>
<status status="PASS" starttime="20201112 12:43:33.770" endtime="20201112 12:43:33.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.765" endtime="20201112 12:43:33.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.777" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:33.776" endtime="20201112 12:43:33.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.779" level="INFO">VALUE: [0.122304208, 0.132313694, 0.142323167, 0.152302111, 0.162311569, 0.172321028, 0.182299889, 0.192309361, 0.202318889, 0.212297694, 0.222307181, 0.232316653, 0.242295556, 0.252305, 0.262314472, 0.272293417, 0.282302819, 0.292312389, 0.30229125, 0.312300667, 0.322310111, 0.332289083, 0.342298542, 0.352307972, 0.362286917, 0.372296375, 0.382305806, 0.392315264, 0.402294153, 0.412303625, 0.422313139, 0.432292014, 0.4423015, 0.452310958, 0.462289861, 0.472299319, 0.482308764, 0.49228775, 0.502297153, 0.512306667, 0.522285583, 0.532295, 0.542304486, 0.552283389, 0.562292833, 0.572302292, 0.582281194, 0.592290722, 0.602300111, 0.612279083, 0.622288542, 0.632297931, 0.642307403, 0.652286375, 0.662295806, 0.67230525, 0.682284236, 0.692293625, 0.702303111, 0.712282069, 0.722291486, 0.732300917, 0.742279889, 0.752289333, 0.762298847, 0.772277778, 0.782287139, 0.792296597, 0.802275556, 0.812285014, 0.822294458, 0.832273333, 0.842282847, 0.85229225, 0.862271264, 0.872280639, 0.882290153, 0.892299583, 0.902278542, 0.912287958, 0.922297389, 0.932276333, 0.942285806, 0.952295236, 0.962274167, 0.972283694, 0.982293083, 0.992272069, 1.002281417, 1.012290917, 1.022269875, 1.032279278, 1.042288764, 1.052267667, 1.062277139, 1.072286556, 1.082265542, 1.092275, 1.102284472, 1.112263361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:33.778" endtime="20201112 12:43:33.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.773" endtime="20201112 12:43:33.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.782" endtime="20201112 12:43:33.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.786" endtime="20201112 12:43:33.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.784" endtime="20201112 12:43:33.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.781" endtime="20201112 12:43:33.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.254" endtime="20201112 12:43:33.807"></status>
</kw>
<msg timestamp="20201112 12:43:33.807" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.816" endtime="20201112 12:43:35.925"></status>
</kw>
<msg timestamp="20201112 12:43:35.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2968780, 'wakeups': [2978790, 2988800, 2998809, 3008789, 3018798, 3028...</msg>
<status status="PASS" starttime="20201112 12:43:33.814" endtime="20201112 12:43:35.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2968780, 'wakeups': [2978790, 2988800, 2998809, 3008789, 3018798, 3028...</msg>
<status status="PASS" starttime="20201112 12:43:35.927" endtime="20201112 12:43:35.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.930" endtime="20201112 12:43:35.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.811" endtime="20201112 12:43:35.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.809" endtime="20201112 12:43:35.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.936" level="INFO">${RESULT} = {'wakeups': [2978790, 2988800, 2998809, 3008789, 3018798, 3028808, 3038787, 3048797, 3058807, 3068786, 3078796, 3088806, 3098785, 3108795, 3118804, 3128784, 3138793, 3148803, 3158782, 3168792, 3178802...</msg>
<status status="PASS" starttime="20201112 12:43:35.933" endtime="20201112 12:43:35.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.941" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:35.940" endtime="20201112 12:43:35.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.943" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:35.942" endtime="20201112 12:43:35.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.936" endtime="20201112 12:43:35.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.948" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:35.947" endtime="20201112 12:43:35.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.951" level="INFO">VALUE: 2968780</msg>
<status status="PASS" starttime="20201112 12:43:35.950" endtime="20201112 12:43:35.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.945" endtime="20201112 12:43:35.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.956" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:35.955" endtime="20201112 12:43:35.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.958" level="INFO">VALUE: [2978790, 2988800, 2998809, 3008789, 3018798, 3028808, 3038787, 3048797, 3058807, 3068786, 3078796, 3088806, 3098785, 3108795, 3118804, 3128784, 3138793, 3148803, 3158782, 3168792, 3178802, 3188781, 3198791, 3208801, 3218780, 3228790, 3238800, 3248809, 3258789, 3268798, 3278808, 3288787, 3298797, 3308807, 3318786, 3328796, 3338806, 3348785, 3358795, 3368804, 3378784, 3388793, 3398803, 3408782, 3418792, 3428802, 3438781, 3448791, 3458801, 3468780, 3478790, 3488800, 3498809, 3508789, 3518798, 3528808, 3538787, 3548797, 3558807, 3568786, 3578796, 3588806, 3598785, 3608795, 3618804, 3628784, 3638793, 3648803, 3658782, 3668792, 3678802, 3688781, 3698791, 3708801, 3718780, 3728790, 3738800, 3748809, 3758789, 3768798, 3778808, 3788787, 3798797, 3808807, 3818786, 3828796, 3838806, 3848785, 3858795, 3868804, 3878784, 3888793, 3898803, 3908782, 3918792, 3928802, 3938781, 3948791, 3958801, 3968780]</msg>
<status status="PASS" starttime="20201112 12:43:35.957" endtime="20201112 12:43:35.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.952" endtime="20201112 12:43:35.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.966" endtime="20201112 12:43:36.259"></status>
</kw>
<msg timestamp="20201112 12:43:36.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032462764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.965" endtime="20201112 12:43:36.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032462764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.263" endtime="20201112 12:43:36.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.270" endtime="20201112 12:43:36.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.962" endtime="20201112 12:43:36.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.960" endtime="20201112 12:43:36.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.299" level="INFO">${RESULT} = {'source_diff': [0, 0.010009694999999999, 0.010009417, 0.010009444, 0.009978903000000004, 0.010009472000000005, 0.01000949999999999, 0.009978889000000005, 0.010009457999999999, 0.010009431, 0.00997898...</msg>
<status status="PASS" starttime="20201112 12:43:36.274" endtime="20201112 12:43:36.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.303" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:36.302" endtime="20201112 12:43:36.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.306" level="INFO">VALUE: 0.022453069</msg>
<status status="PASS" starttime="20201112 12:43:36.304" endtime="20201112 12:43:36.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.300" endtime="20201112 12:43:36.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.311" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:36.310" endtime="20201112 12:43:36.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.313" level="INFO">VALUE: [0.032462764, 0.042472181, 0.052481625, 0.062460528, 0.07247, 0.0824795, 0.092458389, 0.102467847, 0.112477278, 0.122456264, 0.132465681, 0.142475097, 0.152454083, 0.162463514, 0.172472944, 0.182451875, 0.192461306, 0.202470847, 0.212449778, 0.222459181, 0.232468667, 0.242447528, 0.252457014, 0.262466431, 0.272445403, 0.282454847, 0.292464347, 0.302473792, 0.312452708, 0.322462125, 0.332471611, 0.342450514, 0.35246, 0.362469431, 0.372448361, 0.382457792, 0.392467292, 0.40244625, 0.412455653, 0.422465083, 0.432444069, 0.442453514, 0.452462958, 0.462441847, 0.472451333, 0.482460819, 0.492439778, 0.502449167, 0.512458653, 0.522437583, 0.532447, 0.542456486, 0.552465889, 0.562444861, 0.572454333, 0.58246375, 0.592442625, 0.602452167, 0.612461611, 0.622440528, 0.63245, 0.642459417, 0.652438361, 0.662447806, 0.672457306, 0.682436208, 0.692445708, 0.702455125, 0.712434056, 0.722443486, 0.732452986, 0.742431903, 0.752441389, 0.76245075, 0.772429667, 0.782439181, 0.792448569, 0.802458056, 0.812437014, 0.822446444, 0.832455958, 0.842434819, 0.852444319, 0.862453778, 0.872432681, 0.882442153, 0.892451611, 0.902430472, 0.912439958, 0.922449403, 0.932428375, 0.942437833, 0.952447236, 0.962426208, 0.972435583, 0.982445056, 0.992423986, 1.002433472, 1.012442903, 1.022421931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:36.312" endtime="20201112 12:43:36.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.307" endtime="20201112 12:43:36.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.317" endtime="20201112 12:43:36.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.321" endtime="20201112 12:43:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.319" endtime="20201112 12:43:36.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.315" endtime="20201112 12:43:36.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.808" endtime="20201112 12:43:36.342"></status>
</kw>
<msg timestamp="20201112 12:43:36.342" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.350" endtime="20201112 12:43:38.472"></status>
</kw>
<msg timestamp="20201112 12:43:38.472" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5501220, 'wakeups': [5511230, 5521240, 5531250, 5541229, 5551239, 5561...</msg>
<status status="PASS" starttime="20201112 12:43:36.349" endtime="20201112 12:43:38.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5501220, 'wakeups': [5511230, 5521240, 5531250, 5541229, 5551239, 5561...</msg>
<status status="PASS" starttime="20201112 12:43:38.473" endtime="20201112 12:43:38.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.476" endtime="20201112 12:43:38.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.346" endtime="20201112 12:43:38.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.344" endtime="20201112 12:43:38.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.482" level="INFO">${RESULT} = {'wakeups': [5511230, 5521240, 5531250, 5541229, 5551239, 5561248, 5571228, 5581237, 5591247, 5601226, 5611236, 5621246, 5631225, 5641235, 5651245, 5661224, 5671234, 5681243, 5691223, 5701232, 5711242...</msg>
<status status="PASS" starttime="20201112 12:43:38.480" endtime="20201112 12:43:38.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.486" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:38.485" endtime="20201112 12:43:38.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.488" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:38.487" endtime="20201112 12:43:38.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.483" endtime="20201112 12:43:38.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.493" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:38.492" endtime="20201112 12:43:38.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.496" level="INFO">VALUE: 5501220</msg>
<status status="PASS" starttime="20201112 12:43:38.495" endtime="20201112 12:43:38.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.490" endtime="20201112 12:43:38.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.501" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:38.500" endtime="20201112 12:43:38.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.503" level="INFO">VALUE: [5511230, 5521240, 5531250, 5541229, 5551239, 5561248, 5571228, 5581237, 5591247, 5601226, 5611236, 5621246, 5631225, 5641235, 5651245, 5661224, 5671234, 5681243, 5691223, 5701232, 5711242, 5721221, 5731231, 5741241, 5751220, 5761230, 5771240, 5781250, 5791229, 5801239, 5811248, 5821228, 5831237, 5841247, 5851226, 5861236, 5871246, 5881225, 5891235, 5901245, 5911224, 5921234, 5931243, 5941223, 5951232, 5961242, 5971221, 5981231, 5991241, 6001220, 6011230, 6021240, 6031250, 6041229, 6051239, 6061248, 6071228, 6081237, 6091247, 6101226, 6111236, 6121246, 6131225, 6141235, 6151245, 6161224, 6171234, 6181243, 6191223, 6201232, 6211242, 6221221, 6231231, 6241241, 6251220, 6261230, 6271240, 6281250, 6291229, 6301239, 6311248, 6321228, 6331237, 6341247, 6351226, 6361236, 6371246, 6381225, 6391235, 6401245, 6411224, 6421234, 6431243, 6441223, 6451232, 6461242, 6471221, 6481231, 6491241, 6501220]</msg>
<status status="PASS" starttime="20201112 12:43:38.502" endtime="20201112 12:43:38.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.497" endtime="20201112 12:43:38.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.512" endtime="20201112 12:43:38.805"></status>
</kw>
<msg timestamp="20201112 12:43:38.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02985125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:38.511" endtime="20201112 12:43:38.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02985125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:38.809" endtime="20201112 12:43:38.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.817" endtime="20201112 12:43:38.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.508" endtime="20201112 12:43:38.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.506" endtime="20201112 12:43:38.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.844" level="INFO">${RESULT} = {'source_diff': [0, 0.009997666999999998, 0.010009444000000003, 0.010009417, 0.009978944999999996, 0.010009457999999999, 0.010009485999999998, 0.00997895800000001, 0.010009403, 0.010009457999999999, 0...</msg>
<status status="PASS" starttime="20201112 12:43:38.820" endtime="20201112 12:43:38.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.849" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:38.848" endtime="20201112 12:43:38.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.851" level="INFO">VALUE: 0.019853583</msg>
<status status="PASS" starttime="20201112 12:43:38.850" endtime="20201112 12:43:38.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.845" endtime="20201112 12:43:38.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.856" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:38.855" endtime="20201112 12:43:38.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.859" level="INFO">VALUE: [0.02985125, 0.039860694, 0.049870111, 0.059849056, 0.069858514, 0.079868, 0.089846958, 0.099856361, 0.109865819, 0.119844778, 0.129854194, 0.139863653, 0.149842597, 0.159852056, 0.169861514, 0.179840444, 0.189849917, 0.199859319, 0.20983825, 0.219847736, 0.229857167, 0.239836083, 0.249845556, 0.259854972, 0.269833944, 0.279843403, 0.289852875, 0.299862222, 0.309841236, 0.319850667, 0.329860139, 0.339839, 0.349848486, 0.359857917, 0.369836861, 0.379846361, 0.389855806, 0.399834736, 0.409844208, 0.419853653, 0.429832569, 0.439842014, 0.449851458, 0.459830389, 0.469839944, 0.479849306, 0.48982825, 0.499837722, 0.509847181, 0.519826083, 0.529835542, 0.539844972, 0.549854444, 0.559833403, 0.569842792, 0.579852333, 0.589831222, 0.59984075, 0.609850125, 0.619829028, 0.629838486, 0.639847986, 0.649826903, 0.659836306, 0.669845778, 0.679824681, 0.689834167, 0.699843597, 0.709822542, 0.719832, 0.729841431, 0.739820361, 0.749829819, 0.759839236, 0.769818278, 0.779827694, 0.789837167, 0.799846583, 0.809825514, 0.819835, 0.829844431, 0.839823319, 0.849832792, 0.859842236, 0.869821236, 0.879830694, 0.889840111, 0.899819069, 0.909828556, 0.919837944, 0.929816875, 0.939826306, 0.949835764, 0.95981475, 0.969824125, 0.979833583, 0.989812528, 0.999821944, 1.009831444, 1.019810417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:38.858" endtime="20201112 12:43:38.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.852" endtime="20201112 12:43:38.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.862" endtime="20201112 12:43:38.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.866" endtime="20201112 12:43:38.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.864" endtime="20201112 12:43:38.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.860" endtime="20201112 12:43:38.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.342" endtime="20201112 12:43:38.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.250" endtime="20201112 12:43:38.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.248" endtime="20201112 12:43:38.888"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:38.890" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.899" endtime="20201112 12:43:41.025"></status>
</kw>
<msg timestamp="20201112 12:43:41.026" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8053771, 'wakeups': [8063812, 8073791, 8083801, 8093780, 8103790, 8113...</msg>
<status status="PASS" starttime="20201112 12:43:38.897" endtime="20201112 12:43:41.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8053771, 'wakeups': [8063812, 8073791, 8083801, 8093780, 8103790, 8113...</msg>
<status status="PASS" starttime="20201112 12:43:41.027" endtime="20201112 12:43:41.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.030" endtime="20201112 12:43:41.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.894" endtime="20201112 12:43:41.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.892" endtime="20201112 12:43:41.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.036" level="INFO">${RESULT} = {'wakeups': [8063812, 8073791, 8083801, 8093780, 8103790, 8113800, 8123779, 8133789, 8143798, 8153778, 8163787, 8173797, 8183776, 8193786, 8203796, 8213775, 8223785, 8233795, 8243774, 8253784, 8263793...</msg>
<status status="PASS" starttime="20201112 12:43:41.034" endtime="20201112 12:43:41.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.040" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:41.039" endtime="20201112 12:43:41.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.042" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:41.041" endtime="20201112 12:43:41.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.037" endtime="20201112 12:43:41.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.048" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.047" endtime="20201112 12:43:41.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.050" level="INFO">VALUE: 8053771</msg>
<status status="PASS" starttime="20201112 12:43:41.049" endtime="20201112 12:43:41.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.044" endtime="20201112 12:43:41.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.055" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.054" endtime="20201112 12:43:41.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.057" level="INFO">VALUE: [8063812, 8073791, 8083801, 8093780, 8103790, 8113800, 8123779, 8133789, 8143798, 8153778, 8163787, 8173797, 8183776, 8193786, 8203796, 8213775, 8223785, 8233795, 8243774, 8253784, 8263793, 8273773, 8283782, 8293792, 8303771, 8313781, 8323791, 8333801, 8343780, 8353790, 8363800, 8373779, 8383789, 8393798, 8403778, 8413787, 8423797, 8433776, 8443786, 8453796, 8463775, 8473785, 8483795, 8493774, 8503784, 8513793, 8523773, 8533782, 8543792, 8553771, 8563781, 8573791, 8583801, 8593780, 8603790, 8613800, 8623779, 8633789, 8643798, 8653778, 8663787, 8673797, 8683776, 8693786, 8703796, 8713775, 8723785, 8733795, 8743774, 8753784, 8763793, 8773773, 8783782, 8793792, 8803771, 8813781, 8823791, 8833801, 8843780, 8853790, 8863800, 8873779, 8883789, 8893798, 8903778, 8913787, 8923797, 8933776, 8943786, 8953796, 8963775, 8973785, 8983795, 8993774, 9003784, 9013793, 9023773, 9033782, 9043792, 9053771]</msg>
<status status="PASS" starttime="20201112 12:43:41.056" endtime="20201112 12:43:41.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.051" endtime="20201112 12:43:41.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.065" endtime="20201112 12:43:41.358"></status>
</kw>
<msg timestamp="20201112 12:43:41.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.063" endtime="20201112 12:43:41.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.362" endtime="20201112 12:43:41.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.370" endtime="20201112 12:43:41.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.061" endtime="20201112 12:43:41.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.059" endtime="20201112 12:43:41.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.403" level="INFO">${RESULT} = {'source_diff': [0, 0.010036639000000003, 0.009978860999999999, 0.010009431, 0.009978929999999997, 0.010009500000000005, 0.010009431, 0.009978957999999996, 0.010009403, 0.010009444000000006, 0.0099789...</msg>
<status status="PASS" starttime="20201112 12:43:41.378" endtime="20201112 12:43:41.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.407" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.406" endtime="20201112 12:43:41.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.409" level="INFO">VALUE: 0.026463722</msg>
<status status="PASS" starttime="20201112 12:43:41.408" endtime="20201112 12:43:41.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.404" endtime="20201112 12:43:41.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.415" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.414" endtime="20201112 12:43:41.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.417" level="INFO">VALUE: [0.036500361, 0.046479222, 0.056488653, 0.066467583, 0.076477083, 0.086486514, 0.096465472, 0.106474875, 0.116484319, 0.126463278, 0.136472722, 0.146482194, 0.156461125, 0.166470639, 0.176480014, 0.186458944, 0.196468444, 0.206477847, 0.216456875, 0.22646625, 0.236475694, 0.246454639, 0.256464069, 0.266473583, 0.276452556, 0.286462014, 0.296471417, 0.306480889, 0.316459806, 0.326469264, 0.336478681, 0.346457611, 0.356467125, 0.3664765, 0.376455444, 0.386464903, 0.396474347, 0.406453403, 0.416462736, 0.426472181, 0.436451111, 0.446460625, 0.456470083, 0.466448972, 0.476458444, 0.486467889, 0.496446806, 0.506456264, 0.516465667, 0.526444625, 0.536454097, 0.546463514, 0.556473042, 0.566451889, 0.576461417, 0.586470847, 0.596449792, 0.606459236, 0.616468667, 0.626447667, 0.636457097, 0.646466472, 0.656445389, 0.666454917, 0.676464375, 0.686443333, 0.696452778, 0.706462222, 0.716441139, 0.726450514, 0.736460042, 0.746438986, 0.756448389, 0.766457861, 0.776436792, 0.786446264, 0.796455806, 0.806465181, 0.816444, 0.826453569, 0.836463014, 0.846441903, 0.856451375, 0.866460875, 0.876439736, 0.886449236, 0.896458667, 0.906437583, 0.916447111, 0.926456528, 0.936435486, 0.946444903, 0.956454347, 0.966433264, 0.976442736, 0.986452194, 0.996431125, 1.006440583, 1.016449944, 1.026428986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:41.416" endtime="20201112 12:43:41.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.411" endtime="20201112 12:43:41.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.420" endtime="20201112 12:43:41.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.424" endtime="20201112 12:43:41.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.422" endtime="20201112 12:43:41.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.419" endtime="20201112 12:43:41.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.891" endtime="20201112 12:43:41.445"></status>
</kw>
<msg timestamp="20201112 12:43:41.445" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.454" endtime="20201112 12:43:43.585"></status>
</kw>
<msg timestamp="20201112 12:43:43.585" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10606353, 'wakeups': [10616363, 10626373, 10636383, 10646362, 10656372...</msg>
<status status="PASS" starttime="20201112 12:43:41.452" endtime="20201112 12:43:43.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10606353, 'wakeups': [10616363, 10626373, 10636383, 10646362, 10656372...</msg>
<status status="PASS" starttime="20201112 12:43:43.586" endtime="20201112 12:43:43.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.590" endtime="20201112 12:43:43.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.449" endtime="20201112 12:43:43.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.447" endtime="20201112 12:43:43.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.595" level="INFO">${RESULT} = {'wakeups': [10616363, 10626373, 10636383, 10646362, 10656372, 10666381, 10676361, 10686370, 10696380, 10706359, 10716369, 10726379, 10736358, 10746368, 10756378, 10766357, 10776367, 10786376, 1079635...</msg>
<status status="PASS" starttime="20201112 12:43:43.593" endtime="20201112 12:43:43.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.600" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:43.599" endtime="20201112 12:43:43.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.602" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:43.601" endtime="20201112 12:43:43.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.596" endtime="20201112 12:43:43.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.607" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:43.606" endtime="20201112 12:43:43.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.609" level="INFO">VALUE: 10606353</msg>
<status status="PASS" starttime="20201112 12:43:43.608" endtime="20201112 12:43:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.603" endtime="20201112 12:43:43.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.614" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:43.613" endtime="20201112 12:43:43.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.617" level="INFO">VALUE: [10616363, 10626373, 10636383, 10646362, 10656372, 10666381, 10676361, 10686370, 10696380, 10706359, 10716369, 10726379, 10736358, 10746368, 10756378, 10766357, 10776367, 10786376, 10796356, 10806365, 10816375, 10826354, 10836364, 10846374, 10856353, 10866363, 10876373, 10886383, 10896362, 10906372, 10916381, 10926361, 10936370, 10946380, 10956359, 10966369, 10976379, 10986358, 10996368, 11006378, 11016357, 11026367, 11036376, 11046356, 11056365, 11066375, 11076354, 11086364, 11096374, 11106353, 11116363, 11126373, 11136383, 11146362, 11156372, 11166381, 11176361, 11186370, 11196380, 11206359, 11216369, 11226379, 11236358, 11246368, 11256378, 11266357, 11276367, 11286376, 11296356, 11306365, 11316375, 11326354, 11336364, 11346374, 11356353, 11366363, 11376373, 11386383, 11396362, 11406372, 11416381, 11426361, 11436370, 11446380, 11456359, 11466369, 11476379, 11486358, 11496368, 11506378, 11516357, 11526367, 11536376, 11546356, 11556365, 11566375, 11576354, 11586364, 11596374, 11606353]</msg>
<status status="PASS" starttime="20201112 12:43:43.615" endtime="20201112 12:43:43.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.611" endtime="20201112 12:43:43.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.624" endtime="20201112 12:43:43.917"></status>
</kw>
<msg timestamp="20201112 12:43:43.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.623" endtime="20201112 12:43:43.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.921" endtime="20201112 12:43:43.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.929" endtime="20201112 12:43:43.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.620" endtime="20201112 12:43:43.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.618" endtime="20201112 12:43:43.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.957" level="INFO">${RESULT} = {'source_diff': [0, 0.010018875, 0.010009471999999998, 0.010009347000000002, 0.009978958000000003, 0.010009542000000003, 0.010009416999999993, 0.009978929999999997, 0.010009485999999998, 0.01000941700...</msg>
<status status="PASS" starttime="20201112 12:43:43.933" endtime="20201112 12:43:43.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.962" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:43.960" endtime="20201112 12:43:43.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.964" level="INFO">VALUE: 0.020937056</msg>
<status status="PASS" starttime="20201112 12:43:43.963" endtime="20201112 12:43:43.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.958" endtime="20201112 12:43:43.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.969" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:43.968" endtime="20201112 12:43:43.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.972" level="INFO">VALUE: [0.030955931, 0.040965403, 0.05097475, 0.060953708, 0.07096325, 0.080972667, 0.090951597, 0.100961083, 0.1109705, 0.120949431, 0.130958917, 0.140968306, 0.150947222, 0.160956694, 0.170966208, 0.180945028, 0.190954514, 0.200963972, 0.210942903, 0.220952403, 0.230961847, 0.240940792, 0.250950208, 0.260959653, 0.270938583, 0.280948014, 0.290957458, 0.300966958, 0.310945875, 0.320955333, 0.330964722, 0.340943694, 0.350953181, 0.360962597, 0.370941528, 0.380950972, 0.390960403, 0.400939361, 0.410948861, 0.420958319, 0.43093725, 0.440946722, 0.450956097, 0.460935028, 0.4709445, 0.480953986, 0.490932931, 0.500942361, 0.510951792, 0.520930736, 0.530940236, 0.540949625, 0.550959139, 0.560938083, 0.570947528, 0.580956958, 0.590935903, 0.600945319, 0.610954792, 0.620933722, 0.630943167, 0.640952667, 0.650931625, 0.660941042, 0.670950458, 0.680929375, 0.690938847, 0.700948319, 0.710927278, 0.720936708, 0.730946194, 0.740925056, 0.750934542, 0.760944028, 0.770922944, 0.780932403, 0.790941833, 0.800951222, 0.810930208, 0.820939694, 0.830949083, 0.840928056, 0.850937472, 0.860946903, 0.870925847, 0.880935278, 0.890944778, 0.900923708, 0.910933181, 0.920942639, 0.930921569, 0.940930986, 0.950940417, 0.960919389, 0.970928847, 0.980938306, 0.990917236, 1.000926639, 1.010936139, 1.020915111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:43.970" endtime="20201112 12:43:43.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.965" endtime="20201112 12:43:43.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.975" endtime="20201112 12:43:43.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.979" endtime="20201112 12:43:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.977" endtime="20201112 12:43:43.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.974" endtime="20201112 12:43:44.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.446" endtime="20201112 12:43:44.000"></status>
</kw>
<msg timestamp="20201112 12:43:44.000" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.009" endtime="20201112 12:43:46.140"></status>
</kw>
<msg timestamp="20201112 12:43:46.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13163909, 'wakeups': [13173950, 13183929, 13193939, 13203918, 13213928...</msg>
<status status="PASS" starttime="20201112 12:43:44.007" endtime="20201112 12:43:46.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13163909, 'wakeups': [13173950, 13183929, 13193939, 13203918, 13213928...</msg>
<status status="PASS" starttime="20201112 12:43:46.142" endtime="20201112 12:43:46.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.145" endtime="20201112 12:43:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.004" endtime="20201112 12:43:46.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.002" endtime="20201112 12:43:46.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.151" level="INFO">${RESULT} = {'wakeups': [13173950, 13183929, 13193939, 13203918, 13213928, 13223937, 13233917, 13243927, 13253936, 13263916, 13273925, 13283935, 13293914, 13303924, 13313934, 13323913, 13333923, 13343933, 1335391...</msg>
<status status="PASS" starttime="20201112 12:43:46.149" endtime="20201112 12:43:46.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:46.154" endtime="20201112 12:43:46.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.157" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:46.156" endtime="20201112 12:43:46.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.152" endtime="20201112 12:43:46.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.162" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.161" endtime="20201112 12:43:46.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.166" level="INFO">VALUE: 13163909</msg>
<status status="PASS" starttime="20201112 12:43:46.163" endtime="20201112 12:43:46.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.159" endtime="20201112 12:43:46.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.171" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.170" endtime="20201112 12:43:46.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.174" level="INFO">VALUE: [13173950, 13183929, 13193939, 13203918, 13213928, 13223937, 13233917, 13243927, 13253936, 13263916, 13273925, 13283935, 13293914, 13303924, 13313934, 13323913, 13333923, 13343933, 13353912, 13363922, 13373931, 13383911, 13393920, 13403930, 13413909, 13423919, 13433929, 13443939, 13453918, 13463928, 13473937, 13483917, 13493927, 13503936, 13513916, 13523925, 13533935, 13543914, 13553924, 13563934, 13573913, 13583923, 13593933, 13603912, 13613922, 13623931, 13633911, 13643920, 13653930, 13663909, 13673919, 13683929, 13693939, 13703918, 13713928, 13723937, 13733917, 13743927, 13753936, 13763916, 13773925, 13783935, 13793914, 13803924, 13813934, 13823913, 13833923, 13843933, 13853912, 13863922, 13873931, 13883911, 13893920, 13903930, 13913909, 13923919, 13933929, 13943939, 13953918, 13963928, 13973937, 13983917, 13993927, 14003936, 14013916, 14023925, 14033935, 14043914, 14053924, 14063934, 14073913, 14083923, 14093933, 14103912, 14113922, 14123931, 14133911, 14143920, 14153930, 14163909]</msg>
<status status="PASS" starttime="20201112 12:43:46.172" endtime="20201112 12:43:46.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.167" endtime="20201112 12:43:46.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.181" endtime="20201112 12:43:46.472"></status>
</kw>
<msg timestamp="20201112 12:43:46.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03323775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:46.180" endtime="20201112 12:43:46.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03323775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:46.476" endtime="20201112 12:43:46.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.484" endtime="20201112 12:43:46.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.177" endtime="20201112 12:43:46.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.175" endtime="20201112 12:43:46.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.512" level="INFO">${RESULT} = {'source_diff': [0, 0.010025931000000002, 0.009995749999999998, 0.010009597000000002, 0.009978945000000003, 0.010009471999999991, 0.010009389000000007, 0.009979000000000002, 0.010009457999999999, 0.01...</msg>
<status status="PASS" starttime="20201112 12:43:46.488" endtime="20201112 12:43:46.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.517" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.516" endtime="20201112 12:43:46.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.519" level="INFO">VALUE: 0.023211819</msg>
<status status="PASS" starttime="20201112 12:43:46.518" endtime="20201112 12:43:46.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.513" endtime="20201112 12:43:46.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.524" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.523" endtime="20201112 12:43:46.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.527" level="INFO">VALUE: [0.03323775, 0.0432335, 0.053243097, 0.063222042, 0.073231514, 0.083240903, 0.093219903, 0.103229361, 0.113238764, 0.123217667, 0.133227083, 0.143236583, 0.153215569, 0.163224931, 0.173234417, 0.183213361, 0.193222778, 0.203232264, 0.213211181, 0.223220708, 0.233230083, 0.243209083, 0.253218472, 0.263227931, 0.273206847, 0.283216389, 0.293225778, 0.303235208, 0.313214181, 0.323223597, 0.333233069, 0.343211944, 0.353221431, 0.363230917, 0.373209903, 0.383219319, 0.393228792, 0.403207653, 0.413217125, 0.423226569, 0.433205514, 0.443215042, 0.453224347, 0.463203361, 0.473212819, 0.483222236, 0.493201111, 0.503210653, 0.513220083, 0.523199014, 0.5332085, 0.543217958, 0.553227389, 0.56320625, 0.573215778, 0.583225222, 0.593204097, 0.603213597, 0.613223069, 0.623201972, 0.633211486, 0.643220861, 0.653199806, 0.663209292, 0.673218681, 0.683197694, 0.693207181, 0.703216542, 0.713195528, 0.723204931, 0.733214361, 0.743193389, 0.753202861, 0.76321225, 0.773191139, 0.783200639, 0.793210153, 0.803219542, 0.813198472, 0.823207931, 0.833217319, 0.843196347, 0.853205792, 0.863215194, 0.873194111, 0.883203597, 0.893213, 0.903191958, 0.913201458, 0.923210917, 0.933189917, 0.943199222, 0.953208722, 0.963187653, 0.973197083, 0.983206486, 0.993185514, 1.003194958, 1.013204389, 1.023183319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:46.526" endtime="20201112 12:43:46.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.520" endtime="20201112 12:43:46.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.531" endtime="20201112 12:43:46.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.534" endtime="20201112 12:43:46.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.533" endtime="20201112 12:43:46.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.529" endtime="20201112 12:43:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.001" endtime="20201112 12:43:46.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.889" endtime="20201112 12:43:46.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.888" endtime="20201112 12:43:46.560"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:46.563" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.571" endtime="20201112 12:43:48.698"></status>
</kw>
<msg timestamp="20201112 12:43:48.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15726501, 'wakeups': [15736572, 15746520, 15756561, 15766510, 15776550...</msg>
<status status="PASS" starttime="20201112 12:43:46.570" endtime="20201112 12:43:48.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15726501, 'wakeups': [15736572, 15746520, 15756561, 15766510, 15776550...</msg>
<status status="PASS" starttime="20201112 12:43:48.699" endtime="20201112 12:43:48.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.702" endtime="20201112 12:43:48.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.567" endtime="20201112 12:43:48.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.565" endtime="20201112 12:43:48.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.708" level="INFO">${RESULT} = {'wakeups': [15736572, 15746520, 15756561, 15766510, 15776550, 15786529, 15796539, 15806518, 15816558, 15826507, 15836547, 15846527, 15856536, 15866516, 15876556, 15886505, 15896545, 15906524, 1591653...</msg>
<status status="PASS" starttime="20201112 12:43:48.706" endtime="20201112 12:43:48.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:48.711" endtime="20201112 12:43:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.714" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:48.713" endtime="20201112 12:43:48.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.709" endtime="20201112 12:43:48.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.719" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:48.718" endtime="20201112 12:43:48.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.721" level="INFO">VALUE: 15726501</msg>
<status status="PASS" starttime="20201112 12:43:48.720" endtime="20201112 12:43:48.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.716" endtime="20201112 12:43:48.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.727" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:48.726" endtime="20201112 12:43:48.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.729" level="INFO">VALUE: [15736572, 15746520, 15756561, 15766510, 15776550, 15786529, 15796539, 15806518, 15816558, 15826507, 15836547, 15846527, 15856536, 15866516, 15876556, 15886505, 15896545, 15906524, 15916534, 15926513, 15936553, 15946502, 15956542, 15966522, 15976501, 15986541, 15996520, 16006561, 16016510, 16026550, 16036529, 16046539, 16056518, 16066558, 16076507, 16086547, 16096527, 16106536, 16116516, 16126556, 16136505, 16146545, 16156524, 16166534, 16176513, 16186553, 16196502, 16206542, 16216522, 16226501, 16236541, 16246520, 16256561, 16266510, 16276550, 16286529, 16296539, 16306518, 16316558, 16326507, 16336547, 16346527, 16356536, 16366516, 16376556, 16386505, 16396545, 16406524, 16416534, 16426513, 16436553, 16446502, 16456542, 16466522, 16476501, 16486541, 16496520, 16506561, 16516510, 16526550, 16536529, 16546539, 16556518, 16566558, 16576507, 16586547, 16596527, 16606536, 16616516, 16626556, 16636505, 16646545, 16656524, 16666534, 16676513, 16686553, 16696502, 16706542, 16716522, 16726501]</msg>
<status status="PASS" starttime="20201112 12:43:48.728" endtime="20201112 12:43:48.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.723" endtime="20201112 12:43:48.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.738" endtime="20201112 12:43:49.030"></status>
</kw>
<msg timestamp="20201112 12:43:49.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.735" endtime="20201112 12:43:49.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.034" endtime="20201112 12:43:49.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.042" endtime="20201112 12:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.732" endtime="20201112 12:43:49.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.730" endtime="20201112 12:43:49.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.069" level="INFO">${RESULT} = {'source_diff': [0, 0.010051236000000002, 0.009962554999999998, 0.010025736, 0.009962680999999994, 0.010025777999999999, 0.009993069000000007, 0.009995221999999998, 0.009993138999999998, 0.01002588899...</msg>
<status status="PASS" starttime="20201112 12:43:49.046" endtime="20201112 12:43:49.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.075" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.073" endtime="20201112 12:43:49.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.077" level="INFO">VALUE: 0.030097056</msg>
<status status="PASS" starttime="20201112 12:43:49.076" endtime="20201112 12:43:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.071" endtime="20201112 12:43:49.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.083" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.082" endtime="20201112 12:43:49.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.086" level="INFO">VALUE: [0.040148292, 0.050110847, 0.060136583, 0.070099264, 0.080125042, 0.090118111, 0.100113333, 0.110106472, 0.120132361, 0.130094917, 0.140120653, 0.150113833, 0.160108972, 0.170102208, 0.180127986, 0.190090583, 0.200116333, 0.210109486, 0.220104764, 0.230097861, 0.240123639, 0.250086264, 0.260111944, 0.270105236, 0.280084181, 0.290109861, 0.300102944, 0.310128778, 0.320091403, 0.330117097, 0.340110319, 0.350105556, 0.360098694, 0.370124333, 0.380087083, 0.390112792, 0.400106014, 0.41010125, 0.420094333, 0.430120153, 0.440082722, 0.450108472, 0.460101597, 0.470096847, 0.480090042, 0.490115778, 0.500078389, 0.510104167, 0.520097319, 0.530076319, 0.540101903, 0.550095125, 0.560120875, 0.570083514, 0.580109236, 0.590102444, 0.600097611, 0.610090847, 0.620116514, 0.630079181, 0.640104931, 0.650098194, 0.660093375, 0.670086444, 0.680112181, 0.690074847, 0.700100653, 0.710093806, 0.720089028, 0.730082139, 0.740107917, 0.750070569, 0.760096333, 0.770089375, 0.780068486, 0.790094083, 0.800087278, 0.810112958, 0.820075708, 0.830101431, 0.840094569, 0.850089792, 0.860082903, 0.870108722, 0.880071347, 0.890097111, 0.900090306, 0.910085458, 0.920078639, 0.930104375, 0.940067014, 0.950092722, 0.960085917, 0.970081083, 0.980074278, 0.990100097, 1.000062708, 1.010088389, 1.020081556, 1.030060639] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:49.084" endtime="20201112 12:43:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.079" endtime="20201112 12:43:49.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.089" endtime="20201112 12:43:49.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.093" endtime="20201112 12:43:49.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.091" endtime="20201112 12:43:49.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.087" endtime="20201112 12:43:49.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.563" endtime="20201112 12:43:49.113"></status>
</kw>
<msg timestamp="20201112 12:43:49.114" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.123" endtime="20201112 12:43:51.257"></status>
</kw>
<msg timestamp="20201112 12:43:51.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18279083, 'wakeups': [18289123, 18299102, 18309143, 18319091, 18329132...</msg>
<status status="PASS" starttime="20201112 12:43:49.121" endtime="20201112 12:43:51.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.261" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18279083, 'wakeups': [18289123, 18299102, 18309143, 18319091, 18329132...</msg>
<status status="PASS" starttime="20201112 12:43:51.259" endtime="20201112 12:43:51.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.262" endtime="20201112 12:43:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.118" endtime="20201112 12:43:51.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.116" endtime="20201112 12:43:51.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.268" level="INFO">${RESULT} = {'wakeups': [18289123, 18299102, 18309143, 18319091, 18329132, 18339111, 18349121, 18359100, 18369140, 18379089, 18389129, 18399108, 18409118, 18419097, 18429138, 18439086, 18449127, 18459106, 1846911...</msg>
<status status="PASS" starttime="20201112 12:43:51.266" endtime="20201112 12:43:51.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.272" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:51.271" endtime="20201112 12:43:51.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.274" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:51.273" endtime="20201112 12:43:51.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.269" endtime="20201112 12:43:51.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.280" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:51.279" endtime="20201112 12:43:51.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.282" level="INFO">VALUE: 18279083</msg>
<status status="PASS" starttime="20201112 12:43:51.281" endtime="20201112 12:43:51.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.276" endtime="20201112 12:43:51.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.287" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:51.286" endtime="20201112 12:43:51.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.289" level="INFO">VALUE: [18289123, 18299102, 18309143, 18319091, 18329132, 18339111, 18349121, 18359100, 18369140, 18379089, 18389129, 18399108, 18409118, 18419097, 18429138, 18439086, 18449127, 18459106, 18469116, 18479095, 18489135, 18499084, 18509124, 18519104, 18529083, 18539123, 18549102, 18559143, 18569091, 18579132, 18589111, 18599121, 18609100, 18619140, 18629089, 18639129, 18649108, 18659118, 18669097, 18679138, 18689086, 18699127, 18709106, 18719116, 18729095, 18739135, 18749084, 18759124, 18769104, 18779083, 18789123, 18799102, 18809143, 18819091, 18829132, 18839111, 18849121, 18859100, 18869140, 18879089, 18889129, 18899108, 18909118, 18919097, 18929138, 18939086, 18949127, 18959106, 18969116, 18979095, 18989135, 18999084, 19009124, 19019104, 19029083, 19039123, 19049102, 19059143, 19069091, 19079132, 19089111, 19099121, 19109100, 19119140, 19129089, 19139129, 19149108, 19159118, 19169097, 19179138, 19189086, 19199127, 19209106, 19219116, 19229095, 19239135, 19249084, 19259124, 19269104, 19279083]</msg>
<status status="PASS" starttime="20201112 12:43:51.288" endtime="20201112 12:43:51.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.283" endtime="20201112 12:43:51.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.297" endtime="20201112 12:43:51.588"></status>
</kw>
<msg timestamp="20201112 12:43:51.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034115833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.295" endtime="20201112 12:43:51.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034115833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.592" endtime="20201112 12:43:51.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.600" endtime="20201112 12:43:51.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.292" endtime="20201112 12:43:51.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.291" endtime="20201112 12:43:51.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.628" level="INFO">${RESULT} = {'source_diff': [0, 0.010034415999999997, 0.009993139000000005, 0.010025735999999993, 0.00996262500000001, 0.01002575, 0.00999318099999999, 0.009995097000000008, 0.00999320799999999, 0.010025709000000...</msg>
<status status="PASS" starttime="20201112 12:43:51.603" endtime="20201112 12:43:51.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.637" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:51.636" endtime="20201112 12:43:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.639" level="INFO">VALUE: 0.024081417</msg>
<status status="PASS" starttime="20201112 12:43:51.638" endtime="20201112 12:43:51.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.633" endtime="20201112 12:43:51.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.645" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:51.644" endtime="20201112 12:43:51.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.648" level="INFO">VALUE: [0.034115833, 0.044108972, 0.054134708, 0.064097333, 0.074123083, 0.084116264, 0.094111361, 0.104104569, 0.114130278, 0.124092972, 0.134118625, 0.144111889, 0.154107139, 0.164100292, 0.174126028, 0.184088625, 0.194114347, 0.204107542, 0.214102722, 0.224095931, 0.234121722, 0.244084361, 0.254110125, 0.264103222, 0.274082264, 0.284107986, 0.294101069, 0.304126833, 0.314089514, 0.32411525, 0.334108431, 0.344103653, 0.354096778, 0.364122542, 0.374085097, 0.384110847, 0.394104056, 0.404099361, 0.414092472, 0.42411825, 0.434080847, 0.444106611, 0.45409975, 0.464095, 0.474088056, 0.484113792, 0.494076486, 0.504102264, 0.514095431, 0.524074417, 0.534100042, 0.544093236, 0.554119056, 0.564081611, 0.574107306, 0.584100528, 0.594095792, 0.604088875, 0.614114583, 0.624077306, 0.634103056, 0.644096167, 0.654091444, 0.664084556, 0.674110361, 0.684072944, 0.694098694, 0.704091861, 0.714087056, 0.724080278, 0.734106014, 0.744068611, 0.754094417, 0.764087583, 0.774066458, 0.784092278, 0.794085333, 0.804111083, 0.814073792, 0.8240995, 0.834092722, 0.844087861, 0.854081042, 0.864106708, 0.874069444, 0.884095181, 0.894088375, 0.904083514, 0.914076708, 0.9241025, 0.934065069, 0.944090903, 0.954084028, 0.964079222, 0.974072444, 0.984098097, 0.994060736, 1.004086472, 1.014079653, 1.02405875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:51.647" endtime="20201112 12:43:51.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.641" endtime="20201112 12:43:51.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.651" endtime="20201112 12:43:51.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.654" endtime="20201112 12:43:51.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.653" endtime="20201112 12:43:51.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.649" endtime="20201112 12:43:51.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.114" endtime="20201112 12:43:51.675"></status>
</kw>
<msg timestamp="20201112 12:43:51.676" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.684" endtime="20201112 12:43:53.808"></status>
</kw>
<msg timestamp="20201112 12:43:53.808" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20836669, 'wakeups': [20846710, 20856689, 20866729, 20876678, 20886718...</msg>
<status status="PASS" starttime="20201112 12:43:51.682" endtime="20201112 12:43:53.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.811" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20836669, 'wakeups': [20846710, 20856689, 20866729, 20876678, 20886718...</msg>
<status status="PASS" starttime="20201112 12:43:53.809" endtime="20201112 12:43:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.812" endtime="20201112 12:43:53.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.680" endtime="20201112 12:43:53.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.678" endtime="20201112 12:43:53.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.818" level="INFO">${RESULT} = {'wakeups': [20846710, 20856689, 20866729, 20876678, 20886718, 20896697, 20906707, 20916687, 20926727, 20936676, 20946716, 20956695, 20966705, 20976684, 20986724, 20996673, 21006713, 21016693, 2102670...</msg>
<status status="PASS" starttime="20201112 12:43:53.816" endtime="20201112 12:43:53.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.822" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:53.821" endtime="20201112 12:43:53.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.824" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:53.823" endtime="20201112 12:43:53.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.819" endtime="20201112 12:43:53.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.831" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:53.830" endtime="20201112 12:43:53.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.833" level="INFO">VALUE: 20836669</msg>
<status status="PASS" starttime="20201112 12:43:53.832" endtime="20201112 12:43:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.826" endtime="20201112 12:43:53.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.838" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:53.837" endtime="20201112 12:43:53.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.841" level="INFO">VALUE: [20846710, 20856689, 20866729, 20876678, 20886718, 20896697, 20906707, 20916687, 20926727, 20936676, 20946716, 20956695, 20966705, 20976684, 20986724, 20996673, 21006713, 21016693, 21026702, 21036682, 21046722, 21056671, 21066711, 21076690, 21086700, 21096679, 21106719, 21116699, 21126708, 21136688, 21146728, 21156677, 21166717, 21176696, 21186706, 21196685, 21206726, 21216674, 21226715, 21236694, 21246704, 21256683, 21266723, 21276672, 21286712, 21296691, 21306701, 21316680, 21326721, 21336669, 21346710, 21356689, 21366729, 21376678, 21386718, 21396697, 21406707, 21416687, 21426727, 21436676, 21446716, 21456695, 21466705, 21476684, 21486724, 21496673, 21506713, 21516693, 21526702, 21536682, 21546722, 21556671, 21566711, 21576690, 21586700, 21596679, 21606719, 21616699, 21626708, 21636688, 21646728, 21656677, 21666717, 21676696, 21686706, 21696685, 21706726, 21716674, 21726715, 21736694, 21746704, 21756683, 21766723, 21776672, 21786712, 21796691, 21806701, 21816680, 21826721, 21836669]</msg>
<status status="PASS" starttime="20201112 12:43:53.839" endtime="20201112 12:43:53.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.835" endtime="20201112 12:43:53.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.849" endtime="20201112 12:43:54.140"></status>
</kw>
<msg timestamp="20201112 12:43:54.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029455722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.847" endtime="20201112 12:43:54.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029455722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.144" endtime="20201112 12:43:54.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.151" endtime="20201112 12:43:54.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.844" endtime="20201112 12:43:54.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.842" endtime="20201112 12:43:54.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.179" level="INFO">${RESULT} = {'source_diff': [0, 0.010038014000000001, 0.009993013999999998, 0.010025777999999999, 0.009962639000000002, 0.010025708000000001, 0.009993153000000005, 0.009995291999999989, 0.009993152000000005, 0.01...</msg>
<status status="PASS" starttime="20201112 12:43:54.155" endtime="20201112 12:43:54.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.183" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.182" endtime="20201112 12:43:54.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.186" level="INFO">VALUE: 0.019417708</msg>
<status status="PASS" starttime="20201112 12:43:54.184" endtime="20201112 12:43:54.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.180" endtime="20201112 12:43:54.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.192" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.191" endtime="20201112 12:43:54.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.194" level="INFO">VALUE: [0.029455722, 0.039448736, 0.049474514, 0.059437153, 0.069462861, 0.079456014, 0.089451306, 0.099444458, 0.109470208, 0.119432806, 0.129458625, 0.139451736, 0.149446903, 0.159440097, 0.169465875, 0.179428431, 0.189454278, 0.199447417, 0.209442639, 0.219435722, 0.229461444, 0.239424125, 0.249449917, 0.259443042, 0.269438306, 0.279431458, 0.289457167, 0.299450306, 0.309445583, 0.319438736, 0.329464472, 0.339427069, 0.349452792, 0.359445958, 0.369441181, 0.379434417, 0.389460181, 0.39942275, 0.409448528, 0.419441694, 0.429436972, 0.439430097, 0.449455903, 0.459418472, 0.469444222, 0.479437319, 0.489432597, 0.499425778, 0.509451444, 0.519414111, 0.529439861, 0.539433042, 0.549458792, 0.559421431, 0.569447181, 0.579440389, 0.589435569, 0.59942875, 0.609454458, 0.619417069, 0.629442764, 0.639436014, 0.649431208, 0.659424347, 0.669450125, 0.679412764, 0.689438417, 0.699431667, 0.709426861, 0.719420042, 0.729445847, 0.739408472, 0.749434236, 0.759427403, 0.769422486, 0.77941575, 0.789441486, 0.799434681, 0.809429889, 0.819423, 0.82944875, 0.839411417, 0.849437153, 0.859430278, 0.869425486, 0.879418681, 0.889444389, 0.899407056, 0.909432875, 0.919425986, 0.929421167, 0.939414375, 0.949440111, 0.959402694, 0.969428514, 0.979421681, 0.989416903, 0.999410069, 1.009435722, 1.019398444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:54.193" endtime="20201112 12:43:54.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.188" endtime="20201112 12:43:54.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.198" endtime="20201112 12:43:54.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.202" endtime="20201112 12:43:54.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.200" endtime="20201112 12:43:54.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.196" endtime="20201112 12:43:54.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.676" endtime="20201112 12:43:54.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.561" endtime="20201112 12:43:54.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.560" endtime="20201112 12:43:54.223"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:54.226" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.236" endtime="20201112 12:43:56.367"></status>
</kw>
<msg timestamp="20201112 12:43:56.368" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23389221, 'wakeups': [23399291, 23409271, 23419281, 23429260, 23439270...</msg>
<status status="PASS" starttime="20201112 12:43:54.234" endtime="20201112 12:43:56.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23389221, 'wakeups': [23399291, 23409271, 23419281, 23429260, 23439270...</msg>
<status status="PASS" starttime="20201112 12:43:56.369" endtime="20201112 12:43:56.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.372" endtime="20201112 12:43:56.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.231" endtime="20201112 12:43:56.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.228" endtime="20201112 12:43:56.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.377" level="INFO">${RESULT} = {'wakeups': [23399291, 23409271, 23419281, 23429260, 23439270, 23449279, 23459259, 23469268, 23479278, 23489257, 23499267, 23509277, 23519256, 23529266, 23539276, 23549255, 23559265, 23569274, 2357925...</msg>
<status status="PASS" starttime="20201112 12:43:56.375" endtime="20201112 12:43:56.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.382" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:56.380" endtime="20201112 12:43:56.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.384" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:56.383" endtime="20201112 12:43:56.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.378" endtime="20201112 12:43:56.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.389" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:56.388" endtime="20201112 12:43:56.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.391" level="INFO">VALUE: 23389221</msg>
<status status="PASS" starttime="20201112 12:43:56.390" endtime="20201112 12:43:56.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.385" endtime="20201112 12:43:56.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.396" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:56.395" endtime="20201112 12:43:56.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.398" level="INFO">VALUE: [23399291, 23409271, 23419281, 23429260, 23439270, 23449279, 23459259, 23469268, 23479278, 23489257, 23499267, 23509277, 23519256, 23529266, 23539276, 23549255, 23559265, 23569274, 23579254, 23589263, 23599273, 23609252, 23619262, 23629272, 23639282, 23649261, 23659271, 23669281, 23679260, 23689270, 23699279, 23709259, 23719268, 23729278, 23739257, 23749267, 23759277, 23769256, 23779266, 23789276, 23799255, 23809265, 23819274, 23829254, 23839263, 23849273, 23859252, 23869262, 23879272, 23889282, 23899261, 23909271, 23919281, 23929260, 23939270, 23949279, 23959259, 23969268, 23979278, 23989257, 23999267, 24009277, 24019256, 24029266, 24039276, 24049255, 24059265, 24069274, 24079254, 24089263, 24099273, 24109252, 24119262, 24129272, 24139282, 24149261, 24159271, 24169281, 24179260, 24189270, 24199279, 24209259, 24219268, 24229278, 24239257, 24249267, 24259277, 24269256, 24279266, 24289276, 24299255, 24309265, 24319274, 24329254, 24339263, 24349273, 24359252, 24369262, 24379272, 24389282]</msg>
<status status="PASS" starttime="20201112 12:43:56.397" endtime="20201112 12:43:56.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.392" endtime="20201112 12:43:56.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.408" endtime="20201112 12:43:56.701"></status>
</kw>
<msg timestamp="20201112 12:43:56.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024470875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034551042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.406" endtime="20201112 12:43:56.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024470875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034551042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.705" endtime="20201112 12:43:56.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.713" endtime="20201112 12:43:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.402" endtime="20201112 12:43:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.400" endtime="20201112 12:43:56.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.741" level="INFO">${RESULT} = {'source_diff': [0, 0.010080166999999998, 0.009978875000000005, 0.010009360999999994, 0.009979055, 0.010009403, 0.010009403, 0.009978917000000004, 0.010009500000000005, 0.010009485999999998, 0.0099788...</msg>
<status status="PASS" starttime="20201112 12:43:56.716" endtime="20201112 12:43:56.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.745" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:56.744" endtime="20201112 12:43:56.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.747" level="INFO">VALUE: 0.024470875</msg>
<status status="PASS" starttime="20201112 12:43:56.746" endtime="20201112 12:43:56.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.742" endtime="20201112 12:43:56.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.753" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:56.752" endtime="20201112 12:43:56.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.755" level="INFO">VALUE: [0.034551042, 0.044529917, 0.054539278, 0.064518333, 0.074527736, 0.084537139, 0.094516056, 0.104525556, 0.114535042, 0.124513931, 0.134523389, 0.144532847, 0.154511778, 0.164521181, 0.174530611, 0.184509528, 0.194519, 0.204528431, 0.214507486, 0.224516931, 0.234526278, 0.244505278, 0.254514667, 0.264524278, 0.274533639, 0.284512583, 0.294521958, 0.304531486, 0.314510417, 0.324519833, 0.334529333, 0.344508194, 0.354517736, 0.364527139, 0.374506111, 0.384515528, 0.394525097, 0.404503972, 0.414513403, 0.424522875, 0.434501708, 0.444511153, 0.454520639, 0.464499708, 0.474508986, 0.4845185, 0.494497444, 0.504506875, 0.514516333, 0.524525722, 0.534504681, 0.544514208, 0.554523556, 0.5645025, 0.574511917, 0.584521389, 0.594500319, 0.604509861, 0.614519292, 0.624498153, 0.634507653, 0.644517181, 0.654495958, 0.664505444, 0.674514861, 0.684493875, 0.694503278, 0.704512764, 0.714491778, 0.724501083, 0.734510556, 0.744489569, 0.754499028, 0.764508403, 0.774517819, 0.784496736, 0.794506319, 0.804515625, 0.814494736, 0.824504028, 0.834513528, 0.844492583, 0.854502028, 0.864511486, 0.874490389, 0.884499792, 0.894509278, 0.904488181, 0.914497667, 0.924507125, 0.934486014, 0.944495528, 0.954504972, 0.964483847, 0.974493347, 0.984502778, 0.994481722, 1.004491194, 1.014500639, 1.024510083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:56.754" endtime="20201112 12:43:56.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.749" endtime="20201112 12:43:56.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.759" endtime="20201112 12:43:56.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.762" endtime="20201112 12:43:56.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.761" endtime="20201112 12:43:56.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.757" endtime="20201112 12:43:56.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.227" endtime="20201112 12:43:56.783"></status>
</kw>
<msg timestamp="20201112 12:43:56.783" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.797" endtime="20201112 12:43:58.931"></status>
</kw>
<msg timestamp="20201112 12:43:58.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25951812, 'wakeups': [25961883, 25971862, 25981872, 25991851, 26001861...</msg>
<status status="PASS" starttime="20201112 12:43:56.791" endtime="20201112 12:43:58.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25951812, 'wakeups': [25961883, 25971862, 25981872, 25991851, 26001861...</msg>
<status status="PASS" starttime="20201112 12:43:58.934" endtime="20201112 12:43:58.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.941" endtime="20201112 12:43:58.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.787" endtime="20201112 12:43:58.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.785" endtime="20201112 12:43:58.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.953" level="INFO">${RESULT} = {'wakeups': [25961883, 25971862, 25981872, 25991851, 26001861, 26011871, 26021850, 26031860, 26041870, 26051849, 26061859, 26071868, 26081848, 26091857, 26101867, 26111846, 26121856, 26131866, 2614184...</msg>
<status status="PASS" starttime="20201112 12:43:58.948" endtime="20201112 12:43:58.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.962" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:58.960" endtime="20201112 12:43:58.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:58.963" endtime="20201112 12:43:58.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.955" endtime="20201112 12:43:58.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.970" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:58.969" endtime="20201112 12:43:58.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.972" level="INFO">VALUE: 25951812</msg>
<status status="PASS" starttime="20201112 12:43:58.971" endtime="20201112 12:43:58.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.966" endtime="20201112 12:43:58.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.977" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:58.976" endtime="20201112 12:43:58.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.979" level="INFO">VALUE: [25961883, 25971862, 25981872, 25991851, 26001861, 26011871, 26021850, 26031860, 26041870, 26051849, 26061859, 26071868, 26081848, 26091857, 26101867, 26111846, 26121856, 26131866, 26141845, 26151855, 26161865, 26171844, 26181854, 26191864, 26201843, 26211853, 26221862, 26231872, 26241851, 26251861, 26261871, 26271850, 26281860, 26291870, 26301849, 26311859, 26321868, 26331848, 26341857, 26351867, 26361846, 26371856, 26381866, 26391845, 26401855, 26411865, 26421844, 26431854, 26441864, 26451843, 26461853, 26471862, 26481872, 26491851, 26501861, 26511871, 26521850, 26531860, 26541870, 26551849, 26561859, 26571868, 26581848, 26591857, 26601867, 26611846, 26621856, 26631866, 26641845, 26651855, 26661865, 26671844, 26681854, 26691864, 26701843, 26711853, 26721862, 26731872, 26741851, 26751861, 26761871, 26771850, 26781860, 26791870, 26801849, 26811859, 26821868, 26831848, 26841857, 26851867, 26861846, 26871856, 26881866, 26891845, 26901855, 26911865, 26921844, 26931854, 26941864, 26951843]</msg>
<status status="PASS" starttime="20201112 12:43:58.978" endtime="20201112 12:43:58.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.973" endtime="20201112 12:43:58.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.987" endtime="20201112 12:43:59.279"></status>
</kw>
<msg timestamp="20201112 12:43:59.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026104583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.985" endtime="20201112 12:43:59.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026104583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.283" endtime="20201112 12:43:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.290" endtime="20201112 12:43:59.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.982" endtime="20201112 12:43:59.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.981" endtime="20201112 12:43:59.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.319" level="INFO">${RESULT} = {'source_diff': [0, 0.010073181, 0.009978819, 0.010009499999999998, 0.009978986000000002, 0.010009333999999995, 0.010009514000000011, 0.00997894399999999, 0.010009347000000002, 0.010009473000000005, 0...</msg>
<status status="PASS" starttime="20201112 12:43:59.294" endtime="20201112 12:43:59.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.323" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.322" endtime="20201112 12:43:59.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.326" level="INFO">VALUE: 0.026104583</msg>
<status status="PASS" starttime="20201112 12:43:59.325" endtime="20201112 12:43:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.320" endtime="20201112 12:43:59.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.331" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:59.330" endtime="20201112 12:43:59.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.334" level="INFO">VALUE: [0.036177764, 0.046156583, 0.056166083, 0.066145069, 0.076154403, 0.086163917, 0.096142861, 0.106152208, 0.116161681, 0.126140667, 0.136150056, 0.146159556, 0.156138444, 0.166147944, 0.176157375, 0.186136361, 0.196145806, 0.206155194, 0.216134222, 0.226143653, 0.236153167, 0.246132056, 0.256141514, 0.266150944, 0.276129875, 0.28613925, 0.296148778, 0.306158222, 0.316137167, 0.326146597, 0.336156028, 0.346135, 0.3561445, 0.366153792, 0.376132806, 0.386142292, 0.396151764, 0.406130653, 0.416140056, 0.4261495, 0.436128528, 0.446137944, 0.456147389, 0.46612625, 0.476135778, 0.48614525, 0.496124181, 0.506133653, 0.516143111, 0.526122042, 0.536131431, 0.546140958, 0.556150417, 0.566129292, 0.576138667, 0.586148236, 0.596127167, 0.606136597, 0.616146097, 0.626125028, 0.636134458, 0.646143889, 0.656122736, 0.666132278, 0.676141736, 0.686120694, 0.696130139, 0.706139528, 0.716118611, 0.726127986, 0.736137417, 0.746116375, 0.756125806, 0.766135125, 0.776114139, 0.786123708, 0.796133111, 0.806142569, 0.8161215, 0.826131, 0.836140417, 0.846119292, 0.856128819, 0.866138292, 0.876117222, 0.886126625, 0.896136083, 0.906114986, 0.916124472, 0.926133819, 0.936112833, 0.946122194, 0.95613175, 0.966110597, 0.976120139, 0.986129611, 0.996108556, 1.006117944, 1.016127333, 1.026106264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:59.333" endtime="20201112 12:43:59.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.327" endtime="20201112 12:43:59.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.337" endtime="20201112 12:43:59.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.340" endtime="20201112 12:43:59.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.339" endtime="20201112 12:43:59.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.335" endtime="20201112 12:43:59.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.784" endtime="20201112 12:43:59.361"></status>
</kw>
<msg timestamp="20201112 12:43:59.362" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.371" endtime="20201112 12:44:01.503"></status>
</kw>
<msg timestamp="20201112 12:44:01.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28524475, 'wakeups': [28534545, 28544525, 28554534, 28564514, 28574523...</msg>
<status status="PASS" starttime="20201112 12:43:59.369" endtime="20201112 12:44:01.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28524475, 'wakeups': [28534545, 28544525, 28554534, 28564514, 28574523...</msg>
<status status="PASS" starttime="20201112 12:44:01.506" endtime="20201112 12:44:01.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.513" endtime="20201112 12:44:01.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.366" endtime="20201112 12:44:01.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.364" endtime="20201112 12:44:01.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.521" level="INFO">${RESULT} = {'wakeups': [28534545, 28544525, 28554534, 28564514, 28574523, 28584533, 28594512, 28604522, 28614532, 28624511, 28634521, 28644531, 28654510, 28664520, 28674530, 28684509, 28694519, 28704528, 2871450...</msg>
<status status="PASS" starttime="20201112 12:44:01.519" endtime="20201112 12:44:01.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.526" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:01.525" endtime="20201112 12:44:01.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.528" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:01.527" endtime="20201112 12:44:01.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.522" endtime="20201112 12:44:01.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.533" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:01.532" endtime="20201112 12:44:01.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.536" level="INFO">VALUE: 28524475</msg>
<status status="PASS" starttime="20201112 12:44:01.535" endtime="20201112 12:44:01.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.529" endtime="20201112 12:44:01.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.542" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:01.540" endtime="20201112 12:44:01.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.544" level="INFO">VALUE: [28534545, 28544525, 28554534, 28564514, 28574523, 28584533, 28594512, 28604522, 28614532, 28624511, 28634521, 28644531, 28654510, 28664520, 28674530, 28684509, 28694519, 28704528, 28714508, 28724517, 28734527, 28744506, 28754516, 28764526, 28774536, 28784515, 28794525, 28804534, 28814514, 28824523, 28834533, 28844512, 28854522, 28864532, 28874511, 28884521, 28894531, 28904510, 28914520, 28924530, 28934509, 28944519, 28954528, 28964508, 28974517, 28984527, 28994506, 29004516, 29014526, 29024536, 29034515, 29044525, 29054534, 29064514, 29074523, 29084533, 29094512, 29104522, 29114532, 29124511, 29134521, 29144531, 29154510, 29164520, 29174530, 29184509, 29194519, 29204528, 29214508, 29224517, 29234527, 29244506, 29254516, 29264526, 29274536, 29284515, 29294525, 29304534, 29314514, 29324523, 29334533, 29344512, 29354522, 29364532, 29374511, 29384521, 29394531, 29404510, 29414520, 29424530, 29434509, 29444519, 29454528, 29464508, 29474517, 29484527, 29494506, 29504516, 29514526, 29524536]</msg>
<status status="PASS" starttime="20201112 12:44:01.543" endtime="20201112 12:44:01.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.538" endtime="20201112 12:44:01.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.551" endtime="20201112 12:44:01.842"></status>
</kw>
<msg timestamp="20201112 12:44:01.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.550" endtime="20201112 12:44:01.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.848" endtime="20201112 12:44:01.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.857" endtime="20201112 12:44:01.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.547" endtime="20201112 12:44:01.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.545" endtime="20201112 12:44:01.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.892" level="INFO">${RESULT} = {'source_diff': [0, 0.010069417, 0.009978791999999997, 0.010009583000000002, 0.009978957999999996, 0.010009334000000009, 0.010009485999999998, 0.00997891699999999, 0.010009430000000014, 0.010009471999...</msg>
<status status="PASS" starttime="20201112 12:44:01.862" endtime="20201112 12:44:01.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.898" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:01.897" endtime="20201112 12:44:01.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.901" level="INFO">VALUE: 0.020133944</msg>
<status status="PASS" starttime="20201112 12:44:01.900" endtime="20201112 12:44:01.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.893" endtime="20201112 12:44:01.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.908" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:01.907" endtime="20201112 12:44:01.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.913" level="INFO">VALUE: [0.030203361, 0.040182153, 0.050191736, 0.060170694, 0.070180028, 0.080189514, 0.090168431, 0.100177861, 0.110187333, 0.120166306, 0.130175667, 0.140185194, 0.150164083, 0.160173583, 0.170183125, 0.180161903, 0.190171486, 0.200180875, 0.210159889, 0.220169292, 0.230178694, 0.24015775, 0.250167194, 0.260176542, 0.270186069, 0.280164986, 0.290174403, 0.300183958, 0.310162806, 0.320172264, 0.330181653, 0.340160611, 0.350170069, 0.360179514, 0.370158514, 0.380168014, 0.390177375, 0.400156306, 0.410165736, 0.420175125, 0.430154069, 0.440163583, 0.450173069, 0.460151972, 0.470161347, 0.480170847, 0.490149833, 0.50015925, 0.510168736, 0.520178097, 0.530157111, 0.540166556, 0.550176056, 0.560154861, 0.570164417, 0.580173778, 0.590152694, 0.600162236, 0.610171694, 0.620150653, 0.630160125, 0.640169486, 0.650148403, 0.660157917, 0.670167389, 0.680146264, 0.690155778, 0.700165167, 0.710144097, 0.720153542, 0.730163, 0.740141931, 0.750151361, 0.760160764, 0.770170431, 0.780149264, 0.790158764, 0.800168167, 0.810147111, 0.820156556, 0.830166042, 0.840144958, 0.850154417, 0.860163889, 0.870142764, 0.88015225, 0.890161736, 0.900140639, 0.910150014, 0.920159569, 0.930138486, 0.940147819, 0.950157333, 0.960136319, 0.970145625, 0.980155181, 0.990134069, 1.000143569, 1.010153028, 1.020162528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:01.911" endtime="20201112 12:44:01.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.903" endtime="20201112 12:44:01.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.917" endtime="20201112 12:44:01.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.920" endtime="20201112 12:44:01.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.919" endtime="20201112 12:44:01.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.915" endtime="20201112 12:44:01.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.362" endtime="20201112 12:44:01.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.225" endtime="20201112 12:44:01.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.224" endtime="20201112 12:44:01.942"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:01.944" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.953" endtime="20201112 12:44:04.078"></status>
</kw>
<msg timestamp="20201112 12:44:04.079" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31107177, 'wakeups': [31117279, 31127227, 31137207, 31147216, 31157257...</msg>
<status status="PASS" starttime="20201112 12:44:01.951" endtime="20201112 12:44:04.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.082" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31107177, 'wakeups': [31117279, 31127227, 31137207, 31147216, 31157257...</msg>
<status status="PASS" starttime="20201112 12:44:04.080" endtime="20201112 12:44:04.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.083" endtime="20201112 12:44:04.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.948" endtime="20201112 12:44:04.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.946" endtime="20201112 12:44:04.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.088" level="INFO">${RESULT} = {'wakeups': [31117279, 31127227, 31137207, 31147216, 31157257, 31167236, 31177185, 31187225, 31197265, 31207214, 31217193, 31227233, 31237243, 31247222, 31257202, 31267211, 31277252, 31287231, 3129718...</msg>
<status status="PASS" starttime="20201112 12:44:04.086" endtime="20201112 12:44:04.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.093" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:04.092" endtime="20201112 12:44:04.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:04.094" endtime="20201112 12:44:04.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.089" endtime="20201112 12:44:04.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.100" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.099" endtime="20201112 12:44:04.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.102" level="INFO">VALUE: 31107177</msg>
<status status="PASS" starttime="20201112 12:44:04.101" endtime="20201112 12:44:04.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.096" endtime="20201112 12:44:04.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.108" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.107" endtime="20201112 12:44:04.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.110" level="INFO">VALUE: [31117279, 31127227, 31137207, 31147216, 31157257, 31167236, 31177185, 31187225, 31197265, 31207214, 31217193, 31227233, 31237243, 31247222, 31257202, 31267211, 31277252, 31287231, 31297180, 31307250, 31317230, 31327178, 31337219, 31347259, 31357208, 31367187, 31377258, 31387237, 31397186, 31407226, 31417266, 31427215, 31437194, 31447235, 31457244, 31467224, 31477203, 31487213, 31497253, 31507232, 31517181, 31527221, 31537261, 31547210, 31557189, 31567260, 31577209, 31587188, 31597229, 31607238, 31617218, 31627197, 31637237, 31647247, 31657226, 31667205, 31677215, 31687255, 31697235, 31707183, 31717224, 31727264, 31737213, 31747192, 31757232, 31767242, 31777221, 31787200, 31797210, 31807250, 31817230, 31827178, 31837219, 31847259, 31857208, 31867187, 31877227, 31887268, 31897216, 31907196, 31917236, 31927246, 31937225, 31947204, 31957214, 31967254, 31977233, 31987182, 31997222, 32007263, 32017211, 32027191, 32037261, 32047210, 32057189, 32067230, 32077239, 32087219, 32097198, 32107238]</msg>
<status status="PASS" starttime="20201112 12:44:04.109" endtime="20201112 12:44:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.104" endtime="20201112 12:44:04.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.119" endtime="20201112 12:44:04.411"></status>
</kw>
<msg timestamp="20201112 12:44:04.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032671069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.116" endtime="20201112 12:44:04.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032671069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.415" endtime="20201112 12:44:04.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.423" endtime="20201112 12:44:04.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.113" endtime="20201112 12:44:04.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.112" endtime="20201112 12:44:04.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.450" level="INFO">${RESULT} = {'source_diff': [0, 0.010090776999999999, 0.009943737000000001, 0.009991736000000001, 0.010014165999999998, 0.010027124999999998, 0.00997429200000001, 0.009961221999999992, 0.010044570000000003, 0.010...</msg>
<status status="PASS" starttime="20201112 12:44:04.426" endtime="20201112 12:44:04.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.455" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.454" endtime="20201112 12:44:04.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.457" level="INFO">VALUE: 0.022580292</msg>
<status status="PASS" starttime="20201112 12:44:04.456" endtime="20201112 12:44:04.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.451" endtime="20201112 12:44:04.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.462" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.461" endtime="20201112 12:44:04.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.465" level="INFO">VALUE: [0.032671069, 0.042614806, 0.052606542, 0.062620708, 0.072647833, 0.082622125, 0.092583347, 0.102627917, 0.112655181, 0.122598903, 0.132590653, 0.142635181, 0.152631903, 0.162606153, 0.172597903, 0.182611903, 0.192639181, 0.202613417, 0.212574736, 0.222637, 0.232611278, 0.242572528, 0.252617153, 0.262644236, 0.272588, 0.282579917, 0.292642069, 0.302616389, 0.312577625, 0.32262225, 0.332649403, 0.342593194, 0.352584931, 0.362629528, 0.372626208, 0.382600375, 0.392592278, 0.402606292, 0.412633389, 0.422607806, 0.432568958, 0.442613611, 0.452640736, 0.462584417, 0.472576403, 0.4826385, 0.492582347, 0.502574097, 0.512618792, 0.522615361, 0.532589583, 0.542581389, 0.552626014, 0.562622639, 0.572596903, 0.582588681, 0.592602625, 0.602629889, 0.612604167, 0.622565542, 0.632610097, 0.642637153, 0.652580931, 0.662572736, 0.672617306, 0.682614056, 0.692588278, 0.702580056, 0.712594097, 0.722621375, 0.732595556, 0.742556778, 0.752601375, 0.762628625, 0.772572333, 0.782564056, 0.792608736, 0.802635792, 0.812579611, 0.822571389, 0.832615958, 0.842612611, 0.852586931, 0.862578625, 0.872592736, 0.882619986, 0.892594236, 0.902555403, 0.912600014, 0.922627111, 0.932570847, 0.942562847, 0.952625014, 0.962568778, 0.972560583, 0.982605167, 0.992601778, 1.002575986, 1.012567917, 1.022599528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:04.464" endtime="20201112 12:44:04.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.458" endtime="20201112 12:44:04.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.468" endtime="20201112 12:44:04.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.472" endtime="20201112 12:44:04.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.470" endtime="20201112 12:44:04.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.466" endtime="20201112 12:44:04.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.945" endtime="20201112 12:44:04.493"></status>
</kw>
<msg timestamp="20201112 12:44:04.493" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.502" endtime="20201112 12:44:06.632"></status>
</kw>
<msg timestamp="20201112 12:44:06.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33659729, 'wakeups': [33669830, 33679779, 33689758, 33699768, 33709808...</msg>
<status status="PASS" starttime="20201112 12:44:04.501" endtime="20201112 12:44:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.635" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33659729, 'wakeups': [33669830, 33679779, 33689758, 33699768, 33709808...</msg>
<status status="PASS" starttime="20201112 12:44:06.634" endtime="20201112 12:44:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.637" endtime="20201112 12:44:06.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.497" endtime="20201112 12:44:06.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.495" endtime="20201112 12:44:06.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.642" level="INFO">${RESULT} = {'wakeups': [33669830, 33679779, 33689758, 33699768, 33709808, 33719787, 33729736, 33739807, 33749786, 33759735, 33769775, 33779815, 33789764, 33799743, 33809783, 33819793, 33829772, 33839752, 3384976...</msg>
<status status="PASS" starttime="20201112 12:44:06.640" endtime="20201112 12:44:06.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.647" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:06.646" endtime="20201112 12:44:06.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.649" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:06.648" endtime="20201112 12:44:06.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.643" endtime="20201112 12:44:06.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.654" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:06.653" endtime="20201112 12:44:06.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.656" level="INFO">VALUE: 33659729</msg>
<status status="PASS" starttime="20201112 12:44:06.655" endtime="20201112 12:44:06.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.650" endtime="20201112 12:44:06.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.661" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:06.660" endtime="20201112 12:44:06.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.663" level="INFO">VALUE: [33669830, 33679779, 33689758, 33699768, 33709808, 33719787, 33729736, 33739807, 33749786, 33759735, 33769775, 33779815, 33789764, 33799743, 33809783, 33819793, 33829772, 33839752, 33849761, 33859802, 33869781, 33879730, 33889770, 33899810, 33909790, 33919738, 33929779, 33939819, 33949768, 33959747, 33969787, 33979797, 33989776, 33999755, 34009796, 34019775, 34029754, 34039794, 34049774, 34059753, 34069763, 34079803, 34089782, 34099731, 34109771, 34119812, 34129760, 34139739, 34149810, 34159790, 34169738, 34179779, 34189819, 34199768, 34209747, 34219818, 34229766, 34239746, 34249816, 34259765, 34269744, 34279785, 34289794, 34299774, 34309753, 34319763, 34329803, 34339782, 34349731, 34359802, 34369781, 34379730, 34389770, 34399810, 34409790, 34419738, 34429809, 34439788, 34449737, 34459808, 34469787, 34479736, 34489807, 34499786, 34509735, 34519805, 34529785, 34539733, 34549774, 34559814, 34569763, 34579742, 34589782, 34599792, 34609771, 34619750, 34629760, 34639801, 34649780, 34659759]</msg>
<status status="PASS" starttime="20201112 12:44:06.662" endtime="20201112 12:44:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.658" endtime="20201112 12:44:06.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.672" endtime="20201112 12:44:06.962"></status>
</kw>
<msg timestamp="20201112 12:44:06.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033078667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.669" endtime="20201112 12:44:06.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033078667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.966" endtime="20201112 12:44:06.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.973" endtime="20201112 12:44:06.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.667" endtime="20201112 12:44:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.665" endtime="20201112 12:44:06.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.002" level="INFO">${RESULT} = {'source_diff': [0, 0.010092708999999998, 0.009943639000000004, 0.009991762999999994, 0.01001397300000001, 0.01002716599999999, 0.009974306000000002, 0.009961318999999996, 0.010062250000000009, 0.0099...</msg>
<status status="PASS" starttime="20201112 12:44:06.977" endtime="20201112 12:44:07.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.007" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.006" endtime="20201112 12:44:07.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.009" level="INFO">VALUE: 0.022985958</msg>
<status status="PASS" starttime="20201112 12:44:07.008" endtime="20201112 12:44:07.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.003" endtime="20201112 12:44:07.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.015" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.014" endtime="20201112 12:44:07.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.017" level="INFO">VALUE: [0.033078667, 0.043022306, 0.053014069, 0.063028042, 0.073055208, 0.083029514, 0.092990833, 0.103053083, 0.113027458, 0.122988667, 0.13303325, 0.143060403, 0.153004181, 0.162995889, 0.173040528, 0.183037208, 0.193011458, 0.20300325, 0.213017306, 0.223044486, 0.23301875, 0.242979986, 0.253024569, 0.263051764, 0.273026069, 0.282987181, 0.293031778, 0.303058931, 0.313002764, 0.322994569, 0.333039069, 0.343035792, 0.353009972, 0.363001958, 0.373033583, 0.383007972, 0.392999722, 0.403031486, 0.413005764, 0.422997486, 0.433011597, 0.44303875, 0.453013042, 0.46297425, 0.473018931, 0.483045958, 0.492989847, 0.502981625, 0.513043847, 0.523018167, 0.532979431, 0.543023986, 0.553051083, 0.562994847, 0.572986806, 0.583048972, 0.592992667, 0.602984653, 0.613046653, 0.622990611, 0.632982389, 0.643026889, 0.653023583, 0.662997861, 0.672989639, 0.683003736, 0.693030917, 0.703005125, 0.712966486, 0.723028667, 0.733002972, 0.742964278, 0.753008792, 0.763036069, 0.77301025, 0.782971625, 0.793033764, 0.803008167, 0.812969417, 0.823031708, 0.833006, 0.84296725, 0.853029514, 0.863003847, 0.872965069, 0.883027333, 0.893001722, 0.902962917, 0.9130075, 0.923034736, 0.932978444, 0.942970181, 0.953014778, 0.963011389, 0.972985736, 0.982977486, 0.992991556, 1.003018708, 1.012992917, 1.022984847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:07.016" endtime="20201112 12:44:07.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.011" endtime="20201112 12:44:07.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.020" endtime="20201112 12:44:07.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.024" endtime="20201112 12:44:07.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.022" endtime="20201112 12:44:07.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.018" endtime="20201112 12:44:07.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.494" endtime="20201112 12:44:07.045"></status>
</kw>
<msg timestamp="20201112 12:44:07.045" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.053" endtime="20201112 12:44:09.187"></status>
</kw>
<msg timestamp="20201112 12:44:09.187" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36212280, 'wakeups': [36222381, 36232330, 36242309, 36252319, 36262359...</msg>
<status status="PASS" starttime="20201112 12:44:07.052" endtime="20201112 12:44:09.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36212280, 'wakeups': [36222381, 36232330, 36242309, 36252319, 36262359...</msg>
<status status="PASS" starttime="20201112 12:44:09.189" endtime="20201112 12:44:09.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.192" endtime="20201112 12:44:09.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.049" endtime="20201112 12:44:09.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.047" endtime="20201112 12:44:09.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.197" level="INFO">${RESULT} = {'wakeups': [36222381, 36232330, 36242309, 36252319, 36262359, 36272338, 36282287, 36292327, 36302368, 36312316, 36322296, 36332366, 36342315, 36352294, 36362365, 36372314, 36382293, 36392333, 3640234...</msg>
<status status="PASS" starttime="20201112 12:44:09.195" endtime="20201112 12:44:09.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.202" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:09.201" endtime="20201112 12:44:09.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.204" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:09.203" endtime="20201112 12:44:09.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.198" endtime="20201112 12:44:09.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.210" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:09.209" endtime="20201112 12:44:09.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.212" level="INFO">VALUE: 36212280</msg>
<status status="PASS" starttime="20201112 12:44:09.211" endtime="20201112 12:44:09.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.205" endtime="20201112 12:44:09.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.217" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:09.216" endtime="20201112 12:44:09.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.220" level="INFO">VALUE: [36222381, 36232330, 36242309, 36252319, 36262359, 36272338, 36282287, 36292327, 36302368, 36312316, 36322296, 36332366, 36342315, 36352294, 36362365, 36372314, 36382293, 36392333, 36402343, 36412322, 36422302, 36432342, 36442321, 36452301, 36462310, 36472351, 36482330, 36492309, 36502319, 36512359, 36522338, 36532287, 36542327, 36552368, 36562316, 36572296, 36582336, 36592346, 36602325, 36612304, 36622344, 36632324, 36642303, 36652313, 36662353, 36672332, 36682281, 36692321, 36702362, 36712280, 36722351, 36732330, 36742309, 36752319, 36762359, 36772338, 36782287, 36792327, 36802368, 36812316, 36822296, 36832366, 36842315, 36852294, 36862335, 36872344, 36882324, 36892303, 36902343, 36912322, 36922302, 36932342, 36942321, 36952301, 36962310, 36972351, 36982330, 36992309, 37002319, 37012359, 37022338, 37032287, 37042358, 37052337, 37062286, 37072326, 37082366, 37092315, 37102294, 37112335, 37122344, 37132324, 37142303, 37152343, 37162322, 37172302, 37182342, 37192321, 37202301, 37212310]</msg>
<status status="PASS" starttime="20201112 12:44:09.219" endtime="20201112 12:44:09.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.214" endtime="20201112 12:44:09.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.227" endtime="20201112 12:44:09.520"></status>
</kw>
<msg timestamp="20201112 12:44:09.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033668875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.226" endtime="20201112 12:44:09.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033668875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.524" endtime="20201112 12:44:09.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.532" endtime="20201112 12:44:09.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.223" endtime="20201112 12:44:09.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.221" endtime="20201112 12:44:09.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.559" level="INFO">${RESULT} = {'source_diff': [0, 0.010089667, 0.009943652999999997, 0.009991791, 0.010014028000000008, 0.010027208999999995, 0.00997418, 0.009961346999999995, 0.010044625000000001, 0.010027084000000006, 0.00994372...</msg>
<status status="PASS" starttime="20201112 12:44:09.536" endtime="20201112 12:44:09.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.564" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:09.563" endtime="20201112 12:44:09.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.566" level="INFO">VALUE: 0.023579208</msg>
<status status="PASS" starttime="20201112 12:44:09.565" endtime="20201112 12:44:09.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.560" endtime="20201112 12:44:09.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.573" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:09.572" endtime="20201112 12:44:09.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.575" level="INFO">VALUE: [0.033668875, 0.043612528, 0.053604319, 0.063618347, 0.073645556, 0.083619736, 0.093581083, 0.103625708, 0.113652792, 0.123596514, 0.133588431, 0.143650611, 0.153594361, 0.163586208, 0.173648333, 0.183592139, 0.193584056, 0.203628639, 0.213625208, 0.223599458, 0.233591417, 0.243623083, 0.253597306, 0.263589306, 0.273603208, 0.283630375, 0.293604708, 0.303596403, 0.313610528, 0.323637708, 0.333611931, 0.343573167, 0.353617833, 0.363644917, 0.373588819, 0.383580458, 0.393625083, 0.40362175, 0.413595944, 0.423587833, 0.4336195, 0.443593875, 0.453585611, 0.463599694, 0.473626792, 0.483601167, 0.493562361, 0.503607014, 0.513634403, 0.523560361, 0.533622472, 0.543596792, 0.553588625, 0.563602681, 0.573629847, 0.583604167, 0.593565319, 0.60361, 0.613637014, 0.623580847, 0.633572764, 0.643634778, 0.653578667, 0.663570444, 0.673614972, 0.683611722, 0.693585917, 0.703577819, 0.713609417, 0.723583875, 0.733575597, 0.743607347, 0.753581653, 0.763573472, 0.773587542, 0.783614681, 0.793589014, 0.803580708, 0.81359475, 0.823621986, 0.833596222, 0.843557514, 0.853619667, 0.863594056, 0.873555389, 0.883599931, 0.893627125, 0.903570917, 0.913562639, 0.923607236, 0.933603889, 0.943578028, 0.95357, 0.963601653, 0.973576, 0.983567819, 0.993599375, 1.003573875, 1.013565556, 1.023579569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:09.574" endtime="20201112 12:44:09.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.568" endtime="20201112 12:44:09.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.578" endtime="20201112 12:44:09.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.582" endtime="20201112 12:44:09.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.580" endtime="20201112 12:44:09.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.576" endtime="20201112 12:44:09.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.046" endtime="20201112 12:44:09.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.943" endtime="20201112 12:44:09.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.942" endtime="20201112 12:44:09.603"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:09.606" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.614" endtime="20201112 12:44:11.728"></status>
</kw>
<msg timestamp="20201112 12:44:11.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38769866, 'wakeups': [38779968, 38789947, 38799926, 38809875, 38819976...</msg>
<status status="PASS" starttime="20201112 12:44:09.613" endtime="20201112 12:44:11.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38769866, 'wakeups': [38779968, 38789947, 38799926, 38809875, 38819976...</msg>
<status status="PASS" starttime="20201112 12:44:11.730" endtime="20201112 12:44:11.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.734" endtime="20201112 12:44:11.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.610" endtime="20201112 12:44:11.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.608" endtime="20201112 12:44:11.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:11.739" level="INFO">${RESULT} = {'wakeups': [38779968, 38789947, 38799926, 38809875, 38819976, 38829956, 38839935, 38849914, 38859893, 38869964, 38879943, 38889953, 38899902, 38909881, 38919982, 38929931, 38939941, 38949920, 3895986...</msg>
<status status="PASS" starttime="20201112 12:44:11.737" endtime="20201112 12:44:11.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.744" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:11.743" endtime="20201112 12:44:11.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.747" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:11.745" endtime="20201112 12:44:11.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.740" endtime="20201112 12:44:11.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.752" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:11.751" endtime="20201112 12:44:11.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.754" level="INFO">VALUE: 38769866</msg>
<status status="PASS" starttime="20201112 12:44:11.753" endtime="20201112 12:44:11.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.748" endtime="20201112 12:44:11.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.759" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:11.758" endtime="20201112 12:44:11.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.761" level="INFO">VALUE: [38779968, 38789947, 38799926, 38809875, 38819976, 38829956, 38839935, 38849914, 38859893, 38869964, 38879943, 38889953, 38899902, 38909881, 38919982, 38929931, 38939941, 38949920, 38959869, 38969970, 38979949, 38989929, 38999908, 39009887, 39019958, 39029937, 39039947, 39049926, 39059875, 39069976, 39079956, 39089935, 39099914, 39109893, 39119964, 39129943, 39139953, 39149902, 39159881, 39169982, 39179931, 39189941, 39199920, 39209869, 39219970, 39229949, 39239929, 39249908, 39259887, 39269958, 39279937, 39289947, 39299926, 39309875, 39319976, 39329956, 39339935, 39349914, 39359893, 39369964, 39379943, 39389953, 39399902, 39409881, 39419982, 39429931, 39439941, 39449920, 39459869, 39469970, 39479949, 39489929, 39499908, 39509887, 39519958, 39529937, 39539947, 39549926, 39559875, 39569976, 39579956, 39589935, 39599914, 39609893, 39619964, 39629943, 39639953, 39649902, 39659881, 39669982, 39679931, 39689941, 39699920, 39709869, 39719970, 39729949, 39739929, 39749908, 39759887, 39769958]</msg>
<status status="PASS" starttime="20201112 12:44:11.760" endtime="20201112 12:44:11.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.755" endtime="20201112 12:44:11.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.770" endtime="20201112 12:44:12.063"></status>
</kw>
<msg timestamp="20201112 12:44:12.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032762764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.769" endtime="20201112 12:44:12.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032762764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.067" endtime="20201112 12:44:12.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.075" endtime="20201112 12:44:12.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.765" endtime="20201112 12:44:12.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.763" endtime="20201112 12:44:12.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.102" level="INFO">${RESULT} = {'source_diff': [0, 0.010097222, 0.009963167000000002, 0.009991277, 0.009960708999999998, 0.010082096999999998, 0.009991333000000005, 0.009960763999999997, 0.009991278000000006, 0.009991291999999999, ...</msg>
<status status="PASS" starttime="20201112 12:44:12.078" endtime="20201112 12:44:12.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.107" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.106" endtime="20201112 12:44:12.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.109" level="INFO">VALUE: 0.022665542</msg>
<status status="PASS" starttime="20201112 12:44:12.108" endtime="20201112 12:44:12.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.103" endtime="20201112 12:44:12.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.114" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.113" endtime="20201112 12:44:12.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.117" level="INFO">VALUE: [0.032762764, 0.042725931, 0.052717208, 0.062677917, 0.072760014, 0.082751347, 0.092712111, 0.102703389, 0.112694681, 0.122746333, 0.132737486, 0.142728833, 0.152689597, 0.162680875, 0.172763056, 0.182723736, 0.192715014, 0.202706319, 0.212667097, 0.222749181, 0.232740458, 0.242701222, 0.252692611, 0.262683889, 0.272735417, 0.282726653, 0.292718042, 0.302709319, 0.312670028, 0.322752278, 0.332743389, 0.342704181, 0.352695569, 0.362686806, 0.372738403, 0.382729583, 0.392720958, 0.402681736, 0.412673069, 0.422755181, 0.432715931, 0.442707194, 0.452698556, 0.462659181, 0.472741347, 0.482732653, 0.492693458, 0.502684833, 0.512675958, 0.522727542, 0.532718917, 0.542710222, 0.552701528, 0.562662222, 0.572744347, 0.582735542, 0.592696417, 0.602687806, 0.612678986, 0.622730556, 0.632721819, 0.642713042, 0.652673958, 0.662665153, 0.672747306, 0.682707972, 0.692699236, 0.702690653, 0.712651431, 0.722733611, 0.732724847, 0.742685556, 0.752676847, 0.762668153, 0.772719722, 0.782711028, 0.79270225, 0.802693722, 0.812654403, 0.822736514, 0.832727694, 0.842688472, 0.852679833, 0.862671028, 0.872722722, 0.882713944, 0.892705153, 0.902666111, 0.912657333, 0.922739417, 0.932700139, 0.942691486, 0.952682792, 0.962643569, 0.972725736, 0.982717014, 0.992677708, 1.002669028, 1.012660306, 1.022711875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:12.116" endtime="20201112 12:44:12.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.110" endtime="20201112 12:44:12.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.120" endtime="20201112 12:44:12.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.124" endtime="20201112 12:44:12.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.122" endtime="20201112 12:44:12.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.119" endtime="20201112 12:44:12.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.607" endtime="20201112 12:44:12.145"></status>
</kw>
<msg timestamp="20201112 12:44:12.145" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.155" endtime="20201112 12:44:14.266"></status>
</kw>
<msg timestamp="20201112 12:44:14.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41312377, 'wakeups': [41322479, 41332458, 41342468, 41352416, 41362396...</msg>
<status status="PASS" starttime="20201112 12:44:12.153" endtime="20201112 12:44:14.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41312377, 'wakeups': [41322479, 41332458, 41342468, 41352416, 41362396...</msg>
<status status="PASS" starttime="20201112 12:44:14.268" endtime="20201112 12:44:14.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.271" endtime="20201112 12:44:14.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.149" endtime="20201112 12:44:14.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.147" endtime="20201112 12:44:14.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.277" level="INFO">${RESULT} = {'wakeups': [41322479, 41332458, 41342468, 41352416, 41362396, 41372497, 41382446, 41392456, 41402435, 41412384, 41422485, 41432464, 41442443, 41452423, 41462402, 41472473, 41482452, 41492462, 4150241...</msg>
<status status="PASS" starttime="20201112 12:44:14.275" endtime="20201112 12:44:14.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.281" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:14.280" endtime="20201112 12:44:14.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.283" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:14.282" endtime="20201112 12:44:14.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.278" endtime="20201112 12:44:14.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.289" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:14.287" endtime="20201112 12:44:14.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.291" level="INFO">VALUE: 41312377</msg>
<status status="PASS" starttime="20201112 12:44:14.290" endtime="20201112 12:44:14.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.285" endtime="20201112 12:44:14.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.296" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:14.295" endtime="20201112 12:44:14.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.298" level="INFO">VALUE: [41322479, 41332458, 41342468, 41352416, 41362396, 41372497, 41382446, 41392456, 41402435, 41412384, 41422485, 41432464, 41442443, 41452423, 41462402, 41472473, 41482452, 41492462, 41502410, 41512390, 41522491, 41532440, 41542449, 41552429, 41562377, 41572479, 41582458, 41592468, 41602416, 41612396, 41622497, 41632446, 41642456, 41652435, 41662384, 41672485, 41682464, 41692443, 41702423, 41712402, 41722473, 41732452, 41742462, 41752410, 41762390, 41772491, 41782440, 41792449, 41802429, 41812377, 41822479, 41832458, 41842468, 41852416, 41862396, 41872497, 41882446, 41892456, 41902435, 41912384, 41922485, 41932464, 41942443, 41952423, 41962402, 41972473, 41982452, 41992462, 42002410, 42012390, 42022491, 42032440, 42042449, 42052429, 42062377, 42072479, 42082458, 42092468, 42102416, 42112396, 42122497, 42132446, 42142456, 42152435, 42162384, 42172485, 42182464, 42192443, 42202423, 42212402, 42222473, 42232452, 42242462, 42252410, 42262390, 42272491, 42282440, 42292449, 42302429, 42312377]</msg>
<status status="PASS" starttime="20201112 12:44:14.297" endtime="20201112 12:44:14.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.292" endtime="20201112 12:44:14.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.307" endtime="20201112 12:44:14.599"></status>
</kw>
<msg timestamp="20201112 12:44:14.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032856681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.305" endtime="20201112 12:44:14.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032856681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.603" endtime="20201112 12:44:14.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.611" endtime="20201112 12:44:14.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.302" endtime="20201112 12:44:14.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.300" endtime="20201112 12:44:14.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.639" level="INFO">${RESULT} = {'source_diff': [0, 0.01009357, 0.00999075, 0.009991236, 0.009960972000000005, 0.009991249999999993, 0.010082139000000004, 0.009960625, 0.009991389000000003, 0.009991346999999998, 0.009960653, 0.01008...</msg>
<status status="PASS" starttime="20201112 12:44:14.615" endtime="20201112 12:44:14.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.644" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:14.643" endtime="20201112 12:44:14.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.646" level="INFO">VALUE: 0.022763111</msg>
<status status="PASS" starttime="20201112 12:44:14.645" endtime="20201112 12:44:14.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.640" endtime="20201112 12:44:14.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.652" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:14.651" endtime="20201112 12:44:14.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.654" level="INFO">VALUE: [0.032856681, 0.042847431, 0.052838667, 0.062799639, 0.072790889, 0.082873028, 0.092833653, 0.102825042, 0.112816389, 0.122777042, 0.132859194, 0.142850458, 0.15281125, 0.162802625, 0.172793806, 0.182845431, 0.192836611, 0.202827972, 0.212788778, 0.22278, 0.232862167, 0.242822861, 0.252814208, 0.262805542, 0.272766278, 0.282848375, 0.292839667, 0.302830889, 0.312791694, 0.322783, 0.332865125, 0.342825778, 0.352817111, 0.362808403, 0.372769153, 0.382851375, 0.392842528, 0.402803319, 0.412794833, 0.422785931, 0.432837597, 0.442828861, 0.452820097, 0.462780931, 0.472772125, 0.482854292, 0.492814986, 0.502806278, 0.512797667, 0.522758431, 0.532840472, 0.542831708, 0.552823167, 0.562783958, 0.572775097, 0.582857306, 0.592818, 0.602809181, 0.612800625, 0.622761361, 0.632843444, 0.642834722, 0.652795444, 0.662786847, 0.672778139, 0.682829806, 0.692820986, 0.702812264, 0.712773097, 0.72276425, 0.732846458, 0.742807097, 0.752798389, 0.762789833, 0.772750611, 0.782832653, 0.792823958, 0.802815208, 0.812776, 0.822767347, 0.832849431, 0.842810083, 0.852801486, 0.86279275, 0.872753486, 0.882835542, 0.892826944, 0.902787681, 0.912778958, 0.922770194, 0.932821875, 0.942813028, 0.952804333, 0.962765181, 0.972756472, 0.982838597, 0.992799361, 1.002790583, 1.012782014, 1.022742667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:14.653" endtime="20201112 12:44:14.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.647" endtime="20201112 12:44:14.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.657" endtime="20201112 12:44:14.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:14.661" endtime="20201112 12:44:14.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.659" endtime="20201112 12:44:14.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.655" endtime="20201112 12:44:14.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.146" endtime="20201112 12:44:14.681"></status>
</kw>
<msg timestamp="20201112 12:44:14.682" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.690" endtime="20201112 12:44:16.810"></status>
</kw>
<msg timestamp="20201112 12:44:16.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43849853, 'wakeups': [43859985, 43869934, 43879943, 43889892, 43899871...</msg>
<status status="PASS" starttime="20201112 12:44:14.689" endtime="20201112 12:44:16.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.813" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43849853, 'wakeups': [43859985, 43869934, 43879943, 43889892, 43899871...</msg>
<status status="PASS" starttime="20201112 12:44:16.812" endtime="20201112 12:44:16.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.815" endtime="20201112 12:44:16.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.686" endtime="20201112 12:44:16.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.684" endtime="20201112 12:44:16.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:16.820" level="INFO">${RESULT} = {'wakeups': [43859985, 43869934, 43879943, 43889892, 43899871, 43909973, 43919921, 43929931, 43939910, 43949859, 43959960, 43969940, 43979919, 43989898, 43999877, 44009948, 44019927, 44029937, 4403988...</msg>
<status status="PASS" starttime="20201112 12:44:16.818" endtime="20201112 12:44:16.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.825" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:16.823" endtime="20201112 12:44:16.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.827" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:16.826" endtime="20201112 12:44:16.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.821" endtime="20201112 12:44:16.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.832" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:16.831" endtime="20201112 12:44:16.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.835" level="INFO">VALUE: 43849853</msg>
<status status="PASS" starttime="20201112 12:44:16.834" endtime="20201112 12:44:16.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.828" endtime="20201112 12:44:16.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.840" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:16.839" endtime="20201112 12:44:16.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.843" level="INFO">VALUE: [43859985, 43869934, 43879943, 43889892, 43899871, 43909973, 43919921, 43929931, 43939910, 43949859, 43959960, 43969940, 43979919, 43989898, 43999877, 44009948, 44019927, 44029937, 44039886, 44049865, 44059967, 44069915, 44079925, 44089904, 44099914, 44109924, 44119903, 44129882, 44139953, 44149932, 44159942, 44169891, 44179870, 44189971, 44199920, 44209930, 44219909, 44229858, 44239959, 44249938, 44259918, 44269897, 44279876, 44289947, 44299926, 44309936, 44319885, 44329864, 44339965, 44349945, 44359924, 44369934, 44379913, 44389862, 44399963, 44409942, 44419921, 44429901, 44439880, 44449951, 44459930, 44469940, 44479888, 44489868, 44499969, 44509918, 44519927, 44529907, 44539855, 44549957, 44559936, 44569915, 44579895, 44589874, 44599914, 44609893, 44619873, 44629974, 44639923, 44649932, 44659912, 44669860, 44679962, 44689941, 44699920, 44709899, 44719879, 44729949, 44739929, 44749938, 44759887, 44769866, 44779968, 44789916, 44799926, 44809906, 44819854, 44829956, 44839935, 44849884]</msg>
<status status="PASS" starttime="20201112 12:44:16.842" endtime="20201112 12:44:16.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.837" endtime="20201112 12:44:16.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.851" endtime="20201112 12:44:17.142"></status>
</kw>
<msg timestamp="20201112 12:44:17.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033326944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.849" endtime="20201112 12:44:17.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033326944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.146" endtime="20201112 12:44:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.153" endtime="20201112 12:44:17.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.846" endtime="20201112 12:44:17.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.844" endtime="20201112 12:44:17.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.181" level="INFO">${RESULT} = {'source_diff': [0, 0.010110846999999996, 0.009960542000000003, 0.009991278, 0.009960819000000003, 0.009991305999999991, 0.010082042000000013, 0.009960790999999997, 0.009991221999999994, 0.00999138900...</msg>
<status status="PASS" starttime="20201112 12:44:17.157" endtime="20201112 12:44:17.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.186" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.185" endtime="20201112 12:44:17.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.188" level="INFO">VALUE: 0.023216097</msg>
<status status="PASS" starttime="20201112 12:44:17.187" endtime="20201112 12:44:17.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.182" endtime="20201112 12:44:17.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.193" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.192" endtime="20201112 12:44:17.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.196" level="INFO">VALUE: [0.033326944, 0.043287486, 0.053278764, 0.063239583, 0.073230889, 0.083312931, 0.093273722, 0.103264944, 0.113256333, 0.123217042, 0.133299181, 0.143290486, 0.15325125, 0.163242514, 0.173233806, 0.183285389, 0.193276681, 0.203267958, 0.213228722, 0.223220056, 0.23330225, 0.243262819, 0.253254181, 0.263245597, 0.273260833, 0.283251986, 0.293243403, 0.303234639, 0.313286194, 0.323277444, 0.333268694, 0.343229569, 0.353220819, 0.363302875, 0.373263639, 0.383254889, 0.39324625, 0.403207, 0.413289181, 0.423280431, 0.43324125, 0.443232458, 0.453223806, 0.463275431, 0.473266653, 0.483257875, 0.493218792, 0.503209972, 0.513291347, 0.523271153, 0.533262333, 0.543253625, 0.553245, 0.563205681, 0.573287806, 0.583279028, 0.59323975, 0.603231111, 0.613222458, 0.623274, 0.633265333, 0.643256556, 0.653217458, 0.66320875, 0.673290833, 0.683251458, 0.693242806, 0.703234181, 0.713194861, 0.723276972, 0.733268181, 0.743228944, 0.753220375, 0.763211653, 0.773226986, 0.783218181, 0.793209417, 0.803291653, 0.813252389, 0.823243625, 0.833235, 0.843195708, 0.853277903, 0.863269069, 0.873229847, 0.88322125, 0.893212514, 0.903264167, 0.913255208, 0.923246569, 0.933207347, 0.943198681, 0.953280861, 0.963241569, 0.973232778, 0.983224139, 0.993184917, 1.003266958, 1.013258, 1.023201097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:17.195" endtime="20201112 12:44:17.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.189" endtime="20201112 12:44:17.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.200" endtime="20201112 12:44:17.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.203" endtime="20201112 12:44:17.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.202" endtime="20201112 12:44:17.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.198" endtime="20201112 12:44:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.682" endtime="20201112 12:44:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.604" endtime="20201112 12:44:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.603" endtime="20201112 12:44:17.225"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:17.227" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.236" endtime="20201112 12:44:19.360"></status>
</kw>
<msg timestamp="20201112 12:44:19.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46392364, 'wakeups': [46402496, 46412475, 46422454, 46432464, 46442443...</msg>
<status status="PASS" starttime="20201112 12:44:17.234" endtime="20201112 12:44:19.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.363" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46392364, 'wakeups': [46402496, 46412475, 46422454, 46432464, 46442443...</msg>
<status status="PASS" starttime="20201112 12:44:19.362" endtime="20201112 12:44:19.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.365" endtime="20201112 12:44:19.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.231" endtime="20201112 12:44:19.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.229" endtime="20201112 12:44:19.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.370" level="INFO">${RESULT} = {'wakeups': [46402496, 46412475, 46422454, 46432464, 46442443, 46452484, 46462432, 46472473, 46482452, 46492462, 46502441, 46512481, 46522430, 46532470, 46542449, 46552459, 46562438, 46572479, 4658242...</msg>
<status status="PASS" starttime="20201112 12:44:19.368" endtime="20201112 12:44:19.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.375" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:19.374" endtime="20201112 12:44:19.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.377" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:19.376" endtime="20201112 12:44:19.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.371" endtime="20201112 12:44:19.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.382" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:19.381" endtime="20201112 12:44:19.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.384" level="INFO">VALUE: 46392364</msg>
<status status="PASS" starttime="20201112 12:44:19.383" endtime="20201112 12:44:19.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.378" endtime="20201112 12:44:19.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.389" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:19.388" endtime="20201112 12:44:19.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.392" level="INFO">VALUE: [46402496, 46412475, 46422454, 46432464, 46442443, 46452484, 46462432, 46472473, 46482452, 46492462, 46502441, 46512481, 46522430, 46532470, 46542449, 46552459, 46562438, 46572479, 46582427, 46592468, 46602447, 46612457, 46622436, 46632476, 46642456, 46652435, 46662475, 46672454, 46682464, 46692443, 46702484, 46712432, 46722473, 46732452, 46742462, 46752441, 46762481, 46772430, 46782470, 46792449, 46802459, 46812438, 46822479, 46832427, 46842468, 46852447, 46862457, 46872436, 46882476, 46892456, 46902435, 46912475, 46922454, 46932464, 46942443, 46952484, 46962432, 46972473, 46982452, 46992462, 47002441, 47012481, 47022430, 47032470, 47042449, 47052459, 47062438, 47072479, 47082427, 47092468, 47102447, 47112457, 47122436, 47132476, 47142456, 47152435, 47162475, 47172454, 47182464, 47192443, 47202484, 47212432, 47222473, 47232452, 47242462, 47252441, 47262481, 47272430, 47282470, 47292449, 47302459, 47312438, 47322479, 47332427, 47342468, 47352447, 47362457, 47372436, 47382476, 47392456]</msg>
<status status="PASS" starttime="20201112 12:44:19.391" endtime="20201112 12:44:19.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.386" endtime="20201112 12:44:19.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.401" endtime="20201112 12:44:19.694"></status>
</kw>
<msg timestamp="20201112 12:44:19.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.398" endtime="20201112 12:44:19.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.698" endtime="20201112 12:44:19.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.706" endtime="20201112 12:44:19.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.395" endtime="20201112 12:44:19.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.393" endtime="20201112 12:44:19.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.733" level="INFO">${RESULT} = {'source_diff': [0, 0.010118222000000003, 0.009980513999999996, 0.009990790999999999, 0.009997791999999998, 0.0099905, 0.010028403000000005, 0.009959930000000006, 0.010028416999999998, 0.0099905, 0.00...</msg>
<status status="PASS" starttime="20201112 12:44:19.709" endtime="20201112 12:44:19.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.738" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:19.737" endtime="20201112 12:44:19.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.740" level="INFO">VALUE: 0.022550556</msg>
<status status="PASS" starttime="20201112 12:44:19.739" endtime="20201112 12:44:19.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.734" endtime="20201112 12:44:19.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.745" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:19.744" endtime="20201112 12:44:19.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.748" level="INFO">VALUE: [0.032668778, 0.042649292, 0.052640083, 0.062637875, 0.072628375, 0.082656778, 0.092616708, 0.102645125, 0.112635625, 0.122633611, 0.132624125, 0.142652375, 0.152612444, 0.162640792, 0.172631319, 0.182629264, 0.192619847, 0.202648194, 0.212608139, 0.222636444, 0.232627069, 0.242625, 0.252615458, 0.262643097, 0.272623028, 0.282613194, 0.292641694, 0.302632139, 0.312630111, 0.322620611, 0.332648931, 0.342608889, 0.352637319, 0.362627917, 0.372625764, 0.382616292, 0.392644639, 0.402604653, 0.412632944, 0.422623569, 0.432621319, 0.442611931, 0.452640319, 0.462600361, 0.472628639, 0.482619153, 0.492616958, 0.502607583, 0.512635194, 0.522615042, 0.532605458, 0.542633778, 0.552624361, 0.562622167, 0.572612736, 0.582641167, 0.592601181, 0.602629556, 0.612620028, 0.622617861, 0.632608306, 0.642636792, 0.652596917, 0.662625153, 0.67261575, 0.682613597, 0.692604111, 0.702632403, 0.712592389, 0.722620903, 0.732611319, 0.742609208, 0.752599806, 0.762627431, 0.772607278, 0.782597583, 0.792626056, 0.802616542, 0.812614319, 0.822604903, 0.832633194, 0.842593319, 0.852621625, 0.862612222, 0.872609958, 0.882600583, 0.892628875, 0.902589069, 0.912617347, 0.922607903, 0.932605625, 0.942596264, 0.952624569, 0.962584667, 0.972612972, 0.982603597, 0.992601444, 1.002591958, 1.012619556, 1.022599403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:19.747" endtime="20201112 12:44:19.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.741" endtime="20201112 12:44:19.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.751" endtime="20201112 12:44:19.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:19.755" endtime="20201112 12:44:19.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.754" endtime="20201112 12:44:19.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.750" endtime="20201112 12:44:19.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.228" endtime="20201112 12:44:19.776"></status>
</kw>
<msg timestamp="20201112 12:44:19.776" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.786" endtime="20201112 12:44:21.919"></status>
</kw>
<msg timestamp="20201112 12:44:21.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48944915, 'wakeups': [48955047, 48965026, 48975036, 48985015, 48995025...</msg>
<status status="PASS" starttime="20201112 12:44:19.784" endtime="20201112 12:44:21.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.922" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48944915, 'wakeups': [48955047, 48965026, 48975036, 48985015, 48995025...</msg>
<status status="PASS" starttime="20201112 12:44:21.920" endtime="20201112 12:44:21.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.923" endtime="20201112 12:44:21.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.780" endtime="20201112 12:44:21.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.778" endtime="20201112 12:44:21.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.929" level="INFO">${RESULT} = {'wakeups': [48955047, 48965026, 48975036, 48985015, 48995025, 49005035, 49015014, 49025024, 49035034, 49045013, 49055023, 49065032, 49075012, 49085021, 49095031, 49105010, 49115020, 49125030, 4913500...</msg>
<status status="PASS" starttime="20201112 12:44:21.927" endtime="20201112 12:44:21.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.933" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:21.932" endtime="20201112 12:44:21.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.935" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:21.934" endtime="20201112 12:44:21.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.930" endtime="20201112 12:44:21.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.940" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:21.939" endtime="20201112 12:44:21.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.943" level="INFO">VALUE: 48944915</msg>
<status status="PASS" starttime="20201112 12:44:21.942" endtime="20201112 12:44:21.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.937" endtime="20201112 12:44:21.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.948" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:21.947" endtime="20201112 12:44:21.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.950" level="INFO">VALUE: [48955047, 48965026, 48975036, 48985015, 48995025, 49005035, 49015014, 49025024, 49035034, 49045013, 49055023, 49065032, 49075012, 49085021, 49095031, 49105010, 49115020, 49125030, 49135009, 49145019, 49155029, 49165008, 49175018, 49185028, 49195007, 49205017, 49215026, 49225036, 49235015, 49245025, 49255035, 49265014, 49275024, 49285034, 49295013, 49305023, 49315032, 49325012, 49335021, 49345031, 49355010, 49365020, 49375030, 49385009, 49395019, 49405029, 49415008, 49425018, 49435028, 49445007, 49455017, 49465026, 49475036, 49485015, 49495025, 49505035, 49515014, 49525024, 49535034, 49545013, 49555023, 49565032, 49575012, 49585021, 49595031, 49605010, 49615020, 49625030, 49635009, 49645019, 49655029, 49665008, 49675018, 49685028, 49695007, 49705017, 49715026, 49725036, 49735015, 49745025, 49755035, 49765014, 49775024, 49785034, 49795013, 49805023, 49815032, 49825012, 49835021, 49845031, 49855010, 49865020, 49875030, 49885009, 49895019, 49905029, 49915008, 49925018, 49935028, 49945007]</msg>
<status status="PASS" starttime="20201112 12:44:21.949" endtime="20201112 12:44:21.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.944" endtime="20201112 12:44:21.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.959" endtime="20201112 12:44:22.249"></status>
</kw>
<msg timestamp="20201112 12:44:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033005681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:21.957" endtime="20201112 12:44:22.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033005681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:22.253" endtime="20201112 12:44:22.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.261" endtime="20201112 12:44:22.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.954" endtime="20201112 12:44:22.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.952" endtime="20201112 12:44:22.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.289" level="INFO">${RESULT} = {'source_diff': [0, 0.010131681000000003, 0.009978387999999998, 0.010009444999999999, 0.009978930000000004, 0.010009444999999992, 0.010009500000000005, 0.009978985999999995, 0.01000954200000001, 0.010...</msg>
<status status="PASS" starttime="20201112 12:44:22.265" endtime="20201112 12:44:22.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.294" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:22.293" endtime="20201112 12:44:22.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.296" level="INFO">VALUE: 0.022874</msg>
<status status="PASS" starttime="20201112 12:44:22.295" endtime="20201112 12:44:22.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.290" endtime="20201112 12:44:22.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.302" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:22.300" endtime="20201112 12:44:22.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.304" level="INFO">VALUE: [0.033005681, 0.042984069, 0.052993514, 0.062972444, 0.072981889, 0.082991389, 0.092970375, 0.102979917, 0.112989292, 0.12296825, 0.132977708, 0.142987111, 0.152966056, 0.162975528, 0.172984944, 0.182963931, 0.19297325, 0.202982833, 0.212961778, 0.222971167, 0.232980667, 0.242959639, 0.252969083, 0.262978431, 0.272957403, 0.282966792, 0.292976319, 0.302985708, 0.312964611, 0.322974194, 0.332983681, 0.342962458, 0.352971917, 0.362981375, 0.372960347, 0.382969736, 0.392979264, 0.402958236, 0.412967653, 0.422977139, 0.432956097, 0.442965389, 0.452974986, 0.462953931, 0.472963389, 0.482972847, 0.492951722, 0.502961208, 0.512970542, 0.5229495, 0.532958944, 0.542968444, 0.552977903, 0.562956889, 0.572966319, 0.582975736, 0.592954708, 0.602964167, 0.612973653, 0.622952542, 0.632962042, 0.642971319, 0.652950431, 0.662959847, 0.672969236, 0.68294825, 0.692957569, 0.702966972, 0.712945944, 0.722955486, 0.732964889, 0.742943847, 0.752953333, 0.762962764, 0.772941597, 0.782951208, 0.792960514, 0.802969958, 0.812948944, 0.822958417, 0.832967917, 0.84294675, 0.852956319, 0.862965833, 0.872944611, 0.882954083, 0.892963597, 0.902942486, 0.912951972, 0.922961333, 0.932940347, 0.942949847, 0.952959222, 0.962938139, 0.972947556, 0.982957097, 0.992936097, 1.002945458, 1.012954986, 1.022933819] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:22.303" endtime="20201112 12:44:22.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.297" endtime="20201112 12:44:22.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.307" endtime="20201112 12:44:22.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.311" endtime="20201112 12:44:22.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.309" endtime="20201112 12:44:22.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.305" endtime="20201112 12:44:22.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.777" endtime="20201112 12:44:22.332"></status>
</kw>
<msg timestamp="20201112 12:44:22.332" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.341" endtime="20201112 12:44:24.467"></status>
</kw>
<msg timestamp="20201112 12:44:24.468" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51497497, 'wakeups': [51507598, 51517608, 51527618, 51537597, 51547607...</msg>
<status status="PASS" starttime="20201112 12:44:22.339" endtime="20201112 12:44:24.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.471" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51497497, 'wakeups': [51507598, 51517608, 51527618, 51537597, 51547607...</msg>
<status status="PASS" starttime="20201112 12:44:24.469" endtime="20201112 12:44:24.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.472" endtime="20201112 12:44:24.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.337" endtime="20201112 12:44:24.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.334" endtime="20201112 12:44:24.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.478" level="INFO">${RESULT} = {'wakeups': [51507598, 51517608, 51527618, 51537597, 51547607, 51557617, 51567596, 51577606, 51587615, 51597595, 51607604, 51617614, 51627593, 51637603, 51647613, 51657592, 51667602, 51677612, 5168759...</msg>
<status status="PASS" starttime="20201112 12:44:24.476" endtime="20201112 12:44:24.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.482" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:24.481" endtime="20201112 12:44:24.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.484" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:24.483" endtime="20201112 12:44:24.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.479" endtime="20201112 12:44:24.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.491" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:24.489" endtime="20201112 12:44:24.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.493" level="INFO">VALUE: 51497497</msg>
<status status="PASS" starttime="20201112 12:44:24.492" endtime="20201112 12:44:24.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.487" endtime="20201112 12:44:24.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.498" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:24.497" endtime="20201112 12:44:24.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.500" level="INFO">VALUE: [51507598, 51517608, 51527618, 51537597, 51547607, 51557617, 51567596, 51577606, 51587615, 51597595, 51607604, 51617614, 51627593, 51637603, 51647613, 51657592, 51667602, 51677612, 51687591, 51697601, 51707611, 51717590, 51727600, 51737609, 51747589, 51757598, 51767608, 51777618, 51787597, 51797607, 51807617, 51817596, 51827606, 51837615, 51847595, 51857604, 51867614, 51877593, 51887603, 51897613, 51907592, 51917602, 51927612, 51937591, 51947601, 51957611, 51967590, 51977600, 51987609, 51997589, 52007598, 52017608, 52027618, 52037597, 52047607, 52057617, 52067596, 52077606, 52087615, 52097595, 52107604, 52117614, 52127593, 52137603, 52147613, 52157592, 52167602, 52177612, 52187591, 52197601, 52207611, 52217590, 52227600, 52237609, 52247589, 52257598, 52267608, 52277618, 52287597, 52297607, 52307617, 52317596, 52327606, 52337615, 52347595, 52357604, 52367614, 52377593, 52387603, 52397613, 52407592, 52417602, 52427612, 52437591, 52447601, 52457611, 52467590, 52477600, 52487609, 52497589]</msg>
<status status="PASS" starttime="20201112 12:44:24.499" endtime="20201112 12:44:24.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.494" endtime="20201112 12:44:24.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.508" endtime="20201112 12:44:24.800"></status>
</kw>
<msg timestamp="20201112 12:44:24.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0297505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:24.506" endtime="20201112 12:44:24.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0297505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:24.809" endtime="20201112 12:44:24.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.817" endtime="20201112 12:44:24.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.503" endtime="20201112 12:44:24.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.502" endtime="20201112 12:44:24.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.844" level="INFO">${RESULT} = {'source_diff': [0, 0.010123693999999999, 0.010008833000000002, 0.010009444999999999, 0.009979069, 0.010009374999999994, 0.010009445000000006, 0.009978972000000003, 0.010009416999999993, 0.01000944400...</msg>
<status status="PASS" starttime="20201112 12:44:24.820" endtime="20201112 12:44:24.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.850" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:24.848" endtime="20201112 12:44:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.852" level="INFO">VALUE: 0.019626806</msg>
<status status="PASS" starttime="20201112 12:44:24.851" endtime="20201112 12:44:24.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.845" endtime="20201112 12:44:24.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.857" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:24.856" endtime="20201112 12:44:24.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.860" level="INFO">VALUE: [0.0297505, 0.039759333, 0.049768778, 0.059747847, 0.069757222, 0.079766667, 0.089745639, 0.099755056, 0.1097645, 0.119743486, 0.129753042, 0.139762403, 0.149741236, 0.159750792, 0.169760097, 0.179739194, 0.189748514, 0.199758125, 0.209736861, 0.219746458, 0.229755847, 0.239734736, 0.249744236, 0.259753153, 0.269733028, 0.279742069, 0.2897515, 0.299761056, 0.309739917, 0.319749417, 0.329758861, 0.339737819, 0.349747181, 0.359756639, 0.369735639, 0.379745125, 0.389754528, 0.399733375, 0.409742917, 0.419752319, 0.429731222, 0.439740708, 0.449750153, 0.459729125, 0.469738542, 0.479747958, 0.489727069, 0.499736486, 0.509745347, 0.519724986, 0.529734222, 0.539743681, 0.549753139, 0.559732056, 0.569741472, 0.579750986, 0.589729986, 0.599739347, 0.609748819, 0.619727861, 0.629737278, 0.639746722, 0.649725542, 0.659735014, 0.669744514, 0.679723556, 0.689732972, 0.699742264, 0.709721264, 0.719730764, 0.729740167, 0.739719167, 0.749728583, 0.759737417, 0.769717194, 0.779726333, 0.789735764, 0.799745264, 0.809724278, 0.819733708, 0.829743125, 0.839721972, 0.849731528, 0.859741069, 0.869719986, 0.879729361, 0.889738847, 0.899717819, 0.909727306, 0.919736708, 0.929715653, 0.939725014, 0.949734431, 0.959713403, 0.969722917, 0.979732278, 0.989711306, 0.999720681, 1.009729667, 1.019709472] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:24.858" endtime="20201112 12:44:24.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.853" endtime="20201112 12:44:24.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.863" endtime="20201112 12:44:24.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:24.867" endtime="20201112 12:44:24.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.865" endtime="20201112 12:44:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.861" endtime="20201112 12:44:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.333" endtime="20201112 12:44:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.226" endtime="20201112 12:44:24.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.225" endtime="20201112 12:44:24.888"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:24.890" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.899" endtime="20201112 12:44:27.026"></status>
</kw>
<msg timestamp="20201112 12:44:27.027" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54060089, 'wakeups': [54070220, 54080230, 54090240, 54100189, 54110168...</msg>
<status status="PASS" starttime="20201112 12:44:24.897" endtime="20201112 12:44:27.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54060089, 'wakeups': [54070220, 54080230, 54090240, 54100189, 54110168...</msg>
<status status="PASS" starttime="20201112 12:44:27.028" endtime="20201112 12:44:27.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.031" endtime="20201112 12:44:27.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.895" endtime="20201112 12:44:27.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.892" endtime="20201112 12:44:27.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.037" level="INFO">${RESULT} = {'wakeups': [54070220, 54080230, 54090240, 54100189, 54110168, 54120147, 54130096, 54140228, 54150177, 54160217, 54170166, 54180236, 54190155, 54200225, 54210174, 54220214, 54230163, 54240234, 5425015...</msg>
<status status="PASS" starttime="20201112 12:44:27.035" endtime="20201112 12:44:27.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.041" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:27.040" endtime="20201112 12:44:27.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.043" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:27.042" endtime="20201112 12:44:27.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.038" endtime="20201112 12:44:27.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.048" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.047" endtime="20201112 12:44:27.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.051" level="INFO">VALUE: 54060089</msg>
<status status="PASS" starttime="20201112 12:44:27.050" endtime="20201112 12:44:27.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.045" endtime="20201112 12:44:27.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.056" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.055" endtime="20201112 12:44:27.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.058" level="INFO">VALUE: [54070220, 54080230, 54090240, 54100189, 54110168, 54120147, 54130096, 54140228, 54150177, 54160217, 54170166, 54180236, 54190155, 54200225, 54210174, 54220214, 54230163, 54240234, 54250152, 54260223, 54270172, 54280212, 54290161, 54300231, 54310180, 54320220, 54330169, 54340240, 54350158, 54360229, 54370178, 54380218, 54390167, 54400238, 54410156, 54420227, 54430175, 54440216, 54450195, 54460174, 54470123, 54480102, 54490203, 54500152, 54510131, 54520111, 54530181, 54540161, 54550140, 54560119, 54570190, 54580169, 54590148, 54600097, 54610198, 54620178, 54630126, 54640106, 54650207, 54660156, 54670135, 54680114, 54690185, 54700164, 54710144, 54720092, 54730194, 54740173, 54750122, 54760101, 54770202, 54780151, 54790130, 54800109, 54810211, 54820159, 54830139, 54840118, 54850189, 54860168, 54870147, 54880096, 54890197, 54900177, 54910125, 54920104, 54930206, 54940155, 54950134, 54960113, 54970184, 54980163, 54990142, 55000091, 55010192, 55020172, 55030120, 55040100, 55050201, 55060180]</msg>
<status status="PASS" starttime="20201112 12:44:27.057" endtime="20201112 12:44:27.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.052" endtime="20201112 12:44:27.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.067" endtime="20201112 12:44:27.359"></status>
</kw>
<msg timestamp="20201112 12:44:27.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026055458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036222403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.065" endtime="20201112 12:44:27.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026055458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036222403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.363" endtime="20201112 12:44:27.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.371" endtime="20201112 12:44:27.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.062" endtime="20201112 12:44:27.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.060" endtime="20201112 12:44:27.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.398" level="INFO">${RESULT} = {'source_diff': [0, 0.010166945, 0.010009097000000002, 0.010009417, 0.009940639000000001, 0.009970347000000004, 0.009990040999999991, 0.009959334, 0.010106653000000007, 0.009970707999999995, 0.0100178...</msg>
<status status="PASS" starttime="20201112 12:44:27.375" endtime="20201112 12:44:27.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.403" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.402" endtime="20201112 12:44:27.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.405" level="INFO">VALUE: 0.026055458</msg>
<status status="PASS" starttime="20201112 12:44:27.404" endtime="20201112 12:44:27.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.400" endtime="20201112 12:44:27.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.411" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.410" endtime="20201112 12:44:27.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.413" level="INFO">VALUE: [0.036222403, 0.0462315, 0.056240917, 0.066181556, 0.076151903, 0.086141944, 0.096101278, 0.106207931, 0.116178639, 0.126196472, 0.136166972, 0.146215236, 0.156155375, 0.166203667, 0.176174306, 0.186192069, 0.196162778, 0.206210958, 0.216150944, 0.226199361, 0.236169833, 0.246187708, 0.256158361, 0.266206583, 0.276177278, 0.286195042, 0.296165625, 0.306213889, 0.316154, 0.326202264, 0.336172917, 0.346190556, 0.356161292, 0.366209472, 0.376149639, 0.386197889, 0.396168458, 0.406205319, 0.416176653, 0.426146847, 0.4361065, 0.446096444, 0.456183833, 0.466123764, 0.476113736, 0.48610375, 0.49616075, 0.506131056, 0.516121069, 0.526111042, 0.536168097, 0.546138222, 0.556128361, 0.566087819, 0.576175375, 0.586145583, 0.596105056, 0.606095042, 0.616182528, 0.626122333, 0.636112458, 0.646102361, 0.656159264, 0.666129583, 0.676119722, 0.686079069, 0.696166597, 0.706136972, 0.716096472, 0.726086472, 0.736173875, 0.746113639, 0.756103708, 0.766093708, 0.776181153, 0.786121111, 0.796111069, 0.806101028, 0.816158042, 0.826128333, 0.836118417, 0.846077736, 0.856165208, 0.866135514, 0.876095125, 0.886085083, 0.896172597, 0.906112417, 0.916102403, 0.926092333, 0.936149347, 0.946119681, 0.956109722, 0.966069111, 0.976156597, 0.986126861, 0.996086417, 1.006076389, 1.016163875, 1.026134264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:27.412" endtime="20201112 12:44:27.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.407" endtime="20201112 12:44:27.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.417" endtime="20201112 12:44:27.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.420" endtime="20201112 12:44:27.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.419" endtime="20201112 12:44:27.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.415" endtime="20201112 12:44:27.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.891" endtime="20201112 12:44:27.442"></status>
</kw>
<msg timestamp="20201112 12:44:27.442" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.451" endtime="20201112 12:44:29.580"></status>
</kw>
<msg timestamp="20201112 12:44:29.580" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56612609, 'wakeups': [56622772, 56632751, 56642730, 56652679, 56662658...</msg>
<status status="PASS" starttime="20201112 12:44:27.449" endtime="20201112 12:44:29.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56612609, 'wakeups': [56622772, 56632751, 56642730, 56652679, 56662658...</msg>
<status status="PASS" starttime="20201112 12:44:29.581" endtime="20201112 12:44:29.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.584" endtime="20201112 12:44:29.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.446" endtime="20201112 12:44:29.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.444" endtime="20201112 12:44:29.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.590" level="INFO">${RESULT} = {'wakeups': [56622772, 56632751, 56642730, 56652679, 56662658, 56672637, 56682708, 56692687, 56702667, 56712615, 56722717, 56732696, 56742645, 56752624, 56762725, 56772674, 56782653, 56792633, 5680270...</msg>
<status status="PASS" starttime="20201112 12:44:29.588" endtime="20201112 12:44:29.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.594" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:29.593" endtime="20201112 12:44:29.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.596" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:29.595" endtime="20201112 12:44:29.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.591" endtime="20201112 12:44:29.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.602" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:29.601" endtime="20201112 12:44:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.604" level="INFO">VALUE: 56612609</msg>
<status status="PASS" starttime="20201112 12:44:29.603" endtime="20201112 12:44:29.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.598" endtime="20201112 12:44:29.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.609" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:29.608" endtime="20201112 12:44:29.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.612" level="INFO">VALUE: [56622772, 56632751, 56642730, 56652679, 56662658, 56672637, 56682708, 56692687, 56702667, 56712615, 56722717, 56732696, 56742645, 56752624, 56762725, 56772674, 56782653, 56792633, 56802703, 56812683, 56822662, 56832611, 56842712, 56852691, 56862640, 56872619, 56882720, 56892700, 56902648, 56912628, 56922729, 56932678, 56942657, 56952636, 56962707, 56972686, 56982666, 56992614, 57002716, 57012695, 57022644, 57032623, 57042724, 57052673, 57062652, 57072631, 57082733, 57092681, 57102752, 57112670, 57122741, 57132720, 57142700, 57152648, 57162628, 57172729, 57182678, 57192657, 57202636, 57212707, 57222686, 57232666, 57242614, 57252716, 57262695, 57272644, 57282623, 57292724, 57302673, 57312652, 57322631, 57332702, 57342681, 57352661, 57362609, 57372711, 57382690, 57392669, 57402618, 57412719, 57422698, 57432647, 57442626, 57452728, 57462677, 57472656, 57482635, 57492706, 57502685, 57512664, 57522613, 57532714, 57542694, 57552642, 57562622, 57572723, 57582672, 57592651, 57602630, 57612701]</msg>
<status status="PASS" starttime="20201112 12:44:29.610" endtime="20201112 12:44:29.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.606" endtime="20201112 12:44:29.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.619" endtime="20201112 12:44:29.910"></status>
</kw>
<msg timestamp="20201112 12:44:29.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033883167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.618" endtime="20201112 12:44:29.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033883167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.915" endtime="20201112 12:44:29.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.922" endtime="20201112 12:44:29.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.615" endtime="20201112 12:44:29.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.613" endtime="20201112 12:44:29.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.951" level="INFO">${RESULT} = {'source_diff': [0, 0.010166374999999998, 0.009978346999999999, 0.009971180000000003, 0.009939792000000003, 0.009990070000000004, 0.009989901999999995, 0.010057014000000003, 0.00997034699999999, 0.009...</msg>
<status status="PASS" starttime="20201112 12:44:29.926" endtime="20201112 12:44:29.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.955" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:29.954" endtime="20201112 12:44:29.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.957" level="INFO">VALUE: 0.023716792</msg>
<status status="PASS" starttime="20201112 12:44:29.956" endtime="20201112 12:44:29.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.951" endtime="20201112 12:44:29.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.963" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:29.962" endtime="20201112 12:44:29.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.965" level="INFO">VALUE: [0.033883167, 0.043861514, 0.053832694, 0.063772486, 0.073762556, 0.083752458, 0.093809472, 0.103779819, 0.113769792, 0.12372925, 0.133816722, 0.143786986, 0.153746569, 0.163736597, 0.173824028, 0.183763792, 0.193753861, 0.203743847, 0.213800764, 0.223771153, 0.233761125, 0.243720625, 0.253808167, 0.263778431, 0.273737931, 0.283727986, 0.293815458, 0.303785764, 0.31374525, 0.323735236, 0.333822806, 0.343762528, 0.353752486, 0.363742514, 0.373799514, 0.383769819, 0.393759847, 0.403719181, 0.413806833, 0.423777042, 0.433736625, 0.443726542, 0.453814111, 0.463753792, 0.473743889, 0.483733847, 0.493809819, 0.503780486, 0.513828708, 0.523768861, 0.533836292, 0.543807486, 0.553777806, 0.563737431, 0.573727333, 0.583814875, 0.593754583, 0.603744694, 0.613734625, 0.623791583, 0.633761903, 0.643752042, 0.653711444, 0.663798944, 0.673769181, 0.683728708, 0.693718694, 0.703806139, 0.713746, 0.723736056, 0.733726, 0.743782931, 0.753753181, 0.763743333, 0.773702792, 0.783790292, 0.793760444, 0.803750667, 0.813710069, 0.823797514, 0.833767722, 0.843727333, 0.853717278, 0.863804875, 0.873744639, 0.883734708, 0.893724653, 0.903781486, 0.913751931, 0.923742, 0.933701458, 0.943788792, 0.953759083, 0.963718722, 0.97370875, 0.983796208, 0.993735875, 1.003726056, 1.013715917, 1.023772889] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:29.964" endtime="20201112 12:44:29.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.959" endtime="20201112 12:44:29.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.974" endtime="20201112 12:44:29.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:29.977" endtime="20201112 12:44:29.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.976" endtime="20201112 12:44:29.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.972" endtime="20201112 12:44:29.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.443" endtime="20201112 12:44:29.998"></status>
</kw>
<msg timestamp="20201112 12:44:29.998" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.007" endtime="20201112 12:44:32.135"></status>
</kw>
<msg timestamp="20201112 12:44:32.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59165161, 'wakeups': [59175323, 59185272, 59195251, 59205200, 59215179...</msg>
<status status="PASS" starttime="20201112 12:44:30.005" endtime="20201112 12:44:32.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59165161, 'wakeups': [59175323, 59185272, 59195251, 59205200, 59215179...</msg>
<status status="PASS" starttime="20201112 12:44:32.137" endtime="20201112 12:44:32.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.140" endtime="20201112 12:44:32.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.003" endtime="20201112 12:44:32.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.001" endtime="20201112 12:44:32.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:32.146" level="INFO">${RESULT} = {'wakeups': [59175323, 59185272, 59195251, 59205200, 59215179, 59225280, 59235229, 59245208, 59255187, 59265258, 59275238, 59285217, 59295166, 59305267, 59315246, 59325195, 59335174, 59345275, 5935522...</msg>
<status status="PASS" starttime="20201112 12:44:32.143" endtime="20201112 12:44:32.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.150" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:32.149" endtime="20201112 12:44:32.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.152" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:32.151" endtime="20201112 12:44:32.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.146" endtime="20201112 12:44:32.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.157" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:32.156" endtime="20201112 12:44:32.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.159" level="INFO">VALUE: 59165161</msg>
<status status="PASS" starttime="20201112 12:44:32.158" endtime="20201112 12:44:32.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.154" endtime="20201112 12:44:32.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.164" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:32.163" endtime="20201112 12:44:32.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.167" level="INFO">VALUE: [59175323, 59185272, 59195251, 59205200, 59215179, 59225280, 59235229, 59245208, 59255187, 59265258, 59275238, 59285217, 59295166, 59305267, 59315246, 59325195, 59335174, 59345275, 59355224, 59365203, 59375183, 59385253, 59395233, 59405212, 59415191, 59425262, 59435241, 59445220, 59455169, 59465270, 59475250, 59485198, 59495178, 59505279, 59515228, 59525207, 59535186, 59545257, 59555236, 59565216, 59575164, 59585266, 59595245, 59605194, 59615173, 59625274, 59635223, 59645202, 59655181, 59665283, 59675231, 59685211, 59695190, 59705261, 59715240, 59725219, 59735168, 59745269, 59755249, 59765197, 59775177, 59785278, 59795227, 59805206, 59815185, 59825256, 59835235, 59845214, 59855163, 59865264, 59875244, 59885192, 59895172, 59905273, 59915252, 59925201, 59935180, 59945281, 59955230, 59965209, 59975189, 59985260, 59995239, 60005218, 60015167, 60025268, 60035247, 60045196, 60055175, 60065277, 60075225, 60085205, 60095184, 60105255, 60115234, 60125213, 60135162, 60145263, 60155242, 60165222]</msg>
<status status="PASS" starttime="20201112 12:44:32.166" endtime="20201112 12:44:32.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.161" endtime="20201112 12:44:32.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.175" endtime="20201112 12:44:32.466"></status>
</kw>
<msg timestamp="20201112 12:44:32.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029783278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.173" endtime="20201112 12:44:32.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029783278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.470" endtime="20201112 12:44:32.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.478" endtime="20201112 12:44:32.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.171" endtime="20201112 12:44:32.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.168" endtime="20201112 12:44:32.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:32.506" level="INFO">${RESULT} = {'source_diff': [0, 0.010144180999999999, 0.009960694000000003, 0.009970388999999996, 0.009959486000000004, 0.009989930999999994, 0.01008763900000001, 0.009939639, 0.009990165999999995, 0.009989945, 0...</msg>
<status status="PASS" starttime="20201112 12:44:32.482" endtime="20201112 12:44:32.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.511" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:32.509" endtime="20201112 12:44:32.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.513" level="INFO">VALUE: 0.019639097</msg>
<status status="PASS" starttime="20201112 12:44:32.512" endtime="20201112 12:44:32.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.507" endtime="20201112 12:44:32.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.519" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:32.517" endtime="20201112 12:44:32.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.521" level="INFO">VALUE: [0.029783278, 0.039743972, 0.049714361, 0.059673847, 0.069663778, 0.079751417, 0.089691056, 0.099681222, 0.109671167, 0.119728, 0.129698361, 0.139688431, 0.149647931, 0.159735375, 0.169705694, 0.179665236, 0.189655194, 0.199742694, 0.209682417, 0.219672458, 0.2296625, 0.239719389, 0.249689736, 0.259679722, 0.26966975, 0.279726708, 0.289696917, 0.299687097, 0.309646472, 0.319734069, 0.329704375, 0.339663903, 0.349653792, 0.359741264, 0.369681111, 0.379671139, 0.389661111, 0.399718, 0.409688306, 0.419678458, 0.429637806, 0.439725347, 0.449695667, 0.45965525, 0.469645194, 0.479732653, 0.489672375, 0.499662528, 0.509652444, 0.51974, 0.529679708, 0.539669708, 0.549659764, 0.559716736, 0.569687028, 0.579677097, 0.589636556, 0.599724069, 0.609694194, 0.619653833, 0.629643806, 0.639731375, 0.649671097, 0.659661194, 0.669651056, 0.679708056, 0.689678319, 0.699668403, 0.709627847, 0.719715333, 0.729685597, 0.739645194, 0.749635194, 0.759722764, 0.769692875, 0.779652458, 0.789642417, 0.799729986, 0.809669611, 0.81965975, 0.829649722, 0.839706708, 0.849677, 0.859667153, 0.869626472, 0.879714042, 0.889684306, 0.899643958, 0.909633806, 0.919721306, 0.929661111, 0.939651111, 0.949641042, 0.959698028, 0.969668431, 0.979658444, 0.989617861, 0.999705417, 1.009675583, 1.019665722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:32.520" endtime="20201112 12:44:32.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.514" endtime="20201112 12:44:32.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.524" endtime="20201112 12:44:32.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:32.528" endtime="20201112 12:44:32.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.526" endtime="20201112 12:44:32.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.522" endtime="20201112 12:44:32.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.999" endtime="20201112 12:44:32.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.889" endtime="20201112 12:44:32.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.888" endtime="20201112 12:44:32.549"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:32.552" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.561" endtime="20201112 12:44:34.689"></status>
</kw>
<msg timestamp="20201112 12:44:34.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61722747, 'wakeups': [61732910, 61742858, 61752838, 61762786, 61772766...</msg>
<status status="PASS" starttime="20201112 12:44:32.559" endtime="20201112 12:44:34.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.693" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61722747, 'wakeups': [61732910, 61742858, 61752838, 61762786, 61772766...</msg>
<status status="PASS" starttime="20201112 12:44:34.691" endtime="20201112 12:44:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.694" endtime="20201112 12:44:34.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.556" endtime="20201112 12:44:34.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.554" endtime="20201112 12:44:34.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:34.699" level="INFO">${RESULT} = {'wakeups': [61732910, 61742858, 61752838, 61762786, 61772766, 61782897, 61792816, 61802886, 61812927, 61822845, 61832824, 61842803, 61852752, 61862884, 61872833, 61882873, 61892913, 61902862, 6191281...</msg>
<status status="PASS" starttime="20201112 12:44:34.697" endtime="20201112 12:44:34.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.704" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:34.703" endtime="20201112 12:44:34.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.706" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:34.705" endtime="20201112 12:44:34.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.700" endtime="20201112 12:44:34.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.712" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:34.710" endtime="20201112 12:44:34.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.714" level="INFO">VALUE: 61722747</msg>
<status status="PASS" starttime="20201112 12:44:34.713" endtime="20201112 12:44:34.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.707" endtime="20201112 12:44:34.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.720" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:34.719" endtime="20201112 12:44:34.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.722" level="INFO">VALUE: [61732910, 61742858, 61752838, 61762786, 61772766, 61782897, 61792816, 61802886, 61812927, 61822845, 61832824, 61842803, 61852752, 61862884, 61872833, 61882873, 61892913, 61902862, 61912811, 61922790, 61932769, 61942871, 61952819, 61962890, 61972900, 61982849, 61992828, 62002807, 62012756, 62022888, 62032836, 62042877, 62052917, 62062866, 62072814, 62082794, 62092773, 62102874, 62112823, 62122894, 62132904, 62142852, 62152832, 62162780, 62172760, 62182891, 62192810, 62202880, 62212921, 62222839, 62232818, 62242797, 62252777, 62262878, 62272827, 62282897, 62292907, 62302856, 62312835, 62322784, 62332763, 62342895, 62352813, 62362884, 62372924, 62382843, 62392822, 62402801, 62412750, 62422882, 62432830, 62442871, 62452911, 62462860, 62472808, 62482788, 62492767, 62502899, 62512817, 62522888, 62532928, 62542846, 62552825, 62562805, 62572753, 62582885, 62592834, 62602874, 62612915, 62622863, 62632812, 62642791, 62652770, 62662872, 62672821, 62682891, 62692901, 62702850, 62712829, 62722778]</msg>
<status status="PASS" starttime="20201112 12:44:34.721" endtime="20201112 12:44:34.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.716" endtime="20201112 12:44:34.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.729" endtime="20201112 12:44:35.023"></status>
</kw>
<msg timestamp="20201112 12:44:35.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026290208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036462208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:34.728" endtime="20201112 12:44:35.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026290208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036462208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:35.027" endtime="20201112 12:44:35.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.034" endtime="20201112 12:44:35.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.725" endtime="20201112 12:44:35.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.723" endtime="20201112 12:44:35.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.067" level="INFO">${RESULT} = {'source_diff': [0, 0.010172000000000004, 0.009948541999999998, 0.009968846999999996, 0.009958861000000006, 0.009989417, 0.010109958000000002, 0.009938694999999997, 0.010069388999999998, 0.01003006900...</msg>
<status status="PASS" starttime="20201112 12:44:35.043" endtime="20201112 12:44:35.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.072" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:35.071" endtime="20201112 12:44:35.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.074" level="INFO">VALUE: 0.026290208</msg>
<status status="PASS" starttime="20201112 12:44:35.073" endtime="20201112 12:44:35.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.068" endtime="20201112 12:44:35.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.080" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:35.079" endtime="20201112 12:44:35.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.083" level="INFO">VALUE: [0.036462208, 0.04641075, 0.056379597, 0.066338458, 0.076327875, 0.086437833, 0.096376528, 0.106445917, 0.116475986, 0.126394722, 0.136363625, 0.146353139, 0.156311958, 0.166421819, 0.176391028, 0.186429958, 0.196459986, 0.206409417, 0.216347611, 0.226337111, 0.236326403, 0.246405778, 0.256375125, 0.266444542, 0.276443958, 0.286393375, 0.296362389, 0.306351653, 0.316310556, 0.326420458, 0.336389722, 0.346428694, 0.356458667, 0.366407972, 0.376346403, 0.386335847, 0.396325111, 0.406404528, 0.416373847, 0.426443306, 0.436442819, 0.446392069, 0.456361014, 0.466319806, 0.476309125, 0.486419111, 0.496357944, 0.506427431, 0.516457264, 0.526376042, 0.536345083, 0.546334458, 0.55632375, 0.566403194, 0.576372514, 0.586441944, 0.596441417, 0.606390694, 0.616359611, 0.6263185, 0.636307847, 0.646417764, 0.656356542, 0.666426069, 0.676456014, 0.686374764, 0.696343708, 0.706333069, 0.716291833, 0.726401694, 0.736371014, 0.746409931, 0.756440028, 0.766389264, 0.776327653, 0.786317111, 0.796306431, 0.806416347, 0.816355069, 0.826424486, 0.836454514, 0.846373403, 0.85634225, 0.86633175, 0.876290486, 0.886400486, 0.896369694, 0.906408611, 0.916438528, 0.926387847, 0.936326361, 0.946315819, 0.956304986, 0.966384556, 0.976353861, 0.986423194, 0.996422583, 1.006371972, 1.016341, 1.026299903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:35.082" endtime="20201112 12:44:35.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.076" endtime="20201112 12:44:35.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.086" endtime="20201112 12:44:35.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:35.090" endtime="20201112 12:44:35.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.088" endtime="20201112 12:44:35.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.084" endtime="20201112 12:44:35.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.552" endtime="20201112 12:44:35.110"></status>
</kw>
<msg timestamp="20201112 12:44:35.111" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.119" endtime="20201112 12:44:37.232"></status>
</kw>
<msg timestamp="20201112 12:44:37.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64280334, 'wakeups': [64290496, 64300445, 64310424, 64320373, 64330352...</msg>
<status status="PASS" starttime="20201112 12:44:35.118" endtime="20201112 12:44:37.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64280334, 'wakeups': [64290496, 64300445, 64310424, 64320373, 64330352...</msg>
<status status="PASS" starttime="20201112 12:44:37.234" endtime="20201112 12:44:37.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.237" endtime="20201112 12:44:37.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.115" endtime="20201112 12:44:37.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.113" endtime="20201112 12:44:37.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:37.243" level="INFO">${RESULT} = {'wakeups': [64290496, 64300445, 64310424, 64320373, 64330352, 64340484, 64350402, 64360473, 64370513, 64380432, 64390411, 64400390, 64410339, 64420471, 64430419, 64440460, 64450500, 64460449, 6447039...</msg>
<status status="PASS" starttime="20201112 12:44:37.241" endtime="20201112 12:44:37.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.247" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:37.246" endtime="20201112 12:44:37.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.250" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:37.249" endtime="20201112 12:44:37.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.244" endtime="20201112 12:44:37.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.255" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:37.254" endtime="20201112 12:44:37.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.257" level="INFO">VALUE: 64280334</msg>
<status status="PASS" starttime="20201112 12:44:37.256" endtime="20201112 12:44:37.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.251" endtime="20201112 12:44:37.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.262" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:37.261" endtime="20201112 12:44:37.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.264" level="INFO">VALUE: [64290496, 64300445, 64310424, 64320373, 64330352, 64340484, 64350402, 64360473, 64370513, 64380432, 64390411, 64400390, 64410339, 64420471, 64430419, 64440460, 64450500, 64460449, 64470397, 64480377, 64490356, 64500457, 64510406, 64520477, 64530456, 64540496, 64550445, 64560424, 64570373, 64580352, 64590484, 64600402, 64610473, 64620513, 64630432, 64640411, 64650390, 64660339, 64670471, 64680419, 64690460, 64700500, 64710449, 64720397, 64730377, 64740356, 64750457, 64760406, 64770477, 64780456, 64790496, 64800445, 64810424, 64820373, 64830352, 64840484, 64850402, 64860473, 64870513, 64880432, 64890411, 64900390, 64910339, 64920471, 64930419, 64940460, 64950500, 64960449, 64970397, 64980377, 64990356, 65000457, 65010406, 65020477, 65030456, 65040496, 65050445, 65060424, 65070373, 65080352, 65090484, 65100402, 65110473, 65120513, 65130432, 65140411, 65150390, 65160339, 65170471, 65180419, 65190460, 65200500, 65210449, 65220397, 65230377, 65240356, 65250457, 65260406, 65270477, 65280456]</msg>
<status status="PASS" starttime="20201112 12:44:37.263" endtime="20201112 12:44:37.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.258" endtime="20201112 12:44:37.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.272" endtime="20201112 12:44:37.567"></status>
</kw>
<msg timestamp="20201112 12:44:37.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03189425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:37.270" endtime="20201112 12:44:37.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03189425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:37.571" endtime="20201112 12:44:37.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.579" endtime="20201112 12:44:37.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.268" endtime="20201112 12:44:37.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.266" endtime="20201112 12:44:37.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:37.606" level="INFO">${RESULT} = {'source_diff': [0, 0.010163181, 0.009948194, 0.009968834000000003, 0.009958971999999996, 0.009989222000000006, 0.010110027999999993, 0.009938749999999996, 0.010069403000000005, 0.010030082999999995, ...</msg>
<status status="PASS" starttime="20201112 12:44:37.582" endtime="20201112 12:44:37.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.611" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:37.610" endtime="20201112 12:44:37.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.613" level="INFO">VALUE: 0.021731069</msg>
<status status="PASS" starttime="20201112 12:44:37.612" endtime="20201112 12:44:37.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.607" endtime="20201112 12:44:37.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.619" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:37.618" endtime="20201112 12:44:37.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.621" level="INFO">VALUE: [0.03189425, 0.041842444, 0.051811278, 0.06177025, 0.071759472, 0.0818695, 0.09180825, 0.101877653, 0.111907736, 0.121826375, 0.131795417, 0.141784764, 0.151743486, 0.161853514, 0.171822833, 0.181861625, 0.191891736, 0.201841042, 0.211779486, 0.221768861, 0.231758153, 0.241837472, 0.251806847, 0.261875653, 0.2718555, 0.281885222, 0.291834597, 0.301803403, 0.311762278, 0.321751569, 0.331861486, 0.341800361, 0.351869681, 0.361899778, 0.371818639, 0.381787556, 0.391776875, 0.401735681, 0.411845667, 0.421814944, 0.431853875, 0.441883861, 0.451833181, 0.461771653, 0.471761028, 0.481750319, 0.491829722, 0.501799028, 0.511867806, 0.521847681, 0.531877278, 0.541826792, 0.551795639, 0.561754514, 0.571743764, 0.581853764, 0.591792528, 0.601861944, 0.611891986, 0.621810875, 0.631779764, 0.641769, 0.651727806, 0.661837708, 0.671807083, 0.681845944, 0.691875986, 0.701825236, 0.711763708, 0.721753125, 0.731742389, 0.741821792, 0.751791042, 0.761859972, 0.771839653, 0.781869486, 0.791818861, 0.801787708, 0.811746653, 0.821735972, 0.831845819, 0.841784597, 0.851854, 0.861884028, 0.871802931, 0.881771806, 0.891761167, 0.901720069, 0.911829819, 0.921799278, 0.931838042, 0.941868111, 0.951817431, 0.961755806, 0.971745208, 0.981734597, 0.991813944, 1.001783236, 1.011852083, 1.021831847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:37.620" endtime="20201112 12:44:37.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.614" endtime="20201112 12:44:37.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.625" endtime="20201112 12:44:37.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:37.628" endtime="20201112 12:44:37.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.627" endtime="20201112 12:44:37.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.623" endtime="20201112 12:44:37.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.111" endtime="20201112 12:44:37.649"></status>
</kw>
<msg timestamp="20201112 12:44:37.649" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.659" endtime="20201112 12:44:39.791"></status>
</kw>
<msg timestamp="20201112 12:44:39.793" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66817810, 'wakeups': [66827972, 66837921, 66847900, 66857849, 66867828...</msg>
<status status="PASS" starttime="20201112 12:44:37.656" endtime="20201112 12:44:39.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.797" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66817810, 'wakeups': [66827972, 66837921, 66847900, 66857849, 66867828...</msg>
<status status="PASS" starttime="20201112 12:44:39.795" endtime="20201112 12:44:39.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.798" endtime="20201112 12:44:39.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.653" endtime="20201112 12:44:39.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.651" endtime="20201112 12:44:39.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:39.803" level="INFO">${RESULT} = {'wakeups': [66827972, 66837921, 66847900, 66857849, 66867828, 66877960, 66887878, 66897949, 66907989, 66917907, 66927886, 66937866, 66947814, 66957946, 66967895, 66977935, 66987976, 66997924, 6700787...</msg>
<status status="PASS" starttime="20201112 12:44:39.801" endtime="20201112 12:44:39.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.808" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:39.807" endtime="20201112 12:44:39.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.810" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:39.809" endtime="20201112 12:44:39.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.804" endtime="20201112 12:44:39.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.815" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:39.814" endtime="20201112 12:44:39.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.817" level="INFO">VALUE: 66817810</msg>
<status status="PASS" starttime="20201112 12:44:39.816" endtime="20201112 12:44:39.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.811" endtime="20201112 12:44:39.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.822" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:39.821" endtime="20201112 12:44:39.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.825" level="INFO">VALUE: [66827972, 66837921, 66847900, 66857849, 66867828, 66877960, 66887878, 66897949, 66907989, 66917907, 66927886, 66937866, 66947814, 66957946, 66967895, 66977935, 66987976, 66997924, 67007873, 67017852, 67027832, 67037933, 67047882, 67057952, 67067993, 67077911, 67087890, 67097869, 67107818, 67117950, 67127899, 67137939, 67147979, 67157928, 67167877, 67177856, 67187835, 67197937, 67207885, 67217956, 67227966, 67237915, 67247894, 67257843, 67267822, 67277954, 67287872, 67297943, 67307983, 67317932, 67327880, 67337860, 67347839, 67357940, 67367889, 67377960, 67387969, 67397918, 67407897, 67417846, 67427825, 67437957, 67447875, 67457946, 67467987, 67477905, 67487884, 67497863, 67507812, 67517944, 67527893, 67537933, 67547973, 67557922, 67567901, 67577850, 67587829, 67597961, 67607879, 67617950, 67627990, 67637908, 67647888, 67657867, 67667816, 67677947, 67687896, 67697937, 67707977, 67717926, 67727874, 67737854, 67747833, 67757934, 67767883, 67777954, 67787963, 67797912, 67807891, 67817871]</msg>
<status status="PASS" starttime="20201112 12:44:39.824" endtime="20201112 12:44:39.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.819" endtime="20201112 12:44:39.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.833" endtime="20201112 12:44:40.123"></status>
</kw>
<msg timestamp="20201112 12:44:40.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030502458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.831" endtime="20201112 12:44:40.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030502458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.127" endtime="20201112 12:44:40.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.135" endtime="20201112 12:44:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.828" endtime="20201112 12:44:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.827" endtime="20201112 12:44:40.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.164" level="INFO">${RESULT} = {'source_diff': [0, 0.010177276999999998, 0.00994857, 0.009968972, 0.009958861, 0.009989277999999997, 0.01010994400000001, 0.009938722999999997, 0.010069486000000002, 0.010029943999999999, 0.009918874...</msg>
<status status="PASS" starttime="20201112 12:44:40.139" endtime="20201112 12:44:40.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.168" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:40.167" endtime="20201112 12:44:40.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.170" level="INFO">VALUE: 0.020325181</msg>
<status status="PASS" starttime="20201112 12:44:40.169" endtime="20201112 12:44:40.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.165" endtime="20201112 12:44:40.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.176" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:40.175" endtime="20201112 12:44:40.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.178" level="INFO">VALUE: [0.030502458, 0.040451028, 0.05042, 0.060378861, 0.070368139, 0.080478083, 0.090416806, 0.100486292, 0.110516236, 0.120435111, 0.130403958, 0.140393319, 0.150352236, 0.160462083, 0.170431375, 0.180470264, 0.190500403, 0.200449681, 0.210388097, 0.220377514, 0.230366819, 0.240446167, 0.250415458, 0.260484931, 0.270514875, 0.280433694, 0.290402653, 0.300392083, 0.310350861, 0.320460778, 0.330430125, 0.340469014, 0.350498972, 0.360448333, 0.370386694, 0.380376181, 0.390365472, 0.400444819, 0.410414222, 0.420483569, 0.430483181, 0.440432389, 0.450401208, 0.460360194, 0.470349444, 0.480459417, 0.490398181, 0.500467611, 0.510497514, 0.520446903, 0.530385306, 0.540374806, 0.550364111, 0.560443417, 0.570412792, 0.580482153, 0.590481708, 0.600431056, 0.610400014, 0.620358778, 0.630348167, 0.640458056, 0.650396889, 0.660466333, 0.670496347, 0.680415056, 0.690384056, 0.700373458, 0.710332167, 0.720442097, 0.730411472, 0.740450306, 0.750480361, 0.760429597, 0.770398611, 0.780357528, 0.79034675, 0.800456722, 0.810395417, 0.820464917, 0.830494903, 0.840413653, 0.850382639, 0.860372069, 0.870330833, 0.88044075, 0.890410014, 0.900448944, 0.910478972, 0.920428333, 0.930366736, 0.940356181, 0.950345403, 0.96042475, 0.970394083, 0.9804635, 0.990462986, 1.000412375, 1.010381361, 1.020370792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:40.177" endtime="20201112 12:44:40.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.172" endtime="20201112 12:44:40.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.181" endtime="20201112 12:44:40.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:40.185" endtime="20201112 12:44:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.183" endtime="20201112 12:44:40.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.180" endtime="20201112 12:44:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.650" endtime="20201112 12:44:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.550" endtime="20201112 12:44:40.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.550" endtime="20201112 12:44:40.211"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:40.213" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.222" endtime="20201112 12:44:42.353"></status>
</kw>
<msg timestamp="20201112 12:44:42.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69385528, 'wakeups': [69395751, 69405670, 69415710, 69425720, 694356...</msg>
<status status="PASS" starttime="20201112 12:44:40.220" endtime="20201112 12:44:42.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69385528, 'wakeups': [69395751, 69405670, 69415710, 69425720, 694356...</msg>
<status status="PASS" starttime="20201112 12:44:42.355" endtime="20201112 12:44:42.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.358" endtime="20201112 12:44:42.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.217" endtime="20201112 12:44:42.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.215" endtime="20201112 12:44:42.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:42.363" level="INFO">${RESULT} = {'wakeups': [69395751, 69405670, 69415710, 69425720, 69435668, 69445617, 69455718, 69465667, 69475616, 69485717, 69495666, 69505615, 69515716, 69525665, 69535614, 69545715, 69555664, 69565612, 6957571...</msg>
<status status="PASS" starttime="20201112 12:44:42.361" endtime="20201112 12:44:42.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.368" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:42.367" endtime="20201112 12:44:42.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.370" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:42.369" endtime="20201112 12:44:42.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.364" endtime="20201112 12:44:42.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.376" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:42.375" endtime="20201112 12:44:42.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.378" level="INFO">VALUE: 69385528</msg>
<status status="PASS" starttime="20201112 12:44:42.377" endtime="20201112 12:44:42.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.371" endtime="20201112 12:44:42.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.383" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:42.382" endtime="20201112 12:44:42.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.386" level="INFO">VALUE: [69395751, 69405670, 69415710, 69425720, 69435668, 69445617, 69455718, 69465667, 69475616, 69485717, 69495666, 69505615, 69515716, 69525665, 69535614, 69545715, 69555664, 69565612, 69575714, 69585662, 69595611, 69605712, 69615661, 69625610, 69635650, 69645599, 69655731, 69665679, 69675598, 69685729, 69695678, 69705596, 69715728, 69725677, 69735595, 69745727, 69755676, 69765594, 69775726, 69785675, 69795593, 69805725, 69815673, 69825592, 69835723, 69845672, 69855590, 69865722, 69875671, 69885559, 69895538, 69905700, 69915740, 69925659, 69935607, 69945739, 69955657, 69965606, 69975738, 69985656, 69995605, 70005737, 70015655, 70025604, 70035736, 70045654, 70055603, 70065734, 70075653, 70085601, 70095733, 70105651, 70115600, 70125732, 70135589, 70145568, 70155548, 70165710, 70175720, 70185668, 70195617, 70205718, 70215667, 70225616, 70235717, 70245666, 70255615, 70265716, 70275665, 70285614, 70295715, 70305664, 70315612, 70325714, 70335662, 70345611, 70355712, 70365661, 70375610, 70385650]</msg>
<status status="PASS" starttime="20201112 12:44:42.384" endtime="20201112 12:44:42.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.380" endtime="20201112 12:44:42.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.394" endtime="20201112 12:44:42.686"></status>
</kw>
<msg timestamp="20201112 12:44:42.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030855944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041065417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.392" endtime="20201112 12:44:42.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030855944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041065417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.690" endtime="20201112 12:44:42.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.698" endtime="20201112 12:44:42.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.389" endtime="20201112 12:44:42.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.387" endtime="20201112 12:44:42.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:42.725" level="INFO">${RESULT} = {'source_diff': [0, 0.010209473, 0.009936915999999997, 0.010030764000000005, 0.009999138999999997, 0.009947639000000008, 0.009968013999999997, 0.010081943999999995, 0.009947763999999998, 0.00996801399...</msg>
<status status="PASS" starttime="20201112 12:44:42.701" endtime="20201112 12:44:42.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.730" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:42.729" endtime="20201112 12:44:42.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.732" level="INFO">VALUE: 0.030855944</msg>
<status status="PASS" starttime="20201112 12:44:42.731" endtime="20201112 12:44:42.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.726" endtime="20201112 12:44:42.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.738" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:42.737" endtime="20201112 12:44:42.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.740" level="INFO">VALUE: [0.041065417, 0.051002333, 0.061033097, 0.071032236, 0.080979875, 0.090947889, 0.101029833, 0.110977597, 0.120945611, 0.131027639, 0.140975375, 0.150943542, 0.161025486, 0.170973264, 0.180941222, 0.191023306, 0.200971069, 0.210939194, 0.22102125, 0.230968944, 0.240936986, 0.251019125, 0.260966764, 0.270934569, 0.280955403, 0.29092325, 0.301035694, 0.310983639, 0.320921139, 0.331033639, 0.340981417, 0.350918875, 0.361031528, 0.370979153, 0.380916889, 0.391029292, 0.400977014, 0.41091475, 0.421027056, 0.430974889, 0.4409125, 0.451024903, 0.460972806, 0.470910264, 0.481022903, 0.490970556, 0.500908181, 0.511020611, 0.520968903, 0.530864819, 0.540853264, 0.551008, 0.561037472, 0.570954667, 0.580922667, 0.591035319, 0.600952444, 0.610920611, 0.621033097, 0.630950278, 0.6409185, 0.651030875, 0.660948153, 0.670916264, 0.681028722, 0.690946014, 0.700914111, 0.711026625, 0.720943986, 0.730912, 0.741024528, 0.750941764, 0.760909708, 0.771022806, 0.780877653, 0.790866236, 0.800854861, 0.811009528, 0.821008625, 0.830956389, 0.840924444, 0.851006333, 0.860954139, 0.870922069, 0.881004278, 0.890951903, 0.900920028, 0.911002014, 0.92094975, 0.930917917, 0.940999889, 0.950947542, 0.960915597, 0.970997764, 0.980945556, 0.990913486, 1.000995639, 1.010943333, 1.020911069, 1.030931972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:42.739" endtime="20201112 12:44:42.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.733" endtime="20201112 12:44:42.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.744" endtime="20201112 12:44:42.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:42.747" endtime="20201112 12:44:42.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.746" endtime="20201112 12:44:42.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.742" endtime="20201112 12:44:42.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.214" endtime="20201112 12:44:42.768"></status>
</kw>
<msg timestamp="20201112 12:44:42.768" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.777" endtime="20201112 12:44:44.907"></status>
</kw>
<msg timestamp="20201112 12:44:44.908" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71938079, 'wakeups': [71948303, 71958221, 71968261, 71978271, 719882...</msg>
<status status="PASS" starttime="20201112 12:44:42.775" endtime="20201112 12:44:44.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71938079, 'wakeups': [71948303, 71958221, 71968261, 71978271, 719882...</msg>
<status status="PASS" starttime="20201112 12:44:44.909" endtime="20201112 12:44:44.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.913" endtime="20201112 12:44:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.772" endtime="20201112 12:44:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.770" endtime="20201112 12:44:44.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.918" level="INFO">${RESULT} = {'wakeups': [71948303, 71958221, 71968261, 71978271, 71988220, 71998168, 72008270, 72018218, 72028167, 72038269, 72048217, 72058166, 72068267, 72078216, 72088165, 72098266, 72108215, 72118164, 7212826...</msg>
<status status="PASS" starttime="20201112 12:44:44.916" endtime="20201112 12:44:44.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.922" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:44.921" endtime="20201112 12:44:44.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.925" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:44.924" endtime="20201112 12:44:44.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.919" endtime="20201112 12:44:44.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.930" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:44.929" endtime="20201112 12:44:44.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.932" level="INFO">VALUE: 71938079</msg>
<status status="PASS" starttime="20201112 12:44:44.931" endtime="20201112 12:44:44.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.926" endtime="20201112 12:44:44.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.937" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:44.936" endtime="20201112 12:44:44.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.939" level="INFO">VALUE: [71948303, 71958221, 71968261, 71978271, 71988220, 71998168, 72008270, 72018218, 72028167, 72038269, 72048217, 72058166, 72068267, 72078216, 72088165, 72098266, 72108215, 72118164, 72128265, 72138214, 72148162, 72158264, 72168212, 72178161, 72188262, 72198211, 72208160, 72218292, 72228210, 72238159, 72248291, 72258209, 72268157, 72278289, 72288208, 72298156, 72308288, 72318206, 72328155, 72338287, 72348205, 72358154, 72368286, 72378204, 72388153, 72398284, 72408203, 72418151, 72428283, 72438201, 72448150, 72458282, 72468231, 72478149, 72488281, 72498229, 72508148, 72518280, 72528228, 72538146, 72548278, 72558227, 72568145, 72578277, 72588226, 72598144, 72608276, 72618225, 72628143, 72638275, 72648223, 72658142, 72668273, 72678222, 72688140, 72698272, 72708221, 72718170, 72728271, 72738220, 72748168, 72758270, 72768218, 72778167, 72788269, 72798217, 72808166, 72818267, 72828216, 72838165, 72848266, 72858215, 72868164, 72878265, 72888214, 72898162, 72908264, 72918212, 72928161, 72938262]</msg>
<status status="PASS" starttime="20201112 12:44:44.938" endtime="20201112 12:44:44.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.933" endtime="20201112 12:44:44.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.948" endtime="20201112 12:44:45.240"></status>
</kw>
<msg timestamp="20201112 12:44:45.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020920875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031126375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:44.945" endtime="20201112 12:44:45.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020920875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031126375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:45.244" endtime="20201112 12:44:45.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.252" endtime="20201112 12:44:45.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.943" endtime="20201112 12:44:45.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.941" endtime="20201112 12:44:45.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:45.280" level="INFO">${RESULT} = {'source_diff': [0, 0.010205500000000003, 0.009936861000000002, 0.010030721999999999, 0.009999014, 0.009947680999999993, 0.009968055000000003, 0.010081944999999995, 0.009947750000000005, 0.009968194, ...</msg>
<status status="PASS" starttime="20201112 12:44:45.256" endtime="20201112 12:44:45.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.289" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:45.288" endtime="20201112 12:44:45.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.291" level="INFO">VALUE: 0.020920875</msg>
<status status="PASS" starttime="20201112 12:44:45.290" endtime="20201112 12:44:45.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.285" endtime="20201112 12:44:45.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.296" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:45.295" endtime="20201112 12:44:45.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.299" level="INFO">VALUE: [0.031126375, 0.041063236, 0.051093958, 0.061092972, 0.071040653, 0.081008708, 0.091090653, 0.101038403, 0.111006597, 0.121088514, 0.131036264, 0.141004347, 0.151086375, 0.161034153, 0.171002125, 0.181084278, 0.191031944, 0.200999986, 0.211082042, 0.221029931, 0.230997889, 0.241079903, 0.251027778, 0.260995625, 0.271077708, 0.281025444, 0.290993583, 0.301106042, 0.311023264, 0.320991333, 0.331103972, 0.341021194, 0.350989181, 0.361101847, 0.371019042, 0.380987042, 0.391099486, 0.401016833, 0.410984931, 0.421097306, 0.431014625, 0.440982722, 0.451095181, 0.461012472, 0.470980556, 0.481093125, 0.491010403, 0.500978306, 0.511090986, 0.521008194, 0.530976181, 0.54108875, 0.551036472, 0.560974028, 0.571086653, 0.581034444, 0.590971917, 0.601084486, 0.611032153, 0.62096975, 0.631082306, 0.641030028, 0.650967681, 0.661080181, 0.671027931, 0.680965389, 0.691078014, 0.701025694, 0.710963236, 0.72107575, 0.731023528, 0.740961083, 0.751073583, 0.761021375, 0.770958903, 0.781071528, 0.791019347, 0.800987333, 0.811069306, 0.821017125, 0.830985097, 0.841067125, 0.851014875, 0.860982889, 0.871064861, 0.881012694, 0.890980833, 0.901062903, 0.911010597, 0.920978722, 0.931060542, 0.941008389, 0.950976458, 0.961058611, 0.971006319, 0.980974333, 0.991056417, 1.001004111, 1.010972167, 1.02105425] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:45.298" endtime="20201112 12:44:45.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.292" endtime="20201112 12:44:45.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.302" endtime="20201112 12:44:45.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:45.306" endtime="20201112 12:44:45.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.304" endtime="20201112 12:44:45.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.300" endtime="20201112 12:44:45.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.769" endtime="20201112 12:44:45.327"></status>
</kw>
<msg timestamp="20201112 12:44:45.327" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.336" endtime="20201112 12:44:47.474"></status>
</kw>
<msg timestamp="20201112 12:44:47.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74500701, 'wakeups': [74510894, 74520843, 74530792, 74540893, 745508...</msg>
<status status="PASS" starttime="20201112 12:44:45.333" endtime="20201112 12:44:47.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.482" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74500701, 'wakeups': [74510894, 74520843, 74530792, 74540893, 745508...</msg>
<status status="PASS" starttime="20201112 12:44:47.478" endtime="20201112 12:44:47.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.485" endtime="20201112 12:44:47.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.331" endtime="20201112 12:44:47.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.329" endtime="20201112 12:44:47.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.491" level="INFO">${RESULT} = {'wakeups': [74510894, 74520843, 74530792, 74540893, 74550842, 74560791, 74570892, 74580841, 74590789, 74600891, 74610839, 74620788, 74630889, 74640838, 74650787, 74660888, 74670837, 74680786, 7469088...</msg>
<status status="PASS" starttime="20201112 12:44:47.489" endtime="20201112 12:44:47.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.495" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:47.494" endtime="20201112 12:44:47.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.498" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:47.497" endtime="20201112 12:44:47.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.492" endtime="20201112 12:44:47.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.503" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:47.502" endtime="20201112 12:44:47.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.505" level="INFO">VALUE: 74500701</msg>
<status status="PASS" starttime="20201112 12:44:47.504" endtime="20201112 12:44:47.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.499" endtime="20201112 12:44:47.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.511" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:47.510" endtime="20201112 12:44:47.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.513" level="INFO">VALUE: [74510894, 74520843, 74530792, 74540893, 74550842, 74560791, 74570892, 74580841, 74590789, 74600891, 74610839, 74620788, 74630889, 74640838, 74650787, 74660888, 74670837, 74680786, 74690887, 74700836, 74710784, 74720886, 74730834, 74740783, 74750885, 74760833, 74770782, 74780914, 74790832, 74800781, 74810913, 74820831, 74830780, 74840911, 74850830, 74860778, 74870910, 74880828, 74890777, 74900909, 74910827, 74920776, 74930908, 74940826, 74950775, 74960906, 74970825, 74980773, 74990905, 75000823, 75010772, 75020904, 75030853, 75040771, 75050903, 75060852, 75070770, 75080902, 75090850, 75100769, 75110900, 75120849, 75130767, 75140899, 75150848, 75160766, 75170898, 75180847, 75190765, 75200897, 75210845, 75220764, 75230895, 75240844, 75250762, 75260894, 75270843, 75280792, 75290893, 75300842, 75310791, 75320892, 75330841, 75340789, 75350891, 75360839, 75370788, 75380889, 75390838, 75400787, 75410888, 75420837, 75430786, 75440887, 75450836, 75460784, 75470886, 75480834, 75490783, 75500885]</msg>
<status status="PASS" starttime="20201112 12:44:47.512" endtime="20201112 12:44:47.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.507" endtime="20201112 12:44:47.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.521" endtime="20201112 12:44:47.812"></status>
</kw>
<msg timestamp="20201112 12:44:47.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034806778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.519" endtime="20201112 12:44:47.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034806778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.816" endtime="20201112 12:44:47.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.824" endtime="20201112 12:44:47.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.516" endtime="20201112 12:44:47.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.514" endtime="20201112 12:44:47.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.851" level="INFO">${RESULT} = {'source_diff': [0, 0.010193221999999995, 0.009938180000000005, 0.009968111000000002, 0.010082014, 0.009947819999999996, 0.009968040999999997, 0.010081973000000008, 0.009947846999999996, 0.00996801399...</msg>
<status status="PASS" starttime="20201112 12:44:47.827" endtime="20201112 12:44:47.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.856" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:47.855" endtime="20201112 12:44:47.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.858" level="INFO">VALUE: 0.024613556</msg>
<status status="PASS" starttime="20201112 12:44:47.857" endtime="20201112 12:44:47.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.852" endtime="20201112 12:44:47.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.864" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:47.863" endtime="20201112 12:44:47.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.866" level="INFO">VALUE: [0.034806778, 0.044744958, 0.054713069, 0.064795083, 0.074742903, 0.084710944, 0.094792917, 0.104740764, 0.114708778, 0.124790917, 0.134738542, 0.144706653, 0.154788569, 0.164736375, 0.174704444, 0.184786458, 0.194734292, 0.204702292, 0.214784264, 0.224732111, 0.234700167, 0.244782111, 0.25473, 0.264697903, 0.274780014, 0.284727722, 0.294695667, 0.304808333, 0.3147255, 0.324693625, 0.334806264, 0.344723333, 0.354691375, 0.364803986, 0.374721208, 0.38468925, 0.394801847, 0.404719153, 0.414687153, 0.424799736, 0.434716958, 0.444684917, 0.4547975, 0.464714736, 0.474682736, 0.484795194, 0.494712542, 0.504680736, 0.514793222, 0.524710583, 0.5346785, 0.544791028, 0.554738806, 0.564676375, 0.574788806, 0.584736583, 0.594674194, 0.604786736, 0.614734458, 0.624671917, 0.634784528, 0.644732403, 0.654669861, 0.664782403, 0.674730222, 0.684667708, 0.694780097, 0.704727958, 0.714665486, 0.724778083, 0.734725819, 0.744663403, 0.754775986, 0.764723694, 0.774661278, 0.78477375, 0.794721583, 0.8046895, 0.814771569, 0.824719333, 0.834687347, 0.844769403, 0.854717236, 0.864685222, 0.874767264, 0.884714986, 0.894683125, 0.904765097, 0.914712917, 0.924681, 0.934763042, 0.944710778, 0.954678806, 0.964760875, 0.974708583, 0.984676597, 0.994758597, 1.004706278, 1.014674403, 1.024756514] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:47.865" endtime="20201112 12:44:47.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.860" endtime="20201112 12:44:47.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.870" endtime="20201112 12:44:47.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:47.873" endtime="20201112 12:44:47.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.872" endtime="20201112 12:44:47.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.868" endtime="20201112 12:44:47.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.327" endtime="20201112 12:44:47.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.212" endtime="20201112 12:44:47.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.211" endtime="20201112 12:44:47.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.246" endtime="20201112 12:44:47.895"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:31.148" endtime="20201112 12:44:47.896" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:43:29.760" endtime="20201112 12:44:47.900"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:41:44.206" endtime="20201112 12:44:47.917"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
