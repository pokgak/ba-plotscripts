<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 10:13:28.635" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.200" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:29.209" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:30.299" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:29.199" endtime="20201112 10:13:30.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.302" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:30.300" endtime="20201112 10:13:30.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.197" endtime="20201112 10:13:30.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:30.305" endtime="20201112 10:13:30.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.304" endtime="20201112 10:13:30.489"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.503" endtime="20201112 10:13:30.530"></status>
</kw>
<msg timestamp="20201112 10:13:30.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupst...</msg>
<status status="PASS" starttime="20201112 10:13:30.501" endtime="20201112 10:13:30.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupst...</msg>
<status status="PASS" starttime="20201112 10:13:30.532" endtime="20201112 10:13:30.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.537" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:30.535" endtime="20201112 10:13:30.537"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.499" endtime="20201112 10:13:30.538"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.496" endtime="20201112 10:13:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.494" endtime="20201112 10:13:30.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:30.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:30.542" endtime="20201112 10:13:30.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.540" endtime="20201112 10:13:30.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.494" endtime="20201112 10:13:30.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.493" endtime="20201112 10:13:30.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.544" endtime="20201112 10:13:30.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.491" endtime="20201112 10:13:30.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.547" endtime="20201112 10:13:30.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.490" endtime="20201112 10:13:30.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.196" endtime="20201112 10:13:30.550"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:30.556" endtime="20201112 10:13:30.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.554" endtime="20201112 10:13:30.576"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.591" endtime="20201112 10:13:30.612"></status>
</kw>
<msg timestamp="20201112 10:13:30.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.589" endtime="20201112 10:13:30.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.613" endtime="20201112 10:13:30.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.618" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:30.616" endtime="20201112 10:13:30.618"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.587" endtime="20201112 10:13:30.619"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.584" endtime="20201112 10:13:30.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.582" endtime="20201112 10:13:30.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:30.623" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:30.622" endtime="20201112 10:13:30.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.620" endtime="20201112 10:13:30.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.581" endtime="20201112 10:13:30.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.580" endtime="20201112 10:13:30.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.625" endtime="20201112 10:13:30.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.578" endtime="20201112 10:13:30.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.577" endtime="20201112 10:13:30.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.553" endtime="20201112 10:13:30.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.635" endtime="20201112 10:13:30.650"></status>
</kw>
<msg timestamp="20201112 10:13:30.650" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.633" endtime="20201112 10:13:30.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.653" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.651" endtime="20201112 10:13:30.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.654" endtime="20201112 10:13:30.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.631" endtime="20201112 10:13:30.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.629" endtime="20201112 10:13:30.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.661" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:13:30.660" endtime="20201112 10:13:30.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.663" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:13:30.662" endtime="20201112 10:13:30.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.657" endtime="20201112 10:13:30.664"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:30.550" endtime="20201112 10:13:30.665" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:28.746" endtime="20201112 10:13:30.667"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.720" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:30.728" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:31.864" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:30.719" endtime="20201112 10:13:31.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:31.867" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:31.866" endtime="20201112 10:13:31.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.717" endtime="20201112 10:13:31.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:31.871" endtime="20201112 10:13:32.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:31.869" endtime="20201112 10:13:32.091"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.103" endtime="20201112 10:13:32.131"></status>
</kw>
<msg timestamp="20201112 10:13:32.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '...</msg>
<status status="PASS" starttime="20201112 10:13:32.102" endtime="20201112 10:13:32.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '...</msg>
<status status="PASS" starttime="20201112 10:13:32.133" endtime="20201112 10:13:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.139" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:32.136" endtime="20201112 10:13:32.139"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.099" endtime="20201112 10:13:32.140"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.097" endtime="20201112 10:13:32.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.096" endtime="20201112 10:13:32.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:32.144" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:32.143" endtime="20201112 10:13:32.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.141" endtime="20201112 10:13:32.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.095" endtime="20201112 10:13:32.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.094" endtime="20201112 10:13:32.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.146" endtime="20201112 10:13:32.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.093" endtime="20201112 10:13:32.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.149" endtime="20201112 10:13:32.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.092" endtime="20201112 10:13:32.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.716" endtime="20201112 10:13:32.151"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:32.157" endtime="20201112 10:13:32.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.155" endtime="20201112 10:13:32.177"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.191" endtime="20201112 10:13:32.213"></status>
</kw>
<msg timestamp="20201112 10:13:32.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.189" endtime="20201112 10:13:32.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.215" endtime="20201112 10:13:32.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.220" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:32.218" endtime="20201112 10:13:32.220"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.186" endtime="20201112 10:13:32.221"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.183" endtime="20201112 10:13:32.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.182" endtime="20201112 10:13:32.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:32.226" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:32.224" endtime="20201112 10:13:32.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.222" endtime="20201112 10:13:32.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.181" endtime="20201112 10:13:32.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.181" endtime="20201112 10:13:32.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.228" endtime="20201112 10:13:32.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.179" endtime="20201112 10:13:32.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.178" endtime="20201112 10:13:32.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.154" endtime="20201112 10:13:32.231"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:32.233" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.241" endtime="20201112 10:13:32.257"></status>
</kw>
<msg timestamp="20201112 10:13:32.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.239" endtime="20201112 10:13:32.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.259" endtime="20201112 10:13:32.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.261" endtime="20201112 10:13:32.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.236" endtime="20201112 10:13:32.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.235" endtime="20201112 10:13:32.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.270" endtime="20201112 10:13:32.577"></status>
</kw>
<msg timestamp="20201112 10:13:32.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076800847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076801319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.269" endtime="20201112 10:13:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076800847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076801319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.581" endtime="20201112 10:13:32.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.589" endtime="20201112 10:13:32.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.266" endtime="20201112 10:13:32.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.264" endtime="20201112 10:13:32.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.597" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:32.595" endtime="20201112 10:13:32.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.602" level="INFO">VALUE: [{'time': 0.076800847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076801319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076810292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972999999995457e-06, 'source_diff': 8.972999999995457e-06}, {'time': 0.076810778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076817361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000004446e-06, 'source_diff': 6.583000000004446e-06}, {'time': 0.076817847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.076825069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076830875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000010969e-06, 'source_diff': 5.806000000010969e-06}, {'time': 0.076831361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076836583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.076837069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076846986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000012055e-06, 'source_diff': 9.917000000012055e-06}, {'time': 0.076847458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.076856111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000011235e-06, 'source_diff': 8.653000000011235e-06}, {'time': 0.076856583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076860569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.076861042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.076871361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999994749e-05, 'source_diff': 1.0318999999994749e-05}, {'time': 0.076871847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076879667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8200000000056e-06, 'source_diff': 7.8200000000056e-06}, {'time': 0.076880139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076888514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.076888986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076898806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819999999993723e-06, 'source_diff': 9.819999999993723e-06}, {'time': 0.076899278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076904514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999991803e-06, 'source_diff': 5.235999999991803e-06}, {'time': 0.076904986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076911375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000009415e-06, 'source_diff': 6.389000000009415e-06}, {'time': 0.076911861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076921889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999995263e-05, 'source_diff': 1.0027999999995263e-05}, {'time': 0.076922361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076931764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.076932236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076936542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.076937028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.076942486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.076942958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076952875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.076953361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076960264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.076960736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076968681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999995317e-06, 'source_diff': 7.944999999995317e-06}, {'time': 0.076969167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.076973153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.076973639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.076982, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.076982472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076990389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000010055e-06, 'source_diff': 7.917000000010055e-06}, {'time': 0.076990861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.076995431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.570000000009289e-06, 'source_diff': 4.570000000009289e-06}, {'time': 0.076995903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076999889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.077000361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077007069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.707999999994163e-06, 'source_diff': 6.707999999994163e-06}, {'time': 0.077007542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077014556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.077015028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077025472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.077025958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077034625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666999999989988e-06, 'source_diff': 8.666999999989988e-06}, {'time': 0.077035111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077039833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.077040306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.077050042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.077050514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077054597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.077055069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077064792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999989268e-06, 'source_diff': 9.722999999989268e-06}, {'time': 0.077065264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077074153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000011915e-06, 'source_diff': 8.889000000011915e-06}, {'time': 0.077074625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.077084653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.002800000000914e-05, 'source_diff': 1.002800000000914e-05}, {'time': 0.077085139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.077091028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000008915e-06, 'source_diff': 5.889000000008915e-06}, {'time': 0.0770915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.077101097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.077101569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077106597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.077107069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077115972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.077116444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077122931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.077123403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.077129167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.76400000000532e-06, 'source_diff': 5.76400000000532e-06}, {'time': 0.077129653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077137792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999990348e-06, 'source_diff': 8.138999999990348e-06}, {'time': 0.077138264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077148375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000007087e-05, 'source_diff': 1.0111000000007087e-05}, {'time': 0.077148847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077158333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999989114e-06, 'source_diff': 9.485999999989114e-06}, {'time': 0.077158819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.077166653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.077167125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077173514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.077173986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.077180653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.077181139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.077188292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000009735e-06, 'source_diff': 7.153000000009735e-06}, {'time': 0.077188764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:32.598" endtime="20201112 10:13:32.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.593" endtime="20201112 10:13:32.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:32.628" level="INFO">${debug-compressed} = {'time': [0.076800847, 0.076801319, 0.076810292, 0.076810778, 0.076817361, 0.076817847, 0.076824597, 0.076825069, 0.076830875, 0.076831361, 0.076836583, 0.076837069, 0.076846986, 0.076847458, 0.076856...</msg>
<status status="PASS" starttime="20201112 10:13:32.604" endtime="20201112 10:13:32.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.632" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:32.631" endtime="20201112 10:13:32.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.636" level="INFO">VALUE: {'time': [0.076800847, 0.076801319, 0.076810292, 0.076810778, 0.076817361, 0.076817847, 0.076824597, 0.076825069, 0.076830875, 0.076831361, 0.076836583, 0.076837069, 0.076846986, 0.076847458, 0.076856111, 0.076856583, 0.076860569, 0.076861042, 0.076871361, 0.076871847, 0.076879667, 0.076880139, 0.076888514, 0.076888986, 0.076898806, 0.076899278, 0.076904514, 0.076904986, 0.076911375, 0.076911861, 0.076921889, 0.076922361, 0.076931764, 0.076932236, 0.076936542, 0.076937028, 0.076942486, 0.076942958, 0.076952875, 0.076953361, 0.076960264, 0.076960736, 0.076968681, 0.076969167, 0.076973153, 0.076973639, 0.076982, 0.076982472, 0.076990389, 0.076990861, 0.076995431, 0.076995903, 0.076999889, 0.077000361, 0.077007069, 0.077007542, 0.077014556, 0.077015028, 0.077025472, 0.077025958, 0.077034625, 0.077035111, 0.077039833, 0.077040306, 0.077050042, 0.077050514, 0.077054597, 0.077055069, 0.077064792, 0.077065264, 0.077074153, 0.077074625, 0.077084653, 0.077085139, 0.077091028, 0.0770915, 0.077101097, 0.077101569, 0.077106597, 0.077107069, 0.077115972, 0.077116444, 0.077122931, 0.077123403, 0.077129167, 0.077129653, 0.077137792, 0.077138264, 0.077148375, 0.077148847, 0.077158333, 0.077158819, 0.077166653, 0.077167125, 0.077173514, 0.077173986, 0.077180653, 0.077181139, 0.077188292, 0.077188764], 'eventsource_diff': [0, 4.720000000013602e-07, 8.972999999995457e-06, 4.859999999939912e-07, 6.583000000004446e-06, 4.859999999939912e-07, 6.749999999999812e-06, 4.720000000013602e-07, 5.806000000010969e-06, 4.859999999939912e-07, 5.221999999999172e-06, 4.859999999939912e-07, 9.917000000012055e-06, 4.7199999998748243e-07, 8.653000000011235e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.7300000000083386e-07, 1.0318999999994749e-05, 4.859999999939912e-07, 7.8200000000056e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.720000000013602e-07, 9.819999999993723e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.720000000013602e-07, 6.389000000009415e-06, 4.859999999939912e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.403000000005046e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.86000000007869e-07, 5.457999999999852e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.859999999939912e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.944999999995317e-06, 4.86000000007869e-07, 3.9859999999974915e-06, 4.859999999939912e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.917000000010055e-06, 4.7199999998748243e-07, 4.570000000009289e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 6.707999999994163e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.86000000007869e-07, 8.666999999989988e-06, 4.86000000007869e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 9.735999999996303e-06, 4.720000000013602e-07, 4.083000000001946e-06, 4.720000000013602e-07, 9.722999999989268e-06, 4.720000000013602e-07, 8.889000000011915e-06, 4.7199999998748243e-07, 1.002800000000914e-05, 4.859999999939912e-07, 5.889000000008915e-06, 4.7199999998748243e-07, 9.597000000000078e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999998748243e-07, 5.76400000000532e-06, 4.86000000007869e-07, 8.138999999990348e-06, 4.720000000013602e-07, 1.0111000000007087e-05, 4.720000000013602e-07, 9.485999999989114e-06, 4.86000000007869e-07, 7.833999999998231e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.720000000013602e-07, 6.667000000001866e-06, 4.859999999939912e-07, 7.153000000009735e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 8.972999999995457e-06, 4.859999999939912e-07, 6.583000000004446e-06, 4.859999999939912e-07, 6.749999999999812e-06, 4.720000000013602e-07, 5.806000000010969e-06, 4.859999999939912e-07, 5.221999999999172e-06, 4.859999999939912e-07, 9.917000000012055e-06, 4.7199999998748243e-07, 8.653000000011235e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.7300000000083386e-07, 1.0318999999994749e-05, 4.859999999939912e-07, 7.8200000000056e-06, 4.720000000013602e-07, 8.375000000004906e-06, 4.720000000013602e-07, 9.819999999993723e-06, 4.720000000013602e-07, 5.235999999991803e-06, 4.720000000013602e-07, 6.389000000009415e-06, 4.859999999939912e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.403000000005046e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.86000000007869e-07, 5.457999999999852e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.859999999939912e-07, 6.903000000002546e-06, 4.720000000013602e-07, 7.944999999995317e-06, 4.86000000007869e-07, 3.9859999999974915e-06, 4.859999999939912e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.917000000010055e-06, 4.7199999998748243e-07, 4.570000000009289e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 6.707999999994163e-06, 4.7300000000083386e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.86000000007869e-07, 8.666999999989988e-06, 4.86000000007869e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 9.735999999996303e-06, 4.720000000013602e-07, 4.083000000001946e-06, 4.720000000013602e-07, 9.722999999989268e-06, 4.720000000013602e-07, 8.889000000011915e-06, 4.7199999998748243e-07, 1.002800000000914e-05, 4.859999999939912e-07, 5.889000000008915e-06, 4.7199999998748243e-07, 9.597000000000078e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999998748243e-07, 5.76400000000532e-06, 4.86000000007869e-07, 8.138999999990348e-06, 4.720000000013602e-07, 1.0111000000007087e-05, 4.720000000013602e-07, 9.485999999989114e-06, 4.86000000007869e-07, 7.833999999998231e-06, 4.720000000013602e-07, 6.388999999995537e-06, 4.720000000013602e-07, 6.667000000001866e-06, 4.859999999939912e-07, 7.153000000009735e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:32.633" endtime="20201112 10:13:32.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.629" endtime="20201112 10:13:32.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:32.642" level="INFO">${RESULT} = [{'time': 0.076801319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.076810778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:32.638" endtime="20201112 10:13:32.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:32.655" level="INFO">${GPIO_OVERHEAD} = {'time': [0.076801319, 0.076810778, 0.076817847, 0.076825069, 0.076831361, 0.076837069, 0.076847458, 0.076856583, 0.076861042, 0.076871847, 0.076880139, 0.076888986, 0.076899278, 0.076904986, 0.076911...</msg>
<status status="PASS" starttime="20201112 10:13:32.643" endtime="20201112 10:13:32.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.659" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:32.658" endtime="20201112 10:13:32.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.662" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:32.660" endtime="20201112 10:13:32.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.656" endtime="20201112 10:13:32.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.665" endtime="20201112 10:13:32.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:32.668" endtime="20201112 10:13:32.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.667" endtime="20201112 10:13:32.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.663" endtime="20201112 10:13:32.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.233" endtime="20201112 10:13:32.689"></status>
</kw>
<msg timestamp="20201112 10:13:32.689" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.697" endtime="20201112 10:13:32.716"></status>
</kw>
<msg timestamp="20201112 10:13:32.716" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.696" endtime="20201112 10:13:32.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.717" endtime="20201112 10:13:32.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.719" endtime="20201112 10:13:32.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.693" endtime="20201112 10:13:32.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.691" endtime="20201112 10:13:32.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.731" endtime="20201112 10:13:33.018"></status>
</kw>
<msg timestamp="20201112 10:13:33.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.729" endtime="20201112 10:13:33.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.022" endtime="20201112 10:13:33.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.031" endtime="20201112 10:13:33.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.724" endtime="20201112 10:13:33.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.723" endtime="20201112 10:13:33.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.037" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:33.036" endtime="20201112 10:13:33.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.043" level="INFO">VALUE: [{'time': 0.022475444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022484597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.022485069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022494667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.022495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022499278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.02249975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022508819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.022509292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022514542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022519014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022519486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022526181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.022526653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022531069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.022531542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022537625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.022538097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022548347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.022548819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022553833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.022554319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022561958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.022562431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.776999999998009e-06, 'source_diff': 8.776999999998009e-06}, {'time': 0.022571681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022581417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.022581889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022590958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.022591444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022596583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022597056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.022606208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022612389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.022612861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022618208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022618681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022626319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.637999999997314e-06, 'source_diff': 7.637999999997314e-06}, {'time': 0.022626792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022635778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.02263625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022640667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.022641139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022650653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.022651125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022655236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.022655708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022666167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.022666639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022675403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022675875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022680056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.022680528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022684972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.444000000002751e-06, 'source_diff': 4.444000000002751e-06}, {'time': 0.022685444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022695792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.022696264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022700597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.022701069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022706917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.022707389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022716792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.022717278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022724861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.022725333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022729167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.022729653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022738736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.022739222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022743944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.022744417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.022753403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022763708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.022764181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022774208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.022774681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022782847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.165999999996953e-06, 'source_diff': 8.165999999996953e-06}, {'time': 0.022783319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022789806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.022790278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022794694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.022795167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022803528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.022804014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.022812542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022821319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.776999999998009e-06, 'source_diff': 8.776999999998009e-06}, {'time': 0.022821792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022826306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.022826792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022836833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.022837306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.651999999997353e-06, 'source_diff': 4.651999999997353e-06}, {'time': 0.022842431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022852319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.022852792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:33.038" endtime="20201112 10:13:33.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.034" endtime="20201112 10:13:33.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:33.068" level="INFO">${debug-compressed} = {'time': [0.022475444, 0.022475917, 0.022484597, 0.022485069, 0.022494667, 0.022495153, 0.022499278, 0.02249975, 0.022508819, 0.022509292, 0.022514542, 0.022515014, 0.022519014, 0.022519486, 0.0225261...</msg>
<status status="PASS" starttime="20201112 10:13:33.045" endtime="20201112 10:13:33.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.072" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:33.071" endtime="20201112 10:13:33.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.076" level="INFO">VALUE: {'time': [0.022475444, 0.022475917, 0.022484597, 0.022485069, 0.022494667, 0.022495153, 0.022499278, 0.02249975, 0.022508819, 0.022509292, 0.022514542, 0.022515014, 0.022519014, 0.022519486, 0.022526181, 0.022526653, 0.022531069, 0.022531542, 0.022537625, 0.022538097, 0.022548347, 0.022548819, 0.022553833, 0.022554319, 0.022561958, 0.022562431, 0.022571208, 0.022571681, 0.022581417, 0.022581889, 0.022590958, 0.022591444, 0.022596583, 0.022597056, 0.022605722, 0.022606208, 0.022612389, 0.022612861, 0.022618208, 0.022618681, 0.022626319, 0.022626792, 0.022635778, 0.02263625, 0.022640667, 0.022641139, 0.022650653, 0.022651125, 0.022655236, 0.022655708, 0.022666167, 0.022666639, 0.022675403, 0.022675875, 0.022680056, 0.022680528, 0.022684972, 0.022685444, 0.022695792, 0.022696264, 0.022700597, 0.022701069, 0.022706917, 0.022707389, 0.022716792, 0.022717278, 0.022724861, 0.022725333, 0.022729167, 0.022729653, 0.022738736, 0.022739222, 0.022743944, 0.022744417, 0.022752931, 0.022753403, 0.022763708, 0.022764181, 0.022774208, 0.022774681, 0.022782847, 0.022783319, 0.022789806, 0.022790278, 0.022794694, 0.022795167, 0.022803528, 0.022804014, 0.022812056, 0.022812542, 0.022821319, 0.022821792, 0.022826306, 0.022826792, 0.022836833, 0.022837306, 0.022841958, 0.022842431, 0.022852319, 0.022852792], 'eventsource_diff': [0, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.7300000000083386e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 9.735999999999773e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.7300000000083386e-07, 8.666000000000923e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 7.637999999997314e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 8.764000000001382e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.7199999999789077e-07, 4.444000000002751e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 4.332999999998727e-06, 4.720000000013602e-07, 5.8479999999992704e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 7.582999999998508e-06, 4.720000000013602e-07, 3.83400000000117e-06, 4.859999999974607e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.165999999996953e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 4.651999999997353e-06, 4.7300000000083386e-07, 9.887999999999564e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.7300000000083386e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 9.735999999999773e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.859999999974607e-07, 5.139000000001226e-06, 4.7300000000083386e-07, 8.666000000000923e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7300000000083386e-07, 7.637999999997314e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 8.764000000001382e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.7199999999789077e-07, 4.444000000002751e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 4.332999999998727e-06, 4.720000000013602e-07, 5.8479999999992704e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 7.582999999998508e-06, 4.720000000013602e-07, 3.83400000000117e-06, 4.859999999974607e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.165999999996953e-06, 4.720000000013602e-07, 6.486999999999465e-06, 4.720000000013602e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 4.651999999997353e-06, 4.7300000000083386e-07, 9.887999999999564e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:33.073" endtime="20201112 10:13:33.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.069" endtime="20201112 10:13:33.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.082" level="INFO">${RESULT} = [{'time': 0.022475917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022485069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:33.079" endtime="20201112 10:13:33.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:33.095" level="INFO">${GPIO_OVERHEAD} = {'time': [0.022475917, 0.022485069, 0.022495153, 0.02249975, 0.022509292, 0.022515014, 0.022519486, 0.022526653, 0.022531542, 0.022538097, 0.022548819, 0.022554319, 0.022562431, 0.022571681, 0.0225818...</msg>
<status status="PASS" starttime="20201112 10:13:33.083" endtime="20201112 10:13:33.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.100" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:33.099" endtime="20201112 10:13:33.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.102" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:33.101" endtime="20201112 10:13:33.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.096" endtime="20201112 10:13:33.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.105" endtime="20201112 10:13:33.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.110" endtime="20201112 10:13:33.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.107" endtime="20201112 10:13:33.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.104" endtime="20201112 10:13:33.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.690" endtime="20201112 10:13:33.138"></status>
</kw>
<msg timestamp="20201112 10:13:33.139" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.147" endtime="20201112 10:13:33.161"></status>
</kw>
<msg timestamp="20201112 10:13:33.162" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.145" endtime="20201112 10:13:33.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.163" endtime="20201112 10:13:33.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.165" endtime="20201112 10:13:33.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.142" endtime="20201112 10:13:33.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.141" endtime="20201112 10:13:33.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.174" endtime="20201112 10:13:33.461"></status>
</kw>
<msg timestamp="20201112 10:13:33.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028411417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.173" endtime="20201112 10:13:33.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028411417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.465" endtime="20201112 10:13:33.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.474" endtime="20201112 10:13:33.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.170" endtime="20201112 10:13:33.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.169" endtime="20201112 10:13:33.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.480" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:33.479" endtime="20201112 10:13:33.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.486" level="INFO">VALUE: [{'time': 0.028411417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028411889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02842025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.028420722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.028427917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028435014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.0284355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.028443417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.028443889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028452917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.028453389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028459167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.028459639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028468694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.028469167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028472986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.028473472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.028484292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028489444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.151999999997853e-06, 'source_diff': 5.151999999997853e-06}, {'time': 0.028489917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028496611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.028497083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028506694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.028507167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999999173e-06, 'source_diff': 6.915999999999173e-06}, {'time': 0.028514556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028519903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.028520375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028529375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.028529847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028535097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.028535569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.028544417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.028549028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.028549514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028557986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.028558458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028567139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.028567611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028575764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.02857625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028583514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.028583986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028592625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.028593097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0286025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.028602986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028613014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.0286135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028620958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.028621431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.028631306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.028631778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028638056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.028638528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028646361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.028646833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.028653486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.028663292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.028663764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028671389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.028671861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028676056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.028676528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028680528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.028681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028686764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.028687236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.028695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028705806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.028706278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028715167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.028715639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028722444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.028722931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.028730667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.028731139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028739083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.028739569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.028746944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028756653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.028757125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028764236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.028764708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028769931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.028770403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028776153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.028776639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028781042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.028781514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.028791722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.028792208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.028798889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.028799361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:33.482" endtime="20201112 10:13:33.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.477" endtime="20201112 10:13:33.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:33.512" level="INFO">${debug-compressed} = {'time': [0.028411417, 0.028411889, 0.02842025, 0.028420722, 0.028427444, 0.028427917, 0.028435014, 0.0284355, 0.028443417, 0.028443889, 0.028452917, 0.028453389, 0.028459167, 0.028459639, 0.028468694...</msg>
<status status="PASS" starttime="20201112 10:13:33.488" endtime="20201112 10:13:33.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.516" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:33.515" endtime="20201112 10:13:33.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.520" level="INFO">VALUE: {'time': [0.028411417, 0.028411889, 0.02842025, 0.028420722, 0.028427444, 0.028427917, 0.028435014, 0.0284355, 0.028443417, 0.028443889, 0.028452917, 0.028453389, 0.028459167, 0.028459639, 0.028468694, 0.028469167, 0.028472986, 0.028473472, 0.028483806, 0.028484292, 0.028489444, 0.028489917, 0.028496611, 0.028497083, 0.028506694, 0.028507167, 0.028514083, 0.028514556, 0.028519903, 0.028520375, 0.028529375, 0.028529847, 0.028535097, 0.028535569, 0.028543944, 0.028544417, 0.028549028, 0.028549514, 0.028557986, 0.028558458, 0.028567139, 0.028567611, 0.028575764, 0.02857625, 0.028583514, 0.028583986, 0.028592625, 0.028593097, 0.0286025, 0.028602986, 0.028613014, 0.0286135, 0.028620958, 0.028621431, 0.028631306, 0.028631778, 0.028638056, 0.028638528, 0.028646361, 0.028646833, 0.028653, 0.028653486, 0.028663292, 0.028663764, 0.028671389, 0.028671861, 0.028676056, 0.028676528, 0.028680528, 0.028681, 0.028686764, 0.028687236, 0.028694986, 0.028695458, 0.028705806, 0.028706278, 0.028715167, 0.028715639, 0.028722444, 0.028722931, 0.028730667, 0.028731139, 0.028739083, 0.028739569, 0.028746472, 0.028746944, 0.028756653, 0.028757125, 0.028764236, 0.028764708, 0.028769931, 0.028770403, 0.028776153, 0.028776639, 0.028781042, 0.028781514, 0.028791722, 0.028792208, 0.028798889, 0.028799361], 'eventsource_diff': [0, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 7.916999999999647e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 3.818999999998657e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 5.151999999997853e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.729999999973644e-07, 4.611000000001586e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.860000000009301e-07, 7.263999999999882e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 7.457999999998383e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 9.806000000001092e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 7.943999999999313e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 5.222999999998645e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 4.860000000009301e-07, 6.681000000001436e-06, 4.7199999999789077e-07], 'sourcediff': [0, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 7.916999999999647e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.7199999999789077e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 3.818999999998657e-06, 4.860000000009301e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 5.151999999997853e-06, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.729999999973644e-07, 4.611000000001586e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.860000000009301e-07, 7.263999999999882e-06, 4.7199999999789077e-07, 8.639000000001257e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 7.457999999998383e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 6.167000000001366e-06, 4.859999999974607e-07, 9.806000000001092e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.870000000004038e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 7.943999999999313e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 5.222999999998645e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 4.860000000009301e-07, 6.681000000001436e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:33.517" endtime="20201112 10:13:33.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.513" endtime="20201112 10:13:33.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.526" level="INFO">${RESULT} = [{'time': 0.028411889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.028420722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:33.523" endtime="20201112 10:13:33.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:33.539" level="INFO">${GPIO_OVERHEAD} = {'time': [0.028411889, 0.028420722, 0.028427917, 0.0284355, 0.028443889, 0.028453389, 0.028459639, 0.028469167, 0.028473472, 0.028484292, 0.028489917, 0.028497083, 0.028507167, 0.028514556, 0.02852037...</msg>
<status status="PASS" starttime="20201112 10:13:33.527" endtime="20201112 10:13:33.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.544" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:33.543" endtime="20201112 10:13:33.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.546" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:33.545" endtime="20201112 10:13:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.540" endtime="20201112 10:13:33.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.549" endtime="20201112 10:13:33.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.553" endtime="20201112 10:13:33.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.551" endtime="20201112 10:13:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.548" endtime="20201112 10:13:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.139" endtime="20201112 10:13:33.574"></status>
</kw>
<msg timestamp="20201112 10:13:33.574" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.581" endtime="20201112 10:13:33.599"></status>
</kw>
<msg timestamp="20201112 10:13:33.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.580" endtime="20201112 10:13:33.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.602" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.601" endtime="20201112 10:13:33.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.603" endtime="20201112 10:13:33.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.577" endtime="20201112 10:13:33.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.576" endtime="20201112 10:13:33.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.612" endtime="20201112 10:13:33.902"></status>
</kw>
<msg timestamp="20201112 10:13:33.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.611" endtime="20201112 10:13:33.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.906" endtime="20201112 10:13:33.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.915" endtime="20201112 10:13:33.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.608" endtime="20201112 10:13:33.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.606" endtime="20201112 10:13:33.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.922" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:33.921" endtime="20201112 10:13:33.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.927" level="INFO">VALUE: [{'time': 0.022304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022311917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.022312389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02231775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.022318222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022328458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022328931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022334694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.022335181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022344375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.022344847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022354847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.022355319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022362361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.022362847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022373181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333999999997262e-05, 'source_diff': 1.0333999999997262e-05}, {'time': 0.022373667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022379028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.0223795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022386833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.022387306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022391917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022392389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022402847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.022403319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022411153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.022411639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022416361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.022416833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022425194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.022425681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022430514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022430986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022439875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.022440347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022450681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.022451167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022459208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.022459694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022464722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022465208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022475125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.022475611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022483875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.022484347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022494167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.022494639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022503528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.022504014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022510917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.022511389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.022516389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0225205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.022520972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022527556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.022528042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.022534597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022540514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.022540986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022551111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.022551583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022559764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.022560236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022564181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.022564653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022569722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.022570194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022575306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.022575778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022585181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.022585667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022595514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.022595986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022603153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.022603625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022608278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.02260875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022617222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.022617694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022625444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022625917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022635111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.022635597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022640528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.022641, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022647806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.022648278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022657597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.022658069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022662889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.022663361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022672472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.022672944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022680569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022681042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.02268525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.022685722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:33.923" endtime="20201112 10:13:33.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.918" endtime="20201112 10:13:33.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:33.953" level="INFO">${debug-compressed} = {'time': [0.022304222, 0.022304694, 0.022311917, 0.022312389, 0.02231775, 0.022318222, 0.022328458, 0.022328931, 0.022334694, 0.022335181, 0.022344375, 0.022344847, 0.022354847, 0.022355319, 0.0223623...</msg>
<status status="PASS" starttime="20201112 10:13:33.929" endtime="20201112 10:13:33.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.957" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:33.956" endtime="20201112 10:13:33.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.961" level="INFO">VALUE: {'time': [0.022304222, 0.022304694, 0.022311917, 0.022312389, 0.02231775, 0.022318222, 0.022328458, 0.022328931, 0.022334694, 0.022335181, 0.022344375, 0.022344847, 0.022354847, 0.022355319, 0.022362361, 0.022362847, 0.022373181, 0.022373667, 0.022379028, 0.0223795, 0.022386833, 0.022387306, 0.022391917, 0.022392389, 0.022402847, 0.022403319, 0.022411153, 0.022411639, 0.022416361, 0.022416833, 0.022425194, 0.022425681, 0.022430514, 0.022430986, 0.022439875, 0.022440347, 0.022450681, 0.022451167, 0.022459208, 0.022459694, 0.022464722, 0.022465208, 0.022475125, 0.022475611, 0.022483875, 0.022484347, 0.022494167, 0.022494639, 0.022503528, 0.022504014, 0.022510917, 0.022511389, 0.022515917, 0.022516389, 0.0225205, 0.022520972, 0.022527556, 0.022528042, 0.022534125, 0.022534597, 0.022540514, 0.022540986, 0.022551111, 0.022551583, 0.022559764, 0.022560236, 0.022564181, 0.022564653, 0.022569722, 0.022570194, 0.022575306, 0.022575778, 0.022585181, 0.022585667, 0.022595514, 0.022595986, 0.022603153, 0.022603625, 0.022608278, 0.02260875, 0.022617222, 0.022617694, 0.022625444, 0.022625917, 0.022635111, 0.022635597, 0.022640528, 0.022641, 0.022647806, 0.022648278, 0.022657597, 0.022658069, 0.022662889, 0.022663361, 0.022672472, 0.022672944, 0.022680569, 0.022681042, 0.02268525, 0.022685722], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 5.762999999998908e-06, 4.870000000004038e-07, 9.194000000000563e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 7.042000000002241e-06, 4.860000000009301e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.0458000000001383e-05, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.870000000004038e-07, 4.832999999999227e-06, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 8.041000000000298e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 3.9449999999982555e-06, 4.720000000013602e-07, 5.068999999999907e-06, 4.7199999999789077e-07, 5.11200000000156e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07], 'sourcediff': [0, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 5.762999999998908e-06, 4.870000000004038e-07, 9.194000000000563e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 7.042000000002241e-06, 4.860000000009301e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 4.611000000001586e-06, 4.7199999999789077e-07, 1.0458000000001383e-05, 4.720000000013602e-07, 7.833999999998231e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.870000000004038e-07, 4.832999999999227e-06, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 8.041000000000298e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 3.9449999999982555e-06, 4.720000000013602e-07, 5.068999999999907e-06, 4.7199999999789077e-07, 5.11200000000156e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.7199999999789077e-07, 7.167000000002366e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:33.958" endtime="20201112 10:13:33.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.954" endtime="20201112 10:13:33.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.966" level="INFO">${RESULT} = [{'time': 0.022304694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022312389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:33.963" endtime="20201112 10:13:33.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:33.980" level="INFO">${GPIO_OVERHEAD} = {'time': [0.022304694, 0.022312389, 0.022318222, 0.022328931, 0.022335181, 0.022344847, 0.022355319, 0.022362847, 0.022373667, 0.0223795, 0.022387306, 0.022392389, 0.022403319, 0.022411639, 0.02241683...</msg>
<status status="PASS" starttime="20201112 10:13:33.967" endtime="20201112 10:13:33.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.984" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:33.983" endtime="20201112 10:13:33.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.987" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:33.985" endtime="20201112 10:13:33.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.981" endtime="20201112 10:13:33.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.990" endtime="20201112 10:13:33.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.993" endtime="20201112 10:13:34.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.992" endtime="20201112 10:13:34.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.988" endtime="20201112 10:13:34.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.574" endtime="20201112 10:13:34.014"></status>
</kw>
<msg timestamp="20201112 10:13:34.015" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.023" endtime="20201112 10:13:34.041"></status>
</kw>
<msg timestamp="20201112 10:13:34.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.022" endtime="20201112 10:13:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.042" endtime="20201112 10:13:34.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.045" endtime="20201112 10:13:34.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.019" endtime="20201112 10:13:34.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.016" endtime="20201112 10:13:34.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.054" endtime="20201112 10:13:34.338"></status>
</kw>
<msg timestamp="20201112 10:13:34.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023750014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.052" endtime="20201112 10:13:34.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023750014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.342" endtime="20201112 10:13:34.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.351" endtime="20201112 10:13:34.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.050" endtime="20201112 10:13:34.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.048" endtime="20201112 10:13:34.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.358" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:34.357" endtime="20201112 10:13:34.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.363" level="INFO">VALUE: [{'time': 0.023749528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023750014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023755611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023756083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023762736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6529999999988265e-06, 'source_diff': 6.6529999999988265e-06}, {'time': 0.023763222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023771472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.023771958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023778764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.023779236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023789153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.023789639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023797681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.023798167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023803264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.023803736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023807681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.023808153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023817236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.023817722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023822236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.023822708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023831708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.023832181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023840542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.023841014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023849917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.023850389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023856653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.023857139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023863333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.023863806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023869653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.023870139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023877972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.023878458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023885889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.023886361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023895833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.023896306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023901278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.02390175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023910222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.023910708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023916042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.023916528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023922708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.023923181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023928833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.023929319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023933722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023934208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023943292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.08400000000295e-06, 'source_diff': 9.08400000000295e-06}, {'time': 0.023943778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023951375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023958278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.02395875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023967833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.023968319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023973667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.023974139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023983653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.023984125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023991458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.023991931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023997472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.023997958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024005903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.024006375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024015903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.024016375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024026708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.024027181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024033042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.024033528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024041472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.024041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024046375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.024046847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024051778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.02405225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024057389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.024057861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024064569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.024065042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.024074569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.024075042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024081097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.024081583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024091208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.024091681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024099861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.024100333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024104722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.024105194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024112514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.024113, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024120736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.024121208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:34.359" endtime="20201112 10:13:34.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.354" endtime="20201112 10:13:34.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:34.389" level="INFO">${debug-compressed} = {'time': [0.023749528, 0.023750014, 0.023755611, 0.023756083, 0.023762736, 0.023763222, 0.023771472, 0.023771958, 0.023778764, 0.023779236, 0.023789153, 0.023789639, 0.023797681, 0.023798167, 0.023803...</msg>
<status status="PASS" starttime="20201112 10:13:34.365" endtime="20201112 10:13:34.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.393" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:34.392" endtime="20201112 10:13:34.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.398" level="INFO">VALUE: {'time': [0.023749528, 0.023750014, 0.023755611, 0.023756083, 0.023762736, 0.023763222, 0.023771472, 0.023771958, 0.023778764, 0.023779236, 0.023789153, 0.023789639, 0.023797681, 0.023798167, 0.023803264, 0.023803736, 0.023807681, 0.023808153, 0.023817236, 0.023817722, 0.023822236, 0.023822708, 0.023831708, 0.023832181, 0.023840542, 0.023841014, 0.023849917, 0.023850389, 0.023856653, 0.023857139, 0.023863333, 0.023863806, 0.023869653, 0.023870139, 0.023877972, 0.023878458, 0.023885889, 0.023886361, 0.023895833, 0.023896306, 0.023901278, 0.02390175, 0.023910222, 0.023910708, 0.023916042, 0.023916528, 0.023922708, 0.023923181, 0.023928833, 0.023929319, 0.023933722, 0.023934208, 0.023943292, 0.023943778, 0.023950903, 0.023951375, 0.023958278, 0.02395875, 0.023967833, 0.023968319, 0.023973667, 0.023974139, 0.023983653, 0.023984125, 0.023991458, 0.023991931, 0.023997472, 0.023997958, 0.024005903, 0.024006375, 0.024015903, 0.024016375, 0.024026708, 0.024027181, 0.024033042, 0.024033528, 0.024041472, 0.024041944, 0.024046375, 0.024046847, 0.024051778, 0.02405225, 0.024057389, 0.024057861, 0.024064569, 0.024065042, 0.024074569, 0.024075042, 0.024081097, 0.024081583, 0.024091208, 0.024091681, 0.024099861, 0.024100333, 0.024104722, 0.024105194, 0.024112514, 0.024113, 0.024120736, 0.024121208], 'eventsource_diff': [0, 4.860000000009301e-07, 5.596999999999547e-06, 4.720000000013602e-07, 6.6529999999988265e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.860000000009301e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.859999999974607e-07, 5.097000000002516e-06, 4.7199999999789077e-07, 3.945000000001725e-06, 4.7199999999789077e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.7199999999789077e-07, 9.471999999999953e-06, 4.7300000000083386e-07, 4.972000000002391e-06, 4.7199999999789077e-07, 8.471999999998953e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.859999999974607e-07, 9.08400000000295e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7300000000083386e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 5.860999999999367e-06, 4.859999999974607e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.729999999973644e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 4.860000000009301e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 4.720000000013602e-07, 4.388999999997006e-06, 4.720000000013602e-07, 7.320000000001631e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.860000000009301e-07, 5.596999999999547e-06, 4.720000000013602e-07, 6.6529999999988265e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.860000000009301e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 9.917000000001647e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.859999999974607e-07, 5.097000000002516e-06, 4.7199999999789077e-07, 3.945000000001725e-06, 4.7199999999789077e-07, 9.083000000000008e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.7199999999789077e-07, 9.471999999999953e-06, 4.7300000000083386e-07, 4.972000000002391e-06, 4.7199999999789077e-07, 8.471999999998953e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.860000000009301e-07, 4.403000000000046e-06, 4.859999999974607e-07, 9.08400000000295e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7300000000083386e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 5.860999999999367e-06, 4.859999999974607e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 6.708000000001102e-06, 4.729999999973644e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 4.860000000009301e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 4.720000000013602e-07, 4.388999999997006e-06, 4.720000000013602e-07, 7.320000000001631e-06, 4.859999999974607e-07, 7.736000000001242e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:34.395" endtime="20201112 10:13:34.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.390" endtime="20201112 10:13:34.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:34.404" level="INFO">${RESULT} = [{'time': 0.023750014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023756083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:34.401" endtime="20201112 10:13:34.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:34.417" level="INFO">${GPIO_OVERHEAD} = {'time': [0.023750014, 0.023756083, 0.023763222, 0.023771958, 0.023779236, 0.023789639, 0.023798167, 0.023803736, 0.023808153, 0.023817722, 0.023822708, 0.023832181, 0.023841014, 0.023850389, 0.023857...</msg>
<status status="PASS" starttime="20201112 10:13:34.405" endtime="20201112 10:13:34.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.422" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:34.420" endtime="20201112 10:13:34.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.424" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:34.423" endtime="20201112 10:13:34.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.418" endtime="20201112 10:13:34.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.427" endtime="20201112 10:13:34.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:34.431" endtime="20201112 10:13:34.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.429" endtime="20201112 10:13:34.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.426" endtime="20201112 10:13:34.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.015" endtime="20201112 10:13:34.451"></status>
</kw>
<msg timestamp="20201112 10:13:34.452" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.459" endtime="20201112 10:13:34.478"></status>
</kw>
<msg timestamp="20201112 10:13:34.479" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.458" endtime="20201112 10:13:34.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.481" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.480" endtime="20201112 10:13:34.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.482" endtime="20201112 10:13:34.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.455" endtime="20201112 10:13:34.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.453" endtime="20201112 10:13:34.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.491" endtime="20201112 10:13:34.781"></status>
</kw>
<msg timestamp="20201112 10:13:34.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018614653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.490" endtime="20201112 10:13:34.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018614653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.785" endtime="20201112 10:13:34.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.794" endtime="20201112 10:13:34.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.487" endtime="20201112 10:13:34.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.486" endtime="20201112 10:13:34.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.801" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:34.800" endtime="20201112 10:13:34.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.806" level="INFO">VALUE: [{'time': 0.018614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018614653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018619444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018619917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018625625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018626097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018633847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.018634319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018638944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018639417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018647361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.018647847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018652792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.945000000002725e-06, 'source_diff': 4.945000000002725e-06}, {'time': 0.018653264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0186575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018657972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018662764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018663236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018670347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018670833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018678972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.018679458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018683764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018684236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018691125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.018691597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.018700528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018708972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018709458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018717181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722999999997676e-06, 'source_diff': 7.722999999997676e-06}, {'time': 0.018717653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01872425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.018724722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018733681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.018734153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018743875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.018744347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018750111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018750583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018756347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018756833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018766333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.018766819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018776736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.018777222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018787139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.018787625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018797958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.018798431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018805139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.018805611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018810347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018810819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018817833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018818306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018827194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.018827667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018831764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.01883225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018841042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.018841514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018848319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018848792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018857611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018858083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018868167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.018868639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018874181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018874653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018879986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018880472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018886944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018887417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018897319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.018897806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018905319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.018905792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018911542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.018912028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018921764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.018922236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018926333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018926806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01893275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.018933222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018940347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018940819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018945014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.0189455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018950125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018950597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018958014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.0189585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018966361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018966833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018971333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018971806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018977264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018977736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:34.802" endtime="20201112 10:13:34.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.798" endtime="20201112 10:13:34.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:34.832" level="INFO">${debug-compressed} = {'time': [0.018614181, 0.018614653, 0.018619444, 0.018619917, 0.018625625, 0.018626097, 0.018633847, 0.018634319, 0.018638944, 0.018639417, 0.018647361, 0.018647847, 0.018652792, 0.018653264, 0.018657...</msg>
<status status="PASS" starttime="20201112 10:13:34.809" endtime="20201112 10:13:34.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.836" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:34.835" endtime="20201112 10:13:34.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.840" level="INFO">VALUE: {'time': [0.018614181, 0.018614653, 0.018619444, 0.018619917, 0.018625625, 0.018626097, 0.018633847, 0.018634319, 0.018638944, 0.018639417, 0.018647361, 0.018647847, 0.018652792, 0.018653264, 0.0186575, 0.018657972, 0.018662764, 0.018663236, 0.018670347, 0.018670833, 0.018678972, 0.018679458, 0.018683764, 0.018684236, 0.018691125, 0.018691597, 0.018700042, 0.018700528, 0.018708972, 0.018709458, 0.018717181, 0.018717653, 0.01872425, 0.018724722, 0.018733681, 0.018734153, 0.018743875, 0.018744347, 0.018750111, 0.018750583, 0.018756347, 0.018756833, 0.018766333, 0.018766819, 0.018776736, 0.018777222, 0.018787139, 0.018787625, 0.018797958, 0.018798431, 0.018805139, 0.018805611, 0.018810347, 0.018810819, 0.018817833, 0.018818306, 0.018827194, 0.018827667, 0.018831764, 0.01883225, 0.018841042, 0.018841514, 0.018848319, 0.018848792, 0.018857611, 0.018858083, 0.018868167, 0.018868639, 0.018874181, 0.018874653, 0.018879986, 0.018880472, 0.018886944, 0.018887417, 0.018897319, 0.018897806, 0.018905319, 0.018905792, 0.018911542, 0.018912028, 0.018921764, 0.018922236, 0.018926333, 0.018926806, 0.01893275, 0.018933222, 0.018940347, 0.018940819, 0.018945014, 0.0189455, 0.018950125, 0.018950597, 0.018958014, 0.0189585, 0.018966361, 0.018966833, 0.018971333, 0.018971806, 0.018977264, 0.018977736], 'eventsource_diff': [0, 4.7199999999789077e-07, 4.791000000000517e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.859999999974607e-07, 4.945000000002725e-06, 4.7199999999789077e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 4.791999999999991e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 8.138999999997287e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.860000000009301e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.722999999997676e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.870000000004038e-07, 7.513000000000658e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.735999999999773e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.944000000000782e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.7199999999789077e-07], 'sourcediff': [0, 4.7199999999789077e-07, 4.791000000000517e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.859999999974607e-07, 4.945000000002725e-06, 4.7199999999789077e-07, 4.236000000001211e-06, 4.7199999999789077e-07, 4.791999999999991e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.860000000009301e-07, 8.138999999997287e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 8.444999999999286e-06, 4.860000000009301e-07, 8.443999999999813e-06, 4.860000000009301e-07, 7.722999999997676e-06, 4.720000000013602e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.736000000001711e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 5.332999999999727e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.870000000004038e-07, 7.513000000000658e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.735999999999773e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.944000000000782e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:34.837" endtime="20201112 10:13:34.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.833" endtime="20201112 10:13:34.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:34.846" level="INFO">${RESULT} = [{'time': 0.018614653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018619917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:34.842" endtime="20201112 10:13:34.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:34.860" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018614653, 0.018619917, 0.018626097, 0.018634319, 0.018639417, 0.018647847, 0.018653264, 0.018657972, 0.018663236, 0.018670833, 0.018679458, 0.018684236, 0.018691597, 0.018700528, 0.018709...</msg>
<status status="PASS" starttime="20201112 10:13:34.847" endtime="20201112 10:13:34.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.864" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:34.863" endtime="20201112 10:13:34.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.867" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:34.865" endtime="20201112 10:13:34.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.861" endtime="20201112 10:13:34.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.870" endtime="20201112 10:13:34.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:34.873" endtime="20201112 10:13:34.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.872" endtime="20201112 10:13:34.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.868" endtime="20201112 10:13:34.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.452" endtime="20201112 10:13:34.894"></status>
</kw>
<msg timestamp="20201112 10:13:34.894" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.903" endtime="20201112 10:13:34.920"></status>
</kw>
<msg timestamp="20201112 10:13:34.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.901" endtime="20201112 10:13:34.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.922" endtime="20201112 10:13:34.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.924" endtime="20201112 10:13:34.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.898" endtime="20201112 10:13:34.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.896" endtime="20201112 10:13:34.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.933" endtime="20201112 10:13:35.224"></status>
</kw>
<msg timestamp="20201112 10:13:35.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.932" endtime="20201112 10:13:35.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.228" endtime="20201112 10:13:35.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.237" endtime="20201112 10:13:35.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.929" endtime="20201112 10:13:35.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.927" endtime="20201112 10:13:35.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.243" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:35.242" endtime="20201112 10:13:35.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.248" level="INFO">VALUE: [{'time': 0.023335125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.023346528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023353236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.023353708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.023360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023368625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.023369097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023373194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.023373681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023382347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.023382833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023390361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.023390833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023399306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.023399778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023407431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.023407903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023413764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.023414236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023418347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.023418819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023424056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236999999998215e-06, 'source_diff': 5.236999999998215e-06}, {'time': 0.023424542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023430819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.023431292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023438417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023438889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023446528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.023447, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023451514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.023451986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023460764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.02346125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023470139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.023470611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023476056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.023476528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023486875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.023487347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023497181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.023497653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.023505972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023515375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.023515847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.023523958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023532111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.023532597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023542514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.023543, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023550028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.0235505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023558014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.023558486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.023563819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023570806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9869999999999655e-06, 'source_diff': 6.9869999999999655e-06}, {'time': 0.023571278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023578611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.023579083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023587958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.023588444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023592542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.023593014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023596917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.023597389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.023605389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023611667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.023612153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023618708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.023619181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023625708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.023626194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023634764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.023635236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023642347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023642833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023651292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.023651778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023658903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023659375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023666583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.023667069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023674694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023675181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.023679278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.02367975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023686986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.023687458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023697583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.023698056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0237055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.023705972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023714944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.023715431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:35.244" endtime="20201112 10:13:35.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.240" endtime="20201112 10:13:35.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:35.274" level="INFO">${debug-compressed} = {'time': [0.023335125, 0.023335611, 0.023346056, 0.023346528, 0.023353236, 0.023353708, 0.023359569, 0.023360056, 0.023368625, 0.023369097, 0.023373194, 0.023373681, 0.023382347, 0.023382833, 0.023390...</msg>
<status status="PASS" starttime="20201112 10:13:35.251" endtime="20201112 10:13:35.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.278" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:35.277" endtime="20201112 10:13:35.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.282" level="INFO">VALUE: {'time': [0.023335125, 0.023335611, 0.023346056, 0.023346528, 0.023353236, 0.023353708, 0.023359569, 0.023360056, 0.023368625, 0.023369097, 0.023373194, 0.023373681, 0.023382347, 0.023382833, 0.023390361, 0.023390833, 0.023399306, 0.023399778, 0.023407431, 0.023407903, 0.023413764, 0.023414236, 0.023418347, 0.023418819, 0.023424056, 0.023424542, 0.023430819, 0.023431292, 0.023438417, 0.023438889, 0.023446528, 0.023447, 0.023451514, 0.023451986, 0.023460764, 0.02346125, 0.023470139, 0.023470611, 0.023476056, 0.023476528, 0.023486875, 0.023487347, 0.023497181, 0.023497653, 0.023505486, 0.023505972, 0.023515375, 0.023515847, 0.023523486, 0.023523958, 0.023532111, 0.023532597, 0.023542514, 0.023543, 0.023550028, 0.0235505, 0.023558014, 0.023558486, 0.023563347, 0.023563819, 0.023570806, 0.023571278, 0.023578611, 0.023579083, 0.023587958, 0.023588444, 0.023592542, 0.023593014, 0.023596917, 0.023597389, 0.023604917, 0.023605389, 0.023611667, 0.023612153, 0.023618708, 0.023619181, 0.023625708, 0.023626194, 0.023634764, 0.023635236, 0.023642347, 0.023642833, 0.023651292, 0.023651778, 0.023658903, 0.023659375, 0.023666583, 0.023667069, 0.023674694, 0.023675181, 0.023679278, 0.02367975, 0.023686986, 0.023687458, 0.023697583, 0.023698056, 0.0237055, 0.023705972, 0.023714944, 0.023715431], 'eventsource_diff': [0, 4.859999999974607e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.870000000004038e-07, 8.666000000000923e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.236999999998215e-06, 4.860000000009301e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 6.9869999999999655e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 4.09800000000099e-06, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 6.554999999998368e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.208000000001602e-06, 4.859999999974607e-07, 7.625000000000687e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 7.444000000002282e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.869999999969343e-07], 'sourcediff': [0, 4.859999999974607e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.870000000004038e-07, 8.666000000000923e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.236999999998215e-06, 4.860000000009301e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.777999999997482e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.0279999999992016e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 6.9869999999999655e-06, 4.720000000013602e-07, 7.332999999998258e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 4.09800000000099e-06, 4.7199999999789077e-07, 3.902999999999546e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.860000000009301e-07, 6.554999999998368e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.859999999974607e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.208000000001602e-06, 4.859999999974607e-07, 7.625000000000687e-06, 4.870000000004038e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.236000000000742e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 7.444000000002282e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.869999999969343e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:35.279" endtime="20201112 10:13:35.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.275" endtime="20201112 10:13:35.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:35.288" level="INFO">${RESULT} = [{'time': 0.023335611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023346528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:35.285" endtime="20201112 10:13:35.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:35.302" level="INFO">${GPIO_OVERHEAD} = {'time': [0.023335611, 0.023346528, 0.023353708, 0.023360056, 0.023369097, 0.023373681, 0.023382833, 0.023390833, 0.023399778, 0.023407903, 0.023414236, 0.023418819, 0.023424542, 0.023431292, 0.023438...</msg>
<status status="PASS" starttime="20201112 10:13:35.289" endtime="20201112 10:13:35.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.306" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:35.305" endtime="20201112 10:13:35.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.309" level="INFO">VALUE: [4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.869999999969343e-07]</msg>
<status status="PASS" starttime="20201112 10:13:35.307" endtime="20201112 10:13:35.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.303" endtime="20201112 10:13:35.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.312" endtime="20201112 10:13:35.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:35.315" endtime="20201112 10:13:35.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.314" endtime="20201112 10:13:35.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.310" endtime="20201112 10:13:35.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.895" endtime="20201112 10:13:35.336"></status>
</kw>
<msg timestamp="20201112 10:13:35.336" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.344" endtime="20201112 10:13:35.358"></status>
</kw>
<msg timestamp="20201112 10:13:35.358" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.342" endtime="20201112 10:13:35.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.359" endtime="20201112 10:13:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.362" endtime="20201112 10:13:35.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.340" endtime="20201112 10:13:35.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.338" endtime="20201112 10:13:35.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.371" endtime="20201112 10:13:35.652"></status>
</kw>
<msg timestamp="20201112 10:13:35.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018143042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.369" endtime="20201112 10:13:35.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018143042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.657" endtime="20201112 10:13:35.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.665" endtime="20201112 10:13:35.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.367" endtime="20201112 10:13:35.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.365" endtime="20201112 10:13:35.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.672" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:35.671" endtime="20201112 10:13:35.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.677" level="INFO">VALUE: [{'time': 0.018142569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018143042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018149472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999998243e-06, 'source_diff': 6.429999999998243e-06}, {'time': 0.018149944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018156917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018157403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018167861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.018168333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018174611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018175083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018181472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018181944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018186153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.018186625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018194583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018195056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018205292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018205764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.018214708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018221722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018222208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018230889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018231361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018237333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018237806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018248625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018253764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018254236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01825875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018259236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018263958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018264431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018269458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018269944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018275403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.018275875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018282222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018288917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.018289389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018299333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.018299806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018304014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018304486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018311069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.018311542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018321292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.018321764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018330208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018330681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018339569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.018340042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.0183465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018350708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018351181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018361333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.018361806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018371708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.018372181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018379931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.018380403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018386056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018386528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018391458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018391944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018396764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.01839725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018404986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018405458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018415167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018415653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018420847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018429833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018430319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018440236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.018440708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018450042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018450514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018458222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.018458708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018467278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.01846775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018473097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018473569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018480792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.018481278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018491403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.018491875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018498375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018498847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018507, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018507472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018511806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.018512278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018522333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0054999999998399e-05, 'source_diff': 1.0054999999998399e-05}, {'time': 0.018522806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:35.673" endtime="20201112 10:13:35.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.668" endtime="20201112 10:13:35.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:35.704" level="INFO">${debug-compressed} = {'time': [0.018142569, 0.018143042, 0.018149472, 0.018149944, 0.018156917, 0.018157403, 0.018167861, 0.018168333, 0.018174611, 0.018175083, 0.018181472, 0.018181944, 0.018186153, 0.018186625, 0.018194...</msg>
<status status="PASS" starttime="20201112 10:13:35.679" endtime="20201112 10:13:35.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.708" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:35.707" endtime="20201112 10:13:35.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.712" level="INFO">VALUE: {'time': [0.018142569, 0.018143042, 0.018149472, 0.018149944, 0.018156917, 0.018157403, 0.018167861, 0.018168333, 0.018174611, 0.018175083, 0.018181472, 0.018181944, 0.018186153, 0.018186625, 0.018194583, 0.018195056, 0.018205292, 0.018205764, 0.018214236, 0.018214708, 0.018221722, 0.018222208, 0.018230889, 0.018231361, 0.018237333, 0.018237806, 0.018248153, 0.018248625, 0.018253764, 0.018254236, 0.01825875, 0.018259236, 0.018263958, 0.018264431, 0.018269458, 0.018269944, 0.018275403, 0.018275875, 0.018281736, 0.018282222, 0.018288917, 0.018289389, 0.018299333, 0.018299806, 0.018304014, 0.018304486, 0.018311069, 0.018311542, 0.018321292, 0.018321764, 0.018330208, 0.018330681, 0.018339569, 0.018340042, 0.018346028, 0.0183465, 0.018350708, 0.018351181, 0.018361333, 0.018361806, 0.018371708, 0.018372181, 0.018379931, 0.018380403, 0.018386056, 0.018386528, 0.018391458, 0.018391944, 0.018396764, 0.01839725, 0.018404986, 0.018405458, 0.018415167, 0.018415653, 0.018420375, 0.018420847, 0.018429833, 0.018430319, 0.018440236, 0.018440708, 0.018450042, 0.018450514, 0.018458222, 0.018458708, 0.018467278, 0.01846775, 0.018473097, 0.018473569, 0.018480792, 0.018481278, 0.018491403, 0.018491875, 0.018498375, 0.018498847, 0.018507, 0.018507472, 0.018511806, 0.018512278, 0.018522333, 0.018522806], 'eventsource_diff': [0, 4.7300000000083386e-07, 6.429999999998243e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 4.859999999974607e-07, 1.0458000000001383e-05, 4.7199999999789077e-07, 6.278000000001921e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.729999999973644e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.860000000009301e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.720000000013602e-07, 9.944000000001313e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.7300000000083386e-07, 9.749999999999343e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.2230000000006456e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.3339999999982e-06, 4.720000000013602e-07, 1.0054999999998399e-05, 4.7300000000083386e-07], 'sourcediff': [0, 4.7300000000083386e-07, 6.429999999998243e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 4.859999999974607e-07, 1.0458000000001383e-05, 4.7199999999789077e-07, 6.278000000001921e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.729999999973644e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.860000000009301e-07, 5.4589999999993255e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.694999999997536e-06, 4.720000000013602e-07, 9.944000000001313e-06, 4.729999999973644e-07, 4.208000000002071e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.7300000000083386e-07, 9.749999999999343e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.720000000013602e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.2230000000006456e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 6.499999999999562e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.3339999999982e-06, 4.720000000013602e-07, 1.0054999999998399e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:35.709" endtime="20201112 10:13:35.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.705" endtime="20201112 10:13:35.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:35.717" level="INFO">${RESULT} = [{'time': 0.018143042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018149944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:35.714" endtime="20201112 10:13:35.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:35.731" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018143042, 0.018149944, 0.018157403, 0.018168333, 0.018175083, 0.018181944, 0.018186625, 0.018195056, 0.018205764, 0.018214708, 0.018222208, 0.018231361, 0.018237806, 0.018248625, 0.018254...</msg>
<status status="PASS" starttime="20201112 10:13:35.718" endtime="20201112 10:13:35.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:35.734" endtime="20201112 10:13:35.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.737" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:35.736" endtime="20201112 10:13:35.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.732" endtime="20201112 10:13:35.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.741" endtime="20201112 10:13:35.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:35.744" endtime="20201112 10:13:35.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.742" endtime="20201112 10:13:35.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.739" endtime="20201112 10:13:35.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.337" endtime="20201112 10:13:35.765"></status>
</kw>
<msg timestamp="20201112 10:13:35.765" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.773" endtime="20201112 10:13:35.789"></status>
</kw>
<msg timestamp="20201112 10:13:35.790" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.771" endtime="20201112 10:13:35.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.792" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.791" endtime="20201112 10:13:35.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.793" endtime="20201112 10:13:35.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.769" endtime="20201112 10:13:35.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.767" endtime="20201112 10:13:35.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.803" endtime="20201112 10:13:36.091"></status>
</kw>
<msg timestamp="20201112 10:13:36.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.802" endtime="20201112 10:13:36.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.096" endtime="20201112 10:13:36.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.105" endtime="20201112 10:13:36.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.799" endtime="20201112 10:13:36.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.798" endtime="20201112 10:13:36.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.111" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:36.110" endtime="20201112 10:13:36.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.116" level="INFO">VALUE: [{'time': 0.021497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021497903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021501792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021502278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021512722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.021513194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021518764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.021519236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021527903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.021528389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021535931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.021536403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021543111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.021543583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021553097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.021553569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021563597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.021564069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021573569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.021574042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021578764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.02157925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021584389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.021584861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021592083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.021592556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021597486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.021597972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02160675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.021607222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021613111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.021613583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021622444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.021622931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.021632292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021636278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.021636764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021644917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.021645389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021653861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.021654333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021659167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.021659639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021664375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.021664847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021669653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.021670125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021676389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.021676875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021683361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021683833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.021689847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021693736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021694208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021703431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222999999999176e-06, 'source_diff': 9.222999999999176e-06}, {'time': 0.021703903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.021708833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021718736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.021719222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021728514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.021729, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021739444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.021739917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.415999999998204e-06, 'source_diff': 9.415999999998204e-06}, {'time': 0.021749806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021759931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021760403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021765125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.021765611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021770125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021770597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021778333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.021778806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021783319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.021783806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021788208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.021788694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021793944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.021794417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021801528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.021802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021811611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.611000000003117e-06, 'source_diff': 9.611000000003117e-06}, {'time': 0.021812097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021818486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.021818958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.021824181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021831167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.985999999997022e-06, 'source_diff': 6.985999999997022e-06}, {'time': 0.021831653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021837528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.021838, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021846139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021846611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021853917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.021854403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021860278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.02186075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:36.112" endtime="20201112 10:13:36.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.108" endtime="20201112 10:13:36.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:36.142" level="INFO">${debug-compressed} = {'time': [0.021497431, 0.021497903, 0.021501792, 0.021502278, 0.021512722, 0.021513194, 0.021518764, 0.021519236, 0.021527903, 0.021528389, 0.021535931, 0.021536403, 0.021543111, 0.021543583, 0.021553...</msg>
<status status="PASS" starttime="20201112 10:13:36.119" endtime="20201112 10:13:36.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.146" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:36.145" endtime="20201112 10:13:36.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.150" level="INFO">VALUE: {'time': [0.021497431, 0.021497903, 0.021501792, 0.021502278, 0.021512722, 0.021513194, 0.021518764, 0.021519236, 0.021527903, 0.021528389, 0.021535931, 0.021536403, 0.021543111, 0.021543583, 0.021553097, 0.021553569, 0.021563597, 0.021564069, 0.021573569, 0.021574042, 0.021578764, 0.02157925, 0.021584389, 0.021584861, 0.021592083, 0.021592556, 0.021597486, 0.021597972, 0.02160675, 0.021607222, 0.021613111, 0.021613583, 0.021622444, 0.021622931, 0.021631806, 0.021632292, 0.021636278, 0.021636764, 0.021644917, 0.021645389, 0.021653861, 0.021654333, 0.021659167, 0.021659639, 0.021664375, 0.021664847, 0.021669653, 0.021670125, 0.021676389, 0.021676875, 0.021683361, 0.021683833, 0.021689361, 0.021689847, 0.021693736, 0.021694208, 0.021703431, 0.021703903, 0.021708361, 0.021708833, 0.021718736, 0.021719222, 0.021728514, 0.021729, 0.021739444, 0.021739917, 0.021749333, 0.021749806, 0.021759931, 0.021760403, 0.021765125, 0.021765611, 0.021770125, 0.021770597, 0.021778333, 0.021778806, 0.021783319, 0.021783806, 0.021788208, 0.021788694, 0.021793944, 0.021794417, 0.021801528, 0.021802, 0.021811611, 0.021812097, 0.021818486, 0.021818958, 0.021823708, 0.021824181, 0.021831167, 0.021831653, 0.021837528, 0.021838, 0.021846139, 0.021846611, 0.021853917, 0.021854403, 0.021860278, 0.02186075], 'eventsource_diff': [0, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.569999999999881e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.859999999974607e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 7.222000000001172e-06, 4.729999999973644e-07, 4.930000000000212e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 8.861000000002367e-06, 4.870000000004038e-07, 8.874999999998467e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.222999999999176e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.859999999974607e-07, 1.0444000000001813e-05, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.860000000009301e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 9.611000000003117e-06, 4.859999999974607e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7300000000083386e-07, 6.985999999997022e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 5.569999999999881e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.859999999974607e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 6.708000000001102e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 4.721999999998672e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 7.222000000001172e-06, 4.729999999973644e-07, 4.930000000000212e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 8.861000000002367e-06, 4.870000000004038e-07, 8.874999999998467e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 4.805999999999561e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.222999999999176e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.859999999974607e-07, 1.0444000000001813e-05, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.860000000009301e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 9.611000000003117e-06, 4.859999999974607e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7300000000083386e-07, 6.985999999997022e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:36.147" endtime="20201112 10:13:36.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.143" endtime="20201112 10:13:36.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:36.156" level="INFO">${RESULT} = [{'time': 0.021497903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021502278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:36.153" endtime="20201112 10:13:36.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:36.170" level="INFO">${GPIO_OVERHEAD} = {'time': [0.021497903, 0.021502278, 0.021513194, 0.021519236, 0.021528389, 0.021536403, 0.021543583, 0.021553569, 0.021564069, 0.021574042, 0.02157925, 0.021584861, 0.021592556, 0.021597972, 0.0216072...</msg>
<status status="PASS" starttime="20201112 10:13:36.157" endtime="20201112 10:13:36.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.174" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:36.173" endtime="20201112 10:13:36.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.177" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:36.176" endtime="20201112 10:13:36.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.171" endtime="20201112 10:13:36.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.181" endtime="20201112 10:13:36.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:36.184" endtime="20201112 10:13:36.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.183" endtime="20201112 10:13:36.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.179" endtime="20201112 10:13:36.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.766" endtime="20201112 10:13:36.205"></status>
</kw>
<msg timestamp="20201112 10:13:36.206" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.213" endtime="20201112 10:13:36.227"></status>
</kw>
<msg timestamp="20201112 10:13:36.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.212" endtime="20201112 10:13:36.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.229" endtime="20201112 10:13:36.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.231" endtime="20201112 10:13:36.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.209" endtime="20201112 10:13:36.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.207" endtime="20201112 10:13:36.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.240" endtime="20201112 10:13:36.522"></status>
</kw>
<msg timestamp="20201112 10:13:36.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018090028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.239" endtime="20201112 10:13:36.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018090028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.526" endtime="20201112 10:13:36.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.535" endtime="20201112 10:13:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.236" endtime="20201112 10:13:36.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.234" endtime="20201112 10:13:36.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.542" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:36.540" endtime="20201112 10:13:36.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.547" level="INFO">VALUE: [{'time': 0.018089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018090028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018094847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018095333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018101917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583999999996981e-06, 'source_diff': 6.583999999996981e-06}, {'time': 0.018102403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018108583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018109056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018115875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.018116347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018120972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.018121444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.018130375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018136264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018136736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018144056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.018144528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018152139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.018152611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018162972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018163444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018167972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018168444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018176056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6120000000005905e-06, 'source_diff': 7.6120000000005905e-06}, {'time': 0.018176528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018181139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018188917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018189403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018193278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018193764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018199611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018200097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018205444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018205917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018212444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.527000000002697e-06, 'source_diff': 6.527000000002697e-06}, {'time': 0.018212917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018219958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.041000000002767e-06, 'source_diff': 7.041000000002767e-06}, {'time': 0.018220444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018229222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.018229694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018239417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.018239889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018244194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.018244681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018254, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018254472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018262403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.018262875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018271986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018272458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018277278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.01827775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018283208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018283681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018288847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.018289319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018293986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018300583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.018301056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018311097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.018311569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018317236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018317708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018322944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018323417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018331889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018332361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018341347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.018341833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018347597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018348069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01835425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.018354722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018360597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018361069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018371319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.018371792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018381083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.018381569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018389833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.018390306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018394208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018394681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018398569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.018399042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018407403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018407875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018417486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018417972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018427375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018427847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018435903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.018436375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018442097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018449639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018450111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:36.543" endtime="20201112 10:13:36.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.538" endtime="20201112 10:13:36.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:36.574" level="INFO">${debug-compressed} = {'time': [0.018089556, 0.018090028, 0.018094847, 0.018095333, 0.018101917, 0.018102403, 0.018108583, 0.018109056, 0.018115875, 0.018116347, 0.018120972, 0.018121444, 0.018129903, 0.018130375, 0.018136...</msg>
<status status="PASS" starttime="20201112 10:13:36.549" endtime="20201112 10:13:36.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.578" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:36.577" endtime="20201112 10:13:36.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.582" level="INFO">VALUE: {'time': [0.018089556, 0.018090028, 0.018094847, 0.018095333, 0.018101917, 0.018102403, 0.018108583, 0.018109056, 0.018115875, 0.018116347, 0.018120972, 0.018121444, 0.018129903, 0.018130375, 0.018136264, 0.018136736, 0.018144056, 0.018144528, 0.018152139, 0.018152611, 0.018162972, 0.018163444, 0.018167972, 0.018168444, 0.018176056, 0.018176528, 0.018181139, 0.018181611, 0.018188917, 0.018189403, 0.018193278, 0.018193764, 0.018199611, 0.018200097, 0.018205444, 0.018205917, 0.018212444, 0.018212917, 0.018219958, 0.018220444, 0.018229222, 0.018229694, 0.018239417, 0.018239889, 0.018244194, 0.018244681, 0.018254, 0.018254472, 0.018262403, 0.018262875, 0.018271986, 0.018272458, 0.018277278, 0.01827775, 0.018283208, 0.018283681, 0.018288847, 0.018289319, 0.018293514, 0.018293986, 0.018300583, 0.018301056, 0.018311097, 0.018311569, 0.018317236, 0.018317708, 0.018322944, 0.018323417, 0.018331889, 0.018332361, 0.018341347, 0.018341833, 0.018347597, 0.018348069, 0.01835425, 0.018354722, 0.018360597, 0.018361069, 0.018371319, 0.018371792, 0.018381083, 0.018381569, 0.018389833, 0.018390306, 0.018394208, 0.018394681, 0.018398569, 0.018399042, 0.018407403, 0.018407875, 0.018417486, 0.018417972, 0.018427375, 0.018427847, 0.018435903, 0.018436375, 0.018441625, 0.018442097, 0.018449639, 0.018450111], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.583999999996981e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 7.611000000001117e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.6120000000005905e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.859999999974607e-07, 5.347000000002766e-06, 4.729999999973644e-07, 6.527000000002697e-06, 4.729999999973644e-07, 7.041000000002767e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.7199999999789077e-07, 4.304999999999587e-06, 4.870000000004038e-07, 9.319000000000688e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7199999999789077e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 5.236000000002211e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.859999999974607e-07, 5.764000000001851e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.729999999973644e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 3.888000000000502e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.720000000013602e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.583999999996981e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.319999999998161e-06, 4.720000000013602e-07, 7.611000000001117e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.6120000000005905e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.859999999974607e-07, 5.347000000002766e-06, 4.729999999973644e-07, 6.527000000002697e-06, 4.729999999973644e-07, 7.041000000002767e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.722999999999676e-06, 4.7199999999789077e-07, 4.304999999999587e-06, 4.870000000004038e-07, 9.319000000000688e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7199999999789077e-07, 4.8200000000026e-06, 4.7199999999789077e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 5.236000000002211e-06, 4.7300000000083386e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.859999999974607e-07, 5.764000000001851e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.729999999973644e-07, 3.902000000000072e-06, 4.7300000000083386e-07, 3.888000000000502e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:36.579" endtime="20201112 10:13:36.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.575" endtime="20201112 10:13:36.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:36.587" level="INFO">${RESULT} = [{'time': 0.018090028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018095333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:36.584" endtime="20201112 10:13:36.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:36.601" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018090028, 0.018095333, 0.018102403, 0.018109056, 0.018116347, 0.018121444, 0.018130375, 0.018136736, 0.018144528, 0.018152611, 0.018163444, 0.018168444, 0.018176528, 0.018181611, 0.018189...</msg>
<status status="PASS" starttime="20201112 10:13:36.588" endtime="20201112 10:13:36.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.605" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:36.604" endtime="20201112 10:13:36.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.608" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:36.606" endtime="20201112 10:13:36.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.602" endtime="20201112 10:13:36.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.611" endtime="20201112 10:13:36.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:36.614" endtime="20201112 10:13:36.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.613" endtime="20201112 10:13:36.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.609" endtime="20201112 10:13:36.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.206" endtime="20201112 10:13:36.635"></status>
</kw>
<msg timestamp="20201112 10:13:36.635" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.643" endtime="20201112 10:13:36.660"></status>
</kw>
<msg timestamp="20201112 10:13:36.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.641" endtime="20201112 10:13:36.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.663" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.662" endtime="20201112 10:13:36.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.664" endtime="20201112 10:13:36.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.639" endtime="20201112 10:13:36.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.637" endtime="20201112 10:13:36.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.674" endtime="20201112 10:13:36.964"></status>
</kw>
<msg timestamp="20201112 10:13:36.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.673" endtime="20201112 10:13:36.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.968" endtime="20201112 10:13:36.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.977" endtime="20201112 10:13:36.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.670" endtime="20201112 10:13:36.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.669" endtime="20201112 10:13:36.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.983" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:36.982" endtime="20201112 10:13:36.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.989" level="INFO">VALUE: [{'time': 0.020505111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020515097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.020515583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020523625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020524111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02052925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.020529722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020534681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.020535153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020541417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.020541903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020547972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.020548444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020558083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.020558556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020568264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020568736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020573458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.020573931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020579903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.020580389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020587931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.020588403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02059525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.020595722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020601653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.020602125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020606347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.020606819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020611528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.020612014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020617875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020618347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020627139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.020627611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020636806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.020637278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020646458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.020646944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020652111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.020652583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020658403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.020658875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020663958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.020664431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020670347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.020670819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020678792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.020679264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020685597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.020686083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.020696153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020700847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.694000000003001e-06, 'source_diff': 4.694000000003001e-06}, {'time': 0.020701319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020711708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.020712181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020721833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.020722306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020728556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.020729028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020735417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.020735889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.020745472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.020749944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.020756389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020762764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020767139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020767611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020776708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.097000000003047e-06, 'source_diff': 9.097000000003047e-06}, {'time': 0.020777181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020785653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.020786139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020790875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.020791347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020800236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.020800708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02081, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.020810472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020818528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.020819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020823222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.020823694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020831736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020832208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020840472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.020851569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020858403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.020858875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020865139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.020865611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020872514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.020873, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:36.984" endtime="20201112 10:13:36.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.980" endtime="20201112 10:13:36.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:37.015" level="INFO">${debug-compressed} = {'time': [0.020505111, 0.020505583, 0.020515097, 0.020515583, 0.020523625, 0.020524111, 0.02052925, 0.020529722, 0.020534681, 0.020535153, 0.020541417, 0.020541903, 0.020547972, 0.020548444, 0.0205580...</msg>
<status status="PASS" starttime="20201112 10:13:36.991" endtime="20201112 10:13:37.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.019" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:37.018" endtime="20201112 10:13:37.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.023" level="INFO">VALUE: {'time': [0.020505111, 0.020505583, 0.020515097, 0.020515583, 0.020523625, 0.020524111, 0.02052925, 0.020529722, 0.020534681, 0.020535153, 0.020541417, 0.020541903, 0.020547972, 0.020548444, 0.020558083, 0.020558556, 0.020568264, 0.020568736, 0.020573458, 0.020573931, 0.020579903, 0.020580389, 0.020587931, 0.020588403, 0.02059525, 0.020595722, 0.020601653, 0.020602125, 0.020606347, 0.020606819, 0.020611528, 0.020612014, 0.020617875, 0.020618347, 0.020627139, 0.020627611, 0.020636806, 0.020637278, 0.020646458, 0.020646944, 0.020652111, 0.020652583, 0.020658403, 0.020658875, 0.020663958, 0.020664431, 0.020670347, 0.020670819, 0.020678792, 0.020679264, 0.020685597, 0.020686083, 0.020695681, 0.020696153, 0.020700847, 0.020701319, 0.020711708, 0.020712181, 0.020721833, 0.020722306, 0.020728556, 0.020729028, 0.020735417, 0.020735889, 0.020745, 0.020745472, 0.020749472, 0.020749944, 0.020755903, 0.020756389, 0.020762764, 0.02076325, 0.020767139, 0.020767611, 0.020776708, 0.020777181, 0.020785653, 0.020786139, 0.020790875, 0.020791347, 0.020800236, 0.020800708, 0.02081, 0.020810472, 0.020818528, 0.020819, 0.020823222, 0.020823694, 0.020831736, 0.020832208, 0.020840472, 0.020840958, 0.020851083, 0.020851569, 0.020858403, 0.020858875, 0.020865139, 0.020865611, 0.020872514, 0.020873], 'eventsource_diff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.931000000000686e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.7199999999789077e-07, 4.709000000002045e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 9.180000000000993e-06, 4.860000000009301e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 5.820000000000131e-06, 4.720000000013602e-07, 5.082999999999477e-06, 4.7300000000083386e-07, 5.915999999998173e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.7199999999789077e-07, 6.333000000000727e-06, 4.860000000009301e-07, 9.597999999999551e-06, 4.7199999999789077e-07, 4.694000000003001e-06, 4.7199999999789077e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.859999999974607e-07, 4.736000000001711e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 9.291999999997552e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 6.834000000000701e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.859999999974607e-07], 'sourcediff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.931000000000686e-06, 4.7199999999789077e-07, 4.222000000001641e-06, 4.7199999999789077e-07, 4.709000000002045e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 9.180000000000993e-06, 4.860000000009301e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 5.820000000000131e-06, 4.720000000013602e-07, 5.082999999999477e-06, 4.7300000000083386e-07, 5.915999999998173e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.7199999999789077e-07, 6.333000000000727e-06, 4.860000000009301e-07, 9.597999999999551e-06, 4.7199999999789077e-07, 4.694000000003001e-06, 4.7199999999789077e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.860000000009301e-07, 6.374999999999437e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.7199999999789077e-07, 9.097000000003047e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.859999999974607e-07, 4.736000000001711e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 9.291999999997552e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.860000000009301e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 6.834000000000701e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.7199999999789077e-07, 6.903000000002546e-06, 4.859999999974607e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:37.020" endtime="20201112 10:13:37.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.016" endtime="20201112 10:13:37.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.028" level="INFO">${RESULT} = [{'time': 0.020505583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020515583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:37.025" endtime="20201112 10:13:37.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:37.043" level="INFO">${GPIO_OVERHEAD} = {'time': [0.020505583, 0.020515583, 0.020524111, 0.020529722, 0.020535153, 0.020541903, 0.020548444, 0.020558556, 0.020568736, 0.020573931, 0.020580389, 0.020588403, 0.020595722, 0.020602125, 0.020606...</msg>
<status status="PASS" starttime="20201112 10:13:37.029" endtime="20201112 10:13:37.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.047" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:37.046" endtime="20201112 10:13:37.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.050" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 10:13:37.048" endtime="20201112 10:13:37.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.043" endtime="20201112 10:13:37.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.053" endtime="20201112 10:13:37.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.056" endtime="20201112 10:13:37.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.055" endtime="20201112 10:13:37.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.051" endtime="20201112 10:13:37.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.636" endtime="20201112 10:13:37.077"></status>
</kw>
<msg timestamp="20201112 10:13:37.077" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.085" endtime="20201112 10:13:37.101"></status>
</kw>
<msg timestamp="20201112 10:13:37.102" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.083" endtime="20201112 10:13:37.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.103" endtime="20201112 10:13:37.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.105" endtime="20201112 10:13:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.081" endtime="20201112 10:13:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.079" endtime="20201112 10:13:37.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.114" endtime="20201112 10:13:37.399"></status>
</kw>
<msg timestamp="20201112 10:13:37.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.113" endtime="20201112 10:13:37.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.404" endtime="20201112 10:13:37.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.412" endtime="20201112 10:13:37.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.110" endtime="20201112 10:13:37.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.109" endtime="20201112 10:13:37.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.419" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:37.418" endtime="20201112 10:13:37.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.424" level="INFO">VALUE: [{'time': 0.020684083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263000000001408e-06, 'source_diff': 8.263000000001408e-06}, {'time': 0.020693292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020701639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.020702125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020710903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.020711375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020719958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.020720431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020726292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020726778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020737236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.020737708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020744736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.020745208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.020751472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020760306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.020760792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020767903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.020768375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020775917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.542000000002741e-06, 'source_diff': 7.542000000002741e-06}, {'time': 0.020776389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020782056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.020782528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020792792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.020793264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020803278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.02080375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020813056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.020813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020819389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020819875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020826681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.020827153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.020832153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020836764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.02083725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020843736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.020844208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.020854722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.020860125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020868333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.020868806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020874639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.020875111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020880778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.02088125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.020889458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020897625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.020898097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020903444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.020903931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.020911306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020918319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.020918792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020925167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.020925639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020931292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.020931764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020936486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.020936958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020942708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.020943194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020951653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.020952125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020960458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333000000002727e-06, 'source_diff': 8.333000000002727e-06}, {'time': 0.020960944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020968347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.020968833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.020975472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020985306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.020985778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020992847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.020993319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020999639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.021000125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021007236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.021007722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021013389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.021013861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021024194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.021024681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021034917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.021035389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021041458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.021041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021050306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.021050778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021054778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.02105525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021060083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.021060556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:37.420" endtime="20201112 10:13:37.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.415" endtime="20201112 10:13:37.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:37.450" level="INFO">${debug-compressed} = {'time': [0.020684083, 0.020684556, 0.020692819, 0.020693292, 0.020701639, 0.020702125, 0.020710903, 0.020711375, 0.020719958, 0.020720431, 0.020726292, 0.020726778, 0.020737236, 0.020737708, 0.020744...</msg>
<status status="PASS" starttime="20201112 10:13:37.426" endtime="20201112 10:13:37.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.454" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:37.453" endtime="20201112 10:13:37.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.458" level="INFO">VALUE: {'time': [0.020684083, 0.020684556, 0.020692819, 0.020693292, 0.020701639, 0.020702125, 0.020710903, 0.020711375, 0.020719958, 0.020720431, 0.020726292, 0.020726778, 0.020737236, 0.020737708, 0.020744736, 0.020745208, 0.020751, 0.020751472, 0.020760306, 0.020760792, 0.020767903, 0.020768375, 0.020775917, 0.020776389, 0.020782056, 0.020782528, 0.020792792, 0.020793264, 0.020803278, 0.02080375, 0.020813056, 0.020813528, 0.020819389, 0.020819875, 0.020826681, 0.020827153, 0.020831667, 0.020832153, 0.020836764, 0.02083725, 0.020843736, 0.020844208, 0.020854236, 0.020854722, 0.020859653, 0.020860125, 0.020868333, 0.020868806, 0.020874639, 0.020875111, 0.020880778, 0.02088125, 0.020888986, 0.020889458, 0.020897625, 0.020898097, 0.020903444, 0.020903931, 0.020910833, 0.020911306, 0.020918319, 0.020918792, 0.020925167, 0.020925639, 0.020931292, 0.020931764, 0.020936486, 0.020936958, 0.020942708, 0.020943194, 0.020951653, 0.020952125, 0.020960458, 0.020960944, 0.020968347, 0.020968833, 0.020975, 0.020975472, 0.020985306, 0.020985778, 0.020992847, 0.020993319, 0.020999639, 0.021000125, 0.021007236, 0.021007722, 0.021013389, 0.021013861, 0.021024194, 0.021024681, 0.021034917, 0.021035389, 0.021041458, 0.021041944, 0.021050306, 0.021050778, 0.021054778, 0.02105525, 0.021060083, 0.021060556], 'eventsource_diff': [0, 4.7300000000083386e-07, 8.263000000001408e-06, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 1.0263999999999412e-05, 4.7199999999789077e-07, 1.0014000000002632e-05, 4.7199999999789077e-07, 9.306000000000592e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 4.930999999999686e-06, 4.720000000013602e-07, 8.207999999999133e-06, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.870000000004038e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.729999999973644e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 8.333000000002727e-06, 4.859999999974607e-07, 7.402999999999577e-06, 4.860000000009301e-07, 6.167000000001366e-06, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.870000000004038e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.36200000000134e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.7300000000083386e-07, 8.263000000001408e-06, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.542000000002741e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 1.0263999999999412e-05, 4.7199999999789077e-07, 1.0014000000002632e-05, 4.7199999999789077e-07, 9.306000000000592e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 4.611000000001586e-06, 4.860000000009301e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 4.930999999999686e-06, 4.720000000013602e-07, 8.207999999999133e-06, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.870000000004038e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.729999999973644e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 8.333000000002727e-06, 4.859999999974607e-07, 7.402999999999577e-06, 4.860000000009301e-07, 6.167000000001366e-06, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.860000000009301e-07, 7.110999999997147e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.720000000013602e-07, 1.0332999999997788e-05, 4.870000000004038e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.36200000000134e-06, 4.7199999999789077e-07, 4.000000000000531e-06, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:37.455" endtime="20201112 10:13:37.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.451" endtime="20201112 10:13:37.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.464" level="INFO">${RESULT} = [{'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020693292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:37.461" endtime="20201112 10:13:37.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:37.477" level="INFO">${GPIO_OVERHEAD} = {'time': [0.020684556, 0.020693292, 0.020702125, 0.020711375, 0.020720431, 0.020726778, 0.020737708, 0.020745208, 0.020751472, 0.020760792, 0.020768375, 0.020776389, 0.020782528, 0.020793264, 0.020803...</msg>
<status status="PASS" starttime="20201112 10:13:37.465" endtime="20201112 10:13:37.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.482" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:37.481" endtime="20201112 10:13:37.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.484" level="INFO">VALUE: [4.7300000000083386e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:37.483" endtime="20201112 10:13:37.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.478" endtime="20201112 10:13:37.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.487" endtime="20201112 10:13:37.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.491" endtime="20201112 10:13:37.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.489" endtime="20201112 10:13:37.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.486" endtime="20201112 10:13:37.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.078" endtime="20201112 10:13:37.512"></status>
</kw>
<msg timestamp="20201112 10:13:37.512" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.520" endtime="20201112 10:13:37.533"></status>
</kw>
<msg timestamp="20201112 10:13:37.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.518" endtime="20201112 10:13:37.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.534" endtime="20201112 10:13:37.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.537" endtime="20201112 10:13:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.515" endtime="20201112 10:13:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.514" endtime="20201112 10:13:37.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.547" endtime="20201112 10:13:37.828"></status>
</kw>
<msg timestamp="20201112 10:13:37.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018126111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.545" endtime="20201112 10:13:37.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018126111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.833" endtime="20201112 10:13:37.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.841" endtime="20201112 10:13:37.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.543" endtime="20201112 10:13:37.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.541" endtime="20201112 10:13:37.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.848" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:37.847" endtime="20201112 10:13:37.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.853" level="INFO">VALUE: [{'time': 0.018125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018126111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018130736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018131208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018138528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018143847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018144319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018151625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.018152111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018162139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.018162611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018168792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018169264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018173792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018174264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018179097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018179569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018186069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018186542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018194167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018194639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018205042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000002577e-05, 'source_diff': 1.0403000000002577e-05}, {'time': 0.018205514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018212889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018213361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018217875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018218361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018226639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.018227111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018235986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018236458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018243458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018243944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018253861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.018254347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018262806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.018263278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018271139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.018271611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018277375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018277847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018284958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018285431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018291514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.018291986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018299625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018300097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018307, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.018307486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018311597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018312069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018319694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018320167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018325097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018325583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018330611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018331083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018337889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018338375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018343417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018343889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018351931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018352403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01836525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.018365722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01837575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018376222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018385319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018385792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018392694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.018393181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.018403472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018411486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018420278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.01842075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018430653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.018431139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018437903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018447708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018448194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018453028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.0184535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018461958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018462444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018471444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.018471917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018477097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018485694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.018486167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018495986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.018496458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018502833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:37.849" endtime="20201112 10:13:37.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.845" endtime="20201112 10:13:37.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:37.880" level="INFO">${debug-compressed} = {'time': [0.018125625, 0.018126111, 0.018130736, 0.018131208, 0.018138528, 0.018139, 0.018143847, 0.018144319, 0.018151625, 0.018152111, 0.018162139, 0.018162611, 0.018168792, 0.018169264, 0.018173792...</msg>
<status status="PASS" starttime="20201112 10:13:37.856" endtime="20201112 10:13:37.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.884" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:37.883" endtime="20201112 10:13:37.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.888" level="INFO">VALUE: {'time': [0.018125625, 0.018126111, 0.018130736, 0.018131208, 0.018138528, 0.018139, 0.018143847, 0.018144319, 0.018151625, 0.018152111, 0.018162139, 0.018162611, 0.018168792, 0.018169264, 0.018173792, 0.018174264, 0.018179097, 0.018179569, 0.018186069, 0.018186542, 0.018194167, 0.018194639, 0.018205042, 0.018205514, 0.018212889, 0.018213361, 0.018217875, 0.018218361, 0.018226639, 0.018227111, 0.018235986, 0.018236458, 0.018243458, 0.018243944, 0.018253861, 0.018254347, 0.018262806, 0.018263278, 0.018271139, 0.018271611, 0.018277375, 0.018277847, 0.018284958, 0.018285431, 0.018291514, 0.018291986, 0.018299625, 0.018300097, 0.018307, 0.018307486, 0.018311597, 0.018312069, 0.018319694, 0.018320167, 0.018325097, 0.018325583, 0.018330611, 0.018331083, 0.018337889, 0.018338375, 0.018343417, 0.018343889, 0.018351931, 0.018352403, 0.018359208, 0.018359681, 0.01836525, 0.018365722, 0.01837575, 0.018376222, 0.018385319, 0.018385792, 0.018392694, 0.018393181, 0.018403, 0.018403472, 0.018411, 0.018411486, 0.018420278, 0.01842075, 0.018430653, 0.018431139, 0.018437417, 0.018437903, 0.018447708, 0.018448194, 0.018453028, 0.0184535, 0.018461958, 0.018462444, 0.018471444, 0.018471917, 0.018476625, 0.018477097, 0.018485694, 0.018486167, 0.018495986, 0.018496458, 0.018502833, 0.018503306], 'eventsource_diff': [0, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 1.0403000000002577e-05, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 4.930000000000212e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.569000000000407e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.870000000004038e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.859999999974607e-07, 9.805000000001618e-06, 4.860000000009301e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.860000000009301e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.859999999974607e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 1.0403000000002577e-05, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.859999999974607e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.000000000000062e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.860000000009301e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.0829999999970075e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 6.9029999999990765e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 4.930000000000212e-06, 4.860000000009301e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 5.569000000000407e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.870000000004038e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.859999999974607e-07, 9.805000000001618e-06, 4.860000000009301e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.7300000000083386e-07, 4.707999999999102e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:37.885" endtime="20201112 10:13:37.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.881" endtime="20201112 10:13:37.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.893" level="INFO">${RESULT} = [{'time': 0.018126111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018131208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:37.890" endtime="20201112 10:13:37.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:37.907" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018126111, 0.018131208, 0.018139, 0.018144319, 0.018152111, 0.018162611, 0.018169264, 0.018174264, 0.018179569, 0.018186542, 0.018194639, 0.018205514, 0.018213361, 0.018218361, 0.018227111...</msg>
<status status="PASS" starttime="20201112 10:13:37.894" endtime="20201112 10:13:37.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.911" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:37.910" endtime="20201112 10:13:37.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.914" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:37.913" endtime="20201112 10:13:37.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.908" endtime="20201112 10:13:37.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.917" endtime="20201112 10:13:37.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.921" endtime="20201112 10:13:37.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.919" endtime="20201112 10:13:37.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.915" endtime="20201112 10:13:37.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.512" endtime="20201112 10:13:37.941"></status>
</kw>
<msg timestamp="20201112 10:13:37.941" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.949" endtime="20201112 10:13:37.964"></status>
</kw>
<msg timestamp="20201112 10:13:37.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.948" endtime="20201112 10:13:37.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.966" endtime="20201112 10:13:37.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.968" endtime="20201112 10:13:37.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.945" endtime="20201112 10:13:37.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.943" endtime="20201112 10:13:37.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.977" endtime="20201112 10:13:38.267"></status>
</kw>
<msg timestamp="20201112 10:13:38.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.976" endtime="20201112 10:13:38.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.271" endtime="20201112 10:13:38.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.280" endtime="20201112 10:13:38.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.973" endtime="20201112 10:13:38.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.971" endtime="20201112 10:13:38.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.287" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:38.286" endtime="20201112 10:13:38.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.292" level="INFO">VALUE: [{'time': 0.020478389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020487722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020488208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.020495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020502889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020503361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020508903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.020509375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020519625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.020520097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020528347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.020528833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020537514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.020537986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020542917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.020543389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020549056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.020549528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020558528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.020559, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020564653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.020565139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020569236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.020569708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02057975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.020580222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020585569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.020586042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.020596972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020607417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.020607889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020616361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.020616833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.020624125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0206345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.020634972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020644528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999997372e-06, 'source_diff': 9.555999999997372e-06}, {'time': 0.020645014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020651319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.020651792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020656681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.020657153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020662819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.020663292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020667167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.020667639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020674014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020674486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020678472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.020678958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020687014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.020687486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020695208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.020695681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020703931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.020704403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020714222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.020714708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020721917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.020722403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020728264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.02072875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020736583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.020737069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020746778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.02074725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020753444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.020753917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020762597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.020763069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020770903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.020771375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020780472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.020780944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020787542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5980000000000205e-06, 'source_diff': 6.5980000000000205e-06}, {'time': 0.020788014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020796083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.020796556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020805847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.020806319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020816667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.020817139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020823611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.020824083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020830458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.020830931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02084125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.020841736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020850903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.020851389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020856944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.554999999997368e-06, 'source_diff': 5.554999999997368e-06}, {'time': 0.020857417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020864292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.020864778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020874361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.020874833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:38.288" endtime="20201112 10:13:38.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.283" endtime="20201112 10:13:38.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:38.318" level="INFO">${debug-compressed} = {'time': [0.020478389, 0.020478861, 0.020487722, 0.020488208, 0.020494681, 0.020495153, 0.020502889, 0.020503361, 0.020508903, 0.020509375, 0.020519625, 0.020520097, 0.020528347, 0.020528833, 0.020537...</msg>
<status status="PASS" starttime="20201112 10:13:38.294" endtime="20201112 10:13:38.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.322" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:38.321" endtime="20201112 10:13:38.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.327" level="INFO">VALUE: {'time': [0.020478389, 0.020478861, 0.020487722, 0.020488208, 0.020494681, 0.020495153, 0.020502889, 0.020503361, 0.020508903, 0.020509375, 0.020519625, 0.020520097, 0.020528347, 0.020528833, 0.020537514, 0.020537986, 0.020542917, 0.020543389, 0.020549056, 0.020549528, 0.020558528, 0.020559, 0.020564653, 0.020565139, 0.020569236, 0.020569708, 0.02057975, 0.020580222, 0.020585569, 0.020586042, 0.020596486, 0.020596972, 0.020607417, 0.020607889, 0.020616361, 0.020616833, 0.020623639, 0.020624125, 0.0206345, 0.020634972, 0.020644528, 0.020645014, 0.020651319, 0.020651792, 0.020656681, 0.020657153, 0.020662819, 0.020663292, 0.020667167, 0.020667639, 0.020674014, 0.020674486, 0.020678472, 0.020678958, 0.020687014, 0.020687486, 0.020695208, 0.020695681, 0.020703931, 0.020704403, 0.020714222, 0.020714708, 0.020721917, 0.020722403, 0.020728264, 0.02072875, 0.020736583, 0.020737069, 0.020746778, 0.02074725, 0.020753444, 0.020753917, 0.020762597, 0.020763069, 0.020770903, 0.020771375, 0.020780472, 0.020780944, 0.020787542, 0.020788014, 0.020796083, 0.020796556, 0.020805847, 0.020806319, 0.020816667, 0.020817139, 0.020823611, 0.020824083, 0.020830458, 0.020830931, 0.02084125, 0.020841736, 0.020850903, 0.020851389, 0.020856944, 0.020857417, 0.020864292, 0.020864778, 0.020874361, 0.020874833], 'eventsource_diff': [0, 4.720000000013602e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.4729999999998955e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 5.347000000002766e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.555999999997372e-06, 4.860000000009301e-07, 6.305000000001587e-06, 4.729999999973644e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 3.875000000000406e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.7300000000083386e-07, 8.249999999997842e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.859999999974607e-07, 7.209000000001076e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 6.472000000000422e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 9.167000000000897e-06, 4.860000000009301e-07, 5.554999999997368e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.860000000009301e-07, 9.583000000000508e-06, 4.7199999999789077e-07], 'sourcediff': [0, 4.720000000013602e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.4729999999998955e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 5.667000000000866e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 5.347000000002766e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.555999999997372e-06, 4.860000000009301e-07, 6.305000000001587e-06, 4.729999999973644e-07, 4.889000000000976e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 3.875000000000406e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 3.986000000000961e-06, 4.860000000009301e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.7300000000083386e-07, 8.249999999997842e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.859999999974607e-07, 7.209000000001076e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.8340000000017e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 6.5980000000000205e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 6.472000000000422e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 9.167000000000897e-06, 4.860000000009301e-07, 5.554999999997368e-06, 4.7300000000083386e-07, 6.874999999999937e-06, 4.860000000009301e-07, 9.583000000000508e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:38.323" endtime="20201112 10:13:38.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.319" endtime="20201112 10:13:38.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:38.332" level="INFO">${RESULT} = [{'time': 0.020478861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020488208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:38.329" endtime="20201112 10:13:38.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:38.346" level="INFO">${GPIO_OVERHEAD} = {'time': [0.020478861, 0.020488208, 0.020495153, 0.020503361, 0.020509375, 0.020520097, 0.020528833, 0.020537986, 0.020543389, 0.020549528, 0.020559, 0.020565139, 0.020569708, 0.020580222, 0.020586042...</msg>
<status status="PASS" starttime="20201112 10:13:38.333" endtime="20201112 10:13:38.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.350" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:38.349" endtime="20201112 10:13:38.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.353" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:38.351" endtime="20201112 10:13:38.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.347" endtime="20201112 10:13:38.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.356" endtime="20201112 10:13:38.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.359" endtime="20201112 10:13:38.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.358" endtime="20201112 10:13:38.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.354" endtime="20201112 10:13:38.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.942" endtime="20201112 10:13:38.380"></status>
</kw>
<msg timestamp="20201112 10:13:38.380" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.388" endtime="20201112 10:13:38.403"></status>
</kw>
<msg timestamp="20201112 10:13:38.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.387" endtime="20201112 10:13:38.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.405" endtime="20201112 10:13:38.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.407" endtime="20201112 10:13:38.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.384" endtime="20201112 10:13:38.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.382" endtime="20201112 10:13:38.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.417" endtime="20201112 10:13:38.706"></status>
</kw>
<msg timestamp="20201112 10:13:38.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.416" endtime="20201112 10:13:38.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.711" endtime="20201112 10:13:38.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.719" endtime="20201112 10:13:38.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.413" endtime="20201112 10:13:38.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.411" endtime="20201112 10:13:38.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.726" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:38.725" endtime="20201112 10:13:38.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.731" level="INFO">VALUE: [{'time': 0.018566319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018572444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.637999999998783e-06, 'source_diff': 5.637999999998783e-06}, {'time': 0.018572931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018580861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.018581333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018587806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.018588292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018592889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018593375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018598333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.018598806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018604931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.018605417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018612722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000002587e-06, 'source_diff': 7.305000000002587e-06}, {'time': 0.018613194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018623528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.018624014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018629153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018629625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018639917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999998552e-05, 'source_diff': 1.0291999999998552e-05}, {'time': 0.018640389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018648208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.018648681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018656389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.018656875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018664306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.018664778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018672625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018673097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018679806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018680278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018687597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018688069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018697681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.611999999999121e-06, 'source_diff': 9.611999999999121e-06}, {'time': 0.018698167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.018707208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.018715528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018725458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.018725931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018732556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.018733028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018737514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018737986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018748431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.018748903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018753389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018753875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018763486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018763958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018771042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.018771514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.0187765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018781111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018781583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018790861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.018791333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018797403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018797875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018806236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018806722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018816431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018816903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018827069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.018827542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018837222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680000000001493e-06, 'source_diff': 9.680000000001493e-06}, {'time': 0.018837708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018841694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.018842181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01884825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018848722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018856708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.018857181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018863431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018863917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018871542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018872028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018881222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018881694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018891514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018892, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018902139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018902611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018908542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018913875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018914361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018922194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.018922667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01893075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.018931222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018935292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.018935764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018942958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018943431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018952333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.901999999998134e-06, 'source_diff': 8.901999999998134e-06}, {'time': 0.018952806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:38.727" endtime="20201112 10:13:38.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.722" endtime="20201112 10:13:38.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:38.757" level="INFO">${debug-compressed} = {'time': [0.018566319, 0.018566806, 0.018572444, 0.018572931, 0.018580861, 0.018581333, 0.018587806, 0.018588292, 0.018592889, 0.018593375, 0.018598333, 0.018598806, 0.018604931, 0.018605417, 0.018612...</msg>
<status status="PASS" starttime="20201112 10:13:38.733" endtime="20201112 10:13:38.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.761" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:38.760" endtime="20201112 10:13:38.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.765" level="INFO">VALUE: {'time': [0.018566319, 0.018566806, 0.018572444, 0.018572931, 0.018580861, 0.018581333, 0.018587806, 0.018588292, 0.018592889, 0.018593375, 0.018598333, 0.018598806, 0.018604931, 0.018605417, 0.018612722, 0.018613194, 0.018623528, 0.018624014, 0.018629153, 0.018629625, 0.018639917, 0.018640389, 0.018648208, 0.018648681, 0.018656389, 0.018656875, 0.018664306, 0.018664778, 0.018672625, 0.018673097, 0.018679806, 0.018680278, 0.018687597, 0.018688069, 0.018697681, 0.018698167, 0.018706736, 0.018707208, 0.018715056, 0.018715528, 0.018725458, 0.018725931, 0.018732556, 0.018733028, 0.018737514, 0.018737986, 0.018748431, 0.018748903, 0.018753389, 0.018753875, 0.018763486, 0.018763958, 0.018771042, 0.018771514, 0.018776014, 0.0187765, 0.018781111, 0.018781583, 0.018790861, 0.018791333, 0.018797403, 0.018797875, 0.018806236, 0.018806722, 0.018816431, 0.018816903, 0.018827069, 0.018827542, 0.018837222, 0.018837708, 0.018841694, 0.018842181, 0.01884825, 0.018848722, 0.018856708, 0.018857181, 0.018863431, 0.018863917, 0.018871542, 0.018872028, 0.018881222, 0.018881694, 0.018891514, 0.018892, 0.018902139, 0.018902611, 0.018908069, 0.018908542, 0.018913875, 0.018914361, 0.018922194, 0.018922667, 0.01893075, 0.018931222, 0.018935292, 0.018935764, 0.018942958, 0.018943431, 0.018952333, 0.018952806], 'eventsource_diff': [0, 4.870000000004038e-07, 5.637999999998783e-06, 4.870000000004038e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 4.597000000002016e-06, 4.859999999974607e-07, 4.958000000002821e-06, 4.729999999973644e-07, 6.125000000002656e-06, 4.859999999974607e-07, 7.305000000002587e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 7.818999999999188e-06, 4.7300000000083386e-07, 7.707999999998633e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.7300000000083386e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 4.486000000001461e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 7.084000000000951e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.680000000001493e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.870000000004038e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.859999999974607e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.0699999999983805e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.870000000004038e-07, 5.637999999998783e-06, 4.870000000004038e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 6.4729999999998955e-06, 4.860000000009301e-07, 4.597000000002016e-06, 4.859999999974607e-07, 4.958000000002821e-06, 4.729999999973644e-07, 6.125000000002656e-06, 4.859999999974607e-07, 7.305000000002587e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 7.818999999999188e-06, 4.7300000000083386e-07, 7.707999999998633e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 9.930000000001743e-06, 4.7300000000083386e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 4.486000000001461e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 7.084000000000951e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.680000000001493e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.870000000004038e-07, 6.069000000000907e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 6.249999999999312e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.859999999974607e-07, 9.194000000000563e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.859999999974607e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.457999999999852e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.860000000009301e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.0699999999983805e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:38.762" endtime="20201112 10:13:38.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.758" endtime="20201112 10:13:38.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:38.771" level="INFO">${RESULT} = [{'time': 0.018566806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018572931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:38.767" endtime="20201112 10:13:38.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:38.784" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018566806, 0.018572931, 0.018581333, 0.018588292, 0.018593375, 0.018598806, 0.018605417, 0.018613194, 0.018624014, 0.018629625, 0.018640389, 0.018648681, 0.018656875, 0.018664778, 0.018673...</msg>
<status status="PASS" starttime="20201112 10:13:38.772" endtime="20201112 10:13:38.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.789" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:38.788" endtime="20201112 10:13:38.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.791" level="INFO">VALUE: [4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:38.790" endtime="20201112 10:13:38.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.785" endtime="20201112 10:13:38.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.794" endtime="20201112 10:13:38.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.798" endtime="20201112 10:13:38.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.796" endtime="20201112 10:13:38.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.793" endtime="20201112 10:13:38.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.381" endtime="20201112 10:13:38.819"></status>
</kw>
<msg timestamp="20201112 10:13:38.819" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.826" endtime="20201112 10:13:38.844"></status>
</kw>
<msg timestamp="20201112 10:13:38.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.825" endtime="20201112 10:13:38.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.845" endtime="20201112 10:13:38.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.848" endtime="20201112 10:13:38.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.822" endtime="20201112 10:13:38.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.821" endtime="20201112 10:13:38.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.857" endtime="20201112 10:13:39.145"></status>
</kw>
<msg timestamp="20201112 10:13:39.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:38.855" endtime="20201112 10:13:39.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:39.149" endtime="20201112 10:13:39.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.158" endtime="20201112 10:13:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.853" endtime="20201112 10:13:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.851" endtime="20201112 10:13:39.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.164" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:39.163" endtime="20201112 10:13:39.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.170" level="INFO">VALUE: [{'time': 0.022396028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022400847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.022401319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022408611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.022409083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022418389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.022418861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022427861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.022428333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022435042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708999999997106e-06, 'source_diff': 6.708999999997106e-06}, {'time': 0.022435514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022443764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.022444236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022451569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.022452042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022460083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.022460556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022470722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.022471194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022476736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.022477208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022484625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.022485097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022489819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.022490306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022495847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.022496333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022503333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.022503819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.022509125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022513111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.022513583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022519139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022519625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022525625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.022526097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02253225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.022532722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022539111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.022539583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022546389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.022546861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022552528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.022553, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.022563819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022567708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022568181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022575736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.022576208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.022586597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022594653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022595125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022604125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.022604597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.022611764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022617653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.022618125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022622625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.022623097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022633056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958999999996887e-06, 'source_diff': 9.958999999996887e-06}, {'time': 0.022633528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022639264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.022639736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022648264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022655806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.022656278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022663389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022663875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022670528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6529999999988265e-06, 'source_diff': 6.6529999999988265e-06}, {'time': 0.022671, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022679514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.022679986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.022688833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022695583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022701764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.02270225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022708944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.022709417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022714556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022715042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022725069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.022725542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022733819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.276999999997509e-06, 'source_diff': 8.276999999997509e-06}, {'time': 0.022734292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022743889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.022744375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.022751472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022757514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.022758, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022766486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.022766958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:39.166" endtime="20201112 10:13:39.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.161" endtime="20201112 10:13:39.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:39.196" level="INFO">${debug-compressed} = {'time': [0.022396028, 0.0223965, 0.022400847, 0.022401319, 0.022408611, 0.022409083, 0.022418389, 0.022418861, 0.022427861, 0.022428333, 0.022435042, 0.022435514, 0.022443764, 0.022444236, 0.02245156...</msg>
<status status="PASS" starttime="20201112 10:13:39.172" endtime="20201112 10:13:39.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.200" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:39.199" endtime="20201112 10:13:39.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.205" level="INFO">VALUE: {'time': [0.022396028, 0.0223965, 0.022400847, 0.022401319, 0.022408611, 0.022409083, 0.022418389, 0.022418861, 0.022427861, 0.022428333, 0.022435042, 0.022435514, 0.022443764, 0.022444236, 0.022451569, 0.022452042, 0.022460083, 0.022460556, 0.022470722, 0.022471194, 0.022476736, 0.022477208, 0.022484625, 0.022485097, 0.022489819, 0.022490306, 0.022495847, 0.022496333, 0.022503333, 0.022503819, 0.022508639, 0.022509125, 0.022513111, 0.022513583, 0.022519139, 0.022519625, 0.022525625, 0.022526097, 0.02253225, 0.022532722, 0.022539111, 0.022539583, 0.022546389, 0.022546861, 0.022552528, 0.022553, 0.022563347, 0.022563819, 0.022567708, 0.022568181, 0.022575736, 0.022576208, 0.022586125, 0.022586597, 0.022594653, 0.022595125, 0.022604125, 0.022604597, 0.022611292, 0.022611764, 0.022617653, 0.022618125, 0.022622625, 0.022623097, 0.022633056, 0.022633528, 0.022639264, 0.022639736, 0.022647792, 0.022648264, 0.022655806, 0.022656278, 0.022663389, 0.022663875, 0.022670528, 0.022671, 0.022679514, 0.022679986, 0.022688347, 0.022688833, 0.022695111, 0.022695583, 0.022701764, 0.02270225, 0.022708944, 0.022709417, 0.022714556, 0.022715042, 0.022725069, 0.022725542, 0.022733819, 0.022734292, 0.022743889, 0.022744375, 0.022751, 0.022751472, 0.022757514, 0.022758, 0.022766486, 0.022766958], 'eventsource_diff': [0, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 6.708999999997106e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.729999999973644e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.870000000004038e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.999999999999062e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 3.888999999999976e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.6529999999988265e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.276999999997509e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 6.042000000001241e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 6.708999999997106e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.729999999973644e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 5.542000000000741e-06, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.870000000004038e-07, 5.540999999997798e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.860000000009301e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.999999999999062e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 3.888999999999976e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 6.695000000001006e-06, 4.7199999999789077e-07, 5.889000000001976e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.860000000009301e-07, 6.6529999999988265e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.859999999974607e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.276999999997509e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.860000000009301e-07, 6.624999999999687e-06, 4.7199999999789077e-07, 6.042000000001241e-06, 4.860000000009301e-07, 8.485999999998523e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:39.201" endtime="20201112 10:13:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.197" endtime="20201112 10:13:39.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:39.210" level="INFO">${RESULT} = [{'time': 0.0223965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022401319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:39.207" endtime="20201112 10:13:39.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:39.224" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0223965, 0.022401319, 0.022409083, 0.022418861, 0.022428333, 0.022435514, 0.022444236, 0.022452042, 0.022460556, 0.022471194, 0.022477208, 0.022485097, 0.022490306, 0.022496333, 0.02250381...</msg>
<status status="PASS" starttime="20201112 10:13:39.211" endtime="20201112 10:13:39.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.229" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:39.227" endtime="20201112 10:13:39.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.231" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:39.230" endtime="20201112 10:13:39.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.225" endtime="20201112 10:13:39.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.234" endtime="20201112 10:13:39.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:39.238" endtime="20201112 10:13:39.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.236" endtime="20201112 10:13:39.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.233" endtime="20201112 10:13:39.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.819" endtime="20201112 10:13:39.259"></status>
</kw>
<msg timestamp="20201112 10:13:39.259" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.267" endtime="20201112 10:13:39.281"></status>
</kw>
<msg timestamp="20201112 10:13:39.282" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.265" endtime="20201112 10:13:39.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.283" endtime="20201112 10:13:39.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.285" endtime="20201112 10:13:39.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.262" endtime="20201112 10:13:39.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.261" endtime="20201112 10:13:39.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.295" endtime="20201112 10:13:39.584"></status>
</kw>
<msg timestamp="20201112 10:13:39.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.293" endtime="20201112 10:13:39.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.588" endtime="20201112 10:13:39.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.604" endtime="20201112 10:13:39.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.290" endtime="20201112 10:13:39.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.289" endtime="20201112 10:13:39.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.610" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:39.609" endtime="20201112 10:13:39.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.616" level="INFO">VALUE: [{'time': 0.019442917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.019450667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019460903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019461389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0194685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019468972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019475889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.019476361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01948525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.019485722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019490778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.01949125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019499639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.019500111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019506264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.019506736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019511319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.019511792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019518333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.019518806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019528208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.019528681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019536736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019537222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019543806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.019544292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019550694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.401999999999103e-06, 'source_diff': 6.401999999999103e-06}, {'time': 0.019551167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019557639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019558125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019568056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019568528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.019575806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019586042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019586514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019594028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.0195945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01960275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019603222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019612819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.019613292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019618111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019618583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019624653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019625125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019634931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019635403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019641056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019641528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019645625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019646097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019654278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.01965475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019662903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019663375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019670486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019670958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019678806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.019679278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01968525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019685736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019694403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.019694875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01970075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019701222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019705431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.019705903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019714181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.019714653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019723333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.019723806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019732056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.019732542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019740167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.019740653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019747625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019752653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.019753125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019757333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.019757806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019766806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.019767278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019775014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.0197755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019781069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.019781542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0197875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019787972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019792806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.019793278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019803417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019803889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019812472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019812944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019817875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.019818347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:39.612" endtime="20201112 10:13:39.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.607" endtime="20201112 10:13:39.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:39.641" level="INFO">${debug-compressed} = {'time': [0.019442917, 0.019443389, 0.019450194, 0.019450667, 0.019460903, 0.019461389, 0.0194685, 0.019468972, 0.019475889, 0.019476361, 0.01948525, 0.019485722, 0.019490778, 0.01949125, 0.019499639,...</msg>
<status status="PASS" starttime="20201112 10:13:39.618" endtime="20201112 10:13:39.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.645" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:39.644" endtime="20201112 10:13:39.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.649" level="INFO">VALUE: {'time': [0.019442917, 0.019443389, 0.019450194, 0.019450667, 0.019460903, 0.019461389, 0.0194685, 0.019468972, 0.019475889, 0.019476361, 0.01948525, 0.019485722, 0.019490778, 0.01949125, 0.019499639, 0.019500111, 0.019506264, 0.019506736, 0.019511319, 0.019511792, 0.019518333, 0.019518806, 0.019528208, 0.019528681, 0.019536736, 0.019537222, 0.019543806, 0.019544292, 0.019550694, 0.019551167, 0.019557639, 0.019558125, 0.019568056, 0.019568528, 0.019575333, 0.019575806, 0.019586042, 0.019586514, 0.019594028, 0.0195945, 0.01960275, 0.019603222, 0.019612819, 0.019613292, 0.019618111, 0.019618583, 0.019624653, 0.019625125, 0.019634931, 0.019635403, 0.019641056, 0.019641528, 0.019645625, 0.019646097, 0.019654278, 0.01965475, 0.019662903, 0.019663375, 0.019670486, 0.019670958, 0.019678806, 0.019679278, 0.01968525, 0.019685736, 0.019694403, 0.019694875, 0.01970075, 0.019701222, 0.019705431, 0.019705903, 0.019714181, 0.019714653, 0.019723333, 0.019723806, 0.019732056, 0.019732542, 0.019740167, 0.019740653, 0.019747153, 0.019747625, 0.019752653, 0.019753125, 0.019757333, 0.019757806, 0.019766806, 0.019767278, 0.019775014, 0.0197755, 0.019781069, 0.019781542, 0.0197875, 0.019787972, 0.019792806, 0.019793278, 0.019803417, 0.019803889, 0.019812472, 0.019812944, 0.019817875, 0.019818347], 'eventsource_diff': [0, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 4.582999999998977e-06, 4.7300000000083386e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.401999999999103e-06, 4.7300000000083386e-07, 6.472000000000422e-06, 4.859999999974607e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 4.818999999999657e-06, 4.7199999999789077e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.859999999974607e-07, 8.667000000000397e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.859999999974607e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.860000000009301e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.7199999999789077e-07, 6.805000000002087e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 4.582999999998977e-06, 4.7300000000083386e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.860000000009301e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.401999999999103e-06, 4.7300000000083386e-07, 6.472000000000422e-06, 4.859999999974607e-07, 9.931000000001217e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 4.818999999999657e-06, 4.7199999999789077e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.859999999974607e-07, 8.667000000000397e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.859999999974607e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.499999999999562e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.860000000009301e-07, 5.5689999999969375e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:39.646" endtime="20201112 10:13:39.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.642" endtime="20201112 10:13:39.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:39.655" level="INFO">${RESULT} = [{'time': 0.019443389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019450667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:39.652" endtime="20201112 10:13:39.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:39.669" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019443389, 0.019450667, 0.019461389, 0.019468972, 0.019476361, 0.019485722, 0.01949125, 0.019500111, 0.019506736, 0.019511792, 0.019518806, 0.019528681, 0.019537222, 0.019544292, 0.0195511...</msg>
<status status="PASS" starttime="20201112 10:13:39.656" endtime="20201112 10:13:39.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.673" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:39.672" endtime="20201112 10:13:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.676" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:39.674" endtime="20201112 10:13:39.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.670" endtime="20201112 10:13:39.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.679" endtime="20201112 10:13:39.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:39.682" endtime="20201112 10:13:39.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.681" endtime="20201112 10:13:39.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.677" endtime="20201112 10:13:39.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.259" endtime="20201112 10:13:39.703"></status>
</kw>
<msg timestamp="20201112 10:13:39.703" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.711" endtime="20201112 10:13:39.728"></status>
</kw>
<msg timestamp="20201112 10:13:39.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.710" endtime="20201112 10:13:39.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.731" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.729" endtime="20201112 10:13:39.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.732" endtime="20201112 10:13:39.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.707" endtime="20201112 10:13:39.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.705" endtime="20201112 10:13:39.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.741" endtime="20201112 10:13:40.025"></status>
</kw>
<msg timestamp="20201112 10:13:40.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.739" endtime="20201112 10:13:40.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.030" endtime="20201112 10:13:40.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.038" endtime="20201112 10:13:40.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.737" endtime="20201112 10:13:40.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.735" endtime="20201112 10:13:40.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.045" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:40.044" endtime="20201112 10:13:40.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.050" level="INFO">VALUE: [{'time': 0.022006389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022013167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.022013639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022021083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.022021556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.387999999999064e-06, 'source_diff': 9.387999999999064e-06}, {'time': 0.022031417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022038222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.022038694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022048625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.022049097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022056222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022056694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022063917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222999999997176e-06, 'source_diff': 7.222999999997176e-06}, {'time': 0.022064389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022069431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022069903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022076736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.022077208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.022085708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022091069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.022091542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022098653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022099125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022106444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.022106931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022112375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.022112847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022120694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.022121167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022125486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.022125958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022133444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022142736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.022143222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022152222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.022152694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022161153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.022161625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02216875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022169222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022178722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.022179208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022186222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022186694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02219225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022192722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.022199375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022204722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022205208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022213778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.02221425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022220639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.022221111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022226153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.022226625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022230625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022231097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022239778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.681000000003436e-06, 'source_diff': 8.681000000003436e-06}, {'time': 0.02224025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022247472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.022247944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02225725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.022257736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022266417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.022266889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022274, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.022274472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.022279153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02228575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.022286236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022296681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.022297153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022302708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.022303181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022307403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.022307875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022311778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.02231225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022318833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022319306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022327889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.022328361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022335889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022336375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022340361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022340847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022345042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.022345528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022354819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.022355306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.022360125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.022360611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022369611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.022370083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:40.046" endtime="20201112 10:13:40.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.041" endtime="20201112 10:13:40.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:40.077" level="INFO">${debug-compressed} = {'time': [0.022006389, 0.022006875, 0.022013167, 0.022013639, 0.022021083, 0.022021556, 0.022030944, 0.022031417, 0.022038222, 0.022038694, 0.022048625, 0.022049097, 0.022056222, 0.022056694, 0.022063...</msg>
<status status="PASS" starttime="20201112 10:13:40.052" endtime="20201112 10:13:40.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.081" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:40.080" endtime="20201112 10:13:40.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.085" level="INFO">VALUE: {'time': [0.022006389, 0.022006875, 0.022013167, 0.022013639, 0.022021083, 0.022021556, 0.022030944, 0.022031417, 0.022038222, 0.022038694, 0.022048625, 0.022049097, 0.022056222, 0.022056694, 0.022063917, 0.022064389, 0.022069431, 0.022069903, 0.022076736, 0.022077208, 0.022085236, 0.022085708, 0.022091069, 0.022091542, 0.022098653, 0.022099125, 0.022106444, 0.022106931, 0.022112375, 0.022112847, 0.022120694, 0.022121167, 0.022125486, 0.022125958, 0.022132972, 0.022133444, 0.022142736, 0.022143222, 0.022152222, 0.022152694, 0.022161153, 0.022161625, 0.02216875, 0.022169222, 0.022178722, 0.022179208, 0.022186222, 0.022186694, 0.02219225, 0.022192722, 0.022198903, 0.022199375, 0.022204722, 0.022205208, 0.022213778, 0.02221425, 0.022220639, 0.022221111, 0.022226153, 0.022226625, 0.022230625, 0.022231097, 0.022239778, 0.02224025, 0.022247472, 0.022247944, 0.02225725, 0.022257736, 0.022266417, 0.022266889, 0.022274, 0.022274472, 0.022278681, 0.022279153, 0.02228575, 0.022286236, 0.022296681, 0.022297153, 0.022302708, 0.022303181, 0.022307403, 0.022307875, 0.022311778, 0.02231225, 0.022318833, 0.022319306, 0.022327889, 0.022328361, 0.022335889, 0.022336375, 0.022340361, 0.022340847, 0.022345042, 0.022345528, 0.022354819, 0.022355306, 0.022360125, 0.022360611, 0.022369611, 0.022370083], 'eventsource_diff': [0, 4.859999999974607e-07, 6.292000000001491e-06, 4.720000000013602e-07, 7.443999999998813e-06, 4.7300000000083386e-07, 9.387999999999064e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 6.833000000001227e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.870000000004038e-07, 5.444000000000282e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.681000000003436e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 5.555000000000837e-06, 4.729999999973644e-07, 4.222000000001641e-06, 4.720000000013602e-07, 3.902999999999546e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 9.291000000001548e-06, 4.869999999969343e-07, 4.819000000003126e-06, 4.859999999974607e-07, 9.000000000002062e-06, 4.7199999999789077e-07], 'sourcediff': [0, 4.859999999974607e-07, 6.292000000001491e-06, 4.720000000013602e-07, 7.443999999998813e-06, 4.7300000000083386e-07, 9.387999999999064e-06, 4.7300000000083386e-07, 6.804999999998618e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 7.222999999997176e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 6.833000000001227e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 5.361000000002336e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.870000000004038e-07, 5.444000000000282e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.681000000003436e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.720000000013602e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 5.555000000000837e-06, 4.729999999973644e-07, 4.222000000001641e-06, 4.720000000013602e-07, 3.902999999999546e-06, 4.7199999999789077e-07, 6.583000000000977e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.859999999974607e-07, 3.986000000000961e-06, 4.860000000009301e-07, 4.1949999999985055e-06, 4.860000000009301e-07, 9.291000000001548e-06, 4.869999999969343e-07, 4.819000000003126e-06, 4.859999999974607e-07, 9.000000000002062e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:40.082" endtime="20201112 10:13:40.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.078" endtime="20201112 10:13:40.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.091" level="INFO">${RESULT} = [{'time': 0.022006875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022013639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:40.087" endtime="20201112 10:13:40.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:40.104" level="INFO">${GPIO_OVERHEAD} = {'time': [0.022006875, 0.022013639, 0.022021556, 0.022031417, 0.022038694, 0.022049097, 0.022056694, 0.022064389, 0.022069903, 0.022077208, 0.022085708, 0.022091542, 0.022099125, 0.022106931, 0.022112...</msg>
<status status="PASS" starttime="20201112 10:13:40.092" endtime="20201112 10:13:40.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.108" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:40.107" endtime="20201112 10:13:40.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.111" level="INFO">VALUE: [4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.859999999974607e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:40.109" endtime="20201112 10:13:40.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.105" endtime="20201112 10:13:40.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.114" endtime="20201112 10:13:40.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.117" endtime="20201112 10:13:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.116" endtime="20201112 10:13:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.112" endtime="20201112 10:13:40.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.704" endtime="20201112 10:13:40.138"></status>
</kw>
<msg timestamp="20201112 10:13:40.138" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.146" endtime="20201112 10:13:40.161"></status>
</kw>
<msg timestamp="20201112 10:13:40.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.145" endtime="20201112 10:13:40.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.162" endtime="20201112 10:13:40.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.165" endtime="20201112 10:13:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.142" endtime="20201112 10:13:40.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.140" endtime="20201112 10:13:40.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.175" endtime="20201112 10:13:40.458"></status>
</kw>
<msg timestamp="20201112 10:13:40.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019014611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019015083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.173" endtime="20201112 10:13:40.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019014611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019015083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.462" endtime="20201112 10:13:40.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.471" endtime="20201112 10:13:40.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.171" endtime="20201112 10:13:40.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.169" endtime="20201112 10:13:40.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.477" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:40.476" endtime="20201112 10:13:40.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.482" level="INFO">VALUE: [{'time': 0.019014611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019015083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019025319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019025806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019034264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.01903475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019045181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.019045667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019053097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.019053569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019060583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019061056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019071389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.019071875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019079403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.528000000003171e-06, 'source_diff': 7.528000000003171e-06}, {'time': 0.019079875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019085347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019085819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019089889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.019090375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019097361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.019097847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019105056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.019105528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.019111028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019119167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019119639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019128917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999997982e-06, 'source_diff': 9.277999999997982e-06}, {'time': 0.019129389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019133903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019134375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019142514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019142986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019149486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019149958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019159667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708999999996637e-06, 'source_diff': 9.708999999996637e-06}, {'time': 0.019160139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019170486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019170958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.019181889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019192222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.019192694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019202, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.019202472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.019209764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019216569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.019217042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019226597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.019227069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019236028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.0192365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019244958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019245431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019254944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.019255417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.019263236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019269389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.019269875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019275722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019276208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019284569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019285042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019292125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.083000000001477e-06, 'source_diff': 7.083000000001477e-06}, {'time': 0.019292611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019299944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.019300417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019304278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.01930475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019308833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.019309319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019313611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.019314083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019319111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019319597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0193295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.019329972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019336153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019336625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019340639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.019341111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019350625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.019351097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019358722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.019359194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019363194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019363667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019367569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.019368042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019377861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019378333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.019388222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019395333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019395806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019402194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.387999999999533e-06, 'source_diff': 6.387999999999533e-06}, {'time': 0.019402681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:40.478" endtime="20201112 10:13:40.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.474" endtime="20201112 10:13:40.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:40.508" level="INFO">${debug-compressed} = {'time': [0.019014611, 0.019015083, 0.019025319, 0.019025806, 0.019034264, 0.01903475, 0.019045181, 0.019045667, 0.019053097, 0.019053569, 0.019060583, 0.019061056, 0.019071389, 0.019071875, 0.0190794...</msg>
<status status="PASS" starttime="20201112 10:13:40.485" endtime="20201112 10:13:40.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.512" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:40.511" endtime="20201112 10:13:40.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.516" level="INFO">VALUE: {'time': [0.019014611, 0.019015083, 0.019025319, 0.019025806, 0.019034264, 0.01903475, 0.019045181, 0.019045667, 0.019053097, 0.019053569, 0.019060583, 0.019061056, 0.019071389, 0.019071875, 0.019079403, 0.019079875, 0.019085347, 0.019085819, 0.019089889, 0.019090375, 0.019097361, 0.019097847, 0.019105056, 0.019105528, 0.019110542, 0.019111028, 0.019119167, 0.019119639, 0.019128917, 0.019129389, 0.019133903, 0.019134375, 0.019142514, 0.019142986, 0.019149486, 0.019149958, 0.019159667, 0.019160139, 0.019170486, 0.019170958, 0.019181417, 0.019181889, 0.019192222, 0.019192694, 0.019202, 0.019202472, 0.019209292, 0.019209764, 0.019216569, 0.019217042, 0.019226597, 0.019227069, 0.019236028, 0.0192365, 0.019244958, 0.019245431, 0.019254944, 0.019255417, 0.019262764, 0.019263236, 0.019269389, 0.019269875, 0.019275722, 0.019276208, 0.019284569, 0.019285042, 0.019292125, 0.019292611, 0.019299944, 0.019300417, 0.019304278, 0.01930475, 0.019308833, 0.019309319, 0.019313611, 0.019314083, 0.019319111, 0.019319597, 0.0193295, 0.019329972, 0.019336153, 0.019336625, 0.019340639, 0.019341111, 0.019350625, 0.019351097, 0.019358722, 0.019359194, 0.019363194, 0.019363667, 0.019367569, 0.019368042, 0.019377861, 0.019378333, 0.019387736, 0.019388222, 0.019395333, 0.019395806, 0.019402194, 0.019402681], 'eventsource_diff': [0, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.870000000004038e-07, 8.457999999999383e-06, 4.860000000009301e-07, 1.0431000000001717e-05, 4.859999999974607e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.0699999999983805e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.860000000009301e-07, 7.208999999997606e-06, 4.720000000013602e-07, 5.014000000001101e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 9.512999999999189e-06, 4.7300000000083386e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.859999999974607e-07, 5.846999999999797e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.729999999973644e-07, 7.083000000001477e-06, 4.860000000009301e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 3.861000000000836e-06, 4.7199999999789077e-07, 4.083000000001946e-06, 4.859999999974607e-07, 4.29200000000296e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.387999999999533e-06, 4.870000000004038e-07], 'sourcediff': [0, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.870000000004038e-07, 8.457999999999383e-06, 4.860000000009301e-07, 1.0431000000001717e-05, 4.859999999974607e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 7.528000000003171e-06, 4.7199999999789077e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.0699999999983805e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.860000000009301e-07, 7.208999999997606e-06, 4.720000000013602e-07, 5.014000000001101e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.7199999999789077e-07, 8.958999999999356e-06, 4.720000000013602e-07, 8.457999999999383e-06, 4.7300000000083386e-07, 9.512999999999189e-06, 4.7300000000083386e-07, 7.347000000001297e-06, 4.7199999999789077e-07, 6.153000000001796e-06, 4.859999999974607e-07, 5.846999999999797e-06, 4.860000000009301e-07, 8.361000000001867e-06, 4.729999999973644e-07, 7.083000000001477e-06, 4.860000000009301e-07, 7.332999999998258e-06, 4.7300000000083386e-07, 3.861000000000836e-06, 4.7199999999789077e-07, 4.083000000001946e-06, 4.859999999974607e-07, 4.29200000000296e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.624999999997217e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 3.902000000000072e-06, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 6.387999999999533e-06, 4.870000000004038e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:40.513" endtime="20201112 10:13:40.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.509" endtime="20201112 10:13:40.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.522" level="INFO">${RESULT} = [{'time': 0.019015083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019025806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:40.519" endtime="20201112 10:13:40.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:40.536" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019015083, 0.019025806, 0.01903475, 0.019045667, 0.019053569, 0.019061056, 0.019071875, 0.019079875, 0.019085819, 0.019090375, 0.019097847, 0.019105528, 0.019111028, 0.019119639, 0.0191293...</msg>
<status status="PASS" starttime="20201112 10:13:40.523" endtime="20201112 10:13:40.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.540" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:40.539" endtime="20201112 10:13:40.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.543" level="INFO">VALUE: [4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201112 10:13:40.541" endtime="20201112 10:13:40.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.537" endtime="20201112 10:13:40.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.546" endtime="20201112 10:13:40.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.549" endtime="20201112 10:13:40.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.548" endtime="20201112 10:13:40.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.544" endtime="20201112 10:13:40.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.139" endtime="20201112 10:13:40.570"></status>
</kw>
<msg timestamp="20201112 10:13:40.570" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.578" endtime="20201112 10:13:40.592"></status>
</kw>
<msg timestamp="20201112 10:13:40.592" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.577" endtime="20201112 10:13:40.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.594" endtime="20201112 10:13:40.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.596" endtime="20201112 10:13:40.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.574" endtime="20201112 10:13:40.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.572" endtime="20201112 10:13:40.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.606" endtime="20201112 10:13:40.886"></status>
</kw>
<msg timestamp="20201112 10:13:40.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.604" endtime="20201112 10:13:40.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.890" endtime="20201112 10:13:40.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.899" endtime="20201112 10:13:40.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.601" endtime="20201112 10:13:40.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.599" endtime="20201112 10:13:40.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.906" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:40.905" endtime="20201112 10:13:40.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.911" level="INFO">VALUE: [{'time': 0.019077722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019086208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019086694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019096403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.019096875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019105319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.019105792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019112889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019113375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019118917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019119389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019129306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.019129778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019139986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.019140458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019145708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.019146181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019150292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.019150764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019155792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019156278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019166208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.019166681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019172431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019172917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019182111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019182583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019189292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.019189764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019195222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.019195694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019200722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019201208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019205681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019212167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019212653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019219667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019220139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019226111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019226583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019236944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019237417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019241292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.019241778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019249833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019250306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019254306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019254778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019264514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.019264986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019269444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.019269917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019278542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.019279014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019284361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019284847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019289056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.019289528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019299458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.019299931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019304347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019304819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019311833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019312306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019320472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.019320944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019325361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.019325833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019330236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.019330708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.019340472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019344778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.01934525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.019353569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019363361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999998052e-06, 'source_diff': 9.791999999998052e-06}, {'time': 0.019363833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019369486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019369958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019377389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.019377861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01938475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019385222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019391319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.019391792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019397958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.019398431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019405347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.915999999999173e-06, 'source_diff': 6.915999999999173e-06}, {'time': 0.019405819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019412208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019412681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019421722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.040999999997829e-06, 'source_diff': 9.040999999997829e-06}, {'time': 0.019422194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019428556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.019429028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019434681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.019435153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:40.907" endtime="20201112 10:13:40.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.902" endtime="20201112 10:13:40.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:40.938" level="INFO">${debug-compressed} = {'time': [0.019077722, 0.019078194, 0.019086208, 0.019086694, 0.019096403, 0.019096875, 0.019105319, 0.019105792, 0.019112889, 0.019113375, 0.019118917, 0.019119389, 0.019129306, 0.019129778, 0.019139...</msg>
<status status="PASS" starttime="20201112 10:13:40.914" endtime="20201112 10:13:40.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.942" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:40.941" endtime="20201112 10:13:40.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.946" level="INFO">VALUE: {'time': [0.019077722, 0.019078194, 0.019086208, 0.019086694, 0.019096403, 0.019096875, 0.019105319, 0.019105792, 0.019112889, 0.019113375, 0.019118917, 0.019119389, 0.019129306, 0.019129778, 0.019139986, 0.019140458, 0.019145708, 0.019146181, 0.019150292, 0.019150764, 0.019155792, 0.019156278, 0.019166208, 0.019166681, 0.019172431, 0.019172917, 0.019182111, 0.019182583, 0.019189292, 0.019189764, 0.019195222, 0.019195694, 0.019200722, 0.019201208, 0.019205208, 0.019205681, 0.019212167, 0.019212653, 0.019219667, 0.019220139, 0.019226111, 0.019226583, 0.019236944, 0.019237417, 0.019241292, 0.019241778, 0.019249833, 0.019250306, 0.019254306, 0.019254778, 0.019264514, 0.019264986, 0.019269444, 0.019269917, 0.019278542, 0.019279014, 0.019284361, 0.019284847, 0.019289056, 0.019289528, 0.019299458, 0.019299931, 0.019304347, 0.019304819, 0.019311833, 0.019312306, 0.019320472, 0.019320944, 0.019325361, 0.019325833, 0.019330236, 0.019330708, 0.01934, 0.019340472, 0.019344778, 0.01934525, 0.019353097, 0.019353569, 0.019363361, 0.019363833, 0.019369486, 0.019369958, 0.019377389, 0.019377861, 0.01938475, 0.019385222, 0.019391319, 0.019391792, 0.019397958, 0.019398431, 0.019405347, 0.019405819, 0.019412208, 0.019412681, 0.019421722, 0.019422194, 0.019428556, 0.019429028, 0.019434681, 0.019435153], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 5.542000000000741e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 9.930000000001743e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.729999999973644e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 3.875000000000406e-06, 4.860000000009301e-07, 8.054999999999868e-06, 4.729999999973644e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 4.208999999998075e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.166000000000423e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.791999999998052e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.430999999998716e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7300000000083386e-07, 9.040999999997829e-06, 4.720000000013602e-07, 6.36199999999934e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 8.443999999999813e-06, 4.7300000000083386e-07, 7.097000000001047e-06, 4.859999999974607e-07, 5.542000000000741e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 5.250000000001781e-06, 4.7300000000083386e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.028000000000671e-06, 4.859999999974607e-07, 9.930000000001743e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 4.000000000000531e-06, 4.729999999973644e-07, 6.485999999999992e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 3.875000000000406e-06, 4.860000000009301e-07, 8.054999999999868e-06, 4.729999999973644e-07, 4.000000000000531e-06, 4.720000000013602e-07, 9.735999999999773e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.860000000009301e-07, 4.208999999998075e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 8.166000000000423e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 4.403000000000046e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 9.791999999998052e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.430999999998716e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 6.097000000000047e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 6.915999999999173e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.7300000000083386e-07, 9.040999999997829e-06, 4.720000000013602e-07, 6.36199999999934e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 10:13:40.943" endtime="20201112 10:13:40.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.939" endtime="20201112 10:13:40.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.951" level="INFO">${RESULT} = [{'time': 0.019078194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019086694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:40.948" endtime="20201112 10:13:40.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:40.965" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019078194, 0.019086694, 0.019096875, 0.019105792, 0.019113375, 0.019119389, 0.019129778, 0.019140458, 0.019146181, 0.019150764, 0.019156278, 0.019166681, 0.019172917, 0.019182583, 0.019189...</msg>
<status status="PASS" starttime="20201112 10:13:40.952" endtime="20201112 10:13:40.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.969" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:40.968" endtime="20201112 10:13:40.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.972" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:40.970" endtime="20201112 10:13:40.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.966" endtime="20201112 10:13:40.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.975" endtime="20201112 10:13:40.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.978" endtime="20201112 10:13:40.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.977" endtime="20201112 10:13:40.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.973" endtime="20201112 10:13:40.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.571" endtime="20201112 10:13:40.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.232" endtime="20201112 10:13:40.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.004" endtime="20201112 10:13:41.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.002" endtime="20201112 10:13:41.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.001" endtime="20201112 10:13:41.024"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:32.151" endtime="20201112 10:13:41.025" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.032" endtime="20201112 10:13:41.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.031" endtime="20201112 10:13:41.052"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.066" endtime="20201112 10:13:41.091"></status>
</kw>
<msg timestamp="20201112 10:13:41.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.065" endtime="20201112 10:13:41.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.093" endtime="20201112 10:13:41.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.098" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:41.096" endtime="20201112 10:13:41.098"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:41.062" endtime="20201112 10:13:41.099"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:41.060" endtime="20201112 10:13:41.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.058" endtime="20201112 10:13:41.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:41.104" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:41.103" endtime="20201112 10:13:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.101" endtime="20201112 10:13:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.057" endtime="20201112 10:13:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.056" endtime="20201112 10:13:41.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.105" endtime="20201112 10:13:41.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.055" endtime="20201112 10:13:41.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.053" endtime="20201112 10:13:41.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.029" endtime="20201112 10:13:41.108"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:41.110" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.118" endtime="20201112 10:13:41.137"></status>
</kw>
<msg timestamp="20201112 10:13:41.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.117" endtime="20201112 10:13:41.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.140" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.138" endtime="20201112 10:13:41.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.141" endtime="20201112 10:13:41.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.114" endtime="20201112 10:13:41.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.112" endtime="20201112 10:13:41.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.151" endtime="20201112 10:13:41.440"></status>
</kw>
<msg timestamp="20201112 10:13:41.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079531611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079536028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.148" endtime="20201112 10:13:41.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079531611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079536028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.445" endtime="20201112 10:13:41.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.453" endtime="20201112 10:13:41.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.146" endtime="20201112 10:13:41.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.144" endtime="20201112 10:13:41.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.460" level="INFO">${RESULT} = [{'time': 0.079536028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999992677e-06, 'source_diff': 4.416999999992677e-06}, {'time': 0.079544806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:41.456" endtime="20201112 10:13:41.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:41.474" level="INFO">${OVERHEAD} = {'time': [0.079536028, 0.079544806, 0.079554069, 0.079565014, 0.079574208, 0.079586111, 0.079594889, 0.079609153, 0.079622097, 0.079636778, 0.079649097, 0.079659847, 0.079673597, 0.079683847, 0.079694...</msg>
<status status="PASS" starttime="20201112 10:13:41.461" endtime="20201112 10:13:41.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.479" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:41.477" endtime="20201112 10:13:41.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.481" level="INFO">VALUE: [4.416999999992677e-06, 4.416999999992677e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.4170000000065546e-06, 4.389000000007415e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.443999999992343e-06, 4.4170000000065546e-06, 4.471999999991483e-06, 4.416000000007081e-06, 4.416999999992677e-06, 4.375000000000906e-06, 4.4170000000065546e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000007081e-06, 4.4170000000065546e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.415999999993203e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.361000000008275e-06, 4.416000000007081e-06, 4.388999999993537e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999992677e-06, 4.375000000000906e-06, 4.4720000000053606e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.471999999991483e-06, 4.430999999999186e-06, 4.4170000000065546e-06]</msg>
<status status="PASS" starttime="20201112 10:13:41.480" endtime="20201112 10:13:41.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.475" endtime="20201112 10:13:41.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.484" endtime="20201112 10:13:41.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.488" endtime="20201112 10:13:41.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.486" endtime="20201112 10:13:41.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.482" endtime="20201112 10:13:41.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.111" endtime="20201112 10:13:41.508"></status>
</kw>
<msg timestamp="20201112 10:13:41.509" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.516" endtime="20201112 10:13:41.532"></status>
</kw>
<msg timestamp="20201112 10:13:41.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.515" endtime="20201112 10:13:41.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.534" endtime="20201112 10:13:41.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.536" endtime="20201112 10:13:41.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.512" endtime="20201112 10:13:41.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.510" endtime="20201112 10:13:41.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.545" endtime="20201112 10:13:41.831"></status>
</kw>
<msg timestamp="20201112 10:13:41.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:41.544" endtime="20201112 10:13:41.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:41.835" endtime="20201112 10:13:41.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.843" endtime="20201112 10:13:41.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.541" endtime="20201112 10:13:41.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.539" endtime="20201112 10:13:41.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.850" level="INFO">${RESULT} = [{'time': 0.0210095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.021022861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:41.847" endtime="20201112 10:13:41.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:41.864" level="INFO">${OVERHEAD} = {'time': [0.0210095, 0.021022861, 0.021031847, 0.021040306, 0.021053528, 0.021066333, 0.021079694, 0.021092833, 0.021101403, 0.021109847, 0.021124625, 0.021135875, 0.021148264, 0.021160625, 0.02117125...</msg>
<status status="PASS" starttime="20201112 10:13:41.852" endtime="20201112 10:13:41.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.868" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:41.867" endtime="20201112 10:13:41.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.871" level="INFO">VALUE: [4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.387999999997533e-06, 4.430000000003181e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.360999999997867e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 10:13:41.869" endtime="20201112 10:13:41.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.865" endtime="20201112 10:13:41.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.874" endtime="20201112 10:13:41.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.877" endtime="20201112 10:13:41.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.876" endtime="20201112 10:13:41.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.872" endtime="20201112 10:13:41.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.509" endtime="20201112 10:13:41.898"></status>
</kw>
<msg timestamp="20201112 10:13:41.898" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.906" endtime="20201112 10:13:41.924"></status>
</kw>
<msg timestamp="20201112 10:13:41.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.904" endtime="20201112 10:13:41.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.925" endtime="20201112 10:13:41.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.928" endtime="20201112 10:13:41.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.902" endtime="20201112 10:13:41.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.900" endtime="20201112 10:13:41.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.937" endtime="20201112 10:13:42.227"></status>
</kw>
<msg timestamp="20201112 10:13:42.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023074111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.935" endtime="20201112 10:13:42.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023074111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.232" endtime="20201112 10:13:42.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.240" endtime="20201112 10:13:42.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.933" endtime="20201112 10:13:42.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.931" endtime="20201112 10:13:42.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.247" level="INFO">${RESULT} = [{'time': 0.023074111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023088806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:42.244" endtime="20201112 10:13:42.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:42.261" level="INFO">${OVERHEAD} = {'time': [0.023074111, 0.023088806, 0.023103403, 0.023114556, 0.023123417, 0.023132819, 0.023145972, 0.023160042, 0.023173181, 0.023181819, 0.023193583, 0.023203042, 0.023213681, 0.023226264, 0.023237...</msg>
<status status="PASS" starttime="20201112 10:13:42.248" endtime="20201112 10:13:42.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.265" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:42.264" endtime="20201112 10:13:42.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.268" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.402999999996576e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.486000000001461e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.375000000000906e-06, 4.472000000001891e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 10:13:42.266" endtime="20201112 10:13:42.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.262" endtime="20201112 10:13:42.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.271" endtime="20201112 10:13:42.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.275" endtime="20201112 10:13:42.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.274" endtime="20201112 10:13:42.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.270" endtime="20201112 10:13:42.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.899" endtime="20201112 10:13:42.296"></status>
</kw>
<msg timestamp="20201112 10:13:42.296" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.304" endtime="20201112 10:13:42.321"></status>
</kw>
<msg timestamp="20201112 10:13:42.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.302" endtime="20201112 10:13:42.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.323" endtime="20201112 10:13:42.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.326" endtime="20201112 10:13:42.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.300" endtime="20201112 10:13:42.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.298" endtime="20201112 10:13:42.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.335" endtime="20201112 10:13:42.622"></status>
</kw>
<msg timestamp="20201112 10:13:42.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.333" endtime="20201112 10:13:42.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.626" endtime="20201112 10:13:42.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.635" endtime="20201112 10:13:42.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.330" endtime="20201112 10:13:42.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.329" endtime="20201112 10:13:42.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.642" level="INFO">${RESULT} = [{'time': 0.022065361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.022073792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:42.638" endtime="20201112 10:13:42.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:42.655" level="INFO">${OVERHEAD} = {'time': [0.022065361, 0.022073792, 0.02208225, 0.022094847, 0.022106111, 0.022118861, 0.022128042, 0.022141931, 0.022153389, 0.022167139, 0.022180486, 0.022192056, 0.022204444, 0.022213431, 0.0222280...</msg>
<status status="PASS" starttime="20201112 10:13:42.643" endtime="20201112 10:13:42.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.659" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:42.658" endtime="20201112 10:13:42.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.662" level="INFO">VALUE: [4.443999999999282e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.388000000001002e-06, 4.388999999997006e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.402000000000572e-06]</msg>
<status status="PASS" starttime="20201112 10:13:42.660" endtime="20201112 10:13:42.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.656" endtime="20201112 10:13:42.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.665" endtime="20201112 10:13:42.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.668" endtime="20201112 10:13:42.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.667" endtime="20201112 10:13:42.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.663" endtime="20201112 10:13:42.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.297" endtime="20201112 10:13:42.689"></status>
</kw>
<msg timestamp="20201112 10:13:42.690" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.697" endtime="20201112 10:13:42.715"></status>
</kw>
<msg timestamp="20201112 10:13:42.716" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.696" endtime="20201112 10:13:42.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.717" endtime="20201112 10:13:42.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.719" endtime="20201112 10:13:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.693" endtime="20201112 10:13:42.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.691" endtime="20201112 10:13:42.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.728" endtime="20201112 10:13:43.013"></status>
</kw>
<msg timestamp="20201112 10:13:43.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.727" endtime="20201112 10:13:43.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.018" endtime="20201112 10:13:43.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.026" endtime="20201112 10:13:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.724" endtime="20201112 10:13:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.722" endtime="20201112 10:13:43.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.033" level="INFO">${RESULT} = [{'time': 0.020659306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.020669958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.030" endtime="20201112 10:13:43.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:43.047" level="INFO">${OVERHEAD} = {'time': [0.020659306, 0.020669958, 0.020684542, 0.020697903, 0.020712722, 0.020727278, 0.02073775, 0.020746167, 0.020760014, 0.020773875, 0.020786597, 0.020801486, 0.020814222, 0.020825583, 0.0208352...</msg>
<status status="PASS" starttime="20201112 10:13:43.034" endtime="20201112 10:13:43.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.052" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:43.051" endtime="20201112 10:13:43.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.054" level="INFO">VALUE: [4.430999999999186e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.4999999999975615e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.346999999998297e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.346999999998297e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.402000000000572e-06]</msg>
<status status="PASS" starttime="20201112 10:13:43.053" endtime="20201112 10:13:43.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.048" endtime="20201112 10:13:43.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.057" endtime="20201112 10:13:43.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.061" endtime="20201112 10:13:43.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.059" endtime="20201112 10:13:43.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.056" endtime="20201112 10:13:43.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.690" endtime="20201112 10:13:43.082"></status>
</kw>
<msg timestamp="20201112 10:13:43.082" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.090" endtime="20201112 10:13:43.105"></status>
</kw>
<msg timestamp="20201112 10:13:43.105" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.088" endtime="20201112 10:13:43.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.106" endtime="20201112 10:13:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.109" endtime="20201112 10:13:43.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.085" endtime="20201112 10:13:43.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.084" endtime="20201112 10:13:43.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.118" endtime="20201112 10:13:43.404"></status>
</kw>
<msg timestamp="20201112 10:13:43.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.116" endtime="20201112 10:13:43.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.409" endtime="20201112 10:13:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.417" endtime="20201112 10:13:43.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.114" endtime="20201112 10:13:43.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.112" endtime="20201112 10:13:43.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.424" level="INFO">${RESULT} = [{'time': 0.020167667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020181319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.420" endtime="20201112 10:13:43.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:43.437" level="INFO">${OVERHEAD} = {'time': [0.020167667, 0.020181319, 0.020195458, 0.020207167, 0.020216764, 0.020228542, 0.020241361, 0.020256069, 0.020267958, 0.020281417, 0.0202935, 0.020306431, 0.0203205, 0.020331639, 0.020340056,...</msg>
<status status="PASS" starttime="20201112 10:13:43.425" endtime="20201112 10:13:43.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.441" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:43.440" endtime="20201112 10:13:43.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.444" level="INFO">VALUE: [4.403000000000046e-06, 4.416000000000142e-06, 4.485999999997992e-06, 4.417000000003085e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.430000000003181e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.458000000002321e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.3749999999974365e-06, 4.417000000003085e-06, 4.4999999999975615e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.402999999996576e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.473000000001365e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.402000000000572e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 10:13:43.442" endtime="20201112 10:13:43.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.438" endtime="20201112 10:13:43.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.447" endtime="20201112 10:13:43.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.450" endtime="20201112 10:13:43.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.449" endtime="20201112 10:13:43.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.445" endtime="20201112 10:13:43.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.082" endtime="20201112 10:13:43.471"></status>
</kw>
<msg timestamp="20201112 10:13:43.471" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.479" endtime="20201112 10:13:43.497"></status>
</kw>
<msg timestamp="20201112 10:13:43.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.477" endtime="20201112 10:13:43.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.499" endtime="20201112 10:13:43.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.501" endtime="20201112 10:13:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.475" endtime="20201112 10:13:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.473" endtime="20201112 10:13:43.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.511" endtime="20201112 10:13:43.795"></status>
</kw>
<msg timestamp="20201112 10:13:43.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.509" endtime="20201112 10:13:43.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.799" endtime="20201112 10:13:43.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.808" endtime="20201112 10:13:43.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.507" endtime="20201112 10:13:43.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.505" endtime="20201112 10:13:43.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.814" level="INFO">${RESULT} = [{'time': 0.022605944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.022614444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.811" endtime="20201112 10:13:43.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:43.828" level="INFO">${OVERHEAD} = {'time': [0.022605944, 0.022614444, 0.022629264, 0.022641667, 0.022650681, 0.022661167, 0.022675153, 0.022684847, 0.022693931, 0.022708292, 0.022722944, 0.022735028, 0.022747111, 0.022755875, 0.022764...</msg>
<status status="PASS" starttime="20201112 10:13:43.815" endtime="20201112 10:13:43.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.832" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:43.831" endtime="20201112 10:13:43.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.834" level="INFO">VALUE: [4.485999999997992e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.472999999997895e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.401999999997103e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.473000000001365e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.500000000001031e-06, 4.416000000000142e-06, 4.360999999997867e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.445000000002225e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201112 10:13:43.833" endtime="20201112 10:13:43.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.829" endtime="20201112 10:13:43.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.837" endtime="20201112 10:13:43.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.841" endtime="20201112 10:13:43.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.839" endtime="20201112 10:13:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.836" endtime="20201112 10:13:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.472" endtime="20201112 10:13:43.862"></status>
</kw>
<msg timestamp="20201112 10:13:43.862" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.870" endtime="20201112 10:13:43.889"></status>
</kw>
<msg timestamp="20201112 10:13:43.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.868" endtime="20201112 10:13:43.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.892" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.890" endtime="20201112 10:13:43.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.893" endtime="20201112 10:13:43.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.866" endtime="20201112 10:13:43.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.864" endtime="20201112 10:13:43.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.902" endtime="20201112 10:13:44.188"></status>
</kw>
<msg timestamp="20201112 10:13:44.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.901" endtime="20201112 10:13:44.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.193" endtime="20201112 10:13:44.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.201" endtime="20201112 10:13:44.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.898" endtime="20201112 10:13:44.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.896" endtime="20201112 10:13:44.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.208" level="INFO">${RESULT} = [{'time': 0.018825139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018834014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:44.204" endtime="20201112 10:13:44.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:44.221" level="INFO">${OVERHEAD} = {'time': [0.018825139, 0.018834014, 0.018845792, 0.018858986, 0.018873736, 0.018885931, 0.018897833, 0.018907542, 0.018919028, 0.018928611, 0.018938722, 0.018949, 0.018958167, 0.018971722, 0.018980361...</msg>
<status status="PASS" starttime="20201112 10:13:44.209" endtime="20201112 10:13:44.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:44.224" endtime="20201112 10:13:44.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.228" level="INFO">VALUE: [4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.459000000001795e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.402000000000572e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430000000003181e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.430000000003181e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.402000000000572e-06]</msg>
<status status="PASS" starttime="20201112 10:13:44.226" endtime="20201112 10:13:44.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.222" endtime="20201112 10:13:44.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.231" endtime="20201112 10:13:44.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.234" endtime="20201112 10:13:44.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.233" endtime="20201112 10:13:44.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.229" endtime="20201112 10:13:44.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.863" endtime="20201112 10:13:44.255"></status>
</kw>
<msg timestamp="20201112 10:13:44.255" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.263" endtime="20201112 10:13:44.280"></status>
</kw>
<msg timestamp="20201112 10:13:44.281" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.261" endtime="20201112 10:13:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.282" endtime="20201112 10:13:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.284" endtime="20201112 10:13:44.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.259" endtime="20201112 10:13:44.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.257" endtime="20201112 10:13:44.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.294" endtime="20201112 10:13:44.585"></status>
</kw>
<msg timestamp="20201112 10:13:44.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.293" endtime="20201112 10:13:44.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.589" endtime="20201112 10:13:44.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.597" endtime="20201112 10:13:44.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.290" endtime="20201112 10:13:44.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.288" endtime="20201112 10:13:44.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.604" level="INFO">${RESULT} = [{'time': 0.022261208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.022271444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:44.600" endtime="20201112 10:13:44.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:44.618" level="INFO">${OVERHEAD} = {'time': [0.022261208, 0.022271444, 0.022282306, 0.022293167, 0.022303819, 0.022313097, 0.022324875, 0.022336569, 0.02234825, 0.022359542, 0.022371944, 0.022384667, 0.022393236, 0.022402639, 0.0224147...</msg>
<status status="PASS" starttime="20201112 10:13:44.605" endtime="20201112 10:13:44.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.623" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:44.622" endtime="20201112 10:13:44.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.625" level="INFO">VALUE: [4.389000000000476e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.485999999997992e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.445000000002225e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.445000000002225e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.430999999999186e-06]</msg>
<status status="PASS" starttime="20201112 10:13:44.624" endtime="20201112 10:13:44.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.619" endtime="20201112 10:13:44.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.628" endtime="20201112 10:13:44.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.632" endtime="20201112 10:13:44.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.630" endtime="20201112 10:13:44.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.627" endtime="20201112 10:13:44.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.256" endtime="20201112 10:13:44.653"></status>
</kw>
<msg timestamp="20201112 10:13:44.653" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.668" endtime="20201112 10:13:44.682"></status>
</kw>
<msg timestamp="20201112 10:13:44.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.667" endtime="20201112 10:13:44.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.683" endtime="20201112 10:13:44.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.686" endtime="20201112 10:13:44.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.664" endtime="20201112 10:13:44.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.655" endtime="20201112 10:13:44.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.695" endtime="20201112 10:13:44.985"></status>
</kw>
<msg timestamp="20201112 10:13:44.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026760778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026765194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.693" endtime="20201112 10:13:44.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026760778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026765194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.989" endtime="20201112 10:13:44.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.997" endtime="20201112 10:13:44.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.691" endtime="20201112 10:13:45.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.689" endtime="20201112 10:13:45.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.004" level="INFO">${RESULT} = [{'time': 0.026765194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.026774403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.001" endtime="20201112 10:13:45.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:45.018" level="INFO">${OVERHEAD} = {'time': [0.026765194, 0.026774403, 0.026786819, 0.026798278, 0.026807681, 0.026821653, 0.026835014, 0.026844708, 0.026853694, 0.026865903, 0.026879958, 0.026892486, 0.026905722, 0.026918861, 0.026932...</msg>
<status status="PASS" starttime="20201112 10:13:45.005" endtime="20201112 10:13:45.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.022" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:45.021" endtime="20201112 10:13:45.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.025" level="INFO">VALUE: [4.416000000000142e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.500000000001031e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.486000000001461e-06, 4.402000000000572e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430000000003181e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.388999999997006e-06]</msg>
<status status="PASS" starttime="20201112 10:13:45.023" endtime="20201112 10:13:45.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.019" endtime="20201112 10:13:45.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.028" endtime="20201112 10:13:45.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.031" endtime="20201112 10:13:45.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.030" endtime="20201112 10:13:45.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.026" endtime="20201112 10:13:45.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.653" endtime="20201112 10:13:45.052"></status>
</kw>
<msg timestamp="20201112 10:13:45.053" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.060" endtime="20201112 10:13:45.075"></status>
</kw>
<msg timestamp="20201112 10:13:45.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.059" endtime="20201112 10:13:45.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.076" endtime="20201112 10:13:45.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.079" endtime="20201112 10:13:45.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.056" endtime="20201112 10:13:45.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.054" endtime="20201112 10:13:45.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.088" endtime="20201112 10:13:45.373"></status>
</kw>
<msg timestamp="20201112 10:13:45.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018883139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.086" endtime="20201112 10:13:45.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018883139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.377" endtime="20201112 10:13:45.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.385" endtime="20201112 10:13:45.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.084" endtime="20201112 10:13:45.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.082" endtime="20201112 10:13:45.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.392" level="INFO">${RESULT} = [{'time': 0.018883139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018893819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.389" endtime="20201112 10:13:45.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:45.405" level="INFO">${OVERHEAD} = {'time': [0.018883139, 0.018893819, 0.018908056, 0.018922069, 0.018933819, 0.018942264, 0.018953542, 0.018966278, 0.018979222, 0.018992861, 0.019001931, 0.019015167, 0.019028319, 0.019042917, 0.019054...</msg>
<status status="PASS" starttime="20201112 10:13:45.393" endtime="20201112 10:13:45.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.410" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:45.409" endtime="20201112 10:13:45.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.412" level="INFO">VALUE: [4.430999999999186e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.415999999996673e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.444000000002751e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.3749999999974365e-06]</msg>
<status status="PASS" starttime="20201112 10:13:45.411" endtime="20201112 10:13:45.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.406" endtime="20201112 10:13:45.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.416" endtime="20201112 10:13:45.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.419" endtime="20201112 10:13:45.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.418" endtime="20201112 10:13:45.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.414" endtime="20201112 10:13:45.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.053" endtime="20201112 10:13:45.440"></status>
</kw>
<msg timestamp="20201112 10:13:45.440" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.448" endtime="20201112 10:13:45.467"></status>
</kw>
<msg timestamp="20201112 10:13:45.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.447" endtime="20201112 10:13:45.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.470" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.469" endtime="20201112 10:13:45.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.471" endtime="20201112 10:13:45.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.444" endtime="20201112 10:13:45.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.442" endtime="20201112 10:13:45.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.480" endtime="20201112 10:13:45.767"></status>
</kw>
<msg timestamp="20201112 10:13:45.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.479" endtime="20201112 10:13:45.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.771" endtime="20201112 10:13:45.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.779" endtime="20201112 10:13:45.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.476" endtime="20201112 10:13:45.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.474" endtime="20201112 10:13:45.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.786" level="INFO">${RESULT} = [{'time': 0.022857292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.022870417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.782" endtime="20201112 10:13:45.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:45.799" level="INFO">${OVERHEAD} = {'time': [0.022857292, 0.022870417, 0.022883125, 0.022894181, 0.022907708, 0.022916986, 0.022931069, 0.022942306, 0.022955764, 0.022965444, 0.0229795, 0.022989111, 0.023002556, 0.023013306, 0.02302584...</msg>
<status status="PASS" starttime="20201112 10:13:45.787" endtime="20201112 10:13:45.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.803" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:45.802" endtime="20201112 10:13:45.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.806" level="INFO">VALUE: [4.431000000002655e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.360999999997867e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.459000000001795e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.346999999998297e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 10:13:45.804" endtime="20201112 10:13:45.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.800" endtime="20201112 10:13:45.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.809" endtime="20201112 10:13:45.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.813" endtime="20201112 10:13:45.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.811" endtime="20201112 10:13:45.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.808" endtime="20201112 10:13:45.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.441" endtime="20201112 10:13:45.834"></status>
</kw>
<msg timestamp="20201112 10:13:45.834" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.842" endtime="20201112 10:13:45.858"></status>
</kw>
<msg timestamp="20201112 10:13:45.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.840" endtime="20201112 10:13:45.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.859" endtime="20201112 10:13:45.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.862" endtime="20201112 10:13:45.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.837" endtime="20201112 10:13:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.836" endtime="20201112 10:13:45.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.871" endtime="20201112 10:13:46.159"></status>
</kw>
<msg timestamp="20201112 10:13:46.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.869" endtime="20201112 10:13:46.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.163" endtime="20201112 10:13:46.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.171" endtime="20201112 10:13:46.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.867" endtime="20201112 10:13:46.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.865" endtime="20201112 10:13:46.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.178" level="INFO">${RESULT} = [{'time': 0.021409847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.02141925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:46.175" endtime="20201112 10:13:46.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:46.193" level="INFO">${OVERHEAD} = {'time': [0.021409847, 0.02141925, 0.021430361, 0.021442097, 0.021451083, 0.021459667, 0.021471819, 0.021483708, 0.021498125, 0.021507264, 0.021519625, 0.021532153, 0.021546222, 0.021561069, 0.0215727...</msg>
<status status="PASS" starttime="20201112 10:13:46.179" endtime="20201112 10:13:46.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.197" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:46.196" endtime="20201112 10:13:46.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.199" level="INFO">VALUE: [4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.471999999998422e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.332999999998727e-06, 4.471999999998422e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.417000000003085e-06, 4.401999999997103e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.402999999996576e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 10:13:46.198" endtime="20201112 10:13:46.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.194" endtime="20201112 10:13:46.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.203" endtime="20201112 10:13:46.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.207" endtime="20201112 10:13:46.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.205" endtime="20201112 10:13:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.201" endtime="20201112 10:13:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.834" endtime="20201112 10:13:46.227"></status>
</kw>
<msg timestamp="20201112 10:13:46.228" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.235" endtime="20201112 10:13:46.250"></status>
</kw>
<msg timestamp="20201112 10:13:46.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.234" endtime="20201112 10:13:46.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.252" endtime="20201112 10:13:46.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.254" endtime="20201112 10:13:46.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.231" endtime="20201112 10:13:46.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.229" endtime="20201112 10:13:46.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.263" endtime="20201112 10:13:46.553"></status>
</kw>
<msg timestamp="20201112 10:13:46.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019434917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.262" endtime="20201112 10:13:46.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019434917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.558" endtime="20201112 10:13:46.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.566" endtime="20201112 10:13:46.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.259" endtime="20201112 10:13:46.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.258" endtime="20201112 10:13:46.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.573" level="INFO">${RESULT} = [{'time': 0.019434917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.019443361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:46.569" endtime="20201112 10:13:46.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:46.586" level="INFO">${OVERHEAD} = {'time': [0.019434917, 0.019443361, 0.019453236, 0.019467194, 0.019481361, 0.019492819, 0.019504222, 0.019512806, 0.019523764, 0.01953325, 0.019542653, 0.019555458, 0.019569028, 0.019582597, 0.0195912...</msg>
<status status="PASS" starttime="20201112 10:13:46.574" endtime="20201112 10:13:46.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.590" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:46.589" endtime="20201112 10:13:46.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.593" level="INFO">VALUE: [4.430999999999186e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.472000000001891e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.333000000002196e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.485999999997992e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.458999999998325e-06]</msg>
<status status="PASS" starttime="20201112 10:13:46.591" endtime="20201112 10:13:46.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.587" endtime="20201112 10:13:46.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.596" endtime="20201112 10:13:46.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.600" endtime="20201112 10:13:46.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.598" endtime="20201112 10:13:46.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.595" endtime="20201112 10:13:46.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.228" endtime="20201112 10:13:46.621"></status>
</kw>
<msg timestamp="20201112 10:13:46.621" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.629" endtime="20201112 10:13:46.647"></status>
</kw>
<msg timestamp="20201112 10:13:46.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.627" endtime="20201112 10:13:46.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.648" endtime="20201112 10:13:46.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.651" endtime="20201112 10:13:46.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.624" endtime="20201112 10:13:46.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.623" endtime="20201112 10:13:46.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.660" endtime="20201112 10:13:46.949"></status>
</kw>
<msg timestamp="20201112 10:13:46.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.658" endtime="20201112 10:13:46.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.953" endtime="20201112 10:13:46.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.961" endtime="20201112 10:13:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.656" endtime="20201112 10:13:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.654" endtime="20201112 10:13:46.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.968" level="INFO">${RESULT} = [{'time': 0.023193264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.023206514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:46.964" endtime="20201112 10:13:46.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:46.981" level="INFO">${OVERHEAD} = {'time': [0.023193264, 0.023206514, 0.023216403, 0.023228181, 0.023242028, 0.023252278, 0.023265431, 0.023276569, 0.02329125, 0.023305125, 0.023318278, 0.023328069, 0.023341431, 0.023354875, 0.0233684...</msg>
<status status="PASS" starttime="20201112 10:13:46.969" endtime="20201112 10:13:46.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.985" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:46.984" endtime="20201112 10:13:46.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.988" level="INFO">VALUE: [4.417000000003085e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.33400000000167e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.459000000001795e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.4999999999975615e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.4449999999987555e-06]</msg>
<status status="PASS" starttime="20201112 10:13:46.987" endtime="20201112 10:13:46.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.982" endtime="20201112 10:13:46.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.992" endtime="20201112 10:13:46.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.995" endtime="20201112 10:13:47.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.994" endtime="20201112 10:13:47.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.990" endtime="20201112 10:13:47.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.621" endtime="20201112 10:13:47.016"></status>
</kw>
<msg timestamp="20201112 10:13:47.016" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.024" endtime="20201112 10:13:47.041"></status>
</kw>
<msg timestamp="20201112 10:13:47.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.023" endtime="20201112 10:13:47.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.042" endtime="20201112 10:13:47.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.045" endtime="20201112 10:13:47.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.020" endtime="20201112 10:13:47.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.018" endtime="20201112 10:13:47.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.054" endtime="20201112 10:13:47.341"></status>
</kw>
<msg timestamp="20201112 10:13:47.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.052" endtime="20201112 10:13:47.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.345" endtime="20201112 10:13:47.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.354" endtime="20201112 10:13:47.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.050" endtime="20201112 10:13:47.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.048" endtime="20201112 10:13:47.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.361" level="INFO">${RESULT} = [{'time': 0.019613264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.019624319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:47.357" endtime="20201112 10:13:47.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:47.374" level="INFO">${OVERHEAD} = {'time': [0.019613264, 0.019624319, 0.019636722, 0.01964575, 0.019654278, 0.019665639, 0.019679917, 0.019693764, 0.019705528, 0.019714139, 0.019724014, 0.019733819, 0.019747181, 0.019757083, 0.0197659...</msg>
<status status="PASS" starttime="20201112 10:13:47.362" endtime="20201112 10:13:47.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:47.377" endtime="20201112 10:13:47.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.381" level="INFO">VALUE: [4.416999999999616e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.471999999998422e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.417000000003085e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3199999999986305e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 10:13:47.379" endtime="20201112 10:13:47.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.375" endtime="20201112 10:13:47.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.384" endtime="20201112 10:13:47.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.388" endtime="20201112 10:13:47.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.386" endtime="20201112 10:13:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.383" endtime="20201112 10:13:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.017" endtime="20201112 10:13:47.409"></status>
</kw>
<msg timestamp="20201112 10:13:47.409" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.417" endtime="20201112 10:13:47.430"></status>
</kw>
<msg timestamp="20201112 10:13:47.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.415" endtime="20201112 10:13:47.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.433" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.432" endtime="20201112 10:13:47.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.434" endtime="20201112 10:13:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.412" endtime="20201112 10:13:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.411" endtime="20201112 10:13:47.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.443" endtime="20201112 10:13:47.728"></status>
</kw>
<msg timestamp="20201112 10:13:47.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018910153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.442" endtime="20201112 10:13:47.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018910153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.732" endtime="20201112 10:13:47.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.740" endtime="20201112 10:13:47.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.439" endtime="20201112 10:13:47.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.437" endtime="20201112 10:13:47.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.747" level="INFO">${RESULT} = [{'time': 0.018910153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018919556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:47.744" endtime="20201112 10:13:47.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:47.762" level="INFO">${OVERHEAD} = {'time': [0.018910153, 0.018919556, 0.018929167, 0.018938153, 0.0189515, 0.018965069, 0.018977597, 0.018989639, 0.019000736, 0.019015264, 0.019028708, 0.019042153, 0.019052847, 0.019065764, 0.01907566...</msg>
<status status="PASS" starttime="20201112 10:13:47.748" endtime="20201112 10:13:47.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.766" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:47.765" endtime="20201112 10:13:47.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.768" level="INFO">VALUE: [4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.471999999998422e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 10:13:47.767" endtime="20201112 10:13:47.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.762" endtime="20201112 10:13:47.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.772" endtime="20201112 10:13:47.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.776" endtime="20201112 10:13:47.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.774" endtime="20201112 10:13:47.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.770" endtime="20201112 10:13:47.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.409" endtime="20201112 10:13:47.796"></status>
</kw>
<msg timestamp="20201112 10:13:47.797" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.804" endtime="20201112 10:13:47.823"></status>
</kw>
<msg timestamp="20201112 10:13:47.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.803" endtime="20201112 10:13:47.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.824" endtime="20201112 10:13:47.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.827" endtime="20201112 10:13:47.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.800" endtime="20201112 10:13:47.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.798" endtime="20201112 10:13:47.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.836" endtime="20201112 10:13:48.124"></status>
</kw>
<msg timestamp="20201112 10:13:48.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:47.834" endtime="20201112 10:13:48.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:48.128" endtime="20201112 10:13:48.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.136" endtime="20201112 10:13:48.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.832" endtime="20201112 10:13:48.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.830" endtime="20201112 10:13:48.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.143" level="INFO">${RESULT} = [{'time': 0.022962944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.022973889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.140" endtime="20201112 10:13:48.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.156" level="INFO">${OVERHEAD} = {'time': [0.022962944, 0.022973889, 0.022986278, 0.023000264, 0.023010597, 0.023025069, 0.023037569, 0.023051347, 0.023060625, 0.023075528, 0.023084792, 0.023098139, 0.023108861, 0.023123306, 0.023132...</msg>
<status status="PASS" starttime="20201112 10:13:48.144" endtime="20201112 10:13:48.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.161" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:48.160" endtime="20201112 10:13:48.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.163" level="INFO">VALUE: [4.443999999999282e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.388000000001002e-06, 4.402000000000572e-06, 4.500000000001031e-06, 4.430999999999186e-06, 4.445000000002225e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 10:13:48.162" endtime="20201112 10:13:48.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.157" endtime="20201112 10:13:48.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.167" endtime="20201112 10:13:48.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.170" endtime="20201112 10:13:48.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.169" endtime="20201112 10:13:48.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.165" endtime="20201112 10:13:48.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.797" endtime="20201112 10:13:48.191"></status>
</kw>
<msg timestamp="20201112 10:13:48.191" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.199" endtime="20201112 10:13:48.219"></status>
</kw>
<msg timestamp="20201112 10:13:48.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.198" endtime="20201112 10:13:48.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.221" endtime="20201112 10:13:48.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.223" endtime="20201112 10:13:48.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.195" endtime="20201112 10:13:48.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.193" endtime="20201112 10:13:48.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.233" endtime="20201112 10:13:48.518"></status>
</kw>
<msg timestamp="20201112 10:13:48.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.231" endtime="20201112 10:13:48.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.523" endtime="20201112 10:13:48.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.531" endtime="20201112 10:13:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.229" endtime="20201112 10:13:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.227" endtime="20201112 10:13:48.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.538" level="INFO">${RESULT} = [{'time': 0.020067403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.020078792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.534" endtime="20201112 10:13:48.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.551" level="INFO">${OVERHEAD} = {'time': [0.020067403, 0.020078792, 0.020088167, 0.020099417, 0.020112028, 0.020122889, 0.020137806, 0.020152181, 0.020164333, 0.020174861, 0.020184847, 0.020196111, 0.020207583, 0.020220403, 0.020230...</msg>
<status status="PASS" starttime="20201112 10:13:48.539" endtime="20201112 10:13:48.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.555" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:48.554" endtime="20201112 10:13:48.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.558" level="INFO">VALUE: [4.389000000000476e-06, 4.445000000002225e-06, 4.459000000001795e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.444000000002751e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.500000000001031e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06]</msg>
<status status="PASS" starttime="20201112 10:13:48.556" endtime="20201112 10:13:48.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.552" endtime="20201112 10:13:48.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.561" endtime="20201112 10:13:48.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.565" endtime="20201112 10:13:48.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.563" endtime="20201112 10:13:48.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.560" endtime="20201112 10:13:48.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.192" endtime="20201112 10:13:48.586"></status>
</kw>
<msg timestamp="20201112 10:13:48.586" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.593" endtime="20201112 10:13:48.611"></status>
</kw>
<msg timestamp="20201112 10:13:48.611" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.592" endtime="20201112 10:13:48.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.612" endtime="20201112 10:13:48.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.615" endtime="20201112 10:13:48.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.589" endtime="20201112 10:13:48.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.588" endtime="20201112 10:13:48.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.624" endtime="20201112 10:13:48.910"></status>
</kw>
<msg timestamp="20201112 10:13:48.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.622" endtime="20201112 10:13:48.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.914" endtime="20201112 10:13:48.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.923" endtime="20201112 10:13:48.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.620" endtime="20201112 10:13:48.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.618" endtime="20201112 10:13:48.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.930" level="INFO">${RESULT} = [{'time': 0.022529556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.022541764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.926" endtime="20201112 10:13:48.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.943" level="INFO">${OVERHEAD} = {'time': [0.022529556, 0.022541764, 0.022551861, 0.022561764, 0.022575208, 0.022586764, 0.022601056, 0.022610458, 0.022619847, 0.0226305, 0.022640639, 0.022649597, 0.022664389, 0.022678458, 0.02268834...</msg>
<status status="PASS" starttime="20201112 10:13:48.931" endtime="20201112 10:13:48.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.947" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:48.946" endtime="20201112 10:13:48.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.950" level="INFO">VALUE: [4.389000000000476e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.417000000003085e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.319000000002626e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.4999999999975615e-06, 4.361000000001336e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.401999999997103e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 10:13:48.948" endtime="20201112 10:13:48.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.944" endtime="20201112 10:13:48.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.954" endtime="20201112 10:13:48.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.957" endtime="20201112 10:13:48.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.956" endtime="20201112 10:13:48.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.952" endtime="20201112 10:13:48.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.586" endtime="20201112 10:13:48.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.109" endtime="20201112 10:13:48.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.983" endtime="20201112 10:13:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.981" endtime="20201112 10:13:49.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.980" endtime="20201112 10:13:49.003"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:41.027" endtime="20201112 10:13:49.003" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.011" endtime="20201112 10:13:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.009" endtime="20201112 10:13:49.031"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.044" endtime="20201112 10:13:49.070"></status>
</kw>
<msg timestamp="20201112 10:13:49.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.042" endtime="20201112 10:13:49.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.071" endtime="20201112 10:13:49.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:49.074" endtime="20201112 10:13:49.076"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.040" endtime="20201112 10:13:49.077"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.037" endtime="20201112 10:13:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.036" endtime="20201112 10:13:49.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:49.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:49.081" endtime="20201112 10:13:49.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.079" endtime="20201112 10:13:49.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.035" endtime="20201112 10:13:49.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.035" endtime="20201112 10:13:49.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.084" endtime="20201112 10:13:49.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.033" endtime="20201112 10:13:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.032" endtime="20201112 10:13:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.008" endtime="20201112 10:13:49.087"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.097" endtime="20201112 10:13:49.119"></status>
</kw>
<msg timestamp="20201112 10:13:49.120" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.094" endtime="20201112 10:13:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.122" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.121" endtime="20201112 10:13:49.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.123" endtime="20201112 10:13:49.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.092" endtime="20201112 10:13:49.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.089" endtime="20201112 10:13:49.126"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.128" endtime="20201112 10:13:49.130"></status>
</kw>
<msg timestamp="20201112 10:13:49.130" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:49.127" endtime="20201112 10:13:49.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.134" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:49.133" endtime="20201112 10:13:49.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.137" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:49.136" endtime="20201112 10:13:49.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.131" endtime="20201112 10:13:49.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.141" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:49.140" endtime="20201112 10:13:49.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.143" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:49.142" endtime="20201112 10:13:49.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.138" endtime="20201112 10:13:49.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.151" endtime="20201112 10:13:49.438"></status>
</kw>
<msg timestamp="20201112 10:13:49.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079778417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079786319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.149" endtime="20201112 10:13:49.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079778417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079786319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.442" endtime="20201112 10:13:49.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.451" endtime="20201112 10:13:49.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.147" endtime="20201112 10:13:49.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.145" endtime="20201112 10:13:49.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.457" level="INFO">${RESULT} = [{'time': 0.079786319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.901999999990195e-06, 'source_diff': 7.901999999990195e-06}, {'time': 0.079803986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:49.454" endtime="20201112 10:13:49.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:49.471" level="INFO">${OVERHEAD} = {'time': [0.079786319, 0.079803986, 0.079819222, 0.079831833, 0.079848806, 0.079866944, 0.079880944, 0.079893736, 0.079912097, 0.079930639, 0.079944625, 0.079962917, 0.079974986, 0.079989986, 0.080004...</msg>
<status status="PASS" starttime="20201112 10:13:49.458" endtime="20201112 10:13:49.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.476" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:49.475" endtime="20201112 10:13:49.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.479" level="INFO">VALUE: [7.901999999990195e-06, 8.054999999992929e-06, 8.054999999992929e-06, 7.972000000008861e-06, 8.055999999992403e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.055000000006807e-06, 8.068999999999438e-06, 8.055999999992403e-06, 8.083000000005947e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.083000000005947e-06, 8.054999999992929e-06, 8.05600000000628e-06, 8.05600000000628e-06, 8.096999999998578e-06, 8.08400000000542e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.05600000000628e-06, 8.111000000005086e-06, 8.068999999999438e-06, 8.041000000000298e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.111000000005086e-06, 8.026999999993789e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.055999999992403e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.055999999992403e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.055000000006807e-06, 8.068999999999438e-06, 8.055999999992403e-06, 7.972000000008861e-06]</msg>
<status status="PASS" starttime="20201112 10:13:49.477" endtime="20201112 10:13:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.472" endtime="20201112 10:13:49.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.482" endtime="20201112 10:13:49.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.485" endtime="20201112 10:13:49.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.484" endtime="20201112 10:13:49.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.480" endtime="20201112 10:13:49.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.087" endtime="20201112 10:13:49.506"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:49.005" endtime="20201112 10:13:49.507" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.514" endtime="20201112 10:13:49.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.512" endtime="20201112 10:13:49.534"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.548" endtime="20201112 10:13:49.576"></status>
</kw>
<msg timestamp="20201112 10:13:49.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.546" endtime="20201112 10:13:49.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.578" endtime="20201112 10:13:49.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.582" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:49.580" endtime="20201112 10:13:49.583"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.543" endtime="20201112 10:13:49.583"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.541" endtime="20201112 10:13:49.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.539" endtime="20201112 10:13:49.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:49.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:49.587" endtime="20201112 10:13:49.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.585" endtime="20201112 10:13:49.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.539" endtime="20201112 10:13:49.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.538" endtime="20201112 10:13:49.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.590" endtime="20201112 10:13:49.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.537" endtime="20201112 10:13:49.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.535" endtime="20201112 10:13:49.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.511" endtime="20201112 10:13:49.592"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.602" endtime="20201112 10:13:49.683"></status>
</kw>
<msg timestamp="20201112 10:13:49.684" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.600" endtime="20201112 10:13:49.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.686" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.685" endtime="20201112 10:13:49.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.687" endtime="20201112 10:13:49.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.598" endtime="20201112 10:13:49.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.595" endtime="20201112 10:13:49.690"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.692" endtime="20201112 10:13:49.694"></status>
</kw>
<msg timestamp="20201112 10:13:49.694" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:49.691" endtime="20201112 10:13:49.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.698" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:49.697" endtime="20201112 10:13:49.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.700" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:49.699" endtime="20201112 10:13:49.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.695" endtime="20201112 10:13:49.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.705" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:49.704" endtime="20201112 10:13:49.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.707" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:49.706" endtime="20201112 10:13:49.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.702" endtime="20201112 10:13:49.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.714" endtime="20201112 10:13:50.009"></status>
</kw>
<msg timestamp="20201112 10:13:50.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080205653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080247181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.713" endtime="20201112 10:13:50.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080205653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080247181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.013" endtime="20201112 10:13:50.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.021" endtime="20201112 10:13:50.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.710" endtime="20201112 10:13:50.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.708" endtime="20201112 10:13:50.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.028" level="INFO">${RESULT} = [{'time': 0.080247181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152799999999901e-05, 'source_diff': 4.152799999999901e-05}, {'time': 0.081489069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:50.025" endtime="20201112 10:13:50.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:50.041" level="INFO">${OVERHEAD} = {'time': [0.080247181, 0.081489069, 0.082727333, 0.083963931, 0.085203528, 0.086445375, 0.087682708, 0.088924264, 0.090167125, 0.091406653, 0.092647319, 0.093886208, 0.095126681, 0.096367764, 0.097606...</msg>
<status status="PASS" starttime="20201112 10:13:50.029" endtime="20201112 10:13:50.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.047" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:50.046" endtime="20201112 10:13:50.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.049" level="INFO">VALUE: [4.152799999999901e-05, 4.145799999999422e-05, 4.148599999999336e-05, 4.157000000000466e-05, 4.1445000000001064e-05, 4.14580000000081e-05, 4.147200000000073e-05, 4.14580000000081e-05, 4.1389000000002785e-05, 4.148600000000724e-05, 4.14580000000081e-05, 4.1526999999999537e-05, 4.143100000000843e-05, 4.1374999999996276e-05, 4.1417000000001924e-05, 4.1473000000000204e-05, 4.1389000000002785e-05, 4.1361000000003645e-05, 4.1403000000009293e-05, 4.144400000000159e-05, 4.145799999999422e-05, 4.141600000000245e-05, 4.1417000000001924e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.1417000000001924e-05, 4.1417000000001924e-05, 4.147200000000073e-05, 4.141600000000245e-05, 4.148599999999336e-05, 4.141600000000245e-05, 4.142999999999508e-05, 4.1333000000004505e-05, 4.1375000000010154e-05, 4.140200000000982e-05, 4.145799999999422e-05, 4.141599999998857e-05, 4.1389000000002785e-05, 4.148600000000724e-05, 4.145900000002145e-05, 4.136100000001752e-05, 4.1389000000002785e-05, 4.141599999998857e-05, 4.1389000000002785e-05, 4.147200000001461e-05, 4.147199999998685e-05, 4.145800000002198e-05, 4.138800000000331e-05, 4.147200000001461e-05, 4.145799999999422e-05]</msg>
<status status="PASS" starttime="20201112 10:13:50.048" endtime="20201112 10:13:50.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.043" endtime="20201112 10:13:50.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.053" endtime="20201112 10:13:50.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.056" endtime="20201112 10:13:50.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.055" endtime="20201112 10:13:50.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.051" endtime="20201112 10:13:50.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.593" endtime="20201112 10:13:50.077"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:49.508" endtime="20201112 10:13:50.078" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.085" endtime="20201112 10:13:50.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.084" endtime="20201112 10:13:50.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.119" endtime="20201112 10:13:50.145"></status>
</kw>
<msg timestamp="20201112 10:13:50.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.117" endtime="20201112 10:13:50.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.148" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.147" endtime="20201112 10:13:50.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.151" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:50.150" endtime="20201112 10:13:50.152"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:50.114" endtime="20201112 10:13:50.152"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:50.112" endtime="20201112 10:13:50.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.110" endtime="20201112 10:13:50.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:50.157" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:50.156" endtime="20201112 10:13:50.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.154" endtime="20201112 10:13:50.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.110" endtime="20201112 10:13:50.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.109" endtime="20201112 10:13:50.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.159" endtime="20201112 10:13:50.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.108" endtime="20201112 10:13:50.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.106" endtime="20201112 10:13:50.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.082" endtime="20201112 10:13:50.162"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.171" endtime="20201112 10:13:50.410"></status>
</kw>
<msg timestamp="20201112 10:13:50.411" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.170" endtime="20201112 10:13:50.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.414" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.412" endtime="20201112 10:13:50.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.415" endtime="20201112 10:13:50.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.167" endtime="20201112 10:13:50.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.165" endtime="20201112 10:13:50.417"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.419" endtime="20201112 10:13:50.421"></status>
</kw>
<msg timestamp="20201112 10:13:50.421" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:50.418" endtime="20201112 10:13:50.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.426" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:50.424" endtime="20201112 10:13:50.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.428" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:50.427" endtime="20201112 10:13:50.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.422" endtime="20201112 10:13:50.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.432" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:50.431" endtime="20201112 10:13:50.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.435" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:50.433" endtime="20201112 10:13:50.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.429" endtime="20201112 10:13:50.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.442" endtime="20201112 10:13:50.734"></status>
</kw>
<msg timestamp="20201112 10:13:50.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084679375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.440" endtime="20201112 10:13:50.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084602611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084679375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.738" endtime="20201112 10:13:50.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.746" endtime="20201112 10:13:50.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.438" endtime="20201112 10:13:50.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.436" endtime="20201112 10:13:50.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.753" level="INFO">${RESULT} = [{'time': 0.084679375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.676400000000694e-05, 'source_diff': 7.676400000000694e-05}, {'time': 0.088986347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:50.749" endtime="20201112 10:13:50.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:50.766" level="INFO">${OVERHEAD} = {'time': [0.084679375, 0.088986347, 0.093295111, 0.097603736, 0.101915181, 0.106226181, 0.110537903, 0.114852139, 0.119160347, 0.123473806, 0.127782819, 0.132092931, 0.136402458, 0.140711028, 0.145019...</msg>
<status status="PASS" starttime="20201112 10:13:50.754" endtime="20201112 10:13:50.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.771" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:13:50.770" endtime="20201112 10:13:50.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.773" level="INFO">VALUE: [7.676400000000694e-05, 7.627799999999907e-05, 7.613900000000284e-05, 7.638899999999615e-05, 7.634799999998998e-05, 7.636199999999649e-05, 7.613900000000284e-05, 7.632000000000472e-05, 7.631900000000524e-05, 7.632000000000472e-05, 7.626299999999309e-05, 7.640300000000266e-05, 7.622200000001467e-05, 7.633399999998347e-05, 7.608300000000456e-05, 7.638900000001003e-05, 7.636100000002477e-05, 7.64169999999953e-05, 7.640300000000266e-05, 7.631999999999084e-05, 7.626399999999256e-05, 7.636099999999701e-05, 7.63750000000174e-05, 7.636099999999701e-05, 7.631899999999137e-05, 7.6332999999984e-05, 7.60969999999972e-05, 7.624999999999993e-05, 7.640300000000266e-05, 7.631899999999137e-05, 7.631900000001912e-05, 7.630599999999821e-05, 7.624999999999993e-05, 7.611099999998983e-05, 7.636100000002477e-05, 7.63750000000174e-05, 7.627799999998519e-05, 7.615299999999547e-05, 7.624999999999993e-05, 7.638900000001003e-05, 7.62360000000073e-05, 7.608300000000456e-05, 7.626400000004807e-05, 7.62780000000407e-05, 7.626399999999256e-05, 7.629200000003333e-05, 7.633400000001123e-05, 7.63750000000174e-05, 7.637499999996189e-05, 7.627799999998519e-05]</msg>
<status status="PASS" starttime="20201112 10:13:50.772" endtime="20201112 10:13:50.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.767" endtime="20201112 10:13:50.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.777" endtime="20201112 10:13:50.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.780" endtime="20201112 10:13:50.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.779" endtime="20201112 10:13:50.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.775" endtime="20201112 10:13:50.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.163" endtime="20201112 10:13:50.801"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:50.079" endtime="20201112 10:13:50.802" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.809" endtime="20201112 10:13:50.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.808" endtime="20201112 10:13:50.831"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.861" endtime="20201112 10:13:50.887"></status>
</kw>
<msg timestamp="20201112 10:13:50.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.857" endtime="20201112 10:13:50.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.891" endtime="20201112 10:13:50.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.900" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:50.896" endtime="20201112 10:13:50.901"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:50.850" endtime="20201112 10:13:50.902"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:50.845" endtime="20201112 10:13:50.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.842" endtime="20201112 10:13:50.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:50.911" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:50.910" endtime="20201112 10:13:50.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.906" endtime="20201112 10:13:50.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.840" endtime="20201112 10:13:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.839" endtime="20201112 10:13:50.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.916" endtime="20201112 10:13:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.836" endtime="20201112 10:13:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.833" endtime="20201112 10:13:50.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.806" endtime="20201112 10:13:50.921"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.933" endtime="20201112 10:13:50.953"></status>
</kw>
<msg timestamp="20201112 10:13:50.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.931" endtime="20201112 10:13:50.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.957" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.955" endtime="20201112 10:13:50.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.958" endtime="20201112 10:13:50.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.929" endtime="20201112 10:13:50.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.927" endtime="20201112 10:13:50.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.962" endtime="20201112 10:13:50.964"></status>
</kw>
<msg timestamp="20201112 10:13:50.965" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:50.961" endtime="20201112 10:13:50.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.969" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:50.968" endtime="20201112 10:13:50.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.971" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:50.970" endtime="20201112 10:13:50.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.965" endtime="20201112 10:13:50.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.975" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:50.974" endtime="20201112 10:13:50.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.978" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:50.976" endtime="20201112 10:13:50.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.972" endtime="20201112 10:13:50.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.988" endtime="20201112 10:13:51.282"></status>
</kw>
<msg timestamp="20201112 10:13:51.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115538486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.983" endtime="20201112 10:13:51.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115538486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.287" endtime="20201112 10:13:51.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.295" endtime="20201112 10:13:51.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.981" endtime="20201112 10:13:51.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.979" endtime="20201112 10:13:51.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.302" level="INFO">${RESULT} = [{'time': 0.115539958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.11555475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:13:51.299" endtime="20201112 10:13:51.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:51.316" level="INFO">${OVERHEAD} = {'time': [0.115539958, 0.11555475, 0.115570958, 0.115584903, 0.115601861, 0.115618, 0.115636111, 0.115652542, 0.115668292, 0.115685681, 0.115702097, 0.115721333, 0.115734542, 0.115753611, 0.115768069,...</msg>
<status status="PASS" starttime="20201112 10:13:51.303" endtime="20201112 10:13:51.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.320" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:51.319" endtime="20201112 10:13:51.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.323" level="INFO">VALUE: [1.4720000000023603e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4579999999958515e-06, 1.4720000000023603e-06, 1.473000000001834e-06, 1.5420000000071488e-06, 1.4029999999970455e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.4859999999949913e-06, 1.5000000000015001e-06, 1.4720000000023603e-06, 1.473000000001834e-06, 1.5550000000003061e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.4859999999949913e-06, 1.473000000001834e-06, 1.4859999999949913e-06, 1.459000000009203e-06, 1.5000000000015001e-06, 1.4859999999949913e-06, 1.4579999999958515e-06, 1.4720000000023603e-06, 1.4299999999967117e-06, 1.4720000000023603e-06, 1.473000000001834e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4579999999958515e-06, 1.5000000000015001e-06, 1.473000000001834e-06, 1.4579999999958515e-06, 1.4999999999876223e-06, 1.4860000000088691e-06, 1.4719999999884825e-06, 1.4870000000083428e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.473000000001834e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.5420000000071488e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4859999999949913e-06]</msg>
<status status="PASS" starttime="20201112 10:13:51.321" endtime="20201112 10:13:51.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.317" endtime="20201112 10:13:51.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.326" endtime="20201112 10:13:51.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.330" endtime="20201112 10:13:51.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.328" endtime="20201112 10:13:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.324" endtime="20201112 10:13:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.923" endtime="20201112 10:13:51.350"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:50.803" endtime="20201112 10:13:51.351" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.358" endtime="20201112 10:13:51.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.357" endtime="20201112 10:13:51.379"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.392" endtime="20201112 10:13:51.416"></status>
</kw>
<msg timestamp="20201112 10:13:51.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.391" endtime="20201112 10:13:51.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.418" endtime="20201112 10:13:51.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.422" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:51.420" endtime="20201112 10:13:51.423"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:51.387" endtime="20201112 10:13:51.424"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:51.385" endtime="20201112 10:13:51.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.384" endtime="20201112 10:13:51.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:51.428" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:51.428" endtime="20201112 10:13:51.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.425" endtime="20201112 10:13:51.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.383" endtime="20201112 10:13:51.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.382" endtime="20201112 10:13:51.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.430" endtime="20201112 10:13:51.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.381" endtime="20201112 10:13:51.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.379" endtime="20201112 10:13:51.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.356" endtime="20201112 10:13:51.433"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.442" endtime="20201112 10:13:51.532"></status>
</kw>
<msg timestamp="20201112 10:13:51.532" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.440" endtime="20201112 10:13:51.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.535" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.533" endtime="20201112 10:13:51.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.536" endtime="20201112 10:13:51.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.438" endtime="20201112 10:13:51.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.436" endtime="20201112 10:13:51.538"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.541" endtime="20201112 10:13:51.542"></status>
</kw>
<msg timestamp="20201112 10:13:51.543" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:51.539" endtime="20201112 10:13:51.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.547" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:51.546" endtime="20201112 10:13:51.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.549" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:51.548" endtime="20201112 10:13:51.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.543" endtime="20201112 10:13:51.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.553" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:51.552" endtime="20201112 10:13:51.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.556" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:51.555" endtime="20201112 10:13:51.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.550" endtime="20201112 10:13:51.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.563" endtime="20201112 10:13:51.856"></status>
</kw>
<msg timestamp="20201112 10:13:51.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.08002425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080036972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:51.561" endtime="20201112 10:13:51.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.08002425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080036972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:51.861" endtime="20201112 10:13:51.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.869" endtime="20201112 10:13:51.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.559" endtime="20201112 10:13:51.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.557" endtime="20201112 10:13:51.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.876" level="INFO">${RESULT} = [{'time': 0.080036972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999992795e-05, 'source_diff': 1.2721999999992795e-05}, {'time': 0.081288708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:51.872" endtime="20201112 10:13:51.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:51.889" level="INFO">${OVERHEAD} = {'time': [0.080036972, 0.081288708, 0.082545875, 0.083797306, 0.085050389, 0.086306361, 0.087558222, 0.088812889, 0.090065958, 0.091323028, 0.092574667, 0.093831986, 0.095087444, 0.096343139, 0.097600...</msg>
<status status="PASS" starttime="20201112 10:13:51.877" endtime="20201112 10:13:51.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.894" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:51.893" endtime="20201112 10:13:51.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.897" level="INFO">VALUE: [1.2721999999992795e-05, 1.2680000000001024e-05, 1.2639000000008727e-05, 1.2750000000005812e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2722000000006672e-05, 1.2723000000006146e-05, 1.2722000000006672e-05, 1.2721999999992795e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2763999999998443e-05, 1.2721999999992795e-05, 1.2694999999993128e-05, 1.2763999999998443e-05, 1.2708000000000164e-05, 1.268099999998662e-05, 1.2708000000000164e-05, 1.276299999999897e-05, 1.2721999999992795e-05, 1.2708000000000164e-05, 1.2722000000006672e-05, 1.2736999999998777e-05, 1.2694000000007533e-05, 1.2722000000006672e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999992795e-05, 1.2708999999999637e-05, 1.2749999999991934e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2722999999992268e-05, 1.2666999999993989e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2679999999987146e-05, 1.2721999999992795e-05, 1.2763999999998443e-05, 1.2695000000007006e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.268099999998662e-05]</msg>
<status status="PASS" starttime="20201112 10:13:51.895" endtime="20201112 10:13:51.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.890" endtime="20201112 10:13:51.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.900" endtime="20201112 10:13:51.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.903" endtime="20201112 10:13:51.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.902" endtime="20201112 10:13:51.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.898" endtime="20201112 10:13:51.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.434" endtime="20201112 10:13:51.924"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:51.353" endtime="20201112 10:13:51.925" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.932" endtime="20201112 10:13:51.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.931" endtime="20201112 10:13:51.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.966" endtime="20201112 10:13:51.988"></status>
</kw>
<msg timestamp="20201112 10:13:51.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.964" endtime="20201112 10:13:51.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.990" endtime="20201112 10:13:51.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:51.993" endtime="20201112 10:13:51.995"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:51.961" endtime="20201112 10:13:51.996"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:51.959" endtime="20201112 10:13:51.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.958" endtime="20201112 10:13:51.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:52.001" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:52.000" endtime="20201112 10:13:52.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.998" endtime="20201112 10:13:52.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.957" endtime="20201112 10:13:52.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.956" endtime="20201112 10:13:52.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.002" endtime="20201112 10:13:52.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.955" endtime="20201112 10:13:52.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.953" endtime="20201112 10:13:52.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.929" endtime="20201112 10:13:52.005"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.014" endtime="20201112 10:13:52.257"></status>
</kw>
<msg timestamp="20201112 10:13:52.258" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.012" endtime="20201112 10:13:52.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.260" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.259" endtime="20201112 10:13:52.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.261" endtime="20201112 10:13:52.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.010" endtime="20201112 10:13:52.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.008" endtime="20201112 10:13:52.264"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.266" endtime="20201112 10:13:52.268"></status>
</kw>
<msg timestamp="20201112 10:13:52.268" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:52.265" endtime="20201112 10:13:52.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.272" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:52.271" endtime="20201112 10:13:52.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.274" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:52.273" endtime="20201112 10:13:52.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.269" endtime="20201112 10:13:52.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.279" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:52.278" endtime="20201112 10:13:52.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.281" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:52.280" endtime="20201112 10:13:52.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.276" endtime="20201112 10:13:52.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.289" endtime="20201112 10:13:52.599"></status>
</kw>
<msg timestamp="20201112 10:13:52.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081772181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081796319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.287" endtime="20201112 10:13:52.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081772181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081796319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.603" endtime="20201112 10:13:52.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.611" endtime="20201112 10:13:52.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.284" endtime="20201112 10:13:52.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.282" endtime="20201112 10:13:52.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.617" level="INFO">${RESULT} = [{'time': 0.081796319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4138000000006876e-05, 'source_diff': 2.4138000000006876e-05}, {'time': 0.086132667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:52.614" endtime="20201112 10:13:52.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.631" level="INFO">${OVERHEAD} = {'time': [0.081796319, 0.086132667, 0.090470597, 0.094808236, 0.099145264, 0.103480389, 0.107820264, 0.112157736, 0.116493847, 0.120833028, 0.125170806, 0.129506417, 0.133841097, 0.138181139, 0.142521...</msg>
<status status="PASS" starttime="20201112 10:13:52.618" endtime="20201112 10:13:52.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.636" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:13:52.634" endtime="20201112 10:13:52.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.638" level="INFO">VALUE: [2.4138000000006876e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4166999999991612e-05, 2.419500000000463e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.4111999999992806e-05, 2.415299999999898e-05, 2.4124999999985963e-05, 2.415299999999898e-05, 2.4110999999993332e-05, 2.4221999999990418e-05, 2.413900000000635e-05, 2.420899999999726e-05, 2.412500000001372e-05, 2.4111000000021088e-05, 2.4180999999984243e-05, 2.415299999999898e-05, 2.4110999999993332e-05, 2.4167000000019367e-05, 2.415299999999898e-05, 2.4124999999985963e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.408300000000807e-05, 2.4167000000019367e-05, 2.4165999999992138e-05, 2.415299999999898e-05, 2.4110999999993332e-05, 2.4167000000019367e-05, 2.4138999999978594e-05, 2.4194000000005156e-05, 2.40970000000007e-05, 2.4125000000041474e-05, 2.4151999999999507e-05, 2.4139000000034105e-05, 2.4124999999985963e-05, 2.4151999999999507e-05, 2.4138999999978594e-05, 2.417999999998477e-05, 2.40970000000007e-05, 2.4152999999971225e-05, 2.4167000000019367e-05, 2.4153000000026736e-05]</msg>
<status status="PASS" starttime="20201112 10:13:52.637" endtime="20201112 10:13:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.632" endtime="20201112 10:13:52.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.641" endtime="20201112 10:13:52.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.645" endtime="20201112 10:13:52.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.643" endtime="20201112 10:13:52.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.639" endtime="20201112 10:13:52.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.006" endtime="20201112 10:13:52.665"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:51.926" endtime="20201112 10:13:52.666" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:30.672" endtime="20201112 10:13:52.673"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.740" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:52.748" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:53.887" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:52.739" endtime="20201112 10:13:53.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.890" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:53.888" endtime="20201112 10:13:53.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.737" endtime="20201112 10:13:53.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.893" endtime="20201112 10:13:54.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.891" endtime="20201112 10:13:54.138"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.151" endtime="20201112 10:13:54.174"></status>
</kw>
<msg timestamp="20201112 10:13:54.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forups...</msg>
<status status="PASS" starttime="20201112 10:13:54.150" endtime="20201112 10:13:54.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.178" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forups...</msg>
<status status="PASS" starttime="20201112 10:13:54.176" endtime="20201112 10:13:54.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.181" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:54.179" endtime="20201112 10:13:54.181"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:54.147" endtime="20201112 10:13:54.182"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:54.145" endtime="20201112 10:13:54.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.144" endtime="20201112 10:13:54.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:54.187" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:54.186" endtime="20201112 10:13:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.183" endtime="20201112 10:13:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.143" endtime="20201112 10:13:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.142" endtime="20201112 10:13:54.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.189" endtime="20201112 10:13:54.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.141" endtime="20201112 10:13:54.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.192" endtime="20201112 10:13:54.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.139" endtime="20201112 10:13:54.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.736" endtime="20201112 10:13:54.194"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.201" endtime="20201112 10:13:54.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.199" endtime="20201112 10:13:54.221"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.233" endtime="20201112 10:13:54.257"></status>
</kw>
<msg timestamp="20201112 10:13:54.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.232" endtime="20201112 10:13:54.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.258" endtime="20201112 10:13:54.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.263" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:54.261" endtime="20201112 10:13:54.264"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:54.229" endtime="20201112 10:13:54.264"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:54.227" endtime="20201112 10:13:54.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.226" endtime="20201112 10:13:54.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:54.269" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:54.268" endtime="20201112 10:13:54.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.266" endtime="20201112 10:13:54.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.225" endtime="20201112 10:13:54.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.224" endtime="20201112 10:13:54.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.271" endtime="20201112 10:13:54.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.223" endtime="20201112 10:13:54.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.221" endtime="20201112 10:13:54.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.198" endtime="20201112 10:13:54.273"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.285" endtime="20201112 10:13:54.299"></status>
</kw>
<msg timestamp="20201112 10:13:54.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.283" endtime="20201112 10:13:54.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.300" endtime="20201112 10:13:54.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.303" endtime="20201112 10:13:54.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.279" endtime="20201112 10:13:54.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.277" endtime="20201112 10:13:54.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.312" endtime="20201112 10:13:54.602"></status>
</kw>
<msg timestamp="20201112 10:13:54.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074747472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074753083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.310" endtime="20201112 10:13:54.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074747472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074753083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.607" endtime="20201112 10:13:54.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.615" endtime="20201112 10:13:54.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.308" endtime="20201112 10:13:54.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.306" endtime="20201112 10:13:54.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.622" level="INFO">${RESULT} = [{'time': 0.074753083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.074768514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.618" endtime="20201112 10:13:54.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:54.635" level="INFO">${ACCURACY} = {'time': [0.074753083, 0.074768514, 0.074781472, 0.074794556, 0.074806847, 0.074818486, 0.074834792, 0.074849847, 0.074860264, 0.074876972, 0.074891222, 0.074905972, 0.074922222, 0.074933847, 0.074946...</msg>
<status status="PASS" starttime="20201112 10:13:54.623" endtime="20201112 10:13:54.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.640" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:13:54.639" endtime="20201112 10:13:54.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.643" level="INFO">VALUE: [5.611000000002586e-06, 5.680999999993497e-06, 5.5689999999969375e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.597000000009955e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.652999999994357e-06, 5.611000000002586e-06, 5.596999999996077e-06, 5.624999999995217e-06, 5.666000000001392e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.680999999993497e-06, 5.61200000000206e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.624999999995217e-06, 5.639000000001726e-06, 5.652000000008761e-06, 5.651999999994883e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.652999999994357e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.610999999988708e-06, 5.639000000001726e-06, 5.625000000009095e-06, 5.624999999995217e-06, 5.639000000001726e-06, 5.597000000009955e-06, 5.624999999995217e-06, 5.610999999988708e-06, 5.639000000001726e-06, 5.597999999995551e-06, 5.611000000002586e-06, 5.610999999988708e-06, 5.624999999995217e-06, 5.666000000001392e-06, 5.61200000000206e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.641" endtime="20201112 10:13:54.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.636" endtime="20201112 10:13:54.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.646" endtime="20201112 10:13:54.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.649" endtime="20201112 10:13:54.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.648" endtime="20201112 10:13:54.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.644" endtime="20201112 10:13:54.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.276" endtime="20201112 10:13:54.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.275" endtime="20201112 10:13:54.670"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.679" endtime="20201112 10:13:54.697"></status>
</kw>
<msg timestamp="20201112 10:13:54.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.677" endtime="20201112 10:13:54.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.698" endtime="20201112 10:13:54.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.701" endtime="20201112 10:13:54.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.674" endtime="20201112 10:13:54.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.672" endtime="20201112 10:13:54.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.710" endtime="20201112 10:13:54.997"></status>
</kw>
<msg timestamp="20201112 10:13:55.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.708" endtime="20201112 10:13:55.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.001" endtime="20201112 10:13:55.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.012" endtime="20201112 10:13:55.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.706" endtime="20201112 10:13:55.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.704" endtime="20201112 10:13:55.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.019" level="INFO">${RESULT} = [{'time': 0.023122861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.023137917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.015" endtime="20201112 10:13:55.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.033" level="INFO">${ACCURACY} = {'time': [0.023122861, 0.023137917, 0.023153931, 0.023164417, 0.023179889, 0.023191583, 0.023201958, 0.023215028, 0.023225903, 0.023238319, 0.023254958, 0.023266403, 0.023280431, 0.023295625, 0.023311...</msg>
<status status="PASS" starttime="20201112 10:13:55.020" endtime="20201112 10:13:55.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.038" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.037" endtime="20201112 10:13:55.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.041" level="INFO">VALUE: [5.597000000003016e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.680000000000962e-06, 5.666000000001392e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.5839999999994505e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.59800000000249e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.680999999996966e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.039" endtime="20201112 10:13:55.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.034" endtime="20201112 10:13:55.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.044" endtime="20201112 10:13:55.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.048" endtime="20201112 10:13:55.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.046" endtime="20201112 10:13:55.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.042" endtime="20201112 10:13:55.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.671" endtime="20201112 10:13:55.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.670" endtime="20201112 10:13:55.069"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.078" endtime="20201112 10:13:55.097"></status>
</kw>
<msg timestamp="20201112 10:13:55.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.077" endtime="20201112 10:13:55.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.099" endtime="20201112 10:13:55.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.101" endtime="20201112 10:13:55.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.074" endtime="20201112 10:13:55.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.071" endtime="20201112 10:13:55.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.112" endtime="20201112 10:13:55.400"></status>
</kw>
<msg timestamp="20201112 10:13:55.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:55.110" endtime="20201112 10:13:55.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:55.404" endtime="20201112 10:13:55.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.413" endtime="20201112 10:13:55.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.108" endtime="20201112 10:13:55.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.106" endtime="20201112 10:13:55.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.421" level="INFO">${RESULT} = [{'time': 0.021153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.021167694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:13:55.418" endtime="20201112 10:13:55.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.435" level="INFO">${ACCURACY} = {'time': [0.021153, 0.021167694, 0.021180792, 0.021194319, 0.021208542, 0.021224014, 0.021236181, 0.021251556, 0.021261847, 0.021278569, 0.021290083, 0.021303194, 0.02131925, 0.021332514, 0.021344236,...</msg>
<status status="PASS" starttime="20201112 10:13:55.422" endtime="20201112 10:13:55.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.440" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.439" endtime="20201112 10:13:55.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.442" level="INFO">VALUE: [5.681000000000436e-06, 5.638000000002252e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.625000000002156e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.441" endtime="20201112 10:13:55.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.436" endtime="20201112 10:13:55.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.446" endtime="20201112 10:13:55.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.449" endtime="20201112 10:13:55.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.448" endtime="20201112 10:13:55.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.444" endtime="20201112 10:13:55.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.070" endtime="20201112 10:13:55.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.069" endtime="20201112 10:13:55.474"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.495" endtime="20201112 10:13:55.518"></status>
</kw>
<msg timestamp="20201112 10:13:55.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.491" endtime="20201112 10:13:55.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.522" endtime="20201112 10:13:55.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.527" endtime="20201112 10:13:55.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.485" endtime="20201112 10:13:55.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.480" endtime="20201112 10:13:55.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.550" endtime="20201112 10:13:55.839"></status>
</kw>
<msg timestamp="20201112 10:13:55.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.546" endtime="20201112 10:13:55.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.843" endtime="20201112 10:13:55.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.851" endtime="20201112 10:13:55.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.540" endtime="20201112 10:13:55.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.536" endtime="20201112 10:13:55.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.858" level="INFO">${RESULT} = [{'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.041800181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.855" endtime="20201112 10:13:55.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.872" level="INFO">${ACCURACY} = {'time': [0.041786597, 0.041800181, 0.041811917, 0.041828556, 0.041840694, 0.041856292, 0.041872625, 0.041886125, 0.041902861, 0.041914583, 0.041928306, 0.041939333, 0.041956181, 0.041970417, 0.041981...</msg>
<status status="PASS" starttime="20201112 10:13:55.859" endtime="20201112 10:13:55.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.877" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.876" endtime="20201112 10:13:55.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.879" level="INFO">VALUE: [5.639000000001726e-06, 5.569999999996411e-06, 5.610999999995647e-06, 5.639000000001726e-06, 5.610999999995647e-06, 5.625000000002156e-06, 5.638999999994787e-06, 5.639000000001726e-06, 5.582999999996507e-06, 5.624999999995217e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.624999999995217e-06, 5.638999999994787e-06, 5.55600000000378e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.610999999995647e-06, 5.625000000002156e-06, 5.610999999995647e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.57000000000335e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.624999999995217e-06, 5.610999999995647e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.638999999994787e-06, 5.639000000001726e-06, 5.527999999997701e-06, 5.611000000002586e-06, 5.610999999995647e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.597999999995551e-06, 5.639000000001726e-06, 5.624999999995217e-06, 5.610999999995647e-06, 5.638999999994787e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.878" endtime="20201112 10:13:55.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.873" endtime="20201112 10:13:55.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.883" endtime="20201112 10:13:55.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.886" endtime="20201112 10:13:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.885" endtime="20201112 10:13:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.881" endtime="20201112 10:13:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.476" endtime="20201112 10:13:55.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.475" endtime="20201112 10:13:55.907"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.916" endtime="20201112 10:13:55.932"></status>
</kw>
<msg timestamp="20201112 10:13:55.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.914" endtime="20201112 10:13:55.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.934" endtime="20201112 10:13:55.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.936" endtime="20201112 10:13:55.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.911" endtime="20201112 10:13:55.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.909" endtime="20201112 10:13:55.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.947" endtime="20201112 10:13:56.234"></status>
</kw>
<msg timestamp="20201112 10:13:56.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.945" endtime="20201112 10:13:56.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.238" endtime="20201112 10:13:56.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.247" endtime="20201112 10:13:56.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.942" endtime="20201112 10:13:56.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.941" endtime="20201112 10:13:56.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.253" level="INFO">${RESULT} = [{'time': 0.022093792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.022105667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.250" endtime="20201112 10:13:56.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:56.267" level="INFO">${ACCURACY} = {'time': [0.022093792, 0.022105667, 0.022118778, 0.022133444, 0.022146653, 0.022162917, 0.022177347, 0.022188778, 0.022199194, 0.022214667, 0.022225556, 0.022240944, 0.022255708, 0.022270972, 0.022283...</msg>
<status status="PASS" starttime="20201112 10:13:56.254" endtime="20201112 10:13:56.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.271" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:13:56.270" endtime="20201112 10:13:56.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.274" level="INFO">VALUE: [5.681000000000436e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.651999999998353e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.272" endtime="20201112 10:13:56.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.268" endtime="20201112 10:13:56.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.277" endtime="20201112 10:13:56.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.280" endtime="20201112 10:13:56.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.279" endtime="20201112 10:13:56.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.275" endtime="20201112 10:13:56.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.908" endtime="20201112 10:13:56.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.907" endtime="20201112 10:13:56.301"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.310" endtime="20201112 10:13:56.329"></status>
</kw>
<msg timestamp="20201112 10:13:56.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.308" endtime="20201112 10:13:56.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.330" endtime="20201112 10:13:56.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.332" endtime="20201112 10:13:56.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.306" endtime="20201112 10:13:56.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.303" endtime="20201112 10:13:56.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.343" endtime="20201112 10:13:56.627"></status>
</kw>
<msg timestamp="20201112 10:13:56.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.341" endtime="20201112 10:13:56.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.632" endtime="20201112 10:13:56.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.640" endtime="20201112 10:13:56.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.339" endtime="20201112 10:13:56.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.337" endtime="20201112 10:13:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.646" level="INFO">${RESULT} = [{'time': 0.019858833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.019869986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.643" endtime="20201112 10:13:56.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:56.660" level="INFO">${ACCURACY} = {'time': [0.019858833, 0.019869986, 0.019882111, 0.019896236, 0.019907264, 0.019921611, 0.019932917, 0.019943556, 0.019954764, 0.019968292, 0.019982847, 0.019993569, 0.020006778, 0.020021597, 0.020036...</msg>
<status status="PASS" starttime="20201112 10:13:56.647" endtime="20201112 10:13:56.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.664" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:13:56.663" endtime="20201112 10:13:56.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.667" level="INFO">VALUE: [5.624999999998687e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.665999999997923e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.665999999997923e-06, 5.695000000000006e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.554999999997368e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.665" endtime="20201112 10:13:56.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.661" endtime="20201112 10:13:56.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.670" endtime="20201112 10:13:56.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.673" endtime="20201112 10:13:56.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.672" endtime="20201112 10:13:56.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.668" endtime="20201112 10:13:56.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.302" endtime="20201112 10:13:56.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.301" endtime="20201112 10:13:56.694"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.703" endtime="20201112 10:13:56.721"></status>
</kw>
<msg timestamp="20201112 10:13:56.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.701" endtime="20201112 10:13:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.722" endtime="20201112 10:13:56.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.725" endtime="20201112 10:13:56.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.699" endtime="20201112 10:13:56.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.697" endtime="20201112 10:13:56.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.735" endtime="20201112 10:13:57.019"></status>
</kw>
<msg timestamp="20201112 10:13:57.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.733" endtime="20201112 10:13:57.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.023" endtime="20201112 10:13:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.032" endtime="20201112 10:13:57.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.731" endtime="20201112 10:13:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.729" endtime="20201112 10:13:57.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.038" level="INFO">${RESULT} = [{'time': 0.023644833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023661694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.035" endtime="20201112 10:13:57.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.052" level="INFO">${ACCURACY} = {'time': [0.023644833, 0.023661694, 0.023674806, 0.023687069, 0.023702028, 0.023712514, 0.023727583, 0.023741514, 0.023756361, 0.023770417, 0.023782653, 0.023793111, 0.023804736, 0.023817403, 0.023830...</msg>
<status status="PASS" starttime="20201112 10:13:57.039" endtime="20201112 10:13:57.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.056" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.055" endtime="20201112 10:13:57.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.059" level="INFO">VALUE: [5.596999999999547e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.555000000000837e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.057" endtime="20201112 10:13:57.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.052" endtime="20201112 10:13:57.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.062" endtime="20201112 10:13:57.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.065" endtime="20201112 10:13:57.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.063" endtime="20201112 10:13:57.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.060" endtime="20201112 10:13:57.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.695" endtime="20201112 10:13:57.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.695" endtime="20201112 10:13:57.086"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.095" endtime="20201112 10:13:57.113"></status>
</kw>
<msg timestamp="20201112 10:13:57.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.093" endtime="20201112 10:13:57.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.115" endtime="20201112 10:13:57.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.117" endtime="20201112 10:13:57.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.091" endtime="20201112 10:13:57.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.088" endtime="20201112 10:13:57.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.127" endtime="20201112 10:13:57.412"></status>
</kw>
<msg timestamp="20201112 10:13:57.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.126" endtime="20201112 10:13:57.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.416" endtime="20201112 10:13:57.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.424" endtime="20201112 10:13:57.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.123" endtime="20201112 10:13:57.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.121" endtime="20201112 10:13:57.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.431" level="INFO">${RESULT} = [{'time': 0.023699292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.023712097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:57.428" endtime="20201112 10:13:57.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.445" level="INFO">${ACCURACY} = {'time': [0.023699292, 0.023712097, 0.023725403, 0.023742222, 0.023754903, 0.023767681, 0.023778292, 0.023792639, 0.023809278, 0.023824153, 0.023837542, 0.023852583, 0.023864931, 0.023881653, 0.023893...</msg>
<status status="PASS" starttime="20201112 10:13:57.432" endtime="20201112 10:13:57.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.450" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.449" endtime="20201112 10:13:57.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.452" level="INFO">VALUE: [5.5979999999990204e-06, 5.666000000001392e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.5839999999994505e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.637999999998783e-06, 5.665999999997923e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.666999999997396e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.451" endtime="20201112 10:13:57.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.446" endtime="20201112 10:13:57.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.455" endtime="20201112 10:13:57.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.459" endtime="20201112 10:13:57.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.457" endtime="20201112 10:13:57.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.454" endtime="20201112 10:13:57.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.087" endtime="20201112 10:13:57.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.086" endtime="20201112 10:13:57.480"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.489" endtime="20201112 10:13:57.505"></status>
</kw>
<msg timestamp="20201112 10:13:57.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.487" endtime="20201112 10:13:57.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.506" endtime="20201112 10:13:57.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.509" endtime="20201112 10:13:57.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.485" endtime="20201112 10:13:57.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.483" endtime="20201112 10:13:57.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.519" endtime="20201112 10:13:57.805"></status>
</kw>
<msg timestamp="20201112 10:13:57.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:57.517" endtime="20201112 10:13:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:57.809" endtime="20201112 10:13:57.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.818" endtime="20201112 10:13:57.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.515" endtime="20201112 10:13:57.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.513" endtime="20201112 10:13:57.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.824" level="INFO">${RESULT} = [{'time': 0.021439625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.021449889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.821" endtime="20201112 10:13:57.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.838" level="INFO">${ACCURACY} = {'time': [0.021439625, 0.021449889, 0.021466819, 0.021478681, 0.021493722, 0.021507639, 0.021520708, 0.021536639, 0.021552986, 0.021568889, 0.021580042, 0.021591514, 0.021605111, 0.021616431, 0.021631...</msg>
<status status="PASS" starttime="20201112 10:13:57.825" endtime="20201112 10:13:57.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.842" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.841" endtime="20201112 10:13:57.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.845" level="INFO">VALUE: [5.624999999998687e-06, 5.596999999999547e-06, 5.708000000000102e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.569999999999881e-06, 5.611000000002586e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.61199999999859e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.540999999997798e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.843" endtime="20201112 10:13:57.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.839" endtime="20201112 10:13:57.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.848" endtime="20201112 10:13:57.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.852" endtime="20201112 10:13:57.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.850" endtime="20201112 10:13:57.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.847" endtime="20201112 10:13:57.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.481" endtime="20201112 10:13:57.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.480" endtime="20201112 10:13:57.872"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.881" endtime="20201112 10:13:57.896"></status>
</kw>
<msg timestamp="20201112 10:13:57.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.880" endtime="20201112 10:13:57.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.898" endtime="20201112 10:13:57.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.900" endtime="20201112 10:13:57.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.877" endtime="20201112 10:13:57.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.875" endtime="20201112 10:13:57.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.910" endtime="20201112 10:13:58.196"></status>
</kw>
<msg timestamp="20201112 10:13:58.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.909" endtime="20201112 10:13:58.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.200" endtime="20201112 10:13:58.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.208" endtime="20201112 10:13:58.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.906" endtime="20201112 10:13:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.905" endtime="20201112 10:13:58.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.215" level="INFO">${RESULT} = [{'time': 0.021012889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.021024111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.212" endtime="20201112 10:13:58.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:58.228" level="INFO">${ACCURACY} = {'time': [0.021012889, 0.021024111, 0.021037097, 0.021049653, 0.021062847, 0.021073875, 0.021088722, 0.021100986, 0.021114722, 0.021128653, 0.0211455, 0.021156403, 0.021170417, 0.021181444, 0.02119518...</msg>
<status status="PASS" starttime="20201112 10:13:58.216" endtime="20201112 10:13:58.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.233" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:13:58.232" endtime="20201112 10:13:58.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.235" level="INFO">VALUE: [5.624999999998687e-06, 5.639000000001726e-06, 5.541000000001267e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.61199999999859e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.527000000001697e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.721999999999672e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.234" endtime="20201112 10:13:58.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.229" endtime="20201112 10:13:58.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.239" endtime="20201112 10:13:58.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.242" endtime="20201112 10:13:58.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.241" endtime="20201112 10:13:58.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.237" endtime="20201112 10:13:58.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.873" endtime="20201112 10:13:58.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.873" endtime="20201112 10:13:58.263"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.272" endtime="20201112 10:13:58.288"></status>
</kw>
<msg timestamp="20201112 10:13:58.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.270" endtime="20201112 10:13:58.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.289" endtime="20201112 10:13:58.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.292" endtime="20201112 10:13:58.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.268" endtime="20201112 10:13:58.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.266" endtime="20201112 10:13:58.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.302" endtime="20201112 10:13:58.590"></status>
</kw>
<msg timestamp="20201112 10:13:58.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.300" endtime="20201112 10:13:58.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.594" endtime="20201112 10:13:58.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.602" endtime="20201112 10:13:58.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.298" endtime="20201112 10:13:58.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.296" endtime="20201112 10:13:58.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.609" level="INFO">${RESULT} = [{'time': 0.022147306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.022163194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:58.605" endtime="20201112 10:13:58.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:58.622" level="INFO">${ACCURACY} = {'time': [0.022147306, 0.022163194, 0.022177611, 0.022189111, 0.022200417, 0.022213069, 0.022225542, 0.022241569, 0.022257667, 0.022268778, 0.022281139, 0.022295125, 0.022308264, 0.022320625, 0.022331...</msg>
<status status="PASS" starttime="20201112 10:13:58.610" endtime="20201112 10:13:58.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.627" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:13:58.626" endtime="20201112 10:13:58.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.629" level="INFO">VALUE: [5.6389999999982565e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.556000000000311e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6529999999978264e-06]</msg>
<status status="PASS" starttime="20201112 10:13:58.628" endtime="20201112 10:13:58.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.623" endtime="20201112 10:13:58.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.633" endtime="20201112 10:13:58.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.636" endtime="20201112 10:13:58.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.635" endtime="20201112 10:13:58.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.631" endtime="20201112 10:13:58.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.264" endtime="20201112 10:13:58.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.264" endtime="20201112 10:13:58.657"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.666" endtime="20201112 10:13:58.682"></status>
</kw>
<msg timestamp="20201112 10:13:58.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.664" endtime="20201112 10:13:58.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.683" endtime="20201112 10:13:58.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.686" endtime="20201112 10:13:58.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.662" endtime="20201112 10:13:58.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.660" endtime="20201112 10:13:58.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.696" endtime="20201112 10:13:58.982"></status>
</kw>
<msg timestamp="20201112 10:13:58.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.694" endtime="20201112 10:13:58.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.986" endtime="20201112 10:13:58.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.995" endtime="20201112 10:13:58.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.692" endtime="20201112 10:13:58.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.690" endtime="20201112 10:13:58.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.001" level="INFO">${RESULT} = [{'time': 0.020121931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.020136569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:58.998" endtime="20201112 10:13:59.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.016" level="INFO">${ACCURACY} = {'time': [0.020121931, 0.020136569, 0.020151333, 0.020166514, 0.020181486, 0.020193764, 0.020210597, 0.020223958, 0.020236083, 0.020251333, 0.020264806, 0.020278722, 0.020290806, 0.020307431, 0.020323...</msg>
<status status="PASS" starttime="20201112 10:13:59.002" endtime="20201112 10:13:59.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.020" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.019" endtime="20201112 10:13:59.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.023" level="INFO">VALUE: [5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.679999999997493e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.021" endtime="20201112 10:13:59.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.017" endtime="20201112 10:13:59.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.026" endtime="20201112 10:13:59.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.030" endtime="20201112 10:13:59.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.028" endtime="20201112 10:13:59.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.025" endtime="20201112 10:13:59.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.658" endtime="20201112 10:13:59.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.658" endtime="20201112 10:13:59.050"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.059" endtime="20201112 10:13:59.077"></status>
</kw>
<msg timestamp="20201112 10:13:59.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.058" endtime="20201112 10:13:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.079" endtime="20201112 10:13:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.081" endtime="20201112 10:13:59.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.055" endtime="20201112 10:13:59.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.053" endtime="20201112 10:13:59.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.091" endtime="20201112 10:13:59.376"></status>
</kw>
<msg timestamp="20201112 10:13:59.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023704583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.090" endtime="20201112 10:13:59.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023704583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.380" endtime="20201112 10:13:59.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.388" endtime="20201112 10:13:59.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.087" endtime="20201112 10:13:59.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.085" endtime="20201112 10:13:59.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.395" level="INFO">${RESULT} = [{'time': 0.023710236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.023721222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:59.392" endtime="20201112 10:13:59.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.409" level="INFO">${ACCURACY} = {'time': [0.023710236, 0.023721222, 0.023734944, 0.023746194, 0.023759903, 0.023776347, 0.023788903, 0.023799806, 0.023811042, 0.023823931, 0.023837958, 0.023854681, 0.023868486, 0.023879389, 0.023894...</msg>
<status status="PASS" starttime="20201112 10:13:59.396" endtime="20201112 10:13:59.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.413" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.412" endtime="20201112 10:13:59.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.416" level="INFO">VALUE: [5.6529999999978264e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.638000000002252e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.708000000000102e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.694000000000532e-06, 5.569999999999881e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.666000000001392e-06, 5.708000000000102e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.414" endtime="20201112 10:13:59.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.409" endtime="20201112 10:13:59.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.419" endtime="20201112 10:13:59.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.423" endtime="20201112 10:13:59.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.421" endtime="20201112 10:13:59.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.417" endtime="20201112 10:13:59.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.051" endtime="20201112 10:13:59.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.051" endtime="20201112 10:13:59.443"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.452" endtime="20201112 10:13:59.469"></status>
</kw>
<msg timestamp="20201112 10:13:59.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.451" endtime="20201112 10:13:59.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.470" endtime="20201112 10:13:59.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.473" endtime="20201112 10:13:59.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.448" endtime="20201112 10:13:59.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.446" endtime="20201112 10:13:59.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.483" endtime="20201112 10:13:59.767"></status>
</kw>
<msg timestamp="20201112 10:13:59.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.481" endtime="20201112 10:13:59.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.771" endtime="20201112 10:13:59.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.780" endtime="20201112 10:13:59.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.479" endtime="20201112 10:13:59.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.477" endtime="20201112 10:13:59.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.786" level="INFO">${RESULT} = [{'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.022586639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.783" endtime="20201112 10:13:59.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.800" level="INFO">${ACCURACY} = {'time': [0.022571319, 0.022586639, 0.022599472, 0.022613611, 0.022625556, 0.022642208, 0.022656861, 0.022671917, 0.022683222, 0.022695292, 0.022710625, 0.022722667, 0.022733125, 0.022749542, 0.022761...</msg>
<status status="PASS" starttime="20201112 10:13:59.787" endtime="20201112 10:13:59.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.804" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.803" endtime="20201112 10:13:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.807" level="INFO">VALUE: [5.624999999998687e-06, 5.680999999996966e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.555000000000837e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.61200000000206e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.527000000001697e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.61199999999859e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.805" endtime="20201112 10:13:59.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.801" endtime="20201112 10:13:59.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.810" endtime="20201112 10:13:59.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.814" endtime="20201112 10:13:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.812" endtime="20201112 10:13:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.809" endtime="20201112 10:13:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.444" endtime="20201112 10:13:59.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.444" endtime="20201112 10:13:59.835"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.843" endtime="20201112 10:13:59.863"></status>
</kw>
<msg timestamp="20201112 10:13:59.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.842" endtime="20201112 10:13:59.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.865" endtime="20201112 10:13:59.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.867" endtime="20201112 10:13:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.839" endtime="20201112 10:13:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.837" endtime="20201112 10:13:59.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.877" endtime="20201112 10:14:00.162"></status>
</kw>
<msg timestamp="20201112 10:14:00.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.876" endtime="20201112 10:14:00.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.167" endtime="20201112 10:14:00.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.175" endtime="20201112 10:14:00.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.873" endtime="20201112 10:14:00.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.871" endtime="20201112 10:14:00.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.181" level="INFO">${RESULT} = [{'time': 0.023336306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.023348389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:00.178" endtime="20201112 10:14:00.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.195" level="INFO">${ACCURACY} = {'time': [0.023336306, 0.023348389, 0.023362708, 0.023375611, 0.023386625, 0.023397958, 0.0234105, 0.023424236, 0.023440972, 0.023452486, 0.023469139, 0.023483347, 0.023497472, 0.02351125, 0.023525444...</msg>
<status status="PASS" starttime="20201112 10:14:00.182" endtime="20201112 10:14:00.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.199" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.198" endtime="20201112 10:14:00.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.202" level="INFO">VALUE: [5.625000000002156e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.555999999996841e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.554999999997368e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.542000000000741e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.201" endtime="20201112 10:14:00.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.196" endtime="20201112 10:14:00.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.206" endtime="20201112 10:14:00.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.209" endtime="20201112 10:14:00.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.207" endtime="20201112 10:14:00.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.204" endtime="20201112 10:14:00.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.836" endtime="20201112 10:14:00.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.835" endtime="20201112 10:14:00.230"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.239" endtime="20201112 10:14:00.258"></status>
</kw>
<msg timestamp="20201112 10:14:00.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.237" endtime="20201112 10:14:00.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.260" endtime="20201112 10:14:00.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.262" endtime="20201112 10:14:00.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.234" endtime="20201112 10:14:00.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.232" endtime="20201112 10:14:00.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.272" endtime="20201112 10:14:00.559"></status>
</kw>
<msg timestamp="20201112 10:14:00.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.270" endtime="20201112 10:14:00.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.563" endtime="20201112 10:14:00.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.572" endtime="20201112 10:14:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.268" endtime="20201112 10:14:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.266" endtime="20201112 10:14:00.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.579" level="INFO">${RESULT} = [{'time': 0.024943778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.024954458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:00.576" endtime="20201112 10:14:00.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.593" level="INFO">${ACCURACY} = {'time': [0.024943778, 0.024954458, 0.024968194, 0.024983889, 0.024999292, 0.025012403, 0.025027056, 0.025040736, 0.025055153, 0.025071639, 0.025083569, 0.025097403, 0.025108486, 0.025120417, 0.025133...</msg>
<status status="PASS" starttime="20201112 10:14:00.580" endtime="20201112 10:14:00.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.598" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.597" endtime="20201112 10:14:00.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.601" level="INFO">VALUE: [5.610999999999117e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.61200000000206e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.5689999999969375e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.569999999999881e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.61199999999859e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.599" endtime="20201112 10:14:00.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.594" endtime="20201112 10:14:00.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.604" endtime="20201112 10:14:00.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.608" endtime="20201112 10:14:00.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.606" endtime="20201112 10:14:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.603" endtime="20201112 10:14:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.231" endtime="20201112 10:14:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.230" endtime="20201112 10:14:00.629"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.637" endtime="20201112 10:14:00.658"></status>
</kw>
<msg timestamp="20201112 10:14:00.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.636" endtime="20201112 10:14:00.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.660" endtime="20201112 10:14:00.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.662" endtime="20201112 10:14:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.633" endtime="20201112 10:14:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.631" endtime="20201112 10:14:00.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.672" endtime="20201112 10:14:00.959"></status>
</kw>
<msg timestamp="20201112 10:14:00.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:00.671" endtime="20201112 10:14:00.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:00.963" endtime="20201112 10:14:00.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.971" endtime="20201112 10:14:00.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.668" endtime="20201112 10:14:00.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.666" endtime="20201112 10:14:00.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.978" level="INFO">${RESULT} = [{'time': 0.0231245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023137681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:00.975" endtime="20201112 10:14:00.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.991" level="INFO">${ACCURACY} = {'time': [0.0231245, 0.023137681, 0.023154306, 0.023167833, 0.023181139, 0.023196403, 0.023207847, 0.023222611, 0.023235139, 0.023246028, 0.023258986, 0.023274778, 0.023289181, 0.023302153, 0.02331493...</msg>
<status status="PASS" starttime="20201112 10:14:00.979" endtime="20201112 10:14:00.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.996" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.995" endtime="20201112 10:14:00.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.998" level="INFO">VALUE: [5.596999999999547e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.61200000000206e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.695000000000006e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.555000000000837e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.679999999997493e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:14:00.997" endtime="20201112 10:14:00.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.992" endtime="20201112 10:14:01.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.002" endtime="20201112 10:14:01.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.005" endtime="20201112 10:14:01.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.004" endtime="20201112 10:14:01.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.000" endtime="20201112 10:14:01.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.629" endtime="20201112 10:14:01.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.629" endtime="20201112 10:14:01.026"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.035" endtime="20201112 10:14:01.051"></status>
</kw>
<msg timestamp="20201112 10:14:01.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.033" endtime="20201112 10:14:01.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.053" endtime="20201112 10:14:01.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.055" endtime="20201112 10:14:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.031" endtime="20201112 10:14:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.029" endtime="20201112 10:14:01.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.065" endtime="20201112 10:14:01.351"></status>
</kw>
<msg timestamp="20201112 10:14:01.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.064" endtime="20201112 10:14:01.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.355" endtime="20201112 10:14:01.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.363" endtime="20201112 10:14:01.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.061" endtime="20201112 10:14:01.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.059" endtime="20201112 10:14:01.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.370" level="INFO">${RESULT} = [{'time': 0.022359736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.022372458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:01.367" endtime="20201112 10:14:01.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:01.383" level="INFO">${ACCURACY} = {'time': [0.022359736, 0.022372458, 0.022386264, 0.022402042, 0.022415222, 0.022431542, 0.022445028, 0.022458625, 0.022470139, 0.02248325, 0.022497694, 0.022509403, 0.022522931, 0.022536639, 0.0225485...</msg>
<status status="PASS" starttime="20201112 10:14:01.371" endtime="20201112 10:14:01.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.388" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:01.387" endtime="20201112 10:14:01.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.390" level="INFO">VALUE: [5.569000000000407e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.695000000000006e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.708000000000102e-06, 5.625000000002156e-06, 5.59800000000249e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.721999999999672e-06, 5.625000000002156e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.652000000001822e-06]</msg>
<status status="PASS" starttime="20201112 10:14:01.389" endtime="20201112 10:14:01.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.384" endtime="20201112 10:14:01.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.394" endtime="20201112 10:14:01.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.397" endtime="20201112 10:14:01.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.396" endtime="20201112 10:14:01.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.392" endtime="20201112 10:14:01.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.027" endtime="20201112 10:14:01.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.027" endtime="20201112 10:14:01.418"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.427" endtime="20201112 10:14:01.444"></status>
</kw>
<msg timestamp="20201112 10:14:01.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.426" endtime="20201112 10:14:01.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.446" endtime="20201112 10:14:01.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.448" endtime="20201112 10:14:01.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.423" endtime="20201112 10:14:01.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.421" endtime="20201112 10:14:01.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.458" endtime="20201112 10:14:01.746"></status>
</kw>
<msg timestamp="20201112 10:14:01.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.457" endtime="20201112 10:14:01.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.751" endtime="20201112 10:14:01.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.761" endtime="20201112 10:14:01.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.454" endtime="20201112 10:14:01.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.452" endtime="20201112 10:14:01.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.771" level="INFO">${RESULT} = [{'time': 0.022177528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.022194139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:01.767" endtime="20201112 10:14:01.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:01.787" level="INFO">${ACCURACY} = {'time': [0.022177528, 0.022194139, 0.022208958, 0.022225778, 0.022239611, 0.022253014, 0.022269722, 0.022283681, 0.022295528, 0.022306056, 0.022319417, 0.022333014, 0.022344472, 0.022359014, 0.022374...</msg>
<status status="PASS" starttime="20201112 10:14:01.772" endtime="20201112 10:14:01.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.792" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:01.791" endtime="20201112 10:14:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.796" level="INFO">VALUE: [5.610999999999117e-06, 5.597000000003016e-06, 5.527000000001697e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.556000000000311e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:14:01.794" endtime="20201112 10:14:01.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.788" endtime="20201112 10:14:01.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.800" endtime="20201112 10:14:01.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.803" endtime="20201112 10:14:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.802" endtime="20201112 10:14:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.798" endtime="20201112 10:14:01.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.419" endtime="20201112 10:14:01.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.419" endtime="20201112 10:14:01.824"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.833" endtime="20201112 10:14:01.855"></status>
</kw>
<msg timestamp="20201112 10:14:01.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.831" endtime="20201112 10:14:01.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.856" endtime="20201112 10:14:01.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.859" endtime="20201112 10:14:01.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.829" endtime="20201112 10:14:01.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.827" endtime="20201112 10:14:01.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.869" endtime="20201112 10:14:02.154"></status>
</kw>
<msg timestamp="20201112 10:14:02.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.867" endtime="20201112 10:14:02.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.159" endtime="20201112 10:14:02.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.167" endtime="20201112 10:14:02.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.865" endtime="20201112 10:14:02.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.863" endtime="20201112 10:14:02.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.173" level="INFO">${RESULT} = [{'time': 0.023259028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.023273417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:02.170" endtime="20201112 10:14:02.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.188" level="INFO">${ACCURACY} = {'time': [0.023259028, 0.023273417, 0.023289514, 0.023304319, 0.023317833, 0.023329778, 0.023346097, 0.02336275, 0.023374375, 0.023384861, 0.023396319, 0.023412611, 0.023424778, 0.023440389, 0.0234534...</msg>
<status status="PASS" starttime="20201112 10:14:02.174" endtime="20201112 10:14:02.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.192" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.191" endtime="20201112 10:14:02.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.195" level="INFO">VALUE: [5.625000000002156e-06, 5.59800000000249e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.61200000000206e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.554999999997368e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.193" endtime="20201112 10:14:02.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.189" endtime="20201112 10:14:02.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.198" endtime="20201112 10:14:02.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.202" endtime="20201112 10:14:02.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.200" endtime="20201112 10:14:02.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.197" endtime="20201112 10:14:02.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.825" endtime="20201112 10:14:02.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.825" endtime="20201112 10:14:02.222"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.231" endtime="20201112 10:14:02.247"></status>
</kw>
<msg timestamp="20201112 10:14:02.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.230" endtime="20201112 10:14:02.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.249" endtime="20201112 10:14:02.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.251" endtime="20201112 10:14:02.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.227" endtime="20201112 10:14:02.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.225" endtime="20201112 10:14:02.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.261" endtime="20201112 10:14:02.546"></status>
</kw>
<msg timestamp="20201112 10:14:02.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:02.260" endtime="20201112 10:14:02.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:02.550" endtime="20201112 10:14:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.558" endtime="20201112 10:14:02.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.257" endtime="20201112 10:14:02.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.255" endtime="20201112 10:14:02.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.565" level="INFO">${RESULT} = [{'time': 0.021879889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.021890569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:02.562" endtime="20201112 10:14:02.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.578" level="INFO">${ACCURACY} = {'time': [0.021879889, 0.021890569, 0.021901792, 0.021914694, 0.021925806, 0.021939611, 0.021950306, 0.021966528, 0.021981375, 0.021998042, 0.02201225, 0.022024944, 0.022040639, 0.022052792, 0.0220649...</msg>
<status status="PASS" starttime="20201112 10:14:02.566" endtime="20201112 10:14:02.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.583" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.582" endtime="20201112 10:14:02.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.585" level="INFO">VALUE: [5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.569000000000407e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.61200000000206e-06, 5.6389999999982565e-06, 5.7229999999991454e-06, 5.638000000002252e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.542000000000741e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6529999999978264e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.584" endtime="20201112 10:14:02.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.579" endtime="20201112 10:14:02.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.589" endtime="20201112 10:14:02.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.592" endtime="20201112 10:14:02.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.591" endtime="20201112 10:14:02.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.587" endtime="20201112 10:14:02.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.223" endtime="20201112 10:14:02.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.223" endtime="20201112 10:14:02.614"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.622" endtime="20201112 10:14:02.640"></status>
</kw>
<msg timestamp="20201112 10:14:02.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.621" endtime="20201112 10:14:02.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.641" endtime="20201112 10:14:02.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.644" endtime="20201112 10:14:02.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.618" endtime="20201112 10:14:02.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.616" endtime="20201112 10:14:02.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.654" endtime="20201112 10:14:02.938"></status>
</kw>
<msg timestamp="20201112 10:14:02.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:02.652" endtime="20201112 10:14:02.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:02.942" endtime="20201112 10:14:02.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.950" endtime="20201112 10:14:02.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.650" endtime="20201112 10:14:02.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.648" endtime="20201112 10:14:02.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.957" level="INFO">${RESULT} = [{'time': 0.022764694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.022779903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:02.954" endtime="20201112 10:14:02.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.971" level="INFO">${ACCURACY} = {'time': [0.022764694, 0.022779903, 0.022790819, 0.022801181, 0.022816333, 0.022831069, 0.022846306, 0.022861361, 0.022871847, 0.02288225, 0.022898958, 0.022912153, 0.0229265, 0.022940889, 0.022953431...</msg>
<status status="PASS" starttime="20201112 10:14:02.958" endtime="20201112 10:14:02.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.975" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.974" endtime="20201112 10:14:02.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.978" level="INFO">VALUE: [5.6939999999970625e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.61199999999859e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.541000000001267e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.681000000000436e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.556000000000311e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.651999999998353e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.976" endtime="20201112 10:14:02.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.971" endtime="20201112 10:14:02.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.981" endtime="20201112 10:14:02.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.985" endtime="20201112 10:14:03.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.983" endtime="20201112 10:14:03.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.979" endtime="20201112 10:14:03.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.614" endtime="20201112 10:14:03.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.614" endtime="20201112 10:14:03.006"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.014" endtime="20201112 10:14:03.031"></status>
</kw>
<msg timestamp="20201112 10:14:03.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.013" endtime="20201112 10:14:03.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.033" endtime="20201112 10:14:03.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.035" endtime="20201112 10:14:03.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.010" endtime="20201112 10:14:03.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.008" endtime="20201112 10:14:03.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.045" endtime="20201112 10:14:03.329"></status>
</kw>
<msg timestamp="20201112 10:14:03.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.044" endtime="20201112 10:14:03.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.334" endtime="20201112 10:14:03.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.342" endtime="20201112 10:14:03.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.041" endtime="20201112 10:14:03.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.040" endtime="20201112 10:14:03.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.349" level="INFO">${RESULT} = [{'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022655486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.345" endtime="20201112 10:14:03.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.362" level="INFO">${ACCURACY} = {'time': [0.022638833, 0.022655486, 0.022672, 0.022685097, 0.022695931, 0.022707236, 0.022722292, 0.022738347, 0.022753375, 0.022763986, 0.022777708, 0.022789153, 0.022801708, 0.022816278, 0.022829667...</msg>
<status status="PASS" starttime="20201112 10:14:03.350" endtime="20201112 10:14:03.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.366" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.365" endtime="20201112 10:14:03.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.369" level="INFO">VALUE: [5.639000000001726e-06, 5.6529999999978264e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.665999999997923e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.666999999997396e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6529999999978264e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.367" endtime="20201112 10:14:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.363" endtime="20201112 10:14:03.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.372" endtime="20201112 10:14:03.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.376" endtime="20201112 10:14:03.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.374" endtime="20201112 10:14:03.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.371" endtime="20201112 10:14:03.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.007" endtime="20201112 10:14:03.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.006" endtime="20201112 10:14:03.397"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.406" endtime="20201112 10:14:03.423"></status>
</kw>
<msg timestamp="20201112 10:14:03.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.404" endtime="20201112 10:14:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.424" endtime="20201112 10:14:03.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.427" endtime="20201112 10:14:03.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.401" endtime="20201112 10:14:03.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.399" endtime="20201112 10:14:03.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.437" endtime="20201112 10:14:03.723"></status>
</kw>
<msg timestamp="20201112 10:14:03.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.435" endtime="20201112 10:14:03.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.727" endtime="20201112 10:14:03.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.736" endtime="20201112 10:14:03.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.433" endtime="20201112 10:14:03.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.431" endtime="20201112 10:14:03.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.742" level="INFO">${RESULT} = [{'time': 0.023179986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.023190375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.739" endtime="20201112 10:14:03.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.756" level="INFO">${ACCURACY} = {'time': [0.023179986, 0.023190375, 0.023200778, 0.023215333, 0.023228486, 0.023243125, 0.023254194, 0.02327, 0.023283375, 0.023299056, 0.023314319, 0.023327847, 0.023342194, 0.023353125, 0.023369611,...</msg>
<status status="PASS" starttime="20201112 10:14:03.743" endtime="20201112 10:14:03.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.761" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.760" endtime="20201112 10:14:03.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.763" level="INFO">VALUE: [5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.61199999999859e-06, 5.597000000003016e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.762" endtime="20201112 10:14:03.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.757" endtime="20201112 10:14:03.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.767" endtime="20201112 10:14:03.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.770" endtime="20201112 10:14:03.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.769" endtime="20201112 10:14:03.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.765" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.398" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.397" endtime="20201112 10:14:03.791"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.800" endtime="20201112 10:14:03.814"></status>
</kw>
<msg timestamp="20201112 10:14:03.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.798" endtime="20201112 10:14:03.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.816" endtime="20201112 10:14:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.818" endtime="20201112 10:14:03.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.796" endtime="20201112 10:14:03.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.794" endtime="20201112 10:14:03.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.828" endtime="20201112 10:14:04.114"></status>
</kw>
<msg timestamp="20201112 10:14:04.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.827" endtime="20201112 10:14:04.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.118" endtime="20201112 10:14:04.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.126" endtime="20201112 10:14:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.824" endtime="20201112 10:14:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.823" endtime="20201112 10:14:04.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.133" level="INFO">${RESULT} = [{'time': 0.020552181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.020564736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:04.129" endtime="20201112 10:14:04.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.146" level="INFO">${ACCURACY} = {'time': [0.020552181, 0.020564736, 0.02058125, 0.020596472, 0.020613167, 0.020629569, 0.020642042, 0.020652458, 0.02066825, 0.020684056, 0.020698708, 0.020715556, 0.020730208, 0.020743514, 0.02075515...</msg>
<status status="PASS" starttime="20201112 10:14:04.134" endtime="20201112 10:14:04.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.150" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.149" endtime="20201112 10:14:04.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.153" level="INFO">VALUE: [5.61199999999859e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.638000000002252e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.61199999999859e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.151" endtime="20201112 10:14:04.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.147" endtime="20201112 10:14:04.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.157" endtime="20201112 10:14:04.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.160" endtime="20201112 10:14:04.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.158" endtime="20201112 10:14:04.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.155" endtime="20201112 10:14:04.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.792" endtime="20201112 10:14:04.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.792" endtime="20201112 10:14:04.181"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.189" endtime="20201112 10:14:04.208"></status>
</kw>
<msg timestamp="20201112 10:14:04.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.188" endtime="20201112 10:14:04.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.210" endtime="20201112 10:14:04.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.212" endtime="20201112 10:14:04.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.185" endtime="20201112 10:14:04.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.183" endtime="20201112 10:14:04.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.222" endtime="20201112 10:14:04.509"></status>
</kw>
<msg timestamp="20201112 10:14:04.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.221" endtime="20201112 10:14:04.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.513" endtime="20201112 10:14:04.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.522" endtime="20201112 10:14:04.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.218" endtime="20201112 10:14:04.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.216" endtime="20201112 10:14:04.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.528" level="INFO">${RESULT} = [{'time': 0.022926208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.022941833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.525" endtime="20201112 10:14:04.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.542" level="INFO">${ACCURACY} = {'time': [0.022926208, 0.022941833, 0.022957847, 0.022971556, 0.022983097, 0.022996819, 0.023011583, 0.023028222, 0.023042028, 0.023057431, 0.023071458, 0.023086292, 0.023102333, 0.023115444, 0.023125...</msg>
<status status="PASS" starttime="20201112 10:14:04.529" endtime="20201112 10:14:04.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.546" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.545" endtime="20201112 10:14:04.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.549" level="INFO">VALUE: [5.624999999998687e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.651999999998353e-06, 5.665999999997923e-06, 5.610999999999117e-06, 5.679999999997493e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.59800000000249e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.666000000001392e-06, 5.652000000001822e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.547" endtime="20201112 10:14:04.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.542" endtime="20201112 10:14:04.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.552" endtime="20201112 10:14:04.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.556" endtime="20201112 10:14:04.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.554" endtime="20201112 10:14:04.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.550" endtime="20201112 10:14:04.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.182" endtime="20201112 10:14:04.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.181" endtime="20201112 10:14:04.576"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.585" endtime="20201112 10:14:04.604"></status>
</kw>
<msg timestamp="20201112 10:14:04.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.583" endtime="20201112 10:14:04.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.605" endtime="20201112 10:14:04.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.608" endtime="20201112 10:14:04.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.581" endtime="20201112 10:14:04.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.579" endtime="20201112 10:14:04.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.618" endtime="20201112 10:14:04.904"></status>
</kw>
<msg timestamp="20201112 10:14:04.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.616" endtime="20201112 10:14:04.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.908" endtime="20201112 10:14:04.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.917" endtime="20201112 10:14:04.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.614" endtime="20201112 10:14:04.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.612" endtime="20201112 10:14:04.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.923" level="INFO">${RESULT} = [{'time': 0.024104583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.024115056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.920" endtime="20201112 10:14:04.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.937" level="INFO">${ACCURACY} = {'time': [0.024104583, 0.024115056, 0.024131806, 0.024146139, 0.024157042, 0.024169528, 0.024185417, 0.024197097, 0.024208083, 0.024224458, 0.024241042, 0.024255111, 0.024269083, 0.024279764, 0.024290...</msg>
<status status="PASS" starttime="20201112 10:14:04.924" endtime="20201112 10:14:04.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.941" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.940" endtime="20201112 10:14:04.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.944" level="INFO">VALUE: [5.610999999999117e-06, 5.61199999999859e-06, 5.61199999999859e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.666000000001392e-06, 5.554999999997368e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.638000000002252e-06, 5.708000000000102e-06, 5.6529999999978264e-06, 5.7089999999995755e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.942" endtime="20201112 10:14:04.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.938" endtime="20201112 10:14:04.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.947" endtime="20201112 10:14:04.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.951" endtime="20201112 10:14:04.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.949" endtime="20201112 10:14:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.946" endtime="20201112 10:14:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.577" endtime="20201112 10:14:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.577" endtime="20201112 10:14:04.972"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.980" endtime="20201112 10:14:04.995"></status>
</kw>
<msg timestamp="20201112 10:14:04.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.979" endtime="20201112 10:14:04.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.997" endtime="20201112 10:14:04.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.999" endtime="20201112 10:14:05.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.976" endtime="20201112 10:14:05.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.974" endtime="20201112 10:14:05.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.009" endtime="20201112 10:14:05.294"></status>
</kw>
<msg timestamp="20201112 10:14:05.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:05.008" endtime="20201112 10:14:05.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:05.298" endtime="20201112 10:14:05.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.307" endtime="20201112 10:14:05.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.005" endtime="20201112 10:14:05.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.003" endtime="20201112 10:14:05.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.314" level="INFO">${RESULT} = [{'time': 0.0208995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.02091025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:05.310" endtime="20201112 10:14:05.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.329" level="INFO">${ACCURACY} = {'time': [0.0208995, 0.02091025, 0.020923958, 0.020939028, 0.020955681, 0.020969819, 0.020983653, 0.020995292, 0.021008681, 0.021020194, 0.021032278, 0.021044472, 0.021055514, 0.021070986, 0.021081597...</msg>
<status status="PASS" starttime="20201112 10:14:05.315" endtime="20201112 10:14:05.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.334" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.333" endtime="20201112 10:14:05.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.336" level="INFO">VALUE: [5.653000000001296e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.638000000002252e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.555000000000837e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.335" endtime="20201112 10:14:05.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.330" endtime="20201112 10:14:05.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.340" endtime="20201112 10:14:05.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.344" endtime="20201112 10:14:05.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.342" endtime="20201112 10:14:05.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.338" endtime="20201112 10:14:05.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.972" endtime="20201112 10:14:05.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.972" endtime="20201112 10:14:05.365"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.374" endtime="20201112 10:14:05.395"></status>
</kw>
<msg timestamp="20201112 10:14:05.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.372" endtime="20201112 10:14:05.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.397" endtime="20201112 10:14:05.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.399" endtime="20201112 10:14:05.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.370" endtime="20201112 10:14:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.367" endtime="20201112 10:14:05.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.410" endtime="20201112 10:14:05.721"></status>
</kw>
<msg timestamp="20201112 10:14:05.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.408" endtime="20201112 10:14:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.726" endtime="20201112 10:14:05.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.734" endtime="20201112 10:14:05.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.406" endtime="20201112 10:14:05.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.404" endtime="20201112 10:14:05.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.741" level="INFO">${RESULT} = [{'time': 0.024857236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.024869375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.738" endtime="20201112 10:14:05.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.755" level="INFO">${ACCURACY} = {'time': [0.024857236, 0.024869375, 0.024882153, 0.024894917, 0.024907486, 0.024918722, 0.024932444, 0.024946069, 0.024959667, 0.024972847, 0.024987194, 0.025001833, 0.025012333, 0.025023639, 0.025037...</msg>
<status status="PASS" starttime="20201112 10:14:05.742" endtime="20201112 10:14:05.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.760" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.759" endtime="20201112 10:14:05.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.762" level="INFO">VALUE: [5.569000000000407e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.666000000001392e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.638000000002252e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.5689999999969375e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.761" endtime="20201112 10:14:05.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.756" endtime="20201112 10:14:05.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.766" endtime="20201112 10:14:05.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.770" endtime="20201112 10:14:05.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.768" endtime="20201112 10:14:05.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.765" endtime="20201112 10:14:05.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.366" endtime="20201112 10:14:05.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.365" endtime="20201112 10:14:05.791"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.800" endtime="20201112 10:14:05.820"></status>
</kw>
<msg timestamp="20201112 10:14:05.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.798" endtime="20201112 10:14:05.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.821" endtime="20201112 10:14:05.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.824" endtime="20201112 10:14:05.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.796" endtime="20201112 10:14:05.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.793" endtime="20201112 10:14:05.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.835" endtime="20201112 10:14:06.123"></status>
</kw>
<msg timestamp="20201112 10:14:06.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025693292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.833" endtime="20201112 10:14:06.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025693292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.127" endtime="20201112 10:14:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.136" endtime="20201112 10:14:06.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.830" endtime="20201112 10:14:06.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.828" endtime="20201112 10:14:06.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.143" level="INFO">${RESULT} = [{'time': 0.025693292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.025704389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.139" endtime="20201112 10:14:06.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.157" level="INFO">${ACCURACY} = {'time': [0.025693292, 0.025704389, 0.025718778, 0.025732139, 0.025743458, 0.025759361, 0.025774625, 0.025786264, 0.025797181, 0.025811319, 0.025827333, 0.025841833, 0.025856944, 0.025872, 0.025887806...</msg>
<status status="PASS" starttime="20201112 10:14:06.144" endtime="20201112 10:14:06.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.161" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.160" endtime="20201112 10:14:06.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.164" level="INFO">VALUE: [5.6389999999982565e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.679999999997493e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.666000000001392e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.722000000003141e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.163" endtime="20201112 10:14:06.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.158" endtime="20201112 10:14:06.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.168" endtime="20201112 10:14:06.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.171" endtime="20201112 10:14:06.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.170" endtime="20201112 10:14:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.166" endtime="20201112 10:14:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.792" endtime="20201112 10:14:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.791" endtime="20201112 10:14:06.192"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.201" endtime="20201112 10:14:06.220"></status>
</kw>
<msg timestamp="20201112 10:14:06.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.200" endtime="20201112 10:14:06.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.221" endtime="20201112 10:14:06.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.224" endtime="20201112 10:14:06.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.197" endtime="20201112 10:14:06.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.195" endtime="20201112 10:14:06.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.235" endtime="20201112 10:14:06.520"></status>
</kw>
<msg timestamp="20201112 10:14:06.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020956958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.233" endtime="20201112 10:14:06.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020956958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.524" endtime="20201112 10:14:06.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.533" endtime="20201112 10:14:06.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.230" endtime="20201112 10:14:06.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.229" endtime="20201112 10:14:06.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.540" level="INFO">${RESULT} = [{'time': 0.020956958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.020986778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.536" endtime="20201112 10:14:06.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.554" level="INFO">${ACCURACY} = {'time': [0.020956958, 0.020986778, 0.021017403, 0.021047681, 0.021078639, 0.021109125, 0.021139528, 0.021170444, 0.021200611, 0.0212315, 0.021261667, 0.021292181, 0.021322528, 0.021353403, 0.02138420...</msg>
<status status="PASS" starttime="20201112 10:14:06.541" endtime="20201112 10:14:06.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.559" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.558" endtime="20201112 10:14:06.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.561" level="INFO">VALUE: [1.4222000000001234e-05, 2.287500000000206e-05, 2.0028000000001794e-05, 1.994499999999691e-05, 2.284699999999945e-05, 2.5721999999998857e-05, 2.2819999999999785e-05, 2.187500000000106e-05, 2.0930000000002336e-05, 2.093100000000181e-05, 2.4764000000000036e-05, 2.095900000000095e-05, 2.093100000000181e-05, 1.9972000000000045e-05, 2.2901999999998257e-05, 1.901300000000175e-05, 2.5638000000001437e-05, 2.381900000000131e-05, 2.3791999999998176e-05, 2.284699999999945e-05, 2.572299999999833e-05, 1.9028000000000794e-05, 2.093099999999834e-05, 2.287500000000206e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.281900000000031e-05, 2.0929999999998866e-05, 2.283299999999988e-05, 2.188900000000063e-05, 1.9958000000000475e-05, 2.4736000000000896e-05, 1.9014000000001224e-05, 2.095899999999748e-05, 2.4735999999997427e-05, 2.19030000000002e-05, 1.9999999999999185e-05, 2.4736000000000896e-05, 2.094499999999791e-05, 2.0027999999998325e-05, 2.194499999999891e-05, 2.5735999999998427e-05, 2.4750000000000466e-05, 2.3818999999997842e-05, 2.4764000000000036e-05, 2.383300000000088e-05, 1.9972000000000045e-05, 2.4750000000000466e-05, 1.906900000000003e-05, 2.093099999999834e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.560" endtime="20201112 10:14:06.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.555" endtime="20201112 10:14:06.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.565" endtime="20201112 10:14:06.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.569" endtime="20201112 10:14:06.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.567" endtime="20201112 10:14:06.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.563" endtime="20201112 10:14:06.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.193" endtime="20201112 10:14:06.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.193" endtime="20201112 10:14:06.590"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.599" endtime="20201112 10:14:06.618"></status>
</kw>
<msg timestamp="20201112 10:14:06.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.597" endtime="20201112 10:14:06.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.620" endtime="20201112 10:14:06.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.623" endtime="20201112 10:14:06.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.595" endtime="20201112 10:14:06.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.592" endtime="20201112 10:14:06.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.633" endtime="20201112 10:14:06.919"></status>
</kw>
<msg timestamp="20201112 10:14:06.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025528361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.631" endtime="20201112 10:14:06.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025528361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.924" endtime="20201112 10:14:06.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.932" endtime="20201112 10:14:06.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.629" endtime="20201112 10:14:06.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.627" endtime="20201112 10:14:06.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.939" level="INFO">${RESULT} = [{'time': 0.025539722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.025570097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:06.936" endtime="20201112 10:14:06.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.954" level="INFO">${ACCURACY} = {'time': [0.025539722, 0.025570097, 0.025600986, 0.025631194, 0.025661986, 0.025692375, 0.025722736, 0.025753153, 0.025783861, 0.025814639, 0.025845014, 0.025875653, 0.025905431, 0.025936347, 0.025966...</msg>
<status status="PASS" starttime="20201112 10:14:06.940" endtime="20201112 10:14:06.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.959" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.958" endtime="20201112 10:14:06.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.962" level="INFO">VALUE: [1.1361000000001398e-05, 2.0943999999998436e-05, 2.187499999999759e-05, 2.283299999999988e-05, 2.0930000000002336e-05, 2.4791999999999176e-05, 1.9999999999999185e-05, 2.2819999999999785e-05, 2.0958000000001475e-05, 2.4764000000000036e-05, 1.9999999999999185e-05, 2.469499999999819e-05, 1.998699999999909e-05, 2.388899999999916e-05, 2.186100000000149e-05, 2.2819999999999785e-05, 2.188899999999716e-05, 2.2792000000000645e-05, 2.093100000000181e-05, 1.9972000000000045e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.094500000000138e-05, 2.4735999999997427e-05, 2.381900000000131e-05, 2.188900000000063e-05, 2.2792000000000645e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.19030000000002e-05, 2.0943999999998436e-05, 2.19030000000002e-05, 2.381900000000131e-05, 2.3791999999998176e-05, 1.8957999999999475e-05, 1.9000000000001654e-05, 2.4764000000000036e-05, 2.2861999999998495e-05, 2.4764000000000036e-05, 2.5707999999999287e-05, 2.09029999999992e-05, 2.3820000000000785e-05, 2.6665999999998108e-05, 2.2848000000002394e-05, 2.4777999999999606e-05, 2.284699999999945e-05, 2.093100000000181e-05, 2.187499999999759e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.960" endtime="20201112 10:14:06.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.955" endtime="20201112 10:14:06.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.966" endtime="20201112 10:14:06.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.969" endtime="20201112 10:14:06.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.968" endtime="20201112 10:14:06.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.964" endtime="20201112 10:14:06.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.591" endtime="20201112 10:14:06.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.590" endtime="20201112 10:14:06.990"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.000" endtime="20201112 10:14:07.017"></status>
</kw>
<msg timestamp="20201112 10:14:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.998" endtime="20201112 10:14:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.019" endtime="20201112 10:14:07.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.021" endtime="20201112 10:14:07.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.995" endtime="20201112 10:14:07.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.993" endtime="20201112 10:14:07.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.032" endtime="20201112 10:14:07.318"></status>
</kw>
<msg timestamp="20201112 10:14:07.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.030" endtime="20201112 10:14:07.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.322" endtime="20201112 10:14:07.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.331" endtime="20201112 10:14:07.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.028" endtime="20201112 10:14:07.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.026" endtime="20201112 10:14:07.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.338" level="INFO">${RESULT} = [{'time': 0.021974167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5194999999999098e-05, 'source_diff': 1.5194999999999098e-05}, {'time': 0.022004556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.335" endtime="20201112 10:14:07.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.352" level="INFO">${ACCURACY} = {'time': [0.021974167, 0.022004556, 0.022034722, 0.022065694, 0.022095722, 0.022126306, 0.022157556, 0.022187764, 0.022218431, 0.02224875, 0.022279306, 0.022310014, 0.022340375, 0.022370514, 0.0224013...</msg>
<status status="PASS" starttime="20201112 10:14:07.339" endtime="20201112 10:14:07.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.357" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.356" endtime="20201112 10:14:07.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.359" level="INFO">VALUE: [1.5194999999999098e-05, 2.470900000000123e-05, 2.281900000000031e-05, 2.287499999999859e-05, 2.4764000000000036e-05, 2.570899999999876e-05, 2.2833999999999355e-05, 2.19030000000002e-05, 1.997299999999952e-05, 2.483300000000188e-05, 2.19030000000002e-05, 2.188900000000063e-05, 1.9972000000000045e-05, 1.9014000000001224e-05, 2.281900000000031e-05, 2.5721999999998857e-05, 2.186100000000149e-05, 2.4777999999999606e-05, 2.3792000000001645e-05, 2.5750000000001466e-05, 2.1861999999997495e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.0972000000001045e-05, 2.193099999999934e-05, 1.9985999999999615e-05, 2.2791999999997176e-05, 2.366700000000152e-05, 2.0000000000002655e-05, 1.905499999999699e-05, 2.5750000000001466e-05, 2.0915999999999296e-05, 2.4791999999999176e-05, 2.0972000000001045e-05, 2.4750000000000466e-05, 2.3722000000000326e-05, 1.997299999999952e-05, 1.9985999999999615e-05, 2.3792000000001645e-05, 2.0986000000000615e-05, 2.284699999999945e-05, 1.90829999999996e-05, 2.4777999999999606e-05, 2.188900000000063e-05, 2.5735999999998427e-05, 2.381900000000131e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 2.4722000000001326e-05, 1.9943999999997436e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.358" endtime="20201112 10:14:07.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.353" endtime="20201112 10:14:07.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.363" endtime="20201112 10:14:07.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.367" endtime="20201112 10:14:07.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.365" endtime="20201112 10:14:07.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.361" endtime="20201112 10:14:07.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.991" endtime="20201112 10:14:07.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.991" endtime="20201112 10:14:07.388"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.397" endtime="20201112 10:14:07.417"></status>
</kw>
<msg timestamp="20201112 10:14:07.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.395" endtime="20201112 10:14:07.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.418" endtime="20201112 10:14:07.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.421" endtime="20201112 10:14:07.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.392" endtime="20201112 10:14:07.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.390" endtime="20201112 10:14:07.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.432" endtime="20201112 10:14:07.719"></status>
</kw>
<msg timestamp="20201112 10:14:07.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021341722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.430" endtime="20201112 10:14:07.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021341722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.724" endtime="20201112 10:14:07.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.732" endtime="20201112 10:14:07.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.427" endtime="20201112 10:14:07.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.425" endtime="20201112 10:14:07.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.739" level="INFO">${RESULT} = [{'time': 0.021369292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7570000000001066e-05, 'source_diff': 2.7570000000001066e-05}, {'time': 0.021399778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.736" endtime="20201112 10:14:07.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.753" level="INFO">${ACCURACY} = {'time': [0.021369292, 0.021399778, 0.021430708, 0.021460958, 0.021491431, 0.021522069, 0.021552611, 0.021583333, 0.021613347, 0.021643917, 0.021674389, 0.021705403, 0.021735167, 0.021765986, 0.021796...</msg>
<status status="PASS" starttime="20201112 10:14:07.740" endtime="20201112 10:14:07.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.758" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.757" endtime="20201112 10:14:07.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.760" level="INFO">VALUE: [2.7570000000001066e-05, 2.570900000000223e-05, 2.4652000000000007e-05, 1.9985999999999615e-05, 1.998699999999909e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.5764000000001036e-05, 2.283299999999988e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.184700000000192e-05, 1.991700000000124e-05, 2.0944000000001906e-05, 2.569499999999919e-05, 2.19030000000002e-05, 1.9042000000000364e-05, 2.187499999999759e-05, 2.566700000000005e-05, 1.9013999999997755e-05, 2.5707999999999287e-05, 2.284699999999945e-05, 2.4736000000000896e-05, 2.0971999999997576e-05, 2.4777000000000132e-05, 2.4777999999999606e-05, 2.188900000000063e-05, 2.4736000000000896e-05, 1.9943999999997436e-05, 2.1887999999997687e-05, 1.9055999999999934e-05, 1.9999999999999185e-05, 2.2818999999996842e-05, 2.288899999999816e-05, 2.19030000000002e-05, 2.187499999999759e-05, 2.3806000000001215e-05, 2.186099999999802e-05, 2.2806000000000215e-05, 2.294499999999991e-05, 2.0929999999998866e-05, 2.4777999999999606e-05, 2.287499999999859e-05, 2.09029999999992e-05, 2.568099999999962e-05, 2.4791999999999176e-05, 2.1902000000000726e-05, 2.2819999999999785e-05, 2.09029999999992e-05, 2.3805999999997746e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.759" endtime="20201112 10:14:07.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.754" endtime="20201112 10:14:07.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.764" endtime="20201112 10:14:07.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.768" endtime="20201112 10:14:07.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.766" endtime="20201112 10:14:07.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.763" endtime="20201112 10:14:07.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.389" endtime="20201112 10:14:07.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.388" endtime="20201112 10:14:07.789"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.798" endtime="20201112 10:14:07.815"></status>
</kw>
<msg timestamp="20201112 10:14:07.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.796" endtime="20201112 10:14:07.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.817" endtime="20201112 10:14:07.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.820" endtime="20201112 10:14:07.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.794" endtime="20201112 10:14:07.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.791" endtime="20201112 10:14:07.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.830" endtime="20201112 10:14:08.117"></status>
</kw>
<msg timestamp="20201112 10:14:08.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.829" endtime="20201112 10:14:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.122" endtime="20201112 10:14:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.130" endtime="20201112 10:14:08.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.826" endtime="20201112 10:14:08.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.824" endtime="20201112 10:14:08.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.137" level="INFO">${RESULT} = [{'time': 0.022106611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5194000000003094e-05, 'source_diff': 1.5194000000003094e-05}, {'time': 0.022137125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.134" endtime="20201112 10:14:08.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.151" level="INFO">${ACCURACY} = {'time': [0.022106611, 0.022137125, 0.022167181, 0.022198139, 0.022228292, 0.022258639, 0.022289972, 0.022320319, 0.022350375, 0.022381417, 0.022411736, 0.022441667, 0.022472236, 0.022503, 0.02253375,...</msg>
<status status="PASS" starttime="20201112 10:14:08.138" endtime="20201112 10:14:08.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.156" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.155" endtime="20201112 10:14:08.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.158" level="INFO">VALUE: [1.5194000000003094e-05, 2.0958000000001475e-05, 2.3834000000000355e-05, 2.288899999999816e-05, 1.9999999999999185e-05, 2.3820000000000785e-05, 2.19030000000002e-05, 2.2888000000002157e-05, 1.9055999999999934e-05, 2.09029999999992e-05, 2.08890000000031e-05, 2.3805999999997746e-05, 2.0929999999998866e-05, 2.1000000000000185e-05, 2.0944000000001906e-05, 2.3834000000000355e-05, 2.286100000000249e-05, 2.4764000000000036e-05, 2.3790999999998702e-05, 2.283299999999988e-05, 2.5750000000001466e-05, 1.904100000000089e-05, 2.5680000000000147e-05, 1.9985999999999615e-05, 2.4777999999999606e-05, 1.9999999999999185e-05, 2.0944000000001906e-05, 2.380500000000174e-05, 1.906900000000003e-05, 2.2847999999998925e-05, 2.4750000000000466e-05, 1.9972000000000045e-05, 1.9987000000002558e-05, 2.4777999999999606e-05, 2.0986000000000615e-05, 2.4750000000000466e-05, 2.570900000000223e-05, 2.1929999999999866e-05, 2.5778000000000606e-05, 2.3792000000001645e-05, 2.286099999999902e-05, 1.9958000000000475e-05, 2.5735999999998427e-05, 2.5652000000001007e-05, 2.3832999999997412e-05, 2.4736000000000896e-05, 2.5707999999999287e-05, 1.902700000000132e-05, 2.0929999999998866e-05, 2.3749999999999466e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.157" endtime="20201112 10:14:08.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.152" endtime="20201112 10:14:08.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.162" endtime="20201112 10:14:08.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.166" endtime="20201112 10:14:08.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.164" endtime="20201112 10:14:08.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.160" endtime="20201112 10:14:08.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.790" endtime="20201112 10:14:08.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.789" endtime="20201112 10:14:08.187"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.196" endtime="20201112 10:14:08.211"></status>
</kw>
<msg timestamp="20201112 10:14:08.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.194" endtime="20201112 10:14:08.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.213" endtime="20201112 10:14:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.216" endtime="20201112 10:14:08.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.192" endtime="20201112 10:14:08.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.189" endtime="20201112 10:14:08.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.227" endtime="20201112 10:14:08.514"></status>
</kw>
<msg timestamp="20201112 10:14:08.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021104597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.225" endtime="20201112 10:14:08.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021104597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.518" endtime="20201112 10:14:08.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.527" endtime="20201112 10:14:08.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.223" endtime="20201112 10:14:08.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.221" endtime="20201112 10:14:08.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.534" level="INFO">${RESULT} = [{'time': 0.021104597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.09029999999992e-05, 'source_diff': 2.09029999999992e-05}, {'time': 0.021135778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:08.530" endtime="20201112 10:14:08.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.549" level="INFO">${ACCURACY} = {'time': [0.021104597, 0.021135778, 0.021165431, 0.021196431, 0.021227, 0.021257542, 0.021288111, 0.021318194, 0.021349111, 0.021379708, 0.021409722, 0.021440597, 0.021471167, 0.021501139, 0.021532111...</msg>
<status status="PASS" starttime="20201112 10:14:08.535" endtime="20201112 10:14:08.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.553" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.552" endtime="20201112 10:14:08.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.556" level="INFO">VALUE: [2.09029999999992e-05, 2.3806000000001215e-05, 2.093099999999834e-05, 2.57230000000018e-05, 2.5721999999998857e-05, 2.287500000000206e-05, 1.991699999999777e-05, 1.9943999999997436e-05, 2.2792000000000645e-05, 2.5722000000002326e-05, 2.3735999999999896e-05, 2.4735999999997427e-05, 2.091699999999877e-05, 2.384700000000045e-05, 2.5721999999998857e-05, 2.3722000000000326e-05, 2.087500000000006e-05, 2.091700000000224e-05, 2.3806000000001215e-05, 2.286099999999902e-05, 2.187499999999759e-05, 2.186100000000149e-05, 2.2833999999999355e-05, 2.093099999999834e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.0028000000001794e-05, 1.9972000000000045e-05, 2.0944000000001906e-05, 2.4764000000000036e-05, 2.2833999999999355e-05, 2.2819999999999785e-05, 2.4749999999996997e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.187499999999759e-05, 2.5707999999999287e-05, 2.0986000000000615e-05, 2.09029999999992e-05, 2.286099999999902e-05, 2.3806000000001215e-05, 2.1929999999999866e-05, 2.19030000000002e-05, 2.281900000000031e-05, 2.4722000000001326e-05, 2.2819999999999785e-05, 1.9999999999999185e-05, 2.287500000000206e-05, 2.4764000000000036e-05, 2.5707999999999287e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.555" endtime="20201112 10:14:08.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.550" endtime="20201112 10:14:08.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.560" endtime="20201112 10:14:08.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.564" endtime="20201112 10:14:08.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.562" endtime="20201112 10:14:08.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.558" endtime="20201112 10:14:08.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.188" endtime="20201112 10:14:08.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.187" endtime="20201112 10:14:08.585"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.594" endtime="20201112 10:14:08.619"></status>
</kw>
<msg timestamp="20201112 10:14:08.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.592" endtime="20201112 10:14:08.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.620" endtime="20201112 10:14:08.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.623" endtime="20201112 10:14:08.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.589" endtime="20201112 10:14:08.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.587" endtime="20201112 10:14:08.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.634" endtime="20201112 10:14:08.919"></status>
</kw>
<msg timestamp="20201112 10:14:08.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.632" endtime="20201112 10:14:08.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.923" endtime="20201112 10:14:08.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.932" endtime="20201112 10:14:08.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.629" endtime="20201112 10:14:08.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.627" endtime="20201112 10:14:08.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.938" level="INFO">${RESULT} = [{'time': 0.025260431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4237000000000277e-05, 'source_diff': 1.4237000000000277e-05}, {'time': 0.025290847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.935" endtime="20201112 10:14:08.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.955" level="INFO">${ACCURACY} = {'time': [0.025260431, 0.025290847, 0.025321472, 0.025352486, 0.025382139, 0.025412875, 0.025443528, 0.025473694, 0.025504917, 0.02553475, 0.025565458, 0.025596153, 0.025627083, 0.025657194, 0.0256881...</msg>
<status status="PASS" starttime="20201112 10:14:08.939" endtime="20201112 10:14:08.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.960" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.958" endtime="20201112 10:14:08.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.963" level="INFO">VALUE: [1.4237000000000277e-05, 2.4736000000000896e-05, 2.4764000000000036e-05, 2.5750000000001466e-05, 2.0000000000002655e-05, 2.0944000000001906e-05, 2.184699999999845e-05, 2.1888000000001157e-05, 2.3791999999998176e-05, 1.9041999999996895e-05, 2.0915999999999296e-05, 2.094500000000138e-05, 2.387499999999959e-05, 2.0930000000002336e-05, 2.4777999999999606e-05, 1.9972000000000045e-05, 2.3777999999998606e-05, 2.3763999999999036e-05, 2.284699999999945e-05, 2.5735999999998427e-05, 1.9999999999999185e-05, 2.0929999999998866e-05, 2.094500000000138e-05, 2.383300000000088e-05, 1.995899999999995e-05, 2.5652000000001007e-05, 2.4736000000000896e-05, 2.284699999999945e-05, 2.381900000000131e-05, 2.5693999999999717e-05, 2.186099999999802e-05, 2.3750000000002935e-05, 2.0916000000002766e-05, 2.093099999999834e-05, 2.4736000000000896e-05, 1.9985999999999615e-05, 2.4791999999999176e-05, 2.4680000000002617e-05, 2.091699999999877e-05, 2.3777999999998606e-05, 1.9083999999999074e-05, 1.90829999999996e-05, 2.4749999999996997e-05, 2.5707999999999287e-05, 2.095900000000095e-05, 1.9972000000000045e-05, 2.184700000000192e-05, 2.088899999999963e-05, 2.47230000000008e-05, 1.90829999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.961" endtime="20201112 10:14:08.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.956" endtime="20201112 10:14:08.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.967" endtime="20201112 10:14:08.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.971" endtime="20201112 10:14:08.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.970" endtime="20201112 10:14:08.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.965" endtime="20201112 10:14:08.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.586" endtime="20201112 10:14:08.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.585" endtime="20201112 10:14:08.992"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.003" endtime="20201112 10:14:09.020"></status>
</kw>
<msg timestamp="20201112 10:14:09.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.001" endtime="20201112 10:14:09.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.022" endtime="20201112 10:14:09.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.024" endtime="20201112 10:14:09.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.998" endtime="20201112 10:14:09.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.995" endtime="20201112 10:14:09.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.035" endtime="20201112 10:14:09.336"></status>
</kw>
<msg timestamp="20201112 10:14:09.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.033" endtime="20201112 10:14:09.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.340" endtime="20201112 10:14:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.349" endtime="20201112 10:14:09.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.030" endtime="20201112 10:14:09.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.029" endtime="20201112 10:14:09.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.355" level="INFO">${RESULT} = [{'time': 0.024623597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5693999999999717e-05, 'source_diff': 2.5693999999999717e-05}, {'time': 0.024653667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.352" endtime="20201112 10:14:09.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.369" level="INFO">${ACCURACY} = {'time': [0.024623597, 0.024653667, 0.02468425, 0.024715458, 0.024745889, 0.024776611, 0.024806347, 0.024837333, 0.024867722, 0.024897972, 0.024928361, 0.024958931, 0.024989778, 0.025020514, 0.0250505...</msg>
<status status="PASS" starttime="20201112 10:14:09.356" endtime="20201112 10:14:09.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.373" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.372" endtime="20201112 10:14:09.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.376" level="INFO">VALUE: [2.5693999999999717e-05, 2.2833999999999355e-05, 2.188900000000063e-05, 2.0901999999999726e-05, 2.3763999999999036e-05, 1.9944000000000905e-05, 2.0929999999998866e-05, 2.0929999999998866e-05, 2.4790999999999702e-05, 1.9028000000000794e-05, 2.4791999999999176e-05, 2.093100000000181e-05, 2.3735999999999896e-05, 1.9958000000000475e-05, 2.4764000000000036e-05, 2.283299999999988e-05, 1.8957999999999475e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 2.468099999999862e-05, 2.4750000000000466e-05, 2.5736000000001896e-05, 2.3790999999998702e-05, 2.086100000000049e-05, 2.0915999999999296e-05, 2.286099999999902e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 2.4763999999996567e-05, 2.088899999999963e-05, 2.4764000000000036e-05, 2.283299999999988e-05, 2.0000000000002655e-05, 2.093099999999834e-05, 2.4777999999999606e-05, 2.4736000000000896e-05, 2.087500000000006e-05, 2.3749999999999466e-05, 1.9944000000000905e-05, 2.470899999999776e-05, 2.3749999999999466e-05, 2.3777999999998606e-05, 2.283300000000335e-05, 1.9014000000001224e-05, 2.284699999999945e-05, 2.3806000000001215e-05, 2.3834000000000355e-05, 2.3806000000001215e-05, 2.479100000000317e-05, 1.904100000000089e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.374" endtime="20201112 10:14:09.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.370" endtime="20201112 10:14:09.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.379" endtime="20201112 10:14:09.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.383" endtime="20201112 10:14:09.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.381" endtime="20201112 10:14:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.378" endtime="20201112 10:14:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.993" endtime="20201112 10:14:09.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.993" endtime="20201112 10:14:09.404"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.413" endtime="20201112 10:14:09.432"></status>
</kw>
<msg timestamp="20201112 10:14:09.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.411" endtime="20201112 10:14:09.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.434" endtime="20201112 10:14:09.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.436" endtime="20201112 10:14:09.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.408" endtime="20201112 10:14:09.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.406" endtime="20201112 10:14:09.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.446" endtime="20201112 10:14:09.733"></status>
</kw>
<msg timestamp="20201112 10:14:09.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.445" endtime="20201112 10:14:09.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.737" endtime="20201112 10:14:09.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.746" endtime="20201112 10:14:09.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.442" endtime="20201112 10:14:09.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.440" endtime="20201112 10:14:09.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.753" level="INFO">${RESULT} = [{'time': 0.025085208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.522200000000142e-05, 'source_diff': 3.522200000000142e-05}, {'time': 0.025115681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:09.749" endtime="20201112 10:14:09.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.767" level="INFO">${ACCURACY} = {'time': [0.025085208, 0.025115681, 0.025146153, 0.025176556, 0.025207403, 0.025237417, 0.025267597, 0.025298222, 0.025328625, 0.025359292, 0.025390333, 0.025420681, 0.025451306, 0.025481403, 0.025512...</msg>
<status status="PASS" starttime="20201112 10:14:09.754" endtime="20201112 10:14:09.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.772" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.771" endtime="20201112 10:14:09.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.774" level="INFO">VALUE: [3.522200000000142e-05, 2.2764000000001505e-05, 2.4777999999999606e-05, 2.2777999999997606e-05, 2.19030000000002e-05, 2.2806000000000215e-05, 1.8999999999998185e-05, 1.9957999999997006e-05, 2.19030000000002e-05, 2.3819999999997316e-05, 2.4708000000001756e-05, 2.2806000000000215e-05, 2.2847999999998925e-05, 2.0972000000001045e-05, 2.4777999999999606e-05, 2.3819999999997316e-05, 2.2792000000000645e-05, 2.2819999999999785e-05, 2.093099999999834e-05, 2.287499999999859e-05, 2.0943999999998436e-05, 2.1888000000001157e-05, 2.4735999999997427e-05, 2.181899999999931e-05, 1.9042000000000364e-05, 2.0971999999997576e-05, 1.9985999999999615e-05, 1.8999999999998185e-05, 2.093100000000181e-05, 1.9999999999999185e-05, 2.0901999999999726e-05, 2.569499999999919e-05, 2.380500000000174e-05, 2.3790999999998702e-05, 2.566700000000005e-05, 2.0901999999999726e-05, 2.380500000000174e-05, 2.187500000000106e-05, 2.5750000000001466e-05, 1.997299999999952e-05, 2.1958000000002476e-05, 2.1888000000001157e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 2.4749999999996997e-05, 1.9999999999999185e-05, 2.091699999999877e-05, 2.5778000000000606e-05, 2.5735999999998427e-05, 2.380500000000174e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.773" endtime="20201112 10:14:09.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.768" endtime="20201112 10:14:09.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.778" endtime="20201112 10:14:09.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.782" endtime="20201112 10:14:09.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.780" endtime="20201112 10:14:09.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.776" endtime="20201112 10:14:09.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.405" endtime="20201112 10:14:09.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.404" endtime="20201112 10:14:09.803"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.812" endtime="20201112 10:14:09.830"></status>
</kw>
<msg timestamp="20201112 10:14:09.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.810" endtime="20201112 10:14:09.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.831" endtime="20201112 10:14:09.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.834" endtime="20201112 10:14:09.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.807" endtime="20201112 10:14:09.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.805" endtime="20201112 10:14:09.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.845" endtime="20201112 10:14:10.156"></status>
</kw>
<msg timestamp="20201112 10:14:10.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023006, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:09.843" endtime="20201112 10:14:10.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023006, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:10.160" endtime="20201112 10:14:10.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.169" endtime="20201112 10:14:10.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.840" endtime="20201112 10:14:10.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.838" endtime="20201112 10:14:10.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.176" level="INFO">${RESULT} = [{'time': 0.023015486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.486000000002992e-06, 'source_diff': 9.486000000002992e-06}, {'time': 0.023045903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:10.173" endtime="20201112 10:14:10.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.191" level="INFO">${ACCURACY} = {'time': [0.023015486, 0.023045903, 0.023076139, 0.023106181, 0.023136875, 0.023167625, 0.023198153, 0.023228542, 0.023259, 0.023289736, 0.02332, 0.023350972, 0.023381097, 0.023411472, 0.023442458, 0....</msg>
<status status="PASS" starttime="20201112 10:14:10.177" endtime="20201112 10:14:10.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.196" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.195" endtime="20201112 10:14:10.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.198" level="INFO">VALUE: [9.486000000002992e-06, 2.193099999999934e-05, 2.3791999999998176e-05, 2.3834000000000355e-05, 2.093100000000181e-05, 2.286099999999902e-05, 1.991699999999777e-05, 2.470900000000123e-05, 2.4764000000000036e-05, 2.3777999999998606e-05, 2.383300000000088e-05, 2.5708000000002756e-05, 1.9014000000001224e-05, 1.9985999999999615e-05, 2.4764000000000036e-05, 2.284700000000292e-05, 2.095899999999748e-05, 1.9944000000000905e-05, 2.3790999999998702e-05, 2.3804999999998272e-05, 2.286099999999902e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.286100000000249e-05, 2.0986000000000615e-05, 2.187500000000106e-05, 1.9985999999999615e-05, 2.3805999999997746e-05, 2.5735999999998427e-05, 2.187500000000106e-05, 2.4721999999997857e-05, 2.287500000000206e-05, 2.091699999999877e-05, 1.998699999999909e-05, 2.0944000000001906e-05, 2.4750000000000466e-05, 2.3791999999998176e-05, 2.5722000000002326e-05, 1.9972000000000045e-05, 2.4750000000000466e-05, 2.4749999999996997e-05, 2.0848000000000394e-05, 1.9042000000000364e-05, 1.994500000000038e-05, 2.572299999999833e-05, 2.5749999999997997e-05, 2.0985999999997146e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.197" endtime="20201112 10:14:10.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.192" endtime="20201112 10:14:10.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.206" endtime="20201112 10:14:10.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.210" endtime="20201112 10:14:10.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.208" endtime="20201112 10:14:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.205" endtime="20201112 10:14:10.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.804" endtime="20201112 10:14:10.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.803" endtime="20201112 10:14:10.231"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.240" endtime="20201112 10:14:10.257"></status>
</kw>
<msg timestamp="20201112 10:14:10.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.239" endtime="20201112 10:14:10.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.258" endtime="20201112 10:14:10.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.261" endtime="20201112 10:14:10.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.236" endtime="20201112 10:14:10.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.234" endtime="20201112 10:14:10.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.272" endtime="20201112 10:14:10.558"></status>
</kw>
<msg timestamp="20201112 10:14:10.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.270" endtime="20201112 10:14:10.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.562" endtime="20201112 10:14:10.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.571" endtime="20201112 10:14:10.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.267" endtime="20201112 10:14:10.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.266" endtime="20201112 10:14:10.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.578" level="INFO">${RESULT} = [{'time': 0.021734333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0944000000001906e-05, 'source_diff': 2.0944000000001906e-05}, {'time': 0.021764569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.574" endtime="20201112 10:14:10.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.591" level="INFO">${ACCURACY} = {'time': [0.021734333, 0.021764569, 0.02179525, 0.021826083, 0.021856583, 0.021887236, 0.021917556, 0.021947778, 0.021978694, 0.022008847, 0.022039167, 0.022069944, 0.022100306, 0.022130722, 0.0221616...</msg>
<status status="PASS" starttime="20201112 10:14:10.579" endtime="20201112 10:14:10.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.596" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.595" endtime="20201112 10:14:10.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.599" level="INFO">VALUE: [2.0944000000001906e-05, 1.9972000000000045e-05, 2.290299999999773e-05, 2.5721999999998857e-05, 2.0943999999998436e-05, 1.9972000000000045e-05, 2.3792000000001645e-05, 2.4834000000001355e-05, 2.001299999999928e-05, 1.9028000000000794e-05, 2.3791999999998176e-05, 1.9972000000000045e-05, 2.568099999999962e-05, 2.2818999999996842e-05, 2.3791999999998176e-05, 2.1902000000000726e-05, 2.4721999999997857e-05, 2.0013999999998755e-05, 2.0971999999997576e-05, 2.0930000000002336e-05, 2.570899999999876e-05, 2.094499999999791e-05, 2.4750000000000466e-05, 1.9083999999999074e-05, 2.386100000000002e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.3806000000001215e-05, 1.901299999999828e-05, 2.088899999999963e-05, 2.380500000000174e-05, 2.5721999999998857e-05, 2.4791999999999176e-05, 2.5721999999998857e-05, 1.9000000000001654e-05, 2.6624999999998872e-05, 1.995899999999995e-05, 2.4790999999999702e-05, 2.0929999999998866e-05, 2.2806000000000215e-05, 2.0944000000001906e-05, 2.4750000000000466e-05, 2.0943999999998436e-05, 2.4764000000000036e-05, 2.2804999999997272e-05, 2.288900000000163e-05, 2.387499999999959e-05, 2.3806000000001215e-05, 1.9028000000000794e-05, 2.095900000000095e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.597" endtime="20201112 10:14:10.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.592" endtime="20201112 10:14:10.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.603" endtime="20201112 10:14:10.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.606" endtime="20201112 10:14:10.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.605" endtime="20201112 10:14:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.601" endtime="20201112 10:14:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.232" endtime="20201112 10:14:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.231" endtime="20201112 10:14:10.628"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.637" endtime="20201112 10:14:10.653"></status>
</kw>
<msg timestamp="20201112 10:14:10.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.635" endtime="20201112 10:14:10.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.655" endtime="20201112 10:14:10.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.658" endtime="20201112 10:14:10.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.632" endtime="20201112 10:14:10.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.630" endtime="20201112 10:14:10.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.668" endtime="20201112 10:14:10.956"></status>
</kw>
<msg timestamp="20201112 10:14:10.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.667" endtime="20201112 10:14:10.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.960" endtime="20201112 10:14:10.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.968" endtime="20201112 10:14:10.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.664" endtime="20201112 10:14:10.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.662" endtime="20201112 10:14:10.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.975" level="INFO">${RESULT} = [{'time': 0.022167361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.613899999999835e-05, 'source_diff': 1.613899999999835e-05}, {'time': 0.022197514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:10.971" endtime="20201112 10:14:10.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.988" level="INFO">${ACCURACY} = {'time': [0.022167361, 0.022197514, 0.022227847, 0.022258417, 0.02228925, 0.022319417, 0.022350736, 0.022380556, 0.022411653, 0.022441417, 0.02247225, 0.022502361, 0.022533083, 0.022563556, 0.02259420...</msg>
<status status="PASS" starttime="20201112 10:14:10.976" endtime="20201112 10:14:10.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.993" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.992" endtime="20201112 10:14:10.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.995" level="INFO">VALUE: [1.613899999999835e-05, 1.994500000000038e-05, 2.3777999999998606e-05, 2.570899999999876e-05, 2.283299999999988e-05, 2.0000000000002655e-05, 2.5735999999998427e-05, 1.994500000000038e-05, 1.9985999999999615e-05, 2.188900000000063e-05, 2.191699999999977e-05, 2.286099999999902e-05, 2.188899999999716e-05, 2.094499999999791e-05, 2.379100000000217e-05, 1.9972000000000045e-05, 2.19030000000002e-05, 2.0985999999997146e-05, 2.5721999999998857e-05, 2.095899999999748e-05, 2.4777999999999606e-05, 2.188900000000063e-05, 1.8999999999998185e-05, 2.0943999999998436e-05, 2.0944000000001906e-05, 2.3804999999998272e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.19030000000002e-05, 2.5763000000001562e-05, 1.9958000000000475e-05, 2.470900000000123e-05, 2.186100000000149e-05, 2.2804999999997272e-05, 2.4777000000000132e-05, 1.9972000000000045e-05, 2.0929999999998866e-05, 2.3764000000002505e-05, 2.4750000000000466e-05, 2.5735999999998427e-05, 2.4750000000000466e-05, 2.3735999999999896e-05, 2.188900000000063e-05, 2.286099999999902e-05, 2.3777999999998606e-05, 2.281900000000031e-05, 2.3735999999999896e-05, 2.469500000000166e-05, 1.9000000000001654e-05, 2.57230000000018e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.994" endtime="20201112 10:14:10.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.989" endtime="20201112 10:14:10.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.999" endtime="20201112 10:14:11.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.002" endtime="20201112 10:14:11.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.001" endtime="20201112 10:14:11.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.997" endtime="20201112 10:14:11.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.628" endtime="20201112 10:14:11.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.628" endtime="20201112 10:14:11.023"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.032" endtime="20201112 10:14:11.052"></status>
</kw>
<msg timestamp="20201112 10:14:11.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.030" endtime="20201112 10:14:11.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.053" endtime="20201112 10:14:11.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.056" endtime="20201112 10:14:11.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.028" endtime="20201112 10:14:11.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.026" endtime="20201112 10:14:11.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.066" endtime="20201112 10:14:11.352"></status>
</kw>
<msg timestamp="20201112 10:14:11.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.064" endtime="20201112 10:14:11.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.356" endtime="20201112 10:14:11.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.364" endtime="20201112 10:14:11.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.062" endtime="20201112 10:14:11.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.060" endtime="20201112 10:14:11.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.371" level="INFO">${RESULT} = [{'time': 0.023271792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.145900000000104e-05, 'source_diff': 3.145900000000104e-05}, {'time': 0.023301833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.368" endtime="20201112 10:14:11.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.384" level="INFO">${ACCURACY} = {'time': [0.023271792, 0.023301833, 0.023332903, 0.023362819, 0.023393236, 0.023424514, 0.023454917, 0.023484931, 0.023515986, 0.023546194, 0.023576986, 0.023606792, 0.023638181, 0.023668639, 0.023698...</msg>
<status status="PASS" starttime="20201112 10:14:11.372" endtime="20201112 10:14:11.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.389" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.388" endtime="20201112 10:14:11.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.391" level="INFO">VALUE: [3.145900000000104e-05, 2.4764000000000036e-05, 2.469499999999819e-05, 2.3749999999999466e-05, 2.191699999999977e-05, 2.383300000000088e-05, 2.1847999999997925e-05, 1.9014000000001224e-05, 2.566700000000005e-05, 1.9929999999997866e-05, 2.4777999999999606e-05, 2.2848000000002394e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.469500000000166e-05, 2.5680000000000147e-05, 2.2791999999997176e-05, 2.286099999999902e-05, 2.088899999999963e-05, 2.380500000000174e-05, 2.3818999999997842e-05, 2.4722000000001326e-05, 2.2764000000001505e-05, 2.288899999999816e-05, 1.991700000000124e-05, 2.188900000000063e-05, 2.4750000000000466e-05, 1.9944000000000905e-05, 2.468100000000209e-05, 1.9957999999997006e-05, 2.4750000000000466e-05, 2.188900000000063e-05, 2.380500000000174e-05, 2.29030000000012e-05, 2.3792000000001645e-05, 2.4708000000001756e-05, 2.284699999999945e-05, 2.4764000000000036e-05, 1.9929999999997866e-05, 2.091699999999877e-05, 2.4762999999997093e-05, 2.5749999999997997e-05, 2.4763000000000562e-05, 2.4749999999996997e-05, 2.286100000000249e-05, 2.093099999999834e-05, 2.5707999999999287e-05, 2.5707999999999287e-05, 2.3791999999998176e-05, 2.473700000000037e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.390" endtime="20201112 10:14:11.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.385" endtime="20201112 10:14:11.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.395" endtime="20201112 10:14:11.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.398" endtime="20201112 10:14:11.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.397" endtime="20201112 10:14:11.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.393" endtime="20201112 10:14:11.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.024" endtime="20201112 10:14:11.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.024" endtime="20201112 10:14:11.419"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.431" endtime="20201112 10:14:11.455"></status>
</kw>
<msg timestamp="20201112 10:14:11.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.428" endtime="20201112 10:14:11.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.458" endtime="20201112 10:14:11.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.463" endtime="20201112 10:14:11.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.424" endtime="20201112 10:14:11.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.422" endtime="20201112 10:14:11.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.484" endtime="20201112 10:14:11.780"></status>
</kw>
<msg timestamp="20201112 10:14:11.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02910875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029136403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:11.481" endtime="20201112 10:14:11.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02910875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029136403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:11.785" endtime="20201112 10:14:11.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.793" endtime="20201112 10:14:11.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.475" endtime="20201112 10:14:11.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.472" endtime="20201112 10:14:11.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.801" level="INFO">${RESULT} = [{'time': 0.029136403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.765300000000248e-05, 'source_diff': 2.765300000000248e-05}, {'time': 0.029166528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.797" endtime="20201112 10:14:11.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.816" level="INFO">${ACCURACY} = {'time': [0.029136403, 0.029166528, 0.029197153, 0.029227458, 0.029258764, 0.029289278, 0.029318903, 0.029349764, 0.029380806, 0.029410778, 0.029441583, 0.029472361, 0.029502861, 0.029533431, 0.029563...</msg>
<status status="PASS" starttime="20201112 10:14:11.802" endtime="20201112 10:14:11.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.821" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.820" endtime="20201112 10:14:11.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.823" level="INFO">VALUE: [2.765300000000248e-05, 2.3806000000001215e-05, 2.284699999999945e-05, 2.483300000000188e-05, 2.286099999999902e-05, 2.284699999999945e-05, 1.994500000000038e-05, 2.287500000000206e-05, 2.3819999999997316e-05, 2.094499999999791e-05, 2.284699999999945e-05, 1.9985999999999615e-05, 2.5735999999998427e-05, 1.998699999999909e-05, 2.3778000000002075e-05, 2.0944000000001906e-05, 2.2819999999999785e-05, 2.0000000000002655e-05, 2.2777999999997606e-05, 2.287499999999859e-05, 1.9985999999999615e-05, 2.2847999999998925e-05, 1.9985999999999615e-05, 1.902700000000132e-05, 1.9958000000000475e-05, 2.184700000000192e-05, 2.1943999999999436e-05, 2.4764000000000036e-05, 2.091699999999877e-05, 2.188900000000063e-05, 2.3820000000000785e-05, 2.093099999999834e-05, 2.3749999999999466e-05, 2.187500000000106e-05, 2.5735999999998427e-05, 2.286099999999902e-05, 1.9972000000000045e-05, 2.4777000000000132e-05, 2.5708000000002756e-05, 2.0929999999998866e-05, 2.4790999999999702e-05, 2.3818999999997842e-05, 2.3820000000000785e-05, 2.3763999999999036e-05, 2.19030000000002e-05, 2.283299999999988e-05, 2.2806000000000215e-05, 2.19030000000002e-05, 2.5736000000001896e-05, 1.9985999999999615e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.822" endtime="20201112 10:14:11.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.817" endtime="20201112 10:14:11.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.827" endtime="20201112 10:14:11.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.830" endtime="20201112 10:14:11.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.829" endtime="20201112 10:14:11.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.825" endtime="20201112 10:14:11.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.420" endtime="20201112 10:14:11.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.420" endtime="20201112 10:14:11.851"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.860" endtime="20201112 10:14:11.882"></status>
</kw>
<msg timestamp="20201112 10:14:11.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.858" endtime="20201112 10:14:11.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.883" endtime="20201112 10:14:11.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.886" endtime="20201112 10:14:11.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.856" endtime="20201112 10:14:11.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.853" endtime="20201112 10:14:11.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.896" endtime="20201112 10:14:12.181"></status>
</kw>
<msg timestamp="20201112 10:14:12.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.894" endtime="20201112 10:14:12.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.185" endtime="20201112 10:14:12.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.193" endtime="20201112 10:14:12.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.892" endtime="20201112 10:14:12.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.890" endtime="20201112 10:14:12.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.200" level="INFO">${RESULT} = [{'time': 0.024346181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.024376639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:12.197" endtime="20201112 10:14:12.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.214" level="INFO">${ACCURACY} = {'time': [0.024346181, 0.024376639, 0.024406792, 0.024437875, 0.024468069, 0.024498028, 0.024528708, 0.024559278, 0.024590194, 0.024620278, 0.024650736, 0.024681958, 0.024712236, 0.024742833, 0.024773...</msg>
<status status="PASS" starttime="20201112 10:14:12.201" endtime="20201112 10:14:12.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.218" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.217" endtime="20201112 10:14:12.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.221" level="INFO">VALUE: [2.2792000000000645e-05, 2.4764000000000036e-05, 1.9055999999999934e-05, 2.5736000000001896e-05, 2.283299999999988e-05, 1.9986000000003085e-05, 2.4750000000000466e-05, 2.186100000000149e-05, 2.3776999999999132e-05, 1.9013999999997755e-05, 2.4736000000000896e-05, 1.9999999999999185e-05, 2.0929999999998866e-05, 2.0943999999998436e-05, 1.904100000000089e-05, 1.9958000000000475e-05, 2.0000000000002655e-05, 2.187500000000106e-05, 2.4750000000000466e-05, 1.9930000000001336e-05, 2.0944000000001906e-05, 2.568099999999962e-05, 2.0958000000001475e-05, 2.281900000000031e-05, 1.9972000000000045e-05, 2.286100000000249e-05, 2.4750000000000466e-05, 2.088899999999963e-05, 2.1847999999997925e-05, 2.0929999999998866e-05, 2.3818999999997842e-05, 2.095900000000095e-05, 2.186100000000149e-05, 2.4777999999999606e-05, 2.188899999999716e-05, 2.2902000000001727e-05, 2.3820000000000785e-05, 2.3818999999997842e-05, 2.4790999999999702e-05, 2.091699999999877e-05, 2.565300000000048e-05, 1.9985999999999615e-05, 2.570899999999876e-05, 2.19030000000002e-05, 2.0944000000001906e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, 2.0014000000002224e-05, 1.9958000000000475e-05, 1.90829999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.219" endtime="20201112 10:14:12.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.215" endtime="20201112 10:14:12.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.224" endtime="20201112 10:14:12.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.228" endtime="20201112 10:14:12.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.226" endtime="20201112 10:14:12.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.223" endtime="20201112 10:14:12.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.852" endtime="20201112 10:14:12.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.851" endtime="20201112 10:14:12.252"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.270" endtime="20201112 10:14:12.295"></status>
</kw>
<msg timestamp="20201112 10:14:12.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.267" endtime="20201112 10:14:12.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.298" endtime="20201112 10:14:12.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.303" endtime="20201112 10:14:12.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.261" endtime="20201112 10:14:12.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.257" endtime="20201112 10:14:12.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.325" endtime="20201112 10:14:12.615"></status>
</kw>
<msg timestamp="20201112 10:14:12.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038541681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.321" endtime="20201112 10:14:12.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038541681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.620" endtime="20201112 10:14:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.628" endtime="20201112 10:14:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.316" endtime="20201112 10:14:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.312" endtime="20201112 10:14:12.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.635" level="INFO">${RESULT} = [{'time': 0.038541681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.038572139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.632" endtime="20201112 10:14:12.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.648" level="INFO">${ACCURACY} = {'time': [0.038541681, 0.038572139, 0.038602917, 0.038633319, 0.038663861, 0.038694111, 0.038724292, 0.038755444, 0.038785375, 0.038816208, 0.038846181, 0.038876917, 0.038907875, 0.038938236, 0.038969...</msg>
<status status="PASS" starttime="20201112 10:14:12.636" endtime="20201112 10:14:12.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.653" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.652" endtime="20201112 10:14:12.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.656" level="INFO">VALUE: [9.402999999998107e-06, 2.3806000000001215e-05, 2.288899999999816e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.4764000000003505e-05, 1.9999999999999185e-05, 2.380500000000174e-05, 2.3805999999994276e-05, 2.1915999999996827e-05, 2.188899999999716e-05, 2.4735999999997427e-05, 2.566700000000005e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 2.188899999999716e-05, 2.0013999999998755e-05, 2.091700000000224e-05, 2.4763999999996567e-05, 2.181899999999931e-05, 2.1901999999997257e-05, 2.4778000000003075e-05, 1.995899999999995e-05, 2.286099999999902e-05, 2.5707999999999287e-05, 2.090300000000267e-05, 2.279100000000117e-05, 1.9972000000000045e-05, 2.381900000000131e-05, 2.572299999999833e-05, 2.479100000000317e-05, 1.9972000000000045e-05, 2.4763999999996567e-05, 1.9972000000000045e-05, 1.991700000000124e-05, 2.3776999999995663e-05, 2.3778000000002075e-05, 2.286099999999902e-05, 2.2833999999999355e-05, 2.184699999999845e-05, 2.188899999999716e-05, 1.9944000000000905e-05, 2.283299999999988e-05, 2.3792000000001645e-05, 2.3834000000000355e-05, 1.9985999999999615e-05, 2.18890000000041e-05, 2.0943999999994967e-05, 2.570899999999876e-05, 2.3834000000000355e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.654" endtime="20201112 10:14:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.649" endtime="20201112 10:14:12.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.659" endtime="20201112 10:14:12.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.663" endtime="20201112 10:14:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.661" endtime="20201112 10:14:12.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.657" endtime="20201112 10:14:12.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.254" endtime="20201112 10:14:12.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.252" endtime="20201112 10:14:12.684"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.692" endtime="20201112 10:14:12.708"></status>
</kw>
<msg timestamp="20201112 10:14:12.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.691" endtime="20201112 10:14:12.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.709" endtime="20201112 10:14:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.712" endtime="20201112 10:14:12.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.688" endtime="20201112 10:14:12.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.686" endtime="20201112 10:14:12.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.722" endtime="20201112 10:14:13.007"></status>
</kw>
<msg timestamp="20201112 10:14:13.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.721" endtime="20201112 10:14:13.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.012" endtime="20201112 10:14:13.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.020" endtime="20201112 10:14:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.718" endtime="20201112 10:14:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.716" endtime="20201112 10:14:13.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.027" level="INFO">${RESULT} = [{'time': 0.020872306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.020903139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:13.023" endtime="20201112 10:14:13.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.040" level="INFO">${ACCURACY} = {'time': [0.020872306, 0.020903139, 0.020933514, 0.020963708, 0.020994653, 0.021025653, 0.021055597, 0.021086528, 0.021116972, 0.021147667, 0.021177833, 0.021208514, 0.021239278, 0.021269028, 0.021300...</msg>
<status status="PASS" starttime="20201112 10:14:13.028" endtime="20201112 10:14:13.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.045" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.044" endtime="20201112 10:14:13.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.047" level="INFO">VALUE: [1.1375000000000968e-05, 2.284699999999945e-05, 2.5707999999999287e-05, 2.379100000000217e-05, 2.4749999999996997e-05, 2.093099999999834e-05, 2.4764000000000036e-05, 1.994500000000038e-05, 2.4750000000000466e-05, 2.187499999999759e-05, 1.9999999999999185e-05, 2.4777999999999606e-05, 2.570899999999876e-05, 2.187499999999759e-05, 2.283299999999988e-05, 1.9958000000000475e-05, 2.187499999999759e-05, 2.2929999999997397e-05, 2.381900000000131e-05, 2.188900000000063e-05, 2.5707999999999287e-05, 2.4722000000001326e-05, 2.0929999999998866e-05, 2.1916000000000296e-05, 2.091699999999877e-05, 2.280500000000074e-05, 2.3804999999998272e-05, 1.9028000000000794e-05, 2.0943999999998436e-05, 2.3818999999997842e-05, 2.3778000000002075e-05, 2.09029999999992e-05, 1.9958000000000475e-05, 2.379100000000217e-05, 1.997300000000299e-05, 2.0958000000001475e-05, 2.283299999999988e-05, 2.4818999999998842e-05, 2.6680000000001147e-05, 2.095900000000095e-05, 2.4749999999996997e-05, 2.468099999999862e-05, 2.281900000000031e-05, 1.9985999999999615e-05, 2.4778000000003075e-05, 2.19030000000002e-05, 2.4736000000000896e-05, 2.3777999999998606e-05, 2.094500000000138e-05, 2.4792000000002645e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.046" endtime="20201112 10:14:13.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.041" endtime="20201112 10:14:13.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.051" endtime="20201112 10:14:13.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.055" endtime="20201112 10:14:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.053" endtime="20201112 10:14:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.049" endtime="20201112 10:14:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.685" endtime="20201112 10:14:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.684" endtime="20201112 10:14:13.076"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.084" endtime="20201112 10:14:13.104"></status>
</kw>
<msg timestamp="20201112 10:14:13.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.083" endtime="20201112 10:14:13.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.105" endtime="20201112 10:14:13.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.108" endtime="20201112 10:14:13.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.080" endtime="20201112 10:14:13.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.078" endtime="20201112 10:14:13.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.118" endtime="20201112 10:14:13.403"></status>
</kw>
<msg timestamp="20201112 10:14:13.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02066525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:13.116" endtime="20201112 10:14:13.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02066525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:13.407" endtime="20201112 10:14:13.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.415" endtime="20201112 10:14:13.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.114" endtime="20201112 10:14:13.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.112" endtime="20201112 10:14:13.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.422" level="INFO">${RESULT} = [{'time': 0.02066525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8041999999999364e-05, 'source_diff': 1.8041999999999364e-05}, {'time': 0.020696111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:13.419" endtime="20201112 10:14:13.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.437" level="INFO">${ACCURACY} = {'time': [0.02066525, 0.020696111, 0.020726097, 0.020757056, 0.020787375, 0.020818333, 0.020848653, 0.020878972, 0.020909347, 0.020939472, 0.020970778, 0.021000889, 0.021031653, 0.021061833, 0.0210921...</msg>
<status status="PASS" starttime="20201112 10:14:13.423" endtime="20201112 10:14:13.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.441" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.440" endtime="20201112 10:14:13.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.444" level="INFO">VALUE: [1.8041999999999364e-05, 2.0943999999998436e-05, 2.0013999999998755e-05, 2.288899999999816e-05, 2.3806000000001215e-05, 2.0986000000000615e-05, 2.091700000000224e-05, 2.4735999999997427e-05, 2.283299999999988e-05, 2.380500000000174e-05, 2.1805999999999215e-05, 1.9957999999997006e-05, 2.091700000000224e-05, 2.4790999999999702e-05, 2.188900000000063e-05, 2.4707999999998287e-05, 2.4721999999997857e-05, 2.2792000000000645e-05, 2.09029999999992e-05, 2.3763999999999036e-05, 2.3805999999997746e-05, 2.5707999999999287e-05, 2.186099999999802e-05, 2.19030000000002e-05, 2.5708000000002756e-05, 2.087500000000006e-05, 2.19030000000002e-05, 2.186099999999802e-05, 2.4722000000001326e-05, 2.470900000000123e-05, 2.0013999999998755e-05, 2.0915999999999296e-05, 1.9972000000000045e-05, 2.286099999999902e-05, 2.5721999999998857e-05, 2.2792000000000645e-05, 2.0957999999998006e-05, 1.9972000000000045e-05, 2.5666000000000577e-05, 2.286099999999902e-05, 2.287500000000206e-05, 1.9958000000000475e-05, 2.0901999999999726e-05, 2.3762999999999562e-05, 1.9972000000000045e-05, 2.380500000000174e-05, 2.570900000000223e-05, 2.0985999999997146e-05, 2.097299999999705e-05, 2.3804999999998272e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.442" endtime="20201112 10:14:13.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.438" endtime="20201112 10:14:13.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.448" endtime="20201112 10:14:13.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.451" endtime="20201112 10:14:13.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.449" endtime="20201112 10:14:13.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.446" endtime="20201112 10:14:13.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.077" endtime="20201112 10:14:13.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.076" endtime="20201112 10:14:13.472"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.481" endtime="20201112 10:14:13.496"></status>
</kw>
<msg timestamp="20201112 10:14:13.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.479" endtime="20201112 10:14:13.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.498" endtime="20201112 10:14:13.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.500" endtime="20201112 10:14:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.477" endtime="20201112 10:14:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.475" endtime="20201112 10:14:13.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.510" endtime="20201112 10:14:13.796"></status>
</kw>
<msg timestamp="20201112 10:14:13.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.509" endtime="20201112 10:14:13.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.801" endtime="20201112 10:14:13.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.809" endtime="20201112 10:14:13.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.506" endtime="20201112 10:14:13.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.504" endtime="20201112 10:14:13.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.816" level="INFO">${RESULT} = [{'time': 0.021159125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.021189778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:13.812" endtime="20201112 10:14:13.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.830" level="INFO">${ACCURACY} = {'time': [0.021159125, 0.021189778, 0.021220514, 0.021251097, 0.021281069, 0.021311875, 0.021342222, 0.021372792, 0.021403597, 0.021433875, 0.021463833, 0.021494819, 0.021524861, 0.021555625, 0.021586...</msg>
<status status="PASS" starttime="20201112 10:14:13.817" endtime="20201112 10:14:13.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.834" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.833" endtime="20201112 10:14:13.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.837" level="INFO">VALUE: [1.0500000000000093e-05, 2.184699999999845e-05, 2.5778000000000606e-05, 2.283299999999988e-05, 2.0957999999998006e-05, 2.284699999999945e-05, 2.186100000000149e-05, 2.2778000000001075e-05, 2.4804999999999272e-05, 2.188900000000063e-05, 2.4750000000000466e-05, 2.4735999999997427e-05, 1.9028000000000794e-05, 2.284699999999945e-05, 2.3777999999998606e-05, 2.097300000000052e-05, 2.190299999999673e-05, 2.0944000000001906e-05, 2.287500000000206e-05, 2.0013999999998755e-05, 1.9999999999999185e-05, 2.09029999999992e-05, 2.469499999999819e-05, 2.4777999999999606e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 2.279100000000117e-05, 1.9944000000000905e-05, 2.086100000000049e-05, 2.194499999999891e-05, 2.286099999999902e-05, 2.284700000000292e-05, 2.380500000000174e-05, 2.0929999999998866e-05, 2.4764000000000036e-05, 2.2804999999997272e-05, 1.904100000000089e-05, 2.3735999999999896e-05, 2.188900000000063e-05, 2.3818999999997842e-05, 2.2930000000000866e-05, 2.093099999999834e-05, 2.4791999999999176e-05, 2.57230000000018e-05, 2.3749999999999466e-05, 1.895899999999895e-05, 1.9985999999999615e-05, 2.191700000000324e-05, 2.4777999999999606e-05, 2.4792000000002645e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.835" endtime="20201112 10:14:13.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.830" endtime="20201112 10:14:13.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.840" endtime="20201112 10:14:13.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.844" endtime="20201112 10:14:13.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.842" endtime="20201112 10:14:13.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.839" endtime="20201112 10:14:13.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.473" endtime="20201112 10:14:13.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.472" endtime="20201112 10:14:13.865"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.874" endtime="20201112 10:14:13.894"></status>
</kw>
<msg timestamp="20201112 10:14:13.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.872" endtime="20201112 10:14:13.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.895" endtime="20201112 10:14:13.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.898" endtime="20201112 10:14:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.870" endtime="20201112 10:14:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.867" endtime="20201112 10:14:13.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.908" endtime="20201112 10:14:14.194"></status>
</kw>
<msg timestamp="20201112 10:14:14.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025318431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.907" endtime="20201112 10:14:14.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025318431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.198" endtime="20201112 10:14:14.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.207" endtime="20201112 10:14:14.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.904" endtime="20201112 10:14:14.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.902" endtime="20201112 10:14:14.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.213" level="INFO">${RESULT} = [{'time': 0.025346097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7666000000002577e-05, 'source_diff': 2.7666000000002577e-05}, {'time': 0.025376736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:14.210" endtime="20201112 10:14:14.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.227" level="INFO">${ACCURACY} = {'time': [0.025346097, 0.025376736, 0.025406861, 0.025437153, 0.025467667, 0.025498931, 0.025528722, 0.025559111, 0.025589694, 0.025620667, 0.025651458, 0.025681292, 0.025712194, 0.025742458, 0.025773...</msg>
<status status="PASS" starttime="20201112 10:14:14.214" endtime="20201112 10:14:14.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.232" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.230" endtime="20201112 10:14:14.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.234" level="INFO">VALUE: [2.7666000000002577e-05, 2.006900000000103e-05, 2.19030000000002e-05, 2.4791999999999176e-05, 2.287499999999859e-05, 2.3805999999997746e-05, 2.283299999999988e-05, 2.4791999999999176e-05, 2.0943999999998436e-05, 2.569499999999919e-05, 2.4777000000000132e-05, 1.9042000000000364e-05, 2.187500000000106e-05, 1.9972000000000045e-05, 2.284699999999945e-05, 2.097300000000052e-05, 2.093100000000181e-05, 2.283299999999988e-05, 1.9915999999998296e-05, 2.19030000000002e-05, 2.287499999999859e-05, 2.384700000000045e-05, 2.1916000000000296e-05, 2.286099999999902e-05, 2.284700000000292e-05, 2.19030000000002e-05, 2.094499999999791e-05, 2.3792000000001645e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.3806000000001215e-05, 2.2862000000001964e-05, 1.9986000000003085e-05, 2.286099999999902e-05, 2.188900000000063e-05, 2.5708000000002756e-05, 2.093100000000181e-05, 2.2833999999999355e-05, 2.191699999999977e-05, 2.1943999999999436e-05, 2.0944000000001906e-05, 2.3777999999998606e-05, 2.1848000000001394e-05, 2.5722000000002326e-05, 2.2833999999999355e-05, 1.9985999999999615e-05, 1.905500000000046e-05, 2.187500000000106e-05, 2.293100000000034e-05, 2.3820000000000785e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.233" endtime="20201112 10:14:14.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.228" endtime="20201112 10:14:14.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.238" endtime="20201112 10:14:14.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.241" endtime="20201112 10:14:14.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.240" endtime="20201112 10:14:14.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.236" endtime="20201112 10:14:14.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.866" endtime="20201112 10:14:14.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.865" endtime="20201112 10:14:14.262"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.271" endtime="20201112 10:14:14.296"></status>
</kw>
<msg timestamp="20201112 10:14:14.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.269" endtime="20201112 10:14:14.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.297" endtime="20201112 10:14:14.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.300" endtime="20201112 10:14:14.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.267" endtime="20201112 10:14:14.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.265" endtime="20201112 10:14:14.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.310" endtime="20201112 10:14:14.597"></status>
</kw>
<msg timestamp="20201112 10:14:14.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.308" endtime="20201112 10:14:14.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.601" endtime="20201112 10:14:14.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.609" endtime="20201112 10:14:14.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.306" endtime="20201112 10:14:14.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.304" endtime="20201112 10:14:14.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.616" level="INFO">${RESULT} = [{'time': 0.024893653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.091700000000224e-05, 'source_diff': 2.091700000000224e-05}, {'time': 0.024924472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:14.612" endtime="20201112 10:14:14.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.630" level="INFO">${ACCURACY} = {'time': [0.024893653, 0.024924472, 0.024954903, 0.024985639, 0.025015889, 0.025046653, 0.025077292, 0.025107736, 0.025137694, 0.025168722, 0.025198792, 0.025229042, 0.02526, 0.025290292, 0.025321153,...</msg>
<status status="PASS" starttime="20201112 10:14:14.617" endtime="20201112 10:14:14.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.634" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.633" endtime="20201112 10:14:14.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.637" level="INFO">VALUE: [2.091700000000224e-05, 2.004099999999842e-05, 2.184700000000192e-05, 2.187500000000106e-05, 1.994500000000038e-05, 2.3805999999997746e-05, 1.995899999999995e-05, 2.3818999999997842e-05, 1.9985999999999615e-05, 2.281900000000031e-05, 2.187500000000106e-05, 2.470900000000123e-05, 2.39030000000022e-05, 2.4777999999999606e-05, 1.9972000000000045e-05, 2.569500000000266e-05, 2.093100000000181e-05, 1.9027999999997325e-05, 2.4777999999999606e-05, 2.2847999999998925e-05, 1.9985999999999615e-05, 2.3818999999997842e-05, 2.3792000000001645e-05, 2.284699999999945e-05, 2.380500000000174e-05, 2.4777999999999606e-05, 2.094500000000138e-05, 2.19030000000002e-05, 2.286099999999902e-05, 1.9985999999999615e-05, 2.380500000000174e-05, 2.0929999999998866e-05, 1.9944000000000905e-05, 1.905500000000046e-05, 2.4819999999998316e-05, 2.4791999999999176e-05, 1.9999999999999185e-05, 2.2792000000000645e-05, 2.0958000000001475e-05, 2.4764000000000036e-05, 2.5707999999999287e-05, 2.3820000000000785e-05, 2.0944000000001906e-05, 2.095900000000095e-05, 1.894499999999938e-05, 2.2834000000002824e-05, 2.2930000000000866e-05, 2.284699999999945e-05, 2.3791999999998176e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.635" endtime="20201112 10:14:14.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.631" endtime="20201112 10:14:14.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.640" endtime="20201112 10:14:14.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.644" endtime="20201112 10:14:14.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.642" endtime="20201112 10:14:14.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.639" endtime="20201112 10:14:14.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.263" endtime="20201112 10:14:14.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.262" endtime="20201112 10:14:14.665"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.674" endtime="20201112 10:14:14.692"></status>
</kw>
<msg timestamp="20201112 10:14:14.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.672" endtime="20201112 10:14:14.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.694" endtime="20201112 10:14:14.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.696" endtime="20201112 10:14:14.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.669" endtime="20201112 10:14:14.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.667" endtime="20201112 10:14:14.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.706" endtime="20201112 10:14:14.993"></status>
</kw>
<msg timestamp="20201112 10:14:14.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.705" endtime="20201112 10:14:14.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024063347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.998" endtime="20201112 10:14:15.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.006" endtime="20201112 10:14:15.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.702" endtime="20201112 10:14:15.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.700" endtime="20201112 10:14:15.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.013" level="INFO">${RESULT} = [{'time': 0.024074722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.024104847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:15.009" endtime="20201112 10:14:15.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.027" level="INFO">${ACCURACY} = {'time': [0.024074722, 0.024104847, 0.024135319, 0.024165889, 0.024196875, 0.024227167, 0.0242575, 0.024287833, 0.024318208, 0.024349431, 0.024379292, 0.024410208, 0.024441097, 0.024471333, 0.02450198...</msg>
<status status="PASS" starttime="20201112 10:14:15.014" endtime="20201112 10:14:15.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.032" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.031" endtime="20201112 10:14:15.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.034" level="INFO">VALUE: [1.1375000000000968e-05, 1.912499999999831e-05, 2.284699999999945e-05, 1.9985999999999615e-05, 2.5721999999998857e-05, 2.095900000000095e-05, 2.284700000000292e-05, 2.380500000000174e-05, 1.9999999999999185e-05, 2.0014000000002224e-05, 2.188900000000063e-05, 2.188900000000063e-05, 2.4721999999997857e-05, 1.902700000000132e-05, 2.3804999999998272e-05, 2.3749999999999466e-05, 2.19030000000002e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.087499999999659e-05, 1.9958000000000475e-05, 2.0901999999999726e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.286099999999902e-05, 1.9097999999998644e-05, 2.287500000000206e-05, 2.1887999999997687e-05, 2.094499999999791e-05, 2.5735999999998427e-05, 2.29169999999973e-05, 1.9014000000001224e-05, 2.5707999999999287e-05, 2.0958000000001475e-05, 2.384700000000045e-05, 2.5764000000001036e-05, 2.3763999999999036e-05, 2.186100000000149e-05, 2.369500000000066e-05, 2.5736000000001896e-05, 2.4777000000000132e-05, 2.291700000000077e-05, 2.3763999999999036e-05, 1.9999999999999185e-05, 2.191699999999977e-05, 1.8999999999998185e-05, 2.5721999999998857e-05, 2.4776999999996663e-05, 2.19030000000002e-05, 2.4777999999999606e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.033" endtime="20201112 10:14:15.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.028" endtime="20201112 10:14:15.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.038" endtime="20201112 10:14:15.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.041" endtime="20201112 10:14:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.040" endtime="20201112 10:14:15.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.036" endtime="20201112 10:14:15.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.666" endtime="20201112 10:14:15.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.665" endtime="20201112 10:14:15.062"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.071" endtime="20201112 10:14:15.089"></status>
</kw>
<msg timestamp="20201112 10:14:15.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.069" endtime="20201112 10:14:15.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.090" endtime="20201112 10:14:15.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.093" endtime="20201112 10:14:15.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.067" endtime="20201112 10:14:15.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.065" endtime="20201112 10:14:15.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.103" endtime="20201112 10:14:15.389"></status>
</kw>
<msg timestamp="20201112 10:14:15.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023469319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.101" endtime="20201112 10:14:15.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023469319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.393" endtime="20201112 10:14:15.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.402" endtime="20201112 10:14:15.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.099" endtime="20201112 10:14:15.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.097" endtime="20201112 10:14:15.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.409" level="INFO">${RESULT} = [{'time': 0.023469319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8624999999997403e-05, 'source_diff': 2.8624999999997403e-05}, {'time': 0.023500486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:15.405" endtime="20201112 10:14:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.422" level="INFO">${ACCURACY} = {'time': [0.023469319, 0.023500486, 0.023530556, 0.02356125, 0.023591417, 0.023621708, 0.023652236, 0.023683069, 0.023713444, 0.023743889, 0.023774472, 0.023805486, 0.023836167, 0.023866444, 0.0238966...</msg>
<status status="PASS" starttime="20201112 10:14:15.410" endtime="20201112 10:14:15.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.427" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.426" endtime="20201112 10:14:15.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.429" level="INFO">VALUE: [2.8624999999997403e-05, 2.5707999999999287e-05, 2.094500000000138e-05, 2.187499999999759e-05, 1.9985999999999615e-05, 2.0944000000001906e-05, 2.3777999999998606e-05, 2.1902000000000726e-05, 2.5707999999999287e-05, 2.3792000000001645e-05, 2.181900000000278e-05, 2.4708000000001756e-05, 2.1833999999998355e-05, 1.9999999999999185e-05, 2.4764000000000036e-05, 2.570899999999876e-05, 2.572299999999833e-05, 2.4764000000000036e-05, 2.383300000000088e-05, 2.188900000000063e-05, 2.4749999999996997e-05, 2.383300000000088e-05, 2.094499999999791e-05, 2.3790999999998702e-05, 2.283299999999988e-05, 2.4679999999999147e-05, 1.991699999999777e-05, 2.19030000000002e-05, 2.3806000000001215e-05, 2.4763000000000562e-05, 2.286099999999902e-05, 2.187500000000106e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.2749999999998466e-05, 2.3722000000000326e-05, 2.2819999999999785e-05, 2.4750000000000466e-05, 2.0929999999998866e-05, 2.286099999999902e-05, 2.5708000000002756e-05, 2.1916000000000296e-05, 2.2792000000000645e-05, 2.5721999999998857e-05, 2.193099999999934e-05, 2.187500000000106e-05, 2.5721999999998857e-05, 2.2902000000001727e-05, 2.3818999999997842e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.428" endtime="20201112 10:14:15.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.423" endtime="20201112 10:14:15.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.433" endtime="20201112 10:14:15.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.437" endtime="20201112 10:14:15.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.435" endtime="20201112 10:14:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.431" endtime="20201112 10:14:15.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.063" endtime="20201112 10:14:15.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.063" endtime="20201112 10:14:15.458"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.467" endtime="20201112 10:14:15.488"></status>
</kw>
<msg timestamp="20201112 10:14:15.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.465" endtime="20201112 10:14:15.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.489" endtime="20201112 10:14:15.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.492" endtime="20201112 10:14:15.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.462" endtime="20201112 10:14:15.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.460" endtime="20201112 10:14:15.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.502" endtime="20201112 10:14:15.788"></status>
</kw>
<msg timestamp="20201112 10:14:15.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024756903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:15.500" endtime="20201112 10:14:15.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024756903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:15.792" endtime="20201112 10:14:15.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.801" endtime="20201112 10:14:15.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.498" endtime="20201112 10:14:15.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.496" endtime="20201112 10:14:15.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.808" level="INFO">${RESULT} = [{'time': 0.024756903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.09029999999992e-05, 'source_diff': 2.09029999999992e-05}, {'time': 0.024787597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:15.804" endtime="20201112 10:14:15.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.821" level="INFO">${ACCURACY} = {'time': [0.024756903, 0.024787597, 0.024817722, 0.024848319, 0.024879, 0.024909958, 0.024939792, 0.024970944, 0.025001403, 0.025031208, 0.025062347, 0.025092667, 0.025123069, 0.025154097, 0.025184458...</msg>
<status status="PASS" starttime="20201112 10:14:15.809" endtime="20201112 10:14:15.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.826" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.825" endtime="20201112 10:14:15.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.829" level="INFO">VALUE: [2.09029999999992e-05, 2.186100000000149e-05, 1.9014000000001224e-05, 1.9999999999999185e-05, 2.5707999999999287e-05, 2.284699999999945e-05, 1.9027999999997325e-05, 2.3790999999998702e-05, 2.4749999999996997e-05, 2.086100000000049e-05, 2.087500000000006e-05, 1.9999999999999185e-05, 2.4763000000000562e-05, 2.283299999999988e-05, 2.4750000000000466e-05, 2.3722000000000326e-05, 2.179100000000017e-05, 2.1929999999999866e-05, 2.3777999999998606e-05, 2.5707999999999287e-05, 2.5777999999997137e-05, 2.183299999999888e-05, 2.27770000000016e-05, 2.0027999999998325e-05, 2.4764000000000036e-05, 2.19030000000002e-05, 2.0972000000001045e-05, 2.093100000000181e-05, 2.4722000000001326e-05, 2.090300000000267e-05, 2.187499999999759e-05, 2.2792000000000645e-05, 2.0929999999998866e-05, 2.19030000000002e-05, 1.9985999999999615e-05, 2.4721999999997857e-05, 2.0929999999998866e-05, 2.3806000000001215e-05, 1.9999999999999185e-05, 1.8986000000002085e-05, 2.4805999999998746e-05, 2.186100000000149e-05, 2.19030000000002e-05, 2.284699999999945e-05, 2.0944000000001906e-05, 2.0929999999998866e-05, 2.19030000000002e-05, 2.565300000000048e-05, 2.186100000000149e-05, 2.095900000000095e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.827" endtime="20201112 10:14:15.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.822" endtime="20201112 10:14:15.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.832" endtime="20201112 10:14:15.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.836" endtime="20201112 10:14:15.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.834" endtime="20201112 10:14:15.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.831" endtime="20201112 10:14:15.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.459" endtime="20201112 10:14:15.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.458" endtime="20201112 10:14:15.857"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.865" endtime="20201112 10:14:15.883"></status>
</kw>
<msg timestamp="20201112 10:14:15.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.864" endtime="20201112 10:14:15.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.885" endtime="20201112 10:14:15.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.888" endtime="20201112 10:14:15.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.861" endtime="20201112 10:14:15.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.859" endtime="20201112 10:14:15.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.898" endtime="20201112 10:14:16.183"></status>
</kw>
<msg timestamp="20201112 10:14:16.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.896" endtime="20201112 10:14:16.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.188" endtime="20201112 10:14:16.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.196" endtime="20201112 10:14:16.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.893" endtime="20201112 10:14:16.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.892" endtime="20201112 10:14:16.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.203" level="INFO">${RESULT} = [{'time': 0.022870514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0389000000003007e-05, 'source_diff': 1.0389000000003007e-05}, {'time': 0.022900806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:16.200" endtime="20201112 10:14:16.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.216" level="INFO">${ACCURACY} = {'time': [0.022870514, 0.022900806, 0.022930819, 0.022961819, 0.022992208, 0.023023069, 0.023053, 0.023084028, 0.023113931, 0.023144722, 0.023175264, 0.023205486, 0.023235958, 0.02326725, 0.023297611,...</msg>
<status status="PASS" starttime="20201112 10:14:16.204" endtime="20201112 10:14:16.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.221" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.220" endtime="20201112 10:14:16.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.224" level="INFO">VALUE: [1.0389000000003007e-05, 2.095900000000095e-05, 2.286100000000249e-05, 2.4722000000001326e-05, 2.4790999999999702e-05, 1.9944000000000905e-05, 2.287500000000206e-05, 2.2806000000000215e-05, 1.995899999999995e-05, 2.280500000000074e-05, 2.0986000000000615e-05, 2.4764000000000036e-05, 2.2902000000001727e-05, 2.6694000000000717e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 1.993100000000081e-05, 2.283299999999988e-05, 2.19030000000002e-05, 2.383300000000088e-05, 2.4764000000000036e-05, 2.0915999999999296e-05, 2.3764000000002505e-05, 2.3806000000001215e-05, 2.4764000000000036e-05, 2.291700000000077e-05, 1.998699999999909e-05, 2.3819999999997316e-05, 2.5736000000001896e-05, 1.8986000000002085e-05, 2.1791999999999645e-05, 2.4777000000000132e-05, 2.288900000000163e-05, 2.5735999999998427e-05, 2.4708000000001756e-05, 1.9985999999999615e-05, 1.998699999999909e-05, 1.9999999999999185e-05, 2.19030000000002e-05, 1.9000000000001654e-05, 1.9958000000000475e-05, 2.284699999999945e-05, 2.5721999999998857e-05, 2.5792000000000176e-05, 1.9014000000001224e-05, 2.286099999999902e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 2.088899999999963e-05, 2.284700000000292e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.222" endtime="20201112 10:14:16.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.217" endtime="20201112 10:14:16.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.227" endtime="20201112 10:14:16.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.231" endtime="20201112 10:14:16.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.229" endtime="20201112 10:14:16.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.226" endtime="20201112 10:14:16.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.858" endtime="20201112 10:14:16.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.857" endtime="20201112 10:14:16.252"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.260" endtime="20201112 10:14:16.280"></status>
</kw>
<msg timestamp="20201112 10:14:16.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.259" endtime="20201112 10:14:16.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.282" endtime="20201112 10:14:16.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.284" endtime="20201112 10:14:16.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.256" endtime="20201112 10:14:16.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.254" endtime="20201112 10:14:16.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.294" endtime="20201112 10:14:16.581"></status>
</kw>
<msg timestamp="20201112 10:14:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.293" endtime="20201112 10:14:16.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.585" endtime="20201112 10:14:16.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.593" endtime="20201112 10:14:16.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.290" endtime="20201112 10:14:16.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.288" endtime="20201112 10:14:16.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.600" level="INFO">${RESULT} = [{'time': 0.024798319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.024829569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.597" endtime="20201112 10:14:16.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.615" level="INFO">${ACCURACY} = {'time': [0.024798319, 0.024829569, 0.024859736, 0.024890111, 0.024920903, 0.024950889, 0.024981847, 0.025012736, 0.025042611, 0.025073556, 0.025103931, 0.025134708, 0.025164597, 0.025194944, 0.025225...</msg>
<status status="PASS" starttime="20201112 10:14:16.601" endtime="20201112 10:14:16.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.619" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.618" endtime="20201112 10:14:16.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.622" level="INFO">VALUE: [9.429999999997773e-06, 2.283299999999988e-05, 2.0929999999998866e-05, 2.091699999999877e-05, 2.5722000000002326e-05, 2.283299999999988e-05, 2.286100000000249e-05, 2.4764000000000036e-05, 2.181899999999931e-05, 2.2806000000000215e-05, 1.9999999999999185e-05, 2.4777000000000132e-05, 1.9958000000000475e-05, 2.001299999999928e-05, 2.5735999999998427e-05, 2.094499999999791e-05, 1.9985999999999615e-05, 2.19030000000002e-05, 2.094500000000138e-05, 2.3804999999998272e-05, 2.5750000000001466e-05, 2.286100000000249e-05, 1.9985999999999615e-05, 1.9985999999999615e-05, 2.4777999999999606e-05, 2.3818999999997842e-05, 2.2861999999998495e-05, 1.9972000000000045e-05, 2.5749999999997997e-05, 2.091699999999877e-05, 1.9915999999998296e-05, 2.3819999999997316e-05, 2.094500000000138e-05, 2.381900000000131e-05, 2.3832999999997412e-05, 2.0027999999998325e-05, 2.380500000000174e-05, 2.287499999999859e-05, 2.19030000000002e-05, 2.088899999999963e-05, 2.09029999999992e-05, 1.9972000000000045e-05, 2.6708000000000287e-05, 2.4790999999999702e-05, 2.4778000000003075e-05, 2.4805999999998746e-05, 2.0930000000002336e-05, 2.281900000000031e-05, 2.284699999999945e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.620" endtime="20201112 10:14:16.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.616" endtime="20201112 10:14:16.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.626" endtime="20201112 10:14:16.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.629" endtime="20201112 10:14:16.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.628" endtime="20201112 10:14:16.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.624" endtime="20201112 10:14:16.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.253" endtime="20201112 10:14:16.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.252" endtime="20201112 10:14:16.650"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.659" endtime="20201112 10:14:16.677"></status>
</kw>
<msg timestamp="20201112 10:14:16.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.657" endtime="20201112 10:14:16.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.678" endtime="20201112 10:14:16.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.681" endtime="20201112 10:14:16.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.655" endtime="20201112 10:14:16.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.653" endtime="20201112 10:14:16.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.691" endtime="20201112 10:14:16.977"></status>
</kw>
<msg timestamp="20201112 10:14:16.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.689" endtime="20201112 10:14:16.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.982" endtime="20201112 10:14:16.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.990" endtime="20201112 10:14:16.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.687" endtime="20201112 10:14:16.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.685" endtime="20201112 10:14:16.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.997" level="INFO">${RESULT} = [{'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.023278208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.993" endtime="20201112 10:14:16.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.010" level="INFO">${ACCURACY} = {'time': [0.023247125, 0.023278208, 0.023308542, 0.023339542, 0.023369333, 0.023400528, 0.023430417, 0.023461611, 0.02349175, 0.023522653, 0.023552583, 0.023583167, 0.023613639, 0.023643833, 0.0236751...</msg>
<status status="PASS" starttime="20201112 10:14:16.998" endtime="20201112 10:14:17.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.015" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.014" endtime="20201112 10:14:17.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.018" level="INFO">VALUE: [9.458000000000383e-06, 1.9972000000000045e-05, 2.3792000000001645e-05, 2.4750000000000466e-05, 1.9929999999997866e-05, 2.187500000000106e-05, 2.3791999999998176e-05, 1.9985999999999615e-05, 1.9027999999997325e-05, 2.570900000000223e-05, 2.3804999999998272e-05, 1.9985999999999615e-05, 2.2749999999998466e-05, 2.3776999999999132e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.1929999999999866e-05, 2.19030000000002e-05, 2.0943999999998436e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 2.4762999999997093e-05, 1.986099999999949e-05, 1.994500000000038e-05, 2.0929999999998866e-05, 2.0901999999999726e-05, 2.19030000000002e-05, 2.3763999999999036e-05, 2.3776999999999132e-05, 2.09029999999992e-05, 1.904100000000089e-05, 2.570900000000223e-05, 2.29030000000012e-05, 2.286100000000249e-05, 2.183299999999888e-05, 2.2806000000000215e-05, 2.283299999999988e-05, 2.6694000000000717e-05, 2.5721999999998857e-05, 2.094499999999791e-05, 2.0000000000002655e-05, 1.9958000000000475e-05, 2.4764000000000036e-05, 2.091699999999877e-05, 1.991700000000124e-05, 2.3791999999998176e-05, 2.5707999999999287e-05, 2.3820000000000785e-05, 1.8999999999998185e-05, 2.470899999999776e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.016" endtime="20201112 10:14:17.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.011" endtime="20201112 10:14:17.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.021" endtime="20201112 10:14:17.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.025" endtime="20201112 10:14:17.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.023" endtime="20201112 10:14:17.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.020" endtime="20201112 10:14:17.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.651" endtime="20201112 10:14:17.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.650" endtime="20201112 10:14:17.046"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.055" endtime="20201112 10:14:17.073"></status>
</kw>
<msg timestamp="20201112 10:14:17.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.053" endtime="20201112 10:14:17.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.075" endtime="20201112 10:14:17.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.078" endtime="20201112 10:14:17.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.050" endtime="20201112 10:14:17.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.048" endtime="20201112 10:14:17.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.088" endtime="20201112 10:14:17.373"></status>
</kw>
<msg timestamp="20201112 10:14:17.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.086" endtime="20201112 10:14:17.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.377" endtime="20201112 10:14:17.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.386" endtime="20201112 10:14:17.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.084" endtime="20201112 10:14:17.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.082" endtime="20201112 10:14:17.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.392" level="INFO">${RESULT} = [{'time': 0.024320917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.0243515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:17.389" endtime="20201112 10:14:17.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.406" level="INFO">${ACCURACY} = {'time': [0.024320917, 0.0243515, 0.024382417, 0.024412736, 0.024443208, 0.024473722, 0.02450475, 0.024535222, 0.02456525, 0.024595861, 0.024626778, 0.024657222, 0.024687792, 0.024718056, 0.024748986,...</msg>
<status status="PASS" starttime="20201112 10:14:17.393" endtime="20201112 10:14:17.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.410" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.409" endtime="20201112 10:14:17.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.413" level="INFO">VALUE: [5.611000000002586e-06, 2.093100000000181e-05, 2.569499999999919e-05, 2.1929999999999866e-05, 2.284699999999945e-05, 2.188900000000063e-05, 2.191699999999977e-05, 2.5721999999998857e-05, 2.4736000000000896e-05, 2.0013999999998755e-05, 2.3791999999998176e-05, 2.4750000000000466e-05, 2.088899999999963e-05, 1.9055999999999934e-05, 2.286099999999902e-05, 2.3790999999998702e-05, 2.095900000000095e-05, 2.3776999999999132e-05, 2.3735999999999896e-05, 2.5707999999999287e-05, 2.091700000000224e-05, 2.286099999999902e-05, 1.995899999999995e-05, 2.281900000000031e-05, 2.0958000000001475e-05, 2.5693999999999717e-05, 2.187500000000106e-05, 2.187500000000106e-05, 2.184699999999845e-05, 2.4804999999999272e-05, 2.5707999999999287e-05, 2.4750000000000466e-05, 2.093099999999834e-05, 2.287499999999859e-05, 2.187500000000106e-05, 1.9985999999999615e-05, 2.4722000000001326e-05, 1.9985999999999615e-05, 2.2818999999996842e-05, 2.187500000000106e-05, 2.088899999999963e-05, 2.281900000000031e-05, 2.4763000000000562e-05, 2.184700000000192e-05, 2.2763999999998036e-05, 2.383300000000088e-05, 2.093100000000181e-05, 2.5707999999999287e-05, 1.8999999999998185e-05, 2.2819999999999785e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.412" endtime="20201112 10:14:17.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.407" endtime="20201112 10:14:17.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.417" endtime="20201112 10:14:17.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.420" endtime="20201112 10:14:17.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.419" endtime="20201112 10:14:17.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.415" endtime="20201112 10:14:17.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.047" endtime="20201112 10:14:17.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.046" endtime="20201112 10:14:17.441"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.450" endtime="20201112 10:14:17.468"></status>
</kw>
<msg timestamp="20201112 10:14:17.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.448" endtime="20201112 10:14:17.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.470" endtime="20201112 10:14:17.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.472" endtime="20201112 10:14:17.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.446" endtime="20201112 10:14:17.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.444" endtime="20201112 10:14:17.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.483" endtime="20201112 10:14:17.768"></status>
</kw>
<msg timestamp="20201112 10:14:17.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.481" endtime="20201112 10:14:17.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.772" endtime="20201112 10:14:17.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.781" endtime="20201112 10:14:17.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.479" endtime="20201112 10:14:17.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.477" endtime="20201112 10:14:17.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.788" level="INFO">${RESULT} = [{'time': 0.021001236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.021031764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:17.784" endtime="20201112 10:14:17.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.801" level="INFO">${ACCURACY} = {'time': [0.021001236, 0.021031764, 0.021061722, 0.021092417, 0.021122653, 0.021153611, 0.021183986, 0.021214819, 0.021244639, 0.021275625, 0.021306194, 0.021336764, 0.021367097, 0.021397181, 0.021427...</msg>
<status status="PASS" starttime="20201112 10:14:17.789" endtime="20201112 10:14:17.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.806" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.805" endtime="20201112 10:14:17.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.808" level="INFO">VALUE: [1.1346999999998358e-05, 2.3792000000001645e-05, 1.9986000000003085e-05, 2.187499999999759e-05, 1.995899999999995e-05, 2.286099999999902e-05, 2.5721999999998857e-05, 2.5776999999997663e-05, 2.19030000000002e-05, 2.5721999999998857e-05, 1.9985999999999615e-05, 2.5708000000002756e-05, 2.287500000000206e-05, 1.8987000000001558e-05, 2.279100000000117e-05, 2.570899999999876e-05, 2.19030000000002e-05, 2.5722000000002326e-05, 2.095899999999748e-05, 2.091700000000224e-05, 2.57230000000018e-05, 2.093100000000181e-05, 2.19030000000002e-05, 2.0000000000002655e-05, 2.4763000000000562e-05, 2.2833999999999355e-05, 2.4791999999999176e-05, 2.3820000000000785e-05, 2.5792000000000176e-05, 1.997300000000299e-05, 1.9985999999999615e-05, 2.3804999999998272e-05, 2.19030000000002e-05, 1.9985999999999615e-05, 2.283299999999988e-05, 2.088899999999963e-05, 1.995899999999995e-05, 2.4750000000000466e-05, 2.281900000000031e-05, 2.5722000000002326e-05, 2.2833999999999355e-05, 1.9985999999999615e-05, 2.0930000000002336e-05, 2.19030000000002e-05, 2.191699999999977e-05, 2.5680000000000147e-05, 2.086099999999702e-05, 2.1887999999997687e-05, 2.286100000000249e-05, 2.5707999999999287e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.807" endtime="20201112 10:14:17.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.802" endtime="20201112 10:14:17.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.812" endtime="20201112 10:14:17.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.816" endtime="20201112 10:14:17.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.814" endtime="20201112 10:14:17.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.810" endtime="20201112 10:14:17.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.442" endtime="20201112 10:14:17.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.441" endtime="20201112 10:14:17.837"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.846" endtime="20201112 10:14:17.863"></status>
</kw>
<msg timestamp="20201112 10:14:17.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.844" endtime="20201112 10:14:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.864" endtime="20201112 10:14:17.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.867" endtime="20201112 10:14:17.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.842" endtime="20201112 10:14:17.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.840" endtime="20201112 10:14:17.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.877" endtime="20201112 10:14:18.164"></status>
</kw>
<msg timestamp="20201112 10:14:18.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.876" endtime="20201112 10:14:18.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.168" endtime="20201112 10:14:18.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.177" endtime="20201112 10:14:18.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.873" endtime="20201112 10:14:18.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.871" endtime="20201112 10:14:18.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.183" level="INFO">${RESULT} = [{'time': 0.022044236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3374999999998683e-05, 'source_diff': 3.3374999999998683e-05}, {'time': 0.022075014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.180" endtime="20201112 10:14:18.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.198" level="INFO">${ACCURACY} = {'time': [0.022044236, 0.022075014, 0.022104833, 0.022135833, 0.022166, 0.022196569, 0.022226972, 0.022257736, 0.022288083, 0.022319208, 0.022348944, 0.022379306, 0.022410097, 0.022441167, 0.022471375...</msg>
<status status="PASS" starttime="20201112 10:14:18.184" endtime="20201112 10:14:18.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.202" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.201" endtime="20201112 10:14:18.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.205" level="INFO">VALUE: [3.3374999999998683e-05, 2.4777999999999606e-05, 1.902700000000132e-05, 2.4764000000000036e-05, 2.0000000000002655e-05, 2.4750000000000466e-05, 2.0014000000002224e-05, 2.0929999999998866e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 1.9985999999999615e-05, 2.569500000000266e-05, 2.4764000000000036e-05, 2.3806000000001215e-05, 2.188899999999716e-05, 2.4749999999996997e-05, 1.9929999999997866e-05, 2.3790999999998702e-05, 2.098700000000009e-05, 2.4818999999998842e-05, 2.5764000000001036e-05, 2.09029999999992e-05, 2.3833999999996885e-05, 2.2778000000001075e-05, 2.5707999999999287e-05, 2.3818999999997842e-05, 2.0915999999999296e-05, 2.380500000000174e-05, 2.093099999999834e-05, 1.9986000000003085e-05, 2.187500000000106e-05, 2.3763999999999036e-05, 2.4763000000000562e-05, 2.0943999999998436e-05, 2.5735999999998427e-05, 2.4735999999997427e-05, 1.9999999999999185e-05, 2.2819999999999785e-05, 2.093100000000181e-05, 2.4764000000000036e-05, 2.2847999999998925e-05, 2.2847999999998925e-05, 2.0014000000002224e-05, 1.9028000000000794e-05, 2.284699999999945e-05, 2.4778000000003075e-05, 1.994500000000038e-05, 2.0000000000002655e-05, 2.0943999999998436e-05, 2.5693999999999717e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.204" endtime="20201112 10:14:18.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.199" endtime="20201112 10:14:18.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.209" endtime="20201112 10:14:18.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.212" endtime="20201112 10:14:18.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.211" endtime="20201112 10:14:18.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.207" endtime="20201112 10:14:18.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.838" endtime="20201112 10:14:18.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.837" endtime="20201112 10:14:18.233"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.242" endtime="20201112 10:14:18.259"></status>
</kw>
<msg timestamp="20201112 10:14:18.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.240" endtime="20201112 10:14:18.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.261" endtime="20201112 10:14:18.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.263" endtime="20201112 10:14:18.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.238" endtime="20201112 10:14:18.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.236" endtime="20201112 10:14:18.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.274" endtime="20201112 10:14:18.559"></status>
</kw>
<msg timestamp="20201112 10:14:18.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.272" endtime="20201112 10:14:18.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.564" endtime="20201112 10:14:18.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.572" endtime="20201112 10:14:18.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.269" endtime="20201112 10:14:18.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.268" endtime="20201112 10:14:18.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.579" level="INFO">${RESULT} = [{'time': 0.022964819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5722000000002326e-05, 'source_diff': 2.5722000000002326e-05}, {'time': 0.022996014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.575" endtime="20201112 10:14:18.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.592" level="INFO">${ACCURACY} = {'time': [0.022964819, 0.022996014, 0.023026278, 0.023057125, 0.023086833, 0.02311775, 0.023148111, 0.023179194, 0.023209417, 0.023240278, 0.023270125, 0.02330125, 0.023331667, 0.023362028, 0.02339227...</msg>
<status status="PASS" starttime="20201112 10:14:18.580" endtime="20201112 10:14:18.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.597" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.596" endtime="20201112 10:14:18.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.599" level="INFO">VALUE: [2.5722000000002326e-05, 2.5805999999999746e-05, 2.286099999999902e-05, 2.284700000000292e-05, 1.902700000000132e-05, 2.5735999999998427e-05, 2.288899999999816e-05, 2.384700000000045e-05, 1.9042000000000364e-05, 2.4736000000000896e-05, 1.9958000000000475e-05, 2.0957999999998006e-05, 2.2847999999998925e-05, 1.9985999999999615e-05, 1.9027999999997325e-05, 2.0958000000001475e-05, 2.191699999999977e-05, 1.9986000000003085e-05, 2.379100000000217e-05, 2.3777999999998606e-05, 2.3806000000001215e-05, 2.2833999999999355e-05, 1.904100000000089e-05, 2.381900000000131e-05, 2.4722000000001326e-05, 2.0915999999999296e-05, 2.4750000000000466e-05, 2.281900000000031e-05, 2.193099999999934e-05, 2.0971999999997576e-05, 2.283299999999988e-05, 2.3791999999998176e-05, 1.9972000000000045e-05, 2.187500000000106e-05, 2.181899999999931e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 1.9929999999997866e-05, 1.9972000000000045e-05, 2.569499999999919e-05, 1.8971999999999045e-05, 2.3806000000001215e-05, 2.4735999999997427e-05, 2.283299999999988e-05, 2.4750000000000466e-05, 2.287500000000206e-05, 2.5693999999999717e-05, 2.3804999999998272e-05, 2.3818999999997842e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.598" endtime="20201112 10:14:18.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.593" endtime="20201112 10:14:18.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.603" endtime="20201112 10:14:18.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.607" endtime="20201112 10:14:18.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.605" endtime="20201112 10:14:18.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.601" endtime="20201112 10:14:18.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.234" endtime="20201112 10:14:18.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.233" endtime="20201112 10:14:18.627"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.636" endtime="20201112 10:14:18.660"></status>
</kw>
<msg timestamp="20201112 10:14:18.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.635" endtime="20201112 10:14:18.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.662" endtime="20201112 10:14:18.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.664" endtime="20201112 10:14:18.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.632" endtime="20201112 10:14:18.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.630" endtime="20201112 10:14:18.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.674" endtime="20201112 10:14:18.961"></status>
</kw>
<msg timestamp="20201112 10:14:18.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025337847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.673" endtime="20201112 10:14:18.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025337847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.965" endtime="20201112 10:14:18.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.974" endtime="20201112 10:14:18.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.670" endtime="20201112 10:14:18.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.669" endtime="20201112 10:14:18.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.981" level="INFO">${RESULT} = [{'time': 0.025381764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3917000000000955e-05, 'source_diff': 4.3917000000000955e-05}, {'time': 0.025442736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.977" endtime="20201112 10:14:18.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.994" level="INFO">${ACCURACY} = {'time': [0.025381764, 0.025442736, 0.025503736, 0.025565486, 0.025626056, 0.025686958, 0.025748431, 0.025809167, 0.025870153, 0.025931556, 0.025992625, 0.026053625, 0.026114417, 0.026175514, 0.026236...</msg>
<status status="PASS" starttime="20201112 10:14:18.982" endtime="20201112 10:14:18.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.999" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.998" endtime="20201112 10:14:18.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.001" level="INFO">VALUE: [4.3917000000000955e-05, 5.540299999999901e-05, 5.155499999999827e-05, 5.156899999999784e-05, 5.154200000000164e-05, 5.145800000000075e-05, 5.059799999999892e-05, 5.345900000000223e-05, 5.154199999999817e-05, 5.537499999999987e-05, 5.443099999999715e-05, 5.633299999999869e-05, 5.059800000000239e-05, 5.05140000000015e-05, 5.347200000000232e-05, 5.4458000000000284e-05, 5.3457999999999284e-05, 5.059699999999945e-05, 4.963900000000063e-05, 5.155599999999774e-05, 5.048599999999889e-05, 5.545900000000076e-05, 5.441699999999758e-05, 5.156899999999784e-05, 4.968099999999934e-05, 4.966699999999977e-05, 5.433399999999963e-05, 5.441700000000105e-05, 5.157000000000078e-05, 5.537499999999987e-05, 5.0472999999998797e-05, 5.34730000000018e-05, 5.538899999999944e-05, 5.052800000000107e-05, 5.157000000000078e-05, 5.157000000000078e-05, 5.252800000000307e-05, 5.633299999999869e-05, 5.350000000000146e-05, 5.3457999999999284e-05, 5.5263999999999314e-05, 4.9638000000001153e-05, 5.155600000000121e-05, 5.443100000000062e-05, 5.155600000000121e-05, 5.63610000000013e-05, 5.251400000000003e-05, 5.334699999999873e-05, 5.633399999999816e-05, 5.3457999999999284e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.000" endtime="20201112 10:14:19.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.995" endtime="20201112 10:14:19.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.005" endtime="20201112 10:14:19.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.008" endtime="20201112 10:14:19.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.007" endtime="20201112 10:14:19.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.003" endtime="20201112 10:14:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.629" endtime="20201112 10:14:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.628" endtime="20201112 10:14:19.029"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.038" endtime="20201112 10:14:19.061"></status>
</kw>
<msg timestamp="20201112 10:14:19.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.037" endtime="20201112 10:14:19.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.063" endtime="20201112 10:14:19.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.065" endtime="20201112 10:14:19.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.034" endtime="20201112 10:14:19.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.032" endtime="20201112 10:14:19.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.075" endtime="20201112 10:14:19.360"></status>
</kw>
<msg timestamp="20201112 10:14:19.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025387875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025448, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:19.074" endtime="20201112 10:14:19.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025387875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025448, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:19.365" endtime="20201112 10:14:19.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.373" endtime="20201112 10:14:19.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.071" endtime="20201112 10:14:19.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.069" endtime="20201112 10:14:19.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.380" level="INFO">${RESULT} = [{'time': 0.025448, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.012499999999768e-05, 'source_diff': 6.012499999999768e-05}, {'time': 0.025508431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:19.376" endtime="20201112 10:14:19.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.393" level="INFO">${ACCURACY} = {'time': [0.025448, 0.025508431, 0.025569931, 0.025630736, 0.025692264, 0.025752667, 0.025814097, 0.025875208, 0.025935736, 0.025997569, 0.026058458, 0.026119111, 0.026179764, 0.026241083, 0.026302389...</msg>
<status status="PASS" starttime="20201112 10:14:19.381" endtime="20201112 10:14:19.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.398" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.397" endtime="20201112 10:14:19.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.400" level="INFO">VALUE: [6.012499999999768e-05, 5.536200000000324e-05, 5.537499999999987e-05, 4.972200000000204e-05, 5.633299999999869e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.155500000000174e-05, 5.347200000000232e-05, 5.251300000000056e-05, 5.158300000000088e-05, 4.963900000000063e-05, 5.441700000000105e-05, 5.631899999999912e-05, 5.155599999999774e-05, 5.34730000000018e-05, 5.251400000000003e-05, 5.061100000000249e-05, 5.059799999999892e-05, 5.059699999999945e-05, 5.4429999999997675e-05, 5.538899999999944e-05, 5.633400000000163e-05, 5.059699999999945e-05, 5.633300000000216e-05, 5.15409999999987e-05, 4.963900000000063e-05, 5.158299999999741e-05, 5.156999999999731e-05, 5.345900000000223e-05, 5.059699999999945e-05, 5.2471999999997854e-05, 4.961100000000149e-05, 5.631899999999912e-05, 5.156899999999784e-05, 5.251400000000003e-05, 5.154200000000164e-05, 5.631899999999912e-05, 5.243099999999862e-05, 5.643099999999915e-05, 5.5387999999999965e-05, 5.3471999999998854e-05, 5.241699999999905e-05, 5.3444000000003183e-05, 5.634699999999826e-05, 5.251400000000003e-05, 5.53610000000003e-05, 5.634700000000173e-05, 5.251400000000003e-05, 5.061100000000249e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.399" endtime="20201112 10:14:19.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.394" endtime="20201112 10:14:19.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.404" endtime="20201112 10:14:19.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.407" endtime="20201112 10:14:19.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.406" endtime="20201112 10:14:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.402" endtime="20201112 10:14:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.030" endtime="20201112 10:14:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.030" endtime="20201112 10:14:19.428"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.437" endtime="20201112 10:14:19.459"></status>
</kw>
<msg timestamp="20201112 10:14:19.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.436" endtime="20201112 10:14:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.460" endtime="20201112 10:14:19.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.463" endtime="20201112 10:14:19.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.433" endtime="20201112 10:14:19.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.431" endtime="20201112 10:14:19.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.473" endtime="20201112 10:14:19.759"></status>
</kw>
<msg timestamp="20201112 10:14:19.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.472" endtime="20201112 10:14:19.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.763" endtime="20201112 10:14:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.772" endtime="20201112 10:14:19.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.469" endtime="20201112 10:14:19.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.467" endtime="20201112 10:14:19.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.778" level="INFO">${RESULT} = [{'time': 0.023256347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0055000000000646e-05, 'source_diff': 4.0055000000000646e-05}, {'time': 0.023316597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:19.775" endtime="20201112 10:14:19.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.793" level="INFO">${ACCURACY} = {'time': [0.023256347, 0.023316597, 0.023378278, 0.023439069, 0.023500069, 0.0235615, 0.023621917, 0.023683403, 0.023743792, 0.023805208, 0.023866472, 0.023927222, 0.023988667, 0.024049389, 0.02411068...</msg>
<status status="PASS" starttime="20201112 10:14:19.779" endtime="20201112 10:14:19.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.798" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.797" endtime="20201112 10:14:19.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.800" level="INFO">VALUE: [4.0055000000000646e-05, 5.4444000000000714e-05, 5.250000000000046e-05, 5.062499999999859e-05, 5.3430000000000144e-05, 5.531899999999812e-05, 5.545900000000076e-05, 5.543099999999815e-05, 5.161100000000002e-05, 5.345800000000275e-05, 5.53610000000003e-05, 4.963900000000063e-05, 5.44730000000028e-05, 5.062500000000206e-05, 5.441699999999758e-05, 5.058299999999988e-05, 5.2485999999997424e-05, 5.251400000000003e-05, 5.4415999999998105e-05, 5.158299999999741e-05, 5.254199999999917e-05, 5.0637999999998684e-05, 5.638900000000044e-05, 5.6291999999999454e-05, 5.151399999999903e-05, 5.533299999999769e-05, 4.962500000000106e-05, 5.059699999999945e-05, 5.3499999999997994e-05, 5.155500000000174e-05, 5.162499999999959e-05, 5.638900000000044e-05, 5.53480000000002e-05, 5.152699999999913e-05, 5.162499999999959e-05, 5.444500000000019e-05, 5.250000000000046e-05, 5.047199999999932e-05, 5.3457999999999284e-05, 5.25409999999997e-05, 5.063899999999816e-05, 5.054200000000064e-05, 5.631899999999912e-05, 5.350000000000146e-05, 5.061099999999902e-05, 5.3485999999998424e-05, 5.343099999999962e-05, 5.248600000000089e-05, 5.5401999999999535e-05, 5.252700000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.799" endtime="20201112 10:14:19.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.794" endtime="20201112 10:14:19.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.804" endtime="20201112 10:14:19.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.807" endtime="20201112 10:14:19.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.806" endtime="20201112 10:14:19.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.802" endtime="20201112 10:14:19.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.429" endtime="20201112 10:14:19.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.429" endtime="20201112 10:14:19.828"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.837" endtime="20201112 10:14:19.862"></status>
</kw>
<msg timestamp="20201112 10:14:19.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.836" endtime="20201112 10:14:19.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.864" endtime="20201112 10:14:19.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.867" endtime="20201112 10:14:19.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.833" endtime="20201112 10:14:19.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.831" endtime="20201112 10:14:19.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.877" endtime="20201112 10:14:20.162"></status>
</kw>
<msg timestamp="20201112 10:14:20.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.875" endtime="20201112 10:14:20.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.167" endtime="20201112 10:14:20.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.175" endtime="20201112 10:14:20.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.872" endtime="20201112 10:14:20.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.871" endtime="20201112 10:14:20.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.182" level="INFO">${RESULT} = [{'time': 0.025305736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.205499999999836e-05, 'source_diff': 6.205499999999836e-05}, {'time': 0.025366444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:20.178" endtime="20201112 10:14:20.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.195" level="INFO">${ACCURACY} = {'time': [0.025305736, 0.025366444, 0.025428083, 0.025488889, 0.025549833, 0.025610889, 0.025671889, 0.025733194, 0.025794278, 0.025854944, 0.025915583, 0.025976667, 0.026037833, 0.026099417, 0.026159...</msg>
<status status="PASS" starttime="20201112 10:14:20.183" endtime="20201112 10:14:20.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.200" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.199" endtime="20201112 10:14:20.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.202" level="INFO">VALUE: [6.205499999999836e-05, 5.251299999999709e-05, 5.633300000000216e-05, 5.354200000000017e-05, 5.155500000000174e-05, 5.432000000000006e-05, 5.251400000000003e-05, 5.059699999999945e-05, 5.445899999999976e-05, 5.529100000000245e-05, 5.4429999999997675e-05, 5.533399999999716e-05, 5.4415999999998105e-05, 5.441700000000105e-05, 5.2429999999999144e-05, 5.062500000000206e-05, 5.251400000000003e-05, 5.159799999999992e-05, 5.062500000000206e-05, 5.155500000000174e-05, 5.058299999999988e-05, 5.538899999999944e-05, 5.543100000000162e-05, 5.6319999999998593e-05, 5.636099999999783e-05, 5.155600000000121e-05, 5.541699999999858e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.3471999999998854e-05, 5.341700000000005e-05, 5.159700000000045e-05, 5.540299999999901e-05, 5.145900000000023e-05, 5.3499999999997994e-05, 5.443100000000062e-05, 5.062499999999859e-05, 5.4444000000000714e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.533400000000063e-05, 5.441699999999758e-05, 5.154200000000164e-05, 5.543099999999815e-05, 5.538899999999944e-05, 4.967999999999986e-05, 5.25279999999996e-05, 5.345900000000223e-05, 5.154200000000164e-05, 5.059699999999945e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.201" endtime="20201112 10:14:20.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.196" endtime="20201112 10:14:20.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.206" endtime="20201112 10:14:20.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.210" endtime="20201112 10:14:20.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.208" endtime="20201112 10:14:20.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.204" endtime="20201112 10:14:20.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.829" endtime="20201112 10:14:20.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.829" endtime="20201112 10:14:20.231"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.240" endtime="20201112 10:14:20.262"></status>
</kw>
<msg timestamp="20201112 10:14:20.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.239" endtime="20201112 10:14:20.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.264" endtime="20201112 10:14:20.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.266" endtime="20201112 10:14:20.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.236" endtime="20201112 10:14:20.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.234" endtime="20201112 10:14:20.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.276" endtime="20201112 10:14:20.561"></status>
</kw>
<msg timestamp="20201112 10:14:20.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024576764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024638875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.275" endtime="20201112 10:14:20.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024576764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024638875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.565" endtime="20201112 10:14:20.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.573" endtime="20201112 10:14:20.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.272" endtime="20201112 10:14:20.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.270" endtime="20201112 10:14:20.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.580" level="INFO">${RESULT} = [{'time': 0.024638875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.211100000000011e-05, 'source_diff': 6.211100000000011e-05}, {'time': 0.024700167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:20.577" endtime="20201112 10:14:20.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.594" level="INFO">${ACCURACY} = {'time': [0.024638875, 0.024700167, 0.024761528, 0.024822167, 0.024883556, 0.024944167, 0.025004972, 0.025066139, 0.025126917, 0.025188639, 0.025249042, 0.025310542, 0.025371708, 0.025432292, 0.025493...</msg>
<status status="PASS" starttime="20201112 10:14:20.581" endtime="20201112 10:14:20.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.598" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.597" endtime="20201112 10:14:20.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.601" level="INFO">VALUE: [6.211100000000011e-05, 5.538899999999944e-05, 5.050000000000193e-05, 5.343099999999962e-05, 5.538899999999944e-05, 5.154199999999817e-05, 4.9707999999999e-05, 5.438900000000191e-05, 5.343099999999962e-05, 5.4458000000000284e-05, 5.25279999999996e-05, 5.538899999999944e-05, 5.2457999999998284e-05, 5.251400000000003e-05, 5.447299999999933e-05, 5.532000000000106e-05, 5.2485999999997424e-05, 5.25409999999997e-05, 5.3457999999999284e-05, 5.538899999999944e-05, 5.5401999999999535e-05, 5.148599999999989e-05, 5.250000000000046e-05, 5.438899999999844e-05, 5.15409999999987e-05, 5.154199999999817e-05, 5.722299999999861e-05, 5.248600000000089e-05, 5.063900000000163e-05, 5.156899999999784e-05, 5.059699999999945e-05, 5.058299999999988e-05, 5.43609999999993e-05, 5.244400000000218e-05, 4.966600000000029e-05, 5.3457999999999284e-05, 5.4444000000000714e-05, 5.158400000000035e-05, 5.347200000000232e-05, 5.2499999999996994e-05, 5.4415999999998105e-05, 5.157000000000078e-05, 5.530600000000149e-05, 5.251400000000003e-05, 5.344499999999919e-05, 5.341700000000005e-05, 5.631899999999912e-05, 5.2499999999996994e-05, 4.963900000000063e-05, 5.154199999999817e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.599" endtime="20201112 10:14:20.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.595" endtime="20201112 10:14:20.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.609" endtime="20201112 10:14:20.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.612" endtime="20201112 10:14:20.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.611" endtime="20201112 10:14:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.607" endtime="20201112 10:14:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.232" endtime="20201112 10:14:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.232" endtime="20201112 10:14:20.633"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.642" endtime="20201112 10:14:20.664"></status>
</kw>
<msg timestamp="20201112 10:14:20.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.641" endtime="20201112 10:14:20.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.665" endtime="20201112 10:14:20.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.668" endtime="20201112 10:14:20.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.638" endtime="20201112 10:14:20.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.636" endtime="20201112 10:14:20.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.678" endtime="20201112 10:14:20.964"></status>
</kw>
<msg timestamp="20201112 10:14:20.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.676" endtime="20201112 10:14:20.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.969" endtime="20201112 10:14:20.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.977" endtime="20201112 10:14:20.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.674" endtime="20201112 10:14:20.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.672" endtime="20201112 10:14:20.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.984" level="INFO">${RESULT} = [{'time': 0.024064097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.49159999999982e-05, 'source_diff': 6.49159999999982e-05}, {'time': 0.024124556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:20.980" endtime="20201112 10:14:20.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.998" level="INFO">${ACCURACY} = {'time': [0.024064097, 0.024124556, 0.024185681, 0.024247, 0.024308, 0.024369111, 0.024430528, 0.024490736, 0.024551986, 0.024613167, 0.024674292, 0.024735028, 0.024796847, 0.024857736, 0.024918514, 0...</msg>
<status status="PASS" starttime="20201112 10:14:20.985" endtime="20201112 10:14:20.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.002" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.001" endtime="20201112 10:14:21.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.005" level="INFO">VALUE: [6.49159999999982e-05, 4.966699999999977e-05, 5.34730000000018e-05, 5.250000000000046e-05, 5.155600000000121e-05, 5.250000000000046e-05, 5.15279999999986e-05, 5.4429999999997675e-05, 5.251400000000003e-05, 5.151399999999903e-05, 5.63610000000013e-05, 5.440299999999801e-05, 5.538899999999944e-05, 5.2499999999996994e-05, 5.061099999999902e-05, 5.061200000000196e-05, 5.63749999999974e-05, 5.545900000000076e-05, 5.340300000000048e-05, 5.440300000000148e-05, 5.068000000000086e-05, 5.056999999999978e-05, 5.154199999999817e-05, 5.3430000000000144e-05, 5.537499999999987e-05, 5.251400000000003e-05, 5.537499999999987e-05, 5.254199999999917e-05, 5.630499999999955e-05, 5.154200000000164e-05, 5.155499999999827e-05, 5.058400000000282e-05, 5.15140000000025e-05, 5.3430000000000144e-05, 5.536099999999683e-05, 5.250000000000046e-05, 4.963900000000063e-05, 5.445899999999976e-05, 5.066700000000077e-05, 5.451400000000203e-05, 5.347299999999833e-05, 5.3471999999998854e-05, 5.254200000000264e-05, 5.251400000000003e-05, 5.34730000000018e-05, 5.351400000000103e-05, 5.25279999999996e-05, 5.3471999999998854e-05, 4.962500000000106e-05, 5.156899999999784e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.003" endtime="20201112 10:14:21.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.999" endtime="20201112 10:14:21.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.008" endtime="20201112 10:14:21.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.012" endtime="20201112 10:14:21.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.010" endtime="20201112 10:14:21.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.007" endtime="20201112 10:14:21.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.634" endtime="20201112 10:14:21.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.634" endtime="20201112 10:14:21.033"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.042" endtime="20201112 10:14:21.062"></status>
</kw>
<msg timestamp="20201112 10:14:21.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.040" endtime="20201112 10:14:21.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.063" endtime="20201112 10:14:21.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.066" endtime="20201112 10:14:21.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.038" endtime="20201112 10:14:21.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.036" endtime="20201112 10:14:21.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.076" endtime="20201112 10:14:21.362"></status>
</kw>
<msg timestamp="20201112 10:14:21.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.074" endtime="20201112 10:14:21.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021524889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.366" endtime="20201112 10:14:21.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.375" endtime="20201112 10:14:21.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.072" endtime="20201112 10:14:21.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.070" endtime="20201112 10:14:21.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.381" level="INFO">${RESULT} = [{'time': 0.021566778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1889000000003285e-05, 'source_diff': 4.1889000000003285e-05}, {'time': 0.02162775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:21.378" endtime="20201112 10:14:21.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.396" level="INFO">${ACCURACY} = {'time': [0.021566778, 0.02162775, 0.021689181, 0.021749653, 0.021810722, 0.021872431, 0.021933458, 0.021994431, 0.022055486, 0.022116306, 0.022177097, 0.022238097, 0.022298931, 0.022360278, 0.0224208...</msg>
<status status="PASS" starttime="20201112 10:14:21.382" endtime="20201112 10:14:21.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.400" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.399" endtime="20201112 10:14:21.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.403" level="INFO">VALUE: [4.1889000000003285e-05, 5.061100000000249e-05, 5.63619999999973e-05, 5.434699999999973e-05, 5.538899999999944e-05, 5.340300000000048e-05, 5.3443999999999714e-05, 5.445899999999976e-05, 5.6235999999997704e-05, 5.3499999999997994e-05, 5.5429999999998675e-05, 5.530499999999855e-05, 5.348700000000137e-05, 5.159700000000045e-05, 5.05140000000015e-05, 5.159700000000045e-05, 4.966699999999977e-05, 5.345800000000275e-05, 5.156899999999784e-05, 5.350000000000146e-05, 5.531999999999759e-05, 4.963900000000063e-05, 5.5291999999998453e-05, 5.631899999999912e-05, 5.049999999999846e-05, 5.061099999999902e-05, 5.5387999999999965e-05, 5.238899999999991e-05, 5.4444000000000714e-05, 5.054200000000064e-05, 5.251400000000003e-05, 5.541699999999858e-05, 5.433300000000016e-05, 5.061099999999902e-05, 5.3485999999998424e-05, 5.529099999999898e-05, 5.061099999999902e-05, 5.350000000000146e-05, 5.2443999999998714e-05, 5.156900000000131e-05, 5.061099999999902e-05, 5.538899999999944e-05, 5.147200000000032e-05, 5.254199999999917e-05, 5.151399999999903e-05, 5.336100000000177e-05, 5.158399999999688e-05, 5.634699999999826e-05, 5.155600000000121e-05, 5.048599999999889e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.402" endtime="20201112 10:14:21.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.397" endtime="20201112 10:14:21.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.407" endtime="20201112 10:14:21.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.410" endtime="20201112 10:14:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.409" endtime="20201112 10:14:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.405" endtime="20201112 10:14:21.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.034" endtime="20201112 10:14:21.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.033" endtime="20201112 10:14:21.431"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.440" endtime="20201112 10:14:21.463"></status>
</kw>
<msg timestamp="20201112 10:14:21.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.438" endtime="20201112 10:14:21.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.465" endtime="20201112 10:14:21.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.467" endtime="20201112 10:14:21.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.436" endtime="20201112 10:14:21.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.434" endtime="20201112 10:14:21.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.478" endtime="20201112 10:14:21.764"></status>
</kw>
<msg timestamp="20201112 10:14:21.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02520075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025264722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:21.476" endtime="20201112 10:14:21.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02520075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025264722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:21.769" endtime="20201112 10:14:21.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.777" endtime="20201112 10:14:21.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.473" endtime="20201112 10:14:21.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.472" endtime="20201112 10:14:21.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.784" level="INFO">${RESULT} = [{'time': 0.025264722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.397199999999895e-05, 'source_diff': 6.397199999999895e-05}, {'time': 0.025325403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:21.780" endtime="20201112 10:14:21.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.797" level="INFO">${ACCURACY} = {'time': [0.025264722, 0.025325403, 0.025386778, 0.025447931, 0.025508958, 0.025570389, 0.025630931, 0.025692403, 0.025753042, 0.025813792, 0.025875417, 0.02593575, 0.025996736, 0.026057778, 0.0261195...</msg>
<status status="PASS" starttime="20201112 10:14:21.785" endtime="20201112 10:14:21.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.802" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.801" endtime="20201112 10:14:21.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.804" level="INFO">VALUE: [6.397199999999895e-05, 5.155600000000121e-05, 5.3485999999998424e-05, 5.441700000000105e-05, 5.251400000000003e-05, 5.062499999999859e-05, 5.3499999999997994e-05, 5.444500000000019e-05, 4.963900000000063e-05, 5.440299999999801e-05, 5.540300000000248e-05, 4.963900000000063e-05, 5.061099999999902e-05, 5.343099999999962e-05, 5.634699999999826e-05, 5.4471999999999854e-05, 5.441699999999758e-05, 5.631899999999912e-05, 5.245900000000123e-05, 5.248600000000089e-05, 5.252700000000013e-05, 5.437500000000234e-05, 5.155600000000121e-05, 5.636200000000077e-05, 5.148599999999989e-05, 5.348700000000137e-05, 5.53610000000003e-05, 5.2471999999997854e-05, 5.250000000000046e-05, 5.440300000000148e-05, 5.061099999999902e-05, 5.054200000000064e-05, 5.055600000000021e-05, 5.158400000000035e-05, 5.062499999999859e-05, 4.9709000000001946e-05, 5.254199999999917e-05, 5.255499999999927e-05, 5.158299999999741e-05, 5.538899999999944e-05, 5.151399999999903e-05, 4.959700000000192e-05, 5.059699999999945e-05, 5.056999999999978e-05, 5.3485999999998424e-05, 5.53610000000003e-05, 5.530500000000202e-05, 5.061099999999902e-05, 4.9637999999997684e-05, 5.4430000000001144e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.803" endtime="20201112 10:14:21.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.798" endtime="20201112 10:14:21.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.808" endtime="20201112 10:14:21.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.811" endtime="20201112 10:14:21.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.810" endtime="20201112 10:14:21.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.806" endtime="20201112 10:14:21.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.432" endtime="20201112 10:14:21.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.431" endtime="20201112 10:14:21.832"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.841" endtime="20201112 10:14:21.864"></status>
</kw>
<msg timestamp="20201112 10:14:21.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.840" endtime="20201112 10:14:21.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.866" endtime="20201112 10:14:21.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.868" endtime="20201112 10:14:21.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.837" endtime="20201112 10:14:21.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.835" endtime="20201112 10:14:21.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.879" endtime="20201112 10:14:22.165"></status>
</kw>
<msg timestamp="20201112 10:14:22.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.878" endtime="20201112 10:14:22.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.170" endtime="20201112 10:14:22.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.178" endtime="20201112 10:14:22.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.875" endtime="20201112 10:14:22.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.873" endtime="20201112 10:14:22.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.184" level="INFO">${RESULT} = [{'time': 0.020875514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7195000000000283e-05, 'source_diff': 3.7195000000000283e-05}, {'time': 0.020935847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.181" endtime="20201112 10:14:22.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.198" level="INFO">${ACCURACY} = {'time': [0.020875514, 0.020935847, 0.020997556, 0.021058097, 0.021119569, 0.02118075, 0.021241611, 0.021302028, 0.021363444, 0.021424278, 0.021485847, 0.021546194, 0.021607181, 0.021668889, 0.0217297...</msg>
<status status="PASS" starttime="20201112 10:14:22.186" endtime="20201112 10:14:22.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.203" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.202" endtime="20201112 10:14:22.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.205" level="INFO">VALUE: [3.7195000000000283e-05, 5.237500000000034e-05, 5.250000000000046e-05, 5.440300000000148e-05, 5.333300000000263e-05, 5.631900000000259e-05, 5.4444000000000714e-05, 5.247200000000132e-05, 5.5401999999999535e-05, 5.150000000000293e-05, 5.630499999999955e-05, 5.4444000000000714e-05, 5.538899999999944e-05, 5.059699999999945e-05, 5.251400000000003e-05, 5.059699999999945e-05, 5.538899999999944e-05, 5.154199999999817e-05, 5.158300000000088e-05, 5.633300000000216e-05, 5.338900000000091e-05, 5.53610000000003e-05, 5.3457999999999284e-05, 5.144499999999719e-05, 5.155499999999827e-05, 5.538899999999944e-05, 5.345900000000223e-05, 5.6264000000000314e-05, 5.4415999999998105e-05, 5.059699999999945e-05, 5.443099999999715e-05, 5.341700000000005e-05, 5.347200000000232e-05, 5.163899999999916e-05, 4.956900000000278e-05, 5.633399999999816e-05, 5.340300000000048e-05, 5.155600000000121e-05, 5.4458000000000284e-05, 5.244400000000218e-05, 5.441700000000105e-05, 5.250000000000046e-05, 5.059699999999945e-05, 5.25409999999997e-05, 5.538899999999944e-05, 5.059699999999945e-05, 5.241699999999905e-05, 5.251400000000003e-05, 5.444500000000019e-05, 5.537499999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.204" endtime="20201112 10:14:22.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.199" endtime="20201112 10:14:22.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.209" endtime="20201112 10:14:22.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.212" endtime="20201112 10:14:22.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.211" endtime="20201112 10:14:22.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.207" endtime="20201112 10:14:22.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.833" endtime="20201112 10:14:22.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.833" endtime="20201112 10:14:22.233"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.242" endtime="20201112 10:14:22.262"></status>
</kw>
<msg timestamp="20201112 10:14:22.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.241" endtime="20201112 10:14:22.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.263" endtime="20201112 10:14:22.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.266" endtime="20201112 10:14:22.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.238" endtime="20201112 10:14:22.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.236" endtime="20201112 10:14:22.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.276" endtime="20201112 10:14:22.561"></status>
</kw>
<msg timestamp="20201112 10:14:22.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.274" endtime="20201112 10:14:22.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.565" endtime="20201112 10:14:22.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.573" endtime="20201112 10:14:22.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.272" endtime="20201112 10:14:22.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.270" endtime="20201112 10:14:22.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.580" level="INFO">${RESULT} = [{'time': 0.021796208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8138999999999534e-05, 'source_diff': 3.8138999999999534e-05}, {'time': 0.021856528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.577" endtime="20201112 10:14:22.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.593" level="INFO">${ACCURACY} = {'time': [0.021796208, 0.021856528, 0.021918264, 0.021978514, 0.022040069, 0.022101222, 0.022162014, 0.022223458, 0.022283875, 0.022345167, 0.02240575, 0.022467625, 0.022528486, 0.022589194, 0.0226501...</msg>
<status status="PASS" starttime="20201112 10:14:22.581" endtime="20201112 10:14:22.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.598" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.597" endtime="20201112 10:14:22.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.601" level="INFO">VALUE: [3.8138999999999534e-05, 5.3471999999998854e-05, 5.148599999999989e-05, 5.058299999999988e-05, 5.63749999999974e-05, 5.6277999999999884e-05, 5.532000000000106e-05, 5.159700000000045e-05, 5.4444000000000714e-05, 5.15279999999986e-05, 5.531899999999812e-05, 5.252800000000307e-05, 5.154200000000164e-05, 5.054100000000117e-05, 5.15409999999987e-05, 5.4443999999997245e-05, 5.440300000000148e-05, 5.533300000000116e-05, 5.054200000000064e-05, 5.532000000000106e-05, 4.966699999999977e-05, 5.244499999999819e-05, 5.154200000000164e-05, 5.1471999999996854e-05, 5.536199999999977e-05, 5.537500000000334e-05, 5.5305999999998023e-05, 5.3513999999997564e-05, 5.540299999999901e-05, 5.258399999999788e-05, 5.437499999999887e-05, 5.3499999999997994e-05, 5.154199999999817e-05, 5.534700000000073e-05, 4.967999999999986e-05, 5.4485999999999424e-05, 5.059700000000292e-05, 5.438899999999844e-05, 5.247200000000132e-05, 5.056900000000031e-05, 5.443100000000062e-05, 5.351400000000103e-05, 5.247200000000132e-05, 5.43609999999993e-05, 5.541699999999858e-05, 5.343099999999962e-05, 5.53610000000003e-05, 5.059799999999892e-05, 5.056900000000031e-05, 5.440299999999801e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.599" endtime="20201112 10:14:22.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.594" endtime="20201112 10:14:22.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.604" endtime="20201112 10:14:22.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.608" endtime="20201112 10:14:22.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.606" endtime="20201112 10:14:22.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.603" endtime="20201112 10:14:22.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.234" endtime="20201112 10:14:22.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.234" endtime="20201112 10:14:22.629"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.638" endtime="20201112 10:14:22.658"></status>
</kw>
<msg timestamp="20201112 10:14:22.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.636" endtime="20201112 10:14:22.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.660" endtime="20201112 10:14:22.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.662" endtime="20201112 10:14:22.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.633" endtime="20201112 10:14:22.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.631" endtime="20201112 10:14:22.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.672" endtime="20201112 10:14:22.959"></status>
</kw>
<msg timestamp="20201112 10:14:22.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.671" endtime="20201112 10:14:22.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.963" endtime="20201112 10:14:22.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.971" endtime="20201112 10:14:22.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.668" endtime="20201112 10:14:22.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.667" endtime="20201112 10:14:22.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.978" level="INFO">${RESULT} = [{'time': 0.023327792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.963900000000063e-05, 'source_diff': 4.963900000000063e-05}, {'time': 0.023388347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:22.975" endtime="20201112 10:14:22.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.993" level="INFO">${ACCURACY} = {'time': [0.023327792, 0.023388347, 0.023449208, 0.023510319, 0.023571139, 0.023632222, 0.023693264, 0.02375425, 0.023815875, 0.023876625, 0.02393775, 0.023999153, 0.024060056, 0.024120875, 0.0241815,...</msg>
<status status="PASS" starttime="20201112 10:14:22.979" endtime="20201112 10:14:22.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.997" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.996" endtime="20201112 10:14:22.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.000" level="INFO">VALUE: [4.963900000000063e-05, 5.059699999999945e-05, 5.2443999999998714e-05, 5.149999999999946e-05, 5.251400000000003e-05, 5.247200000000132e-05, 5.2471999999997854e-05, 5.155600000000121e-05, 5.530600000000149e-05, 5.537499999999987e-05, 5.441700000000105e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.156900000000131e-05, 5.4444000000000714e-05, 5.433399999999963e-05, 5.633400000000163e-05, 5.537499999999987e-05, 5.157000000000078e-05, 5.4263999999998314e-05, 5.063899999999816e-05, 5.3457999999999284e-05, 5.059699999999945e-05, 5.258299999999841e-05, 5.2499999999996994e-05, 5.626299999999737e-05, 5.4416000000001574e-05, 5.2499999999996994e-05, 5.244500000000166e-05, 5.6277999999999884e-05, 5.254199999999917e-05, 5.244400000000218e-05, 5.441700000000105e-05, 5.537499999999987e-05, 5.061099999999902e-05, 5.341700000000005e-05, 4.962500000000106e-05, 4.963900000000063e-05, 5.4416000000001574e-05, 5.059699999999945e-05, 5.3457999999999284e-05, 5.155600000000121e-05, 5.3485999999998424e-05, 5.3513999999997564e-05, 5.6250000000000744e-05, 5.248600000000089e-05, 5.540299999999901e-05, 5.251400000000003e-05, 5.052800000000107e-05, 5.53480000000002e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.998" endtime="20201112 10:14:23.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.994" endtime="20201112 10:14:23.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.003" endtime="20201112 10:14:23.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.007" endtime="20201112 10:14:23.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.005" endtime="20201112 10:14:23.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.002" endtime="20201112 10:14:23.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.630" endtime="20201112 10:14:23.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.629" endtime="20201112 10:14:23.028"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.037" endtime="20201112 10:14:23.056"></status>
</kw>
<msg timestamp="20201112 10:14:23.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.035" endtime="20201112 10:14:23.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.058" endtime="20201112 10:14:23.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.060" endtime="20201112 10:14:23.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.032" endtime="20201112 10:14:23.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.030" endtime="20201112 10:14:23.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.070" endtime="20201112 10:14:23.357"></status>
</kw>
<msg timestamp="20201112 10:14:23.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.069" endtime="20201112 10:14:23.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.361" endtime="20201112 10:14:23.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.369" endtime="20201112 10:14:23.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.066" endtime="20201112 10:14:23.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.065" endtime="20201112 10:14:23.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.376" level="INFO">${RESULT} = [{'time': 0.020983167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583400000000154e-05, 'source_diff': 4.583400000000154e-05}, {'time': 0.021044333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:23.372" endtime="20201112 10:14:23.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.389" level="INFO">${ACCURACY} = {'time': [0.020983167, 0.021044333, 0.021105417, 0.02116575, 0.021227069, 0.021288389, 0.021349194, 0.021409819, 0.021470833, 0.021532069, 0.021593375, 0.021654167, 0.021715097, 0.021776347, 0.0218373...</msg>
<status status="PASS" starttime="20201112 10:14:23.377" endtime="20201112 10:14:23.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.394" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.393" endtime="20201112 10:14:23.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.396" level="INFO">VALUE: [4.583400000000154e-05, 5.4415999999998105e-05, 5.443100000000062e-05, 5.440300000000148e-05, 5.250000000000046e-05, 5.062500000000206e-05, 5.3457999999999284e-05, 5.251300000000056e-05, 5.059700000000292e-05, 5.347200000000232e-05, 5.540300000000248e-05, 5.155599999999774e-05, 5.251400000000003e-05, 5.347200000000232e-05, 5.163899999999916e-05, 5.633299999999869e-05, 5.3443999999999714e-05, 5.061199999999849e-05, 5.4430000000001144e-05, 5.63480000000012e-05, 5.155600000000121e-05, 5.25279999999996e-05, 5.45280000000016e-05, 5.633300000000216e-05, 5.637500000000087e-05, 5.162499999999959e-05, 5.159700000000045e-05, 5.158300000000088e-05, 5.348600000000189e-05, 5.162499999999959e-05, 5.350000000000146e-05, 5.250000000000046e-05, 5.63610000000013e-05, 5.350000000000146e-05, 5.4499999999998994e-05, 5.5387999999999965e-05, 5.345899999999876e-05, 4.969499999999891e-05, 5.443100000000062e-05, 5.158400000000035e-05, 5.4430000000001144e-05, 5.061100000000249e-05, 5.059699999999945e-05, 5.620900000000151e-05, 5.4443999999997245e-05, 5.061099999999902e-05, 5.633299999999869e-05, 5.537499999999987e-05, 5.6222000000001604e-05, 5.255499999999927e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.395" endtime="20201112 10:14:23.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.390" endtime="20201112 10:14:23.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.400" endtime="20201112 10:14:23.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.403" endtime="20201112 10:14:23.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.402" endtime="20201112 10:14:23.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.398" endtime="20201112 10:14:23.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.029" endtime="20201112 10:14:23.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.028" endtime="20201112 10:14:23.424"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.433" endtime="20201112 10:14:23.453"></status>
</kw>
<msg timestamp="20201112 10:14:23.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.432" endtime="20201112 10:14:23.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.454" endtime="20201112 10:14:23.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.457" endtime="20201112 10:14:23.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.429" endtime="20201112 10:14:23.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.427" endtime="20201112 10:14:23.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.467" endtime="20201112 10:14:23.754"></status>
</kw>
<msg timestamp="20201112 10:14:23.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.466" endtime="20201112 10:14:23.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021325611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.758" endtime="20201112 10:14:23.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.766" endtime="20201112 10:14:23.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.463" endtime="20201112 10:14:23.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.461" endtime="20201112 10:14:23.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.773" level="INFO">${RESULT} = [{'time': 0.021384833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9221999999997665e-05, 'source_diff': 5.9221999999997665e-05}, {'time': 0.021446528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.770" endtime="20201112 10:14:23.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.786" level="INFO">${ACCURACY} = {'time': [0.021384833, 0.021446528, 0.021507597, 0.021568514, 0.021629014, 0.021690208, 0.021750889, 0.021811944, 0.021872972, 0.021934, 0.021994986, 0.022056333, 0.022117208, 0.022178917, 0.022239542...</msg>
<status status="PASS" starttime="20201112 10:14:23.774" endtime="20201112 10:14:23.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.791" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.790" endtime="20201112 10:14:23.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.794" level="INFO">VALUE: [5.9221999999997665e-05, 5.059699999999945e-05, 5.531899999999812e-05, 5.147200000000032e-05, 5.440299999999801e-05, 5.633299999999869e-05, 4.966699999999977e-05, 5.2415999999999574e-05, 5.056900000000031e-05, 5.636099999999783e-05, 5.059699999999945e-05, 5.251400000000003e-05, 5.3416000000000574e-05, 5.6319999999998593e-05, 5.544500000000119e-05, 5.251400000000003e-05, 5.156900000000131e-05, 5.059799999999892e-05, 5.444500000000019e-05, 5.540299999999901e-05, 5.532000000000106e-05, 5.062500000000206e-05, 5.53610000000003e-05, 5.156899999999784e-05, 5.350000000000146e-05, 5.255499999999927e-05, 5.5443999999998245e-05, 5.541700000000205e-05, 5.149999999999946e-05, 5.345900000000223e-05, 5.5387999999999965e-05, 5.250000000000046e-05, 5.3471999999998854e-05, 5.633300000000216e-05, 5.532000000000106e-05, 5.444500000000019e-05, 5.433300000000016e-05, 5.344499999999919e-05, 5.441699999999758e-05, 5.540299999999901e-05, 5.3485999999998424e-05, 5.5415999999999105e-05, 5.156900000000131e-05, 5.429100000000145e-05, 5.4458000000000284e-05, 5.4458000000000284e-05, 5.245800000000175e-05, 5.3402000000001004e-05, 5.4416000000001574e-05, 5.062499999999859e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.792" endtime="20201112 10:14:23.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.787" endtime="20201112 10:14:23.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.797" endtime="20201112 10:14:23.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.801" endtime="20201112 10:14:23.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.799" endtime="20201112 10:14:23.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.796" endtime="20201112 10:14:23.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.425" endtime="20201112 10:14:23.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.425" endtime="20201112 10:14:23.822"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.830" endtime="20201112 10:14:23.849"></status>
</kw>
<msg timestamp="20201112 10:14:23.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.829" endtime="20201112 10:14:23.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.851" endtime="20201112 10:14:23.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.853" endtime="20201112 10:14:23.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.826" endtime="20201112 10:14:23.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.824" endtime="20201112 10:14:23.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.864" endtime="20201112 10:14:24.149"></status>
</kw>
<msg timestamp="20201112 10:14:24.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.862" endtime="20201112 10:14:24.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021024292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.153" endtime="20201112 10:14:24.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.161" endtime="20201112 10:14:24.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.859" endtime="20201112 10:14:24.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.858" endtime="20201112 10:14:24.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.168" level="INFO">${RESULT} = [{'time': 0.021024292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.383399999999954e-05, 'source_diff': 4.383399999999954e-05}, {'time': 0.021085167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:24.165" endtime="20201112 10:14:24.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.181" level="INFO">${ACCURACY} = {'time': [0.021024292, 0.021085167, 0.021146625, 0.021207292, 0.021269083, 0.021329667, 0.021390486, 0.021451778, 0.021513069, 0.021574111, 0.021635194, 0.021695528, 0.021756528, 0.021818111, 0.021878...</msg>
<status status="PASS" starttime="20201112 10:14:24.169" endtime="20201112 10:14:24.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.186" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.185" endtime="20201112 10:14:24.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.189" level="INFO">VALUE: [4.383399999999954e-05, 5.445899999999976e-05, 5.3457999999999284e-05, 5.433399999999963e-05, 5.4444000000000714e-05, 5.541699999999858e-05, 5.055500000000074e-05, 5.633400000000163e-05, 5.1443999999997714e-05, 5.254199999999917e-05, 5.3416000000000574e-05, 5.155599999999774e-05, 5.529200000000192e-05, 5.476400000000228e-05, 5.155600000000121e-05, 5.4444000000000714e-05, 4.96530000000002e-05, 5.434699999999973e-05, 5.251400000000003e-05, 5.348600000000189e-05, 4.96530000000002e-05, 5.530499999999855e-05, 5.441700000000105e-05, 5.25409999999997e-05, 5.433300000000016e-05, 5.443100000000062e-05, 5.444500000000019e-05, 5.433399999999963e-05, 5.062499999999859e-05, 5.538899999999944e-05, 5.540299999999901e-05, 5.054200000000064e-05, 5.4429999999997675e-05, 5.633299999999869e-05, 5.43470000000032e-05, 5.634700000000173e-05, 5.443100000000062e-05, 5.243100000000209e-05, 5.633300000000216e-05, 5.5415999999999105e-05, 5.2429999999999144e-05, 5.059699999999945e-05, 5.145800000000075e-05, 4.966600000000029e-05, 5.255499999999927e-05, 5.6222000000001604e-05, 5.063900000000163e-05, 5.2429999999999144e-05, 5.252800000000307e-05, 4.956999999999878e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.187" endtime="20201112 10:14:24.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.182" endtime="20201112 10:14:24.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.192" endtime="20201112 10:14:24.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.196" endtime="20201112 10:14:24.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.194" endtime="20201112 10:14:24.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.191" endtime="20201112 10:14:24.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.823" endtime="20201112 10:14:24.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.822" endtime="20201112 10:14:24.217"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.226" endtime="20201112 10:14:24.247"></status>
</kw>
<msg timestamp="20201112 10:14:24.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.224" endtime="20201112 10:14:24.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.249" endtime="20201112 10:14:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.251" endtime="20201112 10:14:24.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.222" endtime="20201112 10:14:24.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.220" endtime="20201112 10:14:24.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.261" endtime="20201112 10:14:24.546"></status>
</kw>
<msg timestamp="20201112 10:14:24.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.260" endtime="20201112 10:14:24.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.550" endtime="20201112 10:14:24.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.559" endtime="20201112 10:14:24.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.257" endtime="20201112 10:14:24.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.255" endtime="20201112 10:14:24.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.565" level="INFO">${RESULT} = [{'time': 0.022770097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7278000000000884e-05, 'source_diff': 5.7278000000000884e-05}, {'time': 0.022830847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.562" endtime="20201112 10:14:24.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.580" level="INFO">${ACCURACY} = {'time': [0.022770097, 0.022830847, 0.022891764, 0.022952764, 0.02301375, 0.023074556, 0.023135875, 0.023196472, 0.023257458, 0.023318931, 0.023380472, 0.023440944, 0.023501833, 0.023563431, 0.0236243...</msg>
<status status="PASS" starttime="20201112 10:14:24.566" endtime="20201112 10:14:24.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.584" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.583" endtime="20201112 10:14:24.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.587" level="INFO">VALUE: [5.7278000000000884e-05, 5.4416000000001574e-05, 5.251400000000003e-05, 5.062500000000206e-05, 5.062499999999859e-05, 5.345899999999876e-05, 5.538899999999944e-05, 5.3457999999999284e-05, 5.061100000000249e-05, 5.066700000000077e-05, 5.537499999999987e-05, 5.4387999999998965e-05, 5.251400000000003e-05, 5.444500000000019e-05, 5.155599999999774e-05, 5.347200000000232e-05, 5.061100000000249e-05, 5.633400000000163e-05, 5.15409999999987e-05, 5.43609999999993e-05, 5.5401999999999535e-05, 5.537499999999987e-05, 5.061100000000249e-05, 5.062499999999859e-05, 5.159700000000045e-05, 5.155499999999827e-05, 4.962499999999759e-05, 5.05140000000015e-05, 5.058299999999988e-05, 5.055500000000074e-05, 5.065299999999773e-05, 5.2499999999996994e-05, 5.441700000000105e-05, 5.633399999999816e-05, 5.440300000000148e-05, 5.252700000000013e-05, 5.058299999999988e-05, 5.63480000000012e-05, 5.159799999999992e-05, 5.250000000000046e-05, 5.345899999999876e-05, 5.4444000000000714e-05, 5.35410000000007e-05, 5.052699999999813e-05, 5.251400000000003e-05, 5.445899999999976e-05, 5.158300000000088e-05, 5.155600000000121e-05, 4.962499999999759e-05, 5.444500000000019e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.586" endtime="20201112 10:14:24.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.581" endtime="20201112 10:14:24.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.591" endtime="20201112 10:14:24.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.594" endtime="20201112 10:14:24.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.593" endtime="20201112 10:14:24.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.589" endtime="20201112 10:14:24.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.218" endtime="20201112 10:14:24.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.218" endtime="20201112 10:14:24.615"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.624" endtime="20201112 10:14:24.643"></status>
</kw>
<msg timestamp="20201112 10:14:24.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.622" endtime="20201112 10:14:24.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.644" endtime="20201112 10:14:24.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.647" endtime="20201112 10:14:24.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.620" endtime="20201112 10:14:24.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.618" endtime="20201112 10:14:24.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.657" endtime="20201112 10:14:24.943"></status>
</kw>
<msg timestamp="20201112 10:14:24.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.655" endtime="20201112 10:14:24.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.947" endtime="20201112 10:14:24.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.955" endtime="20201112 10:14:24.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.653" endtime="20201112 10:14:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.651" endtime="20201112 10:14:24.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.962" level="INFO">${RESULT} = [{'time': 0.021218639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.637500000000087e-05, 'source_diff': 5.637500000000087e-05}, {'time': 0.021279764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:24.959" endtime="20201112 10:14:24.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.976" level="INFO">${ACCURACY} = {'time': [0.021218639, 0.021279764, 0.021340542, 0.02140225, 0.021463042, 0.021523792, 0.021585111, 0.02164625, 0.021706514, 0.021767889, 0.021829389, 0.021890417, 0.021950694, 0.022012208, 0.02207276...</msg>
<status status="PASS" starttime="20201112 10:14:24.963" endtime="20201112 10:14:24.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.980" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.979" endtime="20201112 10:14:24.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.983" level="INFO">VALUE: [5.637500000000087e-05, 5.33609999999983e-05, 5.443100000000062e-05, 5.538899999999944e-05, 5.530600000000149e-05, 5.154200000000164e-05, 5.145800000000075e-05, 5.251400000000003e-05, 4.966699999999977e-05, 5.059699999999945e-05, 5.157000000000078e-05, 5.241699999999905e-05, 5.061099999999902e-05, 5.4471999999999854e-05, 4.957000000000225e-05, 5.354200000000017e-05, 5.636099999999783e-05, 5.2499999999996994e-05, 5.537499999999987e-05, 5.538899999999944e-05, 4.959799999999792e-05, 5.634699999999826e-05, 5.244499999999819e-05, 5.441700000000105e-05, 5.248600000000089e-05, 5.6264000000000314e-05, 5.059699999999945e-05, 5.149999999999946e-05, 5.531999999999759e-05, 5.6264000000000314e-05, 5.061099999999902e-05, 5.241699999999905e-05, 5.156899999999784e-05, 5.254199999999917e-05, 5.538899999999944e-05, 5.338900000000091e-05, 5.540299999999901e-05, 5.337499999999787e-05, 5.543099999999815e-05, 5.3485999999998424e-05, 5.061099999999902e-05, 5.43609999999993e-05, 5.4485999999999424e-05, 5.640300000000001e-05, 5.149999999999946e-05, 5.4401999999998535e-05, 5.2443999999998714e-05, 5.059699999999945e-05, 5.538899999999944e-05, 5.438900000000191e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.981" endtime="20201112 10:14:24.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.977" endtime="20201112 10:14:24.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.986" endtime="20201112 10:14:24.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.990" endtime="20201112 10:14:25.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.988" endtime="20201112 10:14:25.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.985" endtime="20201112 10:14:25.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.616" endtime="20201112 10:14:25.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.616" endtime="20201112 10:14:25.011"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.020" endtime="20201112 10:14:25.041"></status>
</kw>
<msg timestamp="20201112 10:14:25.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.018" endtime="20201112 10:14:25.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.042" endtime="20201112 10:14:25.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.045" endtime="20201112 10:14:25.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.016" endtime="20201112 10:14:25.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.014" endtime="20201112 10:14:25.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.055" endtime="20201112 10:14:25.340"></status>
</kw>
<msg timestamp="20201112 10:14:25.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.053" endtime="20201112 10:14:25.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.345" endtime="20201112 10:14:25.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.353" endtime="20201112 10:14:25.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.051" endtime="20201112 10:14:25.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.049" endtime="20201112 10:14:25.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.360" level="INFO">${RESULT} = [{'time': 0.022414736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0082999999999785e-05, 'source_diff': 4.0082999999999785e-05}, {'time': 0.022475333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.356" endtime="20201112 10:14:25.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.373" level="INFO">${ACCURACY} = {'time': [0.022414736, 0.022475333, 0.022536639, 0.022597917, 0.022658653, 0.0227195, 0.022780611, 0.022841528, 0.022903181, 0.022964375, 0.023025306, 0.023086375, 0.023147208, 0.023207889, 0.02326923...</msg>
<status status="PASS" starttime="20201112 10:14:25.361" endtime="20201112 10:14:25.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.378" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.377" endtime="20201112 10:14:25.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.380" level="INFO">VALUE: [4.0082999999999785e-05, 5.156900000000131e-05, 5.538899999999944e-05, 5.058399999999935e-05, 5.251400000000003e-05, 5.056900000000031e-05, 5.148599999999989e-05, 4.969499999999891e-05, 5.255600000000221e-05, 5.154199999999817e-05, 5.25279999999996e-05, 5.059699999999945e-05, 5.252700000000013e-05, 5.2471999999997854e-05, 5.3443999999999714e-05, 5.633299999999869e-05, 4.962500000000106e-05, 5.443100000000062e-05, 5.344500000000266e-05, 5.055600000000021e-05, 5.537499999999987e-05, 5.157000000000078e-05, 5.251400000000003e-05, 5.537499999999987e-05, 5.347299999999833e-05, 4.959700000000192e-05, 5.3416000000000574e-05, 5.351400000000103e-05, 5.056900000000031e-05, 5.636099999999783e-05, 4.966699999999977e-05, 5.062500000000206e-05, 5.155500000000174e-05, 5.15409999999987e-05, 5.061099999999902e-05, 5.4458000000000284e-05, 5.345899999999876e-05, 5.34869999999979e-05, 5.061099999999902e-05, 5.059699999999945e-05, 5.634699999999826e-05, 5.155600000000121e-05, 5.061099999999902e-05, 5.251400000000003e-05, 5.156900000000131e-05, 5.538899999999944e-05, 5.158300000000088e-05, 5.3443999999999714e-05, 4.958299999999888e-05, 5.537499999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.379" endtime="20201112 10:14:25.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.374" endtime="20201112 10:14:25.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.384" endtime="20201112 10:14:25.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.388" endtime="20201112 10:14:25.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.386" endtime="20201112 10:14:25.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.382" endtime="20201112 10:14:25.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.012" endtime="20201112 10:14:25.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.011" endtime="20201112 10:14:25.408"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.417" endtime="20201112 10:14:25.439"></status>
</kw>
<msg timestamp="20201112 10:14:25.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.416" endtime="20201112 10:14:25.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.441" endtime="20201112 10:14:25.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.443" endtime="20201112 10:14:25.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.413" endtime="20201112 10:14:25.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.411" endtime="20201112 10:14:25.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.453" endtime="20201112 10:14:25.739"></status>
</kw>
<msg timestamp="20201112 10:14:25.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.452" endtime="20201112 10:14:25.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.744" endtime="20201112 10:14:25.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.752" endtime="20201112 10:14:25.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.449" endtime="20201112 10:14:25.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.448" endtime="20201112 10:14:25.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.759" level="INFO">${RESULT} = [{'time': 0.021748972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9138999999997065e-05, 'source_diff': 3.9138999999997065e-05}, {'time': 0.021809917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.755" endtime="20201112 10:14:25.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.772" level="INFO">${ACCURACY} = {'time': [0.021748972, 0.021809917, 0.021870208, 0.021931986, 0.021992319, 0.022054056, 0.022115, 0.022175861, 0.022237306, 0.022297625, 0.022358972, 0.022419597, 0.022481486, 0.022541931, 0.022603042...</msg>
<status status="PASS" starttime="20201112 10:14:25.760" endtime="20201112 10:14:25.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.777" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.776" endtime="20201112 10:14:25.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.779" level="INFO">VALUE: [3.9138999999997065e-05, 5.441700000000105e-05, 5.3443999999999714e-05, 5.338900000000091e-05, 4.9638000000001153e-05, 5.63619999999973e-05, 5.533299999999769e-05, 5.338900000000091e-05, 5.251400000000003e-05, 5.441700000000105e-05, 5.347200000000232e-05, 5.438899999999844e-05, 5.537499999999987e-05, 5.440300000000148e-05, 5.43609999999993e-05, 5.338900000000091e-05, 5.058299999999988e-05, 5.15409999999987e-05, 5.6319999999998593e-05, 5.438900000000191e-05, 5.247200000000132e-05, 5.4291999999997453e-05, 5.248600000000089e-05, 5.443100000000062e-05, 5.532000000000106e-05, 5.338900000000091e-05, 5.532000000000106e-05, 5.061099999999902e-05, 5.631899999999912e-05, 5.343100000000309e-05, 5.341700000000005e-05, 5.4430000000001144e-05, 5.540299999999901e-05, 5.440299999999801e-05, 5.532000000000106e-05, 5.340300000000048e-05, 5.63610000000013e-05, 5.341700000000005e-05, 5.148599999999989e-05, 5.058299999999988e-05, 5.537499999999987e-05, 5.062499999999859e-05, 5.151399999999903e-05, 5.056900000000031e-05, 5.3485999999998424e-05, 5.348600000000189e-05, 5.6291999999999454e-05, 5.055500000000074e-05, 5.5472000000000854e-05, 5.540299999999901e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.778" endtime="20201112 10:14:25.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.773" endtime="20201112 10:14:25.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.806" endtime="20201112 10:14:25.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.810" endtime="20201112 10:14:25.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.808" endtime="20201112 10:14:25.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.804" endtime="20201112 10:14:25.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.409" endtime="20201112 10:14:25.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.409" endtime="20201112 10:14:25.831"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.839" endtime="20201112 10:14:25.859"></status>
</kw>
<msg timestamp="20201112 10:14:25.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.838" endtime="20201112 10:14:25.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.860" endtime="20201112 10:14:25.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.863" endtime="20201112 10:14:25.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.835" endtime="20201112 10:14:25.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.833" endtime="20201112 10:14:25.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.873" endtime="20201112 10:14:26.159"></status>
</kw>
<msg timestamp="20201112 10:14:26.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.871" endtime="20201112 10:14:26.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.164" endtime="20201112 10:14:26.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.172" endtime="20201112 10:14:26.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.869" endtime="20201112 10:14:26.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.867" endtime="20201112 10:14:26.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.179" level="INFO">${RESULT} = [{'time': 0.021567917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58199999999985e-05, 'source_diff': 4.58199999999985e-05}, {'time': 0.021628597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:26.175" endtime="20201112 10:14:26.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.193" level="INFO">${ACCURACY} = {'time': [0.021567917, 0.021628597, 0.021689792, 0.021751181, 0.021811958, 0.021872611, 0.021934292, 0.021995306, 0.022055528, 0.022117111, 0.02217825, 0.022238708, 0.022300403, 0.022361083, 0.0224219...</msg>
<status status="PASS" starttime="20201112 10:14:26.180" endtime="20201112 10:14:26.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.198" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.197" endtime="20201112 10:14:26.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.200" level="INFO">VALUE: [4.58199999999985e-05, 5.147200000000032e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.529099999999898e-05, 5.059699999999945e-05, 5.53610000000003e-05, 5.243099999999862e-05, 5.534700000000073e-05, 5.531899999999812e-05, 5.337500000000134e-05, 5.4429999999997675e-05, 5.245900000000123e-05, 5.145800000000075e-05, 5.155600000000121e-05, 5.441699999999758e-05, 5.155600000000121e-05, 5.538899999999944e-05, 5.344500000000266e-05, 5.244500000000166e-05, 5.441700000000105e-05, 5.440299999999801e-05, 5.145900000000023e-05, 5.15409999999987e-05, 5.256900000000231e-05, 5.247200000000132e-05, 5.537499999999987e-05, 5.540300000000248e-05, 5.440300000000148e-05, 5.340300000000048e-05, 5.53610000000003e-05, 5.53610000000003e-05, 5.437499999999887e-05, 5.152699999999913e-05, 5.53480000000002e-05, 5.1457999999997284e-05, 5.3471999999998854e-05, 5.062499999999859e-05, 5.058400000000282e-05, 5.43470000000032e-05, 5.25279999999996e-05, 5.056999999999978e-05, 5.3443999999999714e-05, 5.147200000000032e-05, 5.437500000000234e-05, 5.245900000000123e-05, 5.25279999999996e-05, 4.962499999999759e-05, 5.151399999999903e-05, 5.245899999999776e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.199" endtime="20201112 10:14:26.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.194" endtime="20201112 10:14:26.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.204" endtime="20201112 10:14:26.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.208" endtime="20201112 10:14:26.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.206" endtime="20201112 10:14:26.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.202" endtime="20201112 10:14:26.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.832" endtime="20201112 10:14:26.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.831" endtime="20201112 10:14:26.229"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.237" endtime="20201112 10:14:26.255"></status>
</kw>
<msg timestamp="20201112 10:14:26.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.236" endtime="20201112 10:14:26.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.257" endtime="20201112 10:14:26.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.259" endtime="20201112 10:14:26.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.233" endtime="20201112 10:14:26.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.231" endtime="20201112 10:14:26.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.270" endtime="20201112 10:14:26.555"></status>
</kw>
<msg timestamp="20201112 10:14:26.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.268" endtime="20201112 10:14:26.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.559" endtime="20201112 10:14:26.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.568" endtime="20201112 10:14:26.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.265" endtime="20201112 10:14:26.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.264" endtime="20201112 10:14:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.574" level="INFO">${RESULT} = [{'time': 0.020657903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7291999999996984e-05, 'source_diff': 5.7291999999996984e-05}, {'time': 0.020718167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:26.571" endtime="20201112 10:14:26.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.588" level="INFO">${ACCURACY} = {'time': [0.020657903, 0.020718167, 0.020779236, 0.020841125, 0.020901375, 0.020962653, 0.021023736, 0.021085028, 0.021145514, 0.021207083, 0.021268069, 0.021328903, 0.021389625, 0.021451333, 0.021511...</msg>
<status status="PASS" starttime="20201112 10:14:26.575" endtime="20201112 10:14:26.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.592" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.591" endtime="20201112 10:14:26.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.595" level="INFO">VALUE: [5.7291999999996984e-05, 5.2485999999997424e-05, 5.53610000000003e-05, 5.25279999999996e-05, 5.538899999999944e-05, 5.538900000000291e-05, 5.4458000000000284e-05, 5.155599999999774e-05, 5.157000000000078e-05, 5.4402000000002004e-05, 5.059699999999945e-05, 5.345899999999876e-05, 5.441699999999758e-05, 5.061099999999902e-05, 5.056999999999978e-05, 5.441699999999758e-05, 5.058299999999988e-05, 4.966699999999977e-05, 5.251400000000003e-05, 5.3471999999998854e-05, 5.065299999999773e-05, 5.250000000000046e-05, 5.345900000000223e-05, 5.061099999999902e-05, 5.631899999999912e-05, 5.250000000000046e-05, 5.158300000000088e-05, 4.966699999999977e-05, 5.156899999999784e-05, 5.068099999999687e-05, 5.350000000000146e-05, 5.634699999999826e-05, 5.3457999999999284e-05, 5.3485999999998424e-05, 5.3471999999998854e-05, 5.154200000000164e-05, 5.633399999999816e-05, 5.443099999999715e-05, 5.247200000000132e-05, 5.251400000000003e-05, 4.96530000000002e-05, 5.15279999999986e-05, 5.529099999999898e-05, 5.538899999999944e-05, 5.059699999999945e-05, 5.061100000000249e-05, 5.440300000000148e-05, 5.630499999999955e-05, 5.4415999999998105e-05, 5.058299999999988e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.594" endtime="20201112 10:14:26.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.589" endtime="20201112 10:14:26.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.599" endtime="20201112 10:14:26.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.602" endtime="20201112 10:14:26.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.601" endtime="20201112 10:14:26.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.597" endtime="20201112 10:14:26.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.229" endtime="20201112 10:14:26.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.229" endtime="20201112 10:14:26.623"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.632" endtime="20201112 10:14:26.653"></status>
</kw>
<msg timestamp="20201112 10:14:26.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.630" endtime="20201112 10:14:26.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.655" endtime="20201112 10:14:26.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.657" endtime="20201112 10:14:26.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.628" endtime="20201112 10:14:26.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.626" endtime="20201112 10:14:26.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.668" endtime="20201112 10:14:26.952"></status>
</kw>
<msg timestamp="20201112 10:14:26.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.666" endtime="20201112 10:14:26.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.957" endtime="20201112 10:14:26.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.965" endtime="20201112 10:14:26.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.663" endtime="20201112 10:14:26.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.662" endtime="20201112 10:14:26.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.972" level="INFO">${RESULT} = [{'time': 0.022829958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.252700000000013e-05, 'source_diff': 5.252700000000013e-05}, {'time': 0.022891222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:26.969" endtime="20201112 10:14:26.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.986" level="INFO">${ACCURACY} = {'time': [0.022829958, 0.022891222, 0.022952125, 0.023013347, 0.023073944, 0.023135667, 0.023196653, 0.023257347, 0.023318639, 0.02337925, 0.023440861, 0.02350175, 0.023562972, 0.023623722, 0.02368419...</msg>
<status status="PASS" starttime="20201112 10:14:26.973" endtime="20201112 10:14:26.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.990" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.989" endtime="20201112 10:14:26.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.993" level="INFO">VALUE: [5.252700000000013e-05, 5.161100000000002e-05, 5.337500000000134e-05, 5.637500000000087e-05, 5.3471999999998854e-05, 5.6235999999997704e-05, 5.152800000000207e-05, 4.969399999999943e-05, 5.2499999999996994e-05, 5.241699999999905e-05, 5.351400000000103e-05, 5.156899999999784e-05, 5.061100000000249e-05, 4.963900000000063e-05, 5.527699999999941e-05, 5.634700000000173e-05, 5.336100000000177e-05, 5.350000000000146e-05, 5.636200000000077e-05, 5.5277999999998884e-05, 5.347200000000232e-05, 5.6416000000000105e-05, 5.147200000000032e-05, 5.3513999999997564e-05, 5.3485999999998424e-05, 5.049999999999846e-05, 5.4415999999998105e-05, 5.158300000000088e-05, 5.054200000000064e-05, 5.063900000000163e-05, 5.159700000000045e-05, 5.7165999999997386e-05, 4.966699999999977e-05, 5.061100000000249e-05, 5.1637999999999684e-05, 5.2429999999999144e-05, 5.350000000000146e-05, 4.96530000000002e-05, 5.047199999999932e-05, 5.155600000000121e-05, 5.061099999999902e-05, 5.240299999999948e-05, 5.35280000000006e-05, 5.063900000000163e-05, 5.052800000000107e-05, 5.526400000000278e-05, 5.537499999999987e-05, 5.441700000000105e-05, 5.054200000000064e-05, 5.245899999999776e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.991" endtime="20201112 10:14:26.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.986" endtime="20201112 10:14:26.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.996" endtime="20201112 10:14:26.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.000" endtime="20201112 10:14:27.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.998" endtime="20201112 10:14:27.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.995" endtime="20201112 10:14:27.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.624" endtime="20201112 10:14:27.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.624" endtime="20201112 10:14:27.021"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.030" endtime="20201112 10:14:27.050"></status>
</kw>
<msg timestamp="20201112 10:14:27.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.028" endtime="20201112 10:14:27.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.051" endtime="20201112 10:14:27.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.054" endtime="20201112 10:14:27.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.026" endtime="20201112 10:14:27.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.023" endtime="20201112 10:14:27.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.064" endtime="20201112 10:14:27.349"></status>
</kw>
<msg timestamp="20201112 10:14:27.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.062" endtime="20201112 10:14:27.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.353" endtime="20201112 10:14:27.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.361" endtime="20201112 10:14:27.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.060" endtime="20201112 10:14:27.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.058" endtime="20201112 10:14:27.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.368" level="INFO">${RESULT} = [{'time': 0.022041903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8139000000003004e-05, 'source_diff': 3.8139000000003004e-05}, {'time': 0.022103569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.365" endtime="20201112 10:14:27.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.382" level="INFO">${ACCURACY} = {'time': [0.022041903, 0.022103569, 0.022164153, 0.022224944, 0.022286222, 0.022346931, 0.022408181, 0.022469264, 0.022530347, 0.0225915, 0.022652792, 0.022713375, 0.022774347, 0.022835389, 0.02289688...</msg>
<status status="PASS" starttime="20201112 10:14:27.369" endtime="20201112 10:14:27.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.386" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.385" endtime="20201112 10:14:27.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.389" level="INFO">VALUE: [3.8139000000003004e-05, 5.3471999999998854e-05, 5.340300000000048e-05, 5.2443999999998714e-05, 5.059700000000292e-05, 4.956999999999878e-05, 5.058399999999935e-05, 5.4458000000000284e-05, 5.631899999999912e-05, 5.537499999999987e-05, 5.445899999999976e-05, 5.343099999999962e-05, 5.35410000000007e-05, 5.634700000000173e-05, 5.245800000000175e-05, 5.15409999999987e-05, 5.63480000000012e-05, 5.531900000000159e-05, 5.438899999999844e-05, 4.963900000000063e-05, 5.533299999999769e-05, 5.251299999999709e-05, 5.537499999999987e-05, 4.96530000000002e-05, 5.3402000000001004e-05, 5.250000000000046e-05, 5.541699999999858e-05, 5.351400000000103e-05, 5.5458000000001284e-05, 5.2457999999998284e-05, 5.15279999999986e-05, 5.4458000000000284e-05, 5.250000000000046e-05, 5.529099999999898e-05, 5.054199999999717e-05, 5.061099999999902e-05, 5.061100000000249e-05, 5.533400000000063e-05, 5.629099999999998e-05, 5.341700000000005e-05, 5.540299999999901e-05, 5.43609999999993e-05, 5.15140000000025e-05, 5.05140000000015e-05, 5.056999999999978e-05, 5.158300000000088e-05, 5.43479999999992e-05, 5.248600000000089e-05, 4.963899999999716e-05, 5.437500000000234e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.387" endtime="20201112 10:14:27.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.382" endtime="20201112 10:14:27.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.392" endtime="20201112 10:14:27.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.396" endtime="20201112 10:14:27.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.394" endtime="20201112 10:14:27.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.391" endtime="20201112 10:14:27.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.022" endtime="20201112 10:14:27.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.021" endtime="20201112 10:14:27.417"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.426" endtime="20201112 10:14:27.451"></status>
</kw>
<msg timestamp="20201112 10:14:27.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.424" endtime="20201112 10:14:27.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.453" endtime="20201112 10:14:27.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.455" endtime="20201112 10:14:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.422" endtime="20201112 10:14:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.420" endtime="20201112 10:14:27.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.465" endtime="20201112 10:14:27.750"></status>
</kw>
<msg timestamp="20201112 10:14:27.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.464" endtime="20201112 10:14:27.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.754" endtime="20201112 10:14:27.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.762" endtime="20201112 10:14:27.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.461" endtime="20201112 10:14:27.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.459" endtime="20201112 10:14:27.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.769" level="INFO">${RESULT} = [{'time': 0.022932639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.109699999999954e-05, 'source_diff': 6.109699999999954e-05}, {'time': 0.022993736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:27.766" endtime="20201112 10:14:27.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.829" level="INFO">${ACCURACY} = {'time': [0.022932639, 0.022993736, 0.023054403, 0.023115792, 0.023176639, 0.023238181, 0.023298472, 0.023359958, 0.023421153, 0.023481514, 0.023542833, 0.023604069, 0.023664847, 0.023725681, 0.023786...</msg>
<status status="PASS" starttime="20201112 10:14:27.770" endtime="20201112 10:14:27.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.834" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.833" endtime="20201112 10:14:27.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.836" level="INFO">VALUE: [6.109699999999954e-05, 5.056900000000031e-05, 4.96530000000002e-05, 5.3499999999997994e-05, 5.255599999999874e-05, 5.14729999999998e-05, 5.437500000000234e-05, 5.056900000000031e-05, 5.53610000000003e-05, 5.062499999999859e-05, 5.4471999999999854e-05, 5.148599999999989e-05, 5.3430000000000144e-05, 5.25279999999996e-05, 5.2457999999998284e-05, 5.53610000000003e-05, 5.440300000000148e-05, 5.15409999999987e-05, 5.633399999999816e-05, 5.15279999999986e-05, 4.966600000000029e-05, 5.633300000000216e-05, 5.531899999999812e-05, 5.4401999999998535e-05, 5.157000000000078e-05, 5.2457999999998284e-05, 4.96530000000002e-05, 5.637500000000087e-05, 5.2443999999998714e-05, 5.534700000000073e-05, 5.254200000000264e-05, 5.437499999999887e-05, 5.3416000000000574e-05, 5.061100000000249e-05, 5.245900000000123e-05, 5.4401999999998535e-05, 5.5387999999999965e-05, 5.434699999999973e-05, 5.634699999999826e-05, 5.348600000000189e-05, 5.6305999999999023e-05, 5.43609999999993e-05, 5.15140000000025e-05, 5.250000000000046e-05, 5.630600000000249e-05, 4.966600000000029e-05, 5.530500000000202e-05, 5.059699999999945e-05, 5.637500000000087e-05, 5.254199999999917e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.835" endtime="20201112 10:14:27.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.830" endtime="20201112 10:14:27.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.840" endtime="20201112 10:14:27.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.844" endtime="20201112 10:14:27.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.842" endtime="20201112 10:14:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.838" endtime="20201112 10:14:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.418" endtime="20201112 10:14:27.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.418" endtime="20201112 10:14:27.865"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.873" endtime="20201112 10:14:27.893"></status>
</kw>
<msg timestamp="20201112 10:14:27.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.872" endtime="20201112 10:14:27.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.895" endtime="20201112 10:14:27.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.898" endtime="20201112 10:14:27.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.869" endtime="20201112 10:14:27.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.867" endtime="20201112 10:14:27.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.907" endtime="20201112 10:14:28.192"></status>
</kw>
<msg timestamp="20201112 10:14:28.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.905" endtime="20201112 10:14:28.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.196" endtime="20201112 10:14:28.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.205" endtime="20201112 10:14:28.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.902" endtime="20201112 10:14:28.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.901" endtime="20201112 10:14:28.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.212" level="INFO">${RESULT} = [{'time': 0.022229278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9222000000001135e-05, 'source_diff': 5.9222000000001135e-05}, {'time': 0.022290153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:28.208" endtime="20201112 10:14:28.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.225" level="INFO">${ACCURACY} = {'time': [0.022229278, 0.022290153, 0.022351681, 0.022412139, 0.022472944, 0.02253475, 0.022595583, 0.022656194, 0.022717333, 0.022778708, 0.022839208, 0.022900069, 0.022961847, 0.023023028, 0.0230838...</msg>
<status status="PASS" starttime="20201112 10:14:28.213" endtime="20201112 10:14:28.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.230" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.229" endtime="20201112 10:14:28.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.232" level="INFO">VALUE: [5.9222000000001135e-05, 5.059699999999945e-05, 5.250000000000046e-05, 5.4458000000000284e-05, 5.345800000000275e-05, 5.3499999999997994e-05, 5.255499999999927e-05, 5.155500000000174e-05, 5.059699999999945e-05, 5.15140000000025e-05, 5.5415999999999105e-05, 5.2499999999996994e-05, 5.440300000000148e-05, 5.058399999999935e-05, 5.15409999999987e-05, 5.059699999999945e-05, 5.3471999999998854e-05, 5.3416000000000574e-05, 5.537499999999987e-05, 5.056900000000031e-05, 5.251300000000056e-05, 5.4429999999997675e-05, 5.6291999999999454e-05, 5.148599999999989e-05, 5.248600000000089e-05, 5.062499999999859e-05, 5.250000000000046e-05, 4.9638000000001153e-05, 5.638899999999697e-05, 5.537500000000334e-05, 5.056900000000031e-05, 4.954199999999964e-05, 5.341700000000005e-05, 5.631899999999912e-05, 5.63610000000013e-05, 5.061099999999902e-05, 5.434800000000267e-05, 5.637500000000087e-05, 5.158299999999741e-05, 5.256899999999884e-05, 5.540299999999901e-05, 5.634799999999773e-05, 5.052800000000107e-05, 5.53610000000003e-05, 5.433300000000016e-05, 5.059799999999892e-05, 5.3471999999998854e-05, 5.533300000000116e-05, 5.243099999999862e-05, 5.631899999999912e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.231" endtime="20201112 10:14:28.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.226" endtime="20201112 10:14:28.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.236" endtime="20201112 10:14:28.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.239" endtime="20201112 10:14:28.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.238" endtime="20201112 10:14:28.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.234" endtime="20201112 10:14:28.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.866" endtime="20201112 10:14:28.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.865" endtime="20201112 10:14:28.260"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.269" endtime="20201112 10:14:28.291"></status>
</kw>
<msg timestamp="20201112 10:14:28.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.268" endtime="20201112 10:14:28.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.293" endtime="20201112 10:14:28.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.295" endtime="20201112 10:14:28.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.265" endtime="20201112 10:14:28.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.263" endtime="20201112 10:14:28.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.305" endtime="20201112 10:14:28.589"></status>
</kw>
<msg timestamp="20201112 10:14:28.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023422278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.303" endtime="20201112 10:14:28.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023422278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.593" endtime="20201112 10:14:28.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.602" endtime="20201112 10:14:28.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.300" endtime="20201112 10:14:28.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.299" endtime="20201112 10:14:28.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.608" level="INFO">${RESULT} = [{'time': 0.023486306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.402799999999723e-05, 'source_diff': 6.402799999999723e-05}, {'time': 0.023547389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.605" endtime="20201112 10:14:28.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.623" level="INFO">${ACCURACY} = {'time': [0.023486306, 0.023547389, 0.023607639, 0.023668847, 0.023730167, 0.023790958, 0.023851778, 0.023913597, 0.023974486, 0.024035542, 0.024096736, 0.024157403, 0.024218639, 0.024279, 0.024340847...</msg>
<status status="PASS" starttime="20201112 10:14:28.609" endtime="20201112 10:14:28.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.627" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.626" endtime="20201112 10:14:28.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.630" level="INFO">VALUE: [6.402799999999723e-05, 5.238899999999991e-05, 5.3457999999999284e-05, 5.540299999999901e-05, 5.251400000000003e-05, 5.5416000000002574e-05, 5.3471999999998854e-05, 5.540300000000248e-05, 5.6221999999998135e-05, 5.058399999999935e-05, 5.061099999999902e-05, 5.052800000000107e-05, 5.250000000000046e-05, 5.058299999999988e-05, 5.6207999999998565e-05, 5.2499999999996994e-05, 5.059699999999945e-05, 5.061099999999902e-05, 5.345899999999876e-05, 5.341700000000005e-05, 5.538900000000291e-05, 5.157000000000078e-05, 5.633399999999816e-05, 5.05279999999976e-05, 5.6291999999999454e-05, 5.441699999999758e-05, 5.633299999999869e-05, 5.240299999999948e-05, 5.631899999999912e-05, 5.3457999999999284e-05, 5.537499999999987e-05, 5.5236000000000174e-05, 5.25279999999996e-05, 5.5387999999999965e-05, 5.53610000000003e-05, 5.240299999999948e-05, 5.251400000000003e-05, 4.96530000000002e-05, 5.162500000000306e-05, 5.15279999999986e-05, 5.240299999999948e-05, 5.3430000000000144e-05, 5.055600000000021e-05, 5.436199999999877e-05, 5.059699999999945e-05, 5.6402000000000535e-05, 5.058299999999988e-05, 5.429100000000145e-05, 5.53610000000003e-05, 5.633399999999816e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.628" endtime="20201112 10:14:28.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.623" endtime="20201112 10:14:28.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.633" endtime="20201112 10:14:28.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.637" endtime="20201112 10:14:28.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.635" endtime="20201112 10:14:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.632" endtime="20201112 10:14:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.261" endtime="20201112 10:14:28.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.261" endtime="20201112 10:14:28.658"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.666" endtime="20201112 10:14:28.688"></status>
</kw>
<msg timestamp="20201112 10:14:28.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.665" endtime="20201112 10:14:28.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.690" endtime="20201112 10:14:28.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.692" endtime="20201112 10:14:28.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.662" endtime="20201112 10:14:28.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.660" endtime="20201112 10:14:28.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.702" endtime="20201112 10:14:28.989"></status>
</kw>
<msg timestamp="20201112 10:14:28.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.700" endtime="20201112 10:14:28.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.993" endtime="20201112 10:14:29.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.002" endtime="20201112 10:14:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.697" endtime="20201112 10:14:29.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.695" endtime="20201112 10:14:29.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.009" level="INFO">${RESULT} = [{'time': 0.023094389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.004200000000055e-05, 'source_diff': 4.004200000000055e-05}, {'time': 0.023155944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.005" endtime="20201112 10:14:29.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.022" level="INFO">${ACCURACY} = {'time': [0.023094389, 0.023155944, 0.023216917, 0.023278028, 0.023338528, 0.023399667, 0.023460694, 0.023522361, 0.023583167, 0.023643708, 0.023704861, 0.023766236, 0.023826847, 0.023888389, 0.023949...</msg>
<status status="PASS" starttime="20201112 10:14:29.010" endtime="20201112 10:14:29.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.027" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.026" endtime="20201112 10:14:29.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.030" level="INFO">VALUE: [4.004200000000055e-05, 5.537499999999987e-05, 5.427800000000135e-05, 5.154199999999817e-05, 4.9709000000001946e-05, 5.061099999999902e-05, 5.3443999999999714e-05, 5.4291999999997453e-05, 5.25279999999996e-05, 5.4429999999997675e-05, 5.255499999999927e-05, 5.248600000000089e-05, 5.248600000000089e-05, 5.633299999999869e-05, 5.537499999999987e-05, 5.438899999999844e-05, 5.25279999999996e-05, 5.4444000000000714e-05, 5.537499999999987e-05, 4.9681000000002806e-05, 5.437499999999887e-05, 5.538899999999944e-05, 5.6208000000002034e-05, 5.3430000000000144e-05, 5.058300000000335e-05, 5.056999999999978e-05, 5.3485999999998424e-05, 5.5444000000001714e-05, 5.429100000000145e-05, 5.254199999999917e-05, 5.149999999999946e-05, 5.061099999999902e-05, 5.4416000000001574e-05, 5.058299999999988e-05, 5.256900000000231e-05, 5.537499999999987e-05, 5.2429999999999144e-05, 5.251299999999709e-05, 5.633299999999869e-05, 5.540299999999901e-05, 5.250000000000046e-05, 5.3485999999998424e-05, 5.344499999999919e-05, 5.248600000000089e-05, 5.158300000000088e-05, 5.637500000000087e-05, 5.241699999999905e-05, 4.96530000000002e-05, 5.155599999999774e-05, 5.155499999999827e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.028" endtime="20201112 10:14:29.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.023" endtime="20201112 10:14:29.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.034" endtime="20201112 10:14:29.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.038" endtime="20201112 10:14:29.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.036" endtime="20201112 10:14:29.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.032" endtime="20201112 10:14:29.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.659" endtime="20201112 10:14:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.658" endtime="20201112 10:14:29.059"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.067" endtime="20201112 10:14:29.089"></status>
</kw>
<msg timestamp="20201112 10:14:29.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.066" endtime="20201112 10:14:29.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.091" endtime="20201112 10:14:29.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.093" endtime="20201112 10:14:29.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.063" endtime="20201112 10:14:29.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.061" endtime="20201112 10:14:29.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.103" endtime="20201112 10:14:29.389"></status>
</kw>
<msg timestamp="20201112 10:14:29.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023919764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.101" endtime="20201112 10:14:29.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023919764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.394" endtime="20201112 10:14:29.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.402" endtime="20201112 10:14:29.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.098" endtime="20201112 10:14:29.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.097" endtime="20201112 10:14:29.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.409" level="INFO">${RESULT} = [{'time': 0.023984792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.50280000000017e-05, 'source_diff': 6.50280000000017e-05}, {'time': 0.024045278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:29.406" endtime="20201112 10:14:29.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.423" level="INFO">${ACCURACY} = {'time': [0.023984792, 0.024045278, 0.024106361, 0.024167861, 0.024228708, 0.024289278, 0.024350875, 0.024411722, 0.024473014, 0.024533583, 0.024595347, 0.024655569, 0.024717181, 0.024777833, 0.024839...</msg>
<status status="PASS" starttime="20201112 10:14:29.410" endtime="20201112 10:14:29.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.428" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.427" endtime="20201112 10:14:29.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.431" level="INFO">VALUE: [6.50280000000017e-05, 5.538899999999944e-05, 5.4430000000001144e-05, 5.3499999999997994e-05, 5.155500000000174e-05, 5.061100000000249e-05, 5.350000000000146e-05, 5.059699999999945e-05, 5.6208000000002034e-05, 5.537499999999987e-05, 5.637500000000087e-05, 4.958299999999888e-05, 5.154200000000164e-05, 5.058299999999988e-05, 5.634799999999773e-05, 5.53610000000003e-05, 5.250000000000046e-05, 5.056999999999978e-05, 5.443100000000062e-05, 5.158300000000088e-05, 5.344500000000266e-05, 5.437500000000234e-05, 5.2499999999996994e-05, 5.3457999999999284e-05, 5.537499999999987e-05, 5.058299999999988e-05, 5.443100000000062e-05, 5.15279999999986e-05, 5.348600000000189e-05, 5.062500000000206e-05, 5.344500000000266e-05, 5.6277999999999884e-05, 5.536099999999683e-05, 5.250000000000046e-05, 5.248600000000089e-05, 5.445899999999976e-05, 5.250000000000046e-05, 5.054199999999717e-05, 5.058299999999988e-05, 5.157000000000078e-05, 5.151399999999903e-05, 5.155600000000121e-05, 5.638899999999697e-05, 5.163900000000263e-05, 5.157000000000078e-05, 5.3457999999999284e-05, 5.440300000000148e-05, 5.058399999999935e-05, 5.634699999999826e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.430" endtime="20201112 10:14:29.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.424" endtime="20201112 10:14:29.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.435" endtime="20201112 10:14:29.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.438" endtime="20201112 10:14:29.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.437" endtime="20201112 10:14:29.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.433" endtime="20201112 10:14:29.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.060" endtime="20201112 10:14:29.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.059" endtime="20201112 10:14:29.459"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.468" endtime="20201112 10:14:29.486"></status>
</kw>
<msg timestamp="20201112 10:14:29.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.467" endtime="20201112 10:14:29.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.488" endtime="20201112 10:14:29.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.490" endtime="20201112 10:14:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.464" endtime="20201112 10:14:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.462" endtime="20201112 10:14:29.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.499" endtime="20201112 10:14:29.786"></status>
</kw>
<msg timestamp="20201112 10:14:29.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.498" endtime="20201112 10:14:29.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.790" endtime="20201112 10:14:29.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.798" endtime="20201112 10:14:29.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.495" endtime="20201112 10:14:29.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.493" endtime="20201112 10:14:29.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.805" level="INFO">${RESULT} = [{'time': 0.020327403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.118100000000043e-05, 'source_diff': 6.118100000000043e-05}, {'time': 0.020388778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.802" endtime="20201112 10:14:29.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.819" level="INFO">${ACCURACY} = {'time': [0.020327403, 0.020388778, 0.020449639, 0.020510972, 0.020572292, 0.020632833, 0.020693625, 0.020754972, 0.020816083, 0.020876833, 0.020937917, 0.020998681, 0.021060111, 0.021121569, 0.021181...</msg>
<status status="PASS" starttime="20201112 10:14:29.806" endtime="20201112 10:14:29.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.823" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.822" endtime="20201112 10:14:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.826" level="INFO">VALUE: [6.118100000000043e-05, 5.43609999999993e-05, 5.154199999999817e-05, 5.636099999999783e-05, 5.062499999999859e-05, 5.5401999999999535e-05, 5.155600000000121e-05, 5.6277999999999884e-05, 5.438899999999844e-05, 5.4416000000001574e-05, 5.341700000000005e-05, 5.24730000000008e-05, 5.633299999999869e-05, 5.3471999999998854e-05, 4.965200000000072e-05, 5.155600000000121e-05, 5.258300000000188e-05, 5.3485999999998424e-05, 4.954100000000017e-05, 5.629200000000292e-05, 5.63480000000012e-05, 5.051300000000203e-05, 5.152699999999913e-05, 5.059699999999945e-05, 5.250000000000046e-05, 5.149999999999946e-05, 5.534700000000073e-05, 5.3471999999998854e-05, 5.155499999999827e-05, 5.251400000000003e-05, 5.251300000000056e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.348600000000189e-05, 5.058299999999988e-05, 5.345900000000223e-05, 4.96530000000002e-05, 5.156899999999784e-05, 5.241699999999905e-05, 5.4387999999998965e-05, 5.243099999999862e-05, 5.633399999999816e-05, 5.533300000000116e-05, 5.444500000000019e-05, 5.15409999999987e-05, 5.631899999999912e-05, 5.540299999999901e-05, 5.434699999999973e-05, 5.537499999999987e-05, 5.636200000000077e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.824" endtime="20201112 10:14:29.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.820" endtime="20201112 10:14:29.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.829" endtime="20201112 10:14:29.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.833" endtime="20201112 10:14:29.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.831" endtime="20201112 10:14:29.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.828" endtime="20201112 10:14:29.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.460" endtime="20201112 10:14:29.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.460" endtime="20201112 10:14:29.854"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.863" endtime="20201112 10:14:29.885"></status>
</kw>
<msg timestamp="20201112 10:14:29.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.861" endtime="20201112 10:14:29.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.887" endtime="20201112 10:14:29.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.889" endtime="20201112 10:14:29.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.858" endtime="20201112 10:14:29.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.856" endtime="20201112 10:14:29.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.898" endtime="20201112 10:14:30.184"></status>
</kw>
<msg timestamp="20201112 10:14:30.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.897" endtime="20201112 10:14:30.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.189" endtime="20201112 10:14:30.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.197" endtime="20201112 10:14:30.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.894" endtime="20201112 10:14:30.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.892" endtime="20201112 10:14:30.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.204" level="INFO">${RESULT} = [{'time': 0.022775042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.966699999999977e-05, 'source_diff': 4.966699999999977e-05}, {'time': 0.022836278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.200" endtime="20201112 10:14:30.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.217" level="INFO">${ACCURACY} = {'time': [0.022775042, 0.022836278, 0.022897153, 0.022958292, 0.023018694, 0.02308025, 0.023140778, 0.023201792, 0.023263569, 0.023324556, 0.023384722, 0.023445819, 0.023507097, 0.023567944, 0.0236295...</msg>
<status status="PASS" starttime="20201112 10:14:30.205" endtime="20201112 10:14:30.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.222" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.221" endtime="20201112 10:14:30.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.224" level="INFO">VALUE: [4.966699999999977e-05, 5.341700000000005e-05, 5.538899999999944e-05, 5.448600000000289e-05, 4.966600000000029e-05, 5.637500000000087e-05, 5.348600000000189e-05, 5.541699999999858e-05, 5.3388000000001434e-05, 5.343099999999962e-05, 5.061099999999902e-05, 5.059699999999945e-05, 5.250000000000046e-05, 4.961100000000149e-05, 5.6277999999999884e-05, 5.2485999999997424e-05, 5.059800000000239e-05, 5.538899999999944e-05, 5.2499999999996994e-05, 5.251400000000003e-05, 5.156900000000131e-05, 5.537499999999987e-05, 5.634700000000173e-05, 5.434699999999973e-05, 5.24730000000008e-05, 5.155499999999827e-05, 5.441700000000105e-05, 4.963900000000063e-05, 5.537499999999987e-05, 5.338899999999744e-05, 5.629099999999998e-05, 5.154200000000164e-05, 5.250000000000046e-05, 5.537499999999987e-05, 5.059699999999945e-05, 5.155599999999774e-05, 5.254199999999917e-05, 5.537499999999987e-05, 5.443100000000062e-05, 5.534700000000073e-05, 5.066700000000077e-05, 5.058299999999988e-05, 5.633399999999816e-05, 5.3457999999999284e-05, 4.962500000000106e-05, 5.347200000000232e-05, 5.443100000000062e-05, 5.25279999999996e-05, 5.630600000000249e-05, 5.058399999999935e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.223" endtime="20201112 10:14:30.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.218" endtime="20201112 10:14:30.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.228" endtime="20201112 10:14:30.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.231" endtime="20201112 10:14:30.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.230" endtime="20201112 10:14:30.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.226" endtime="20201112 10:14:30.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.855" endtime="20201112 10:14:30.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.854" endtime="20201112 10:14:30.252"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.261" endtime="20201112 10:14:30.281"></status>
</kw>
<msg timestamp="20201112 10:14:30.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.260" endtime="20201112 10:14:30.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.282" endtime="20201112 10:14:30.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.285" endtime="20201112 10:14:30.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.257" endtime="20201112 10:14:30.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.255" endtime="20201112 10:14:30.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.294" endtime="20201112 10:14:30.581"></status>
</kw>
<msg timestamp="20201112 10:14:30.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.292" endtime="20201112 10:14:30.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.586" endtime="20201112 10:14:30.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.594" endtime="20201112 10:14:30.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.290" endtime="20201112 10:14:30.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.288" endtime="20201112 10:14:30.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.601" level="INFO">${RESULT} = [{'time': 0.021162417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8277999999998414e-05, 'source_diff': 5.8277999999998414e-05}, {'time': 0.021224167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:30.597" endtime="20201112 10:14:30.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.615" level="INFO">${ACCURACY} = {'time': [0.021162417, 0.021224167, 0.021285361, 0.021346028, 0.021406944, 0.021467556, 0.021528611, 0.021589667, 0.021650764, 0.021712486, 0.021773375, 0.021834542, 0.02189575, 0.021956153, 0.0220175...</msg>
<status status="PASS" starttime="20201112 10:14:30.602" endtime="20201112 10:14:30.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.619" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.618" endtime="20201112 10:14:30.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.622" level="INFO">VALUE: [5.8277999999998414e-05, 5.441699999999758e-05, 5.633299999999869e-05, 5.445899999999976e-05, 5.4387999999998965e-05, 5.251400000000003e-05, 5.3485999999998424e-05, 5.059799999999892e-05, 5.250000000000046e-05, 5.155499999999827e-05, 5.155600000000121e-05, 5.443099999999715e-05, 5.633299999999869e-05, 4.963900000000063e-05, 5.3457999999999284e-05, 5.159700000000045e-05, 5.4430000000001144e-05, 5.248600000000089e-05, 5.062500000000206e-05, 5.4444000000000714e-05, 5.443100000000062e-05, 5.537499999999987e-05, 5.25279999999996e-05, 5.53610000000003e-05, 5.538899999999944e-05, 5.156900000000131e-05, 5.632000000000206e-05, 5.534700000000073e-05, 5.3457999999999284e-05, 5.058299999999988e-05, 5.155499999999827e-05, 5.6250000000000744e-05, 5.062499999999859e-05, 5.061100000000249e-05, 5.348600000000189e-05, 5.348600000000189e-05, 5.634700000000173e-05, 5.4430000000001144e-05, 5.056999999999978e-05, 5.154200000000164e-05, 5.059799999999892e-05, 5.247200000000132e-05, 5.155499999999827e-05, 5.5387999999999965e-05, 5.440300000000148e-05, 5.062499999999859e-05, 5.633299999999869e-05, 5.538899999999944e-05, 5.445899999999976e-05, 5.537499999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.620" endtime="20201112 10:14:30.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.616" endtime="20201112 10:14:30.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.626" endtime="20201112 10:14:30.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.629" endtime="20201112 10:14:30.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.627" endtime="20201112 10:14:30.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.624" endtime="20201112 10:14:30.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.253" endtime="20201112 10:14:30.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.253" endtime="20201112 10:14:30.650"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.659" endtime="20201112 10:14:30.683"></status>
</kw>
<msg timestamp="20201112 10:14:30.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.658" endtime="20201112 10:14:30.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.684" endtime="20201112 10:14:30.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.687" endtime="20201112 10:14:30.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.655" endtime="20201112 10:14:30.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.653" endtime="20201112 10:14:30.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.696" endtime="20201112 10:14:30.983"></status>
</kw>
<msg timestamp="20201112 10:14:30.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025471486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.695" endtime="20201112 10:14:30.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025471486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.987" endtime="20201112 10:14:30.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.995" endtime="20201112 10:14:30.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.692" endtime="20201112 10:14:30.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.690" endtime="20201112 10:14:30.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.002" level="INFO">${RESULT} = [{'time': 0.025471486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.540300000000166e-05, 'source_diff': 7.540300000000166e-05}, {'time': 0.025563069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.999" endtime="20201112 10:14:31.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.018" level="INFO">${ACCURACY} = {'time': [0.025471486, 0.025563069, 0.025653806, 0.025745917, 0.025837292, 0.025928847, 0.026020569, 0.026112208, 0.026203667, 0.026295375, 0.026386556, 0.026478194, 0.026569222, 0.026661167, 0.026753...</msg>
<status status="PASS" starttime="20201112 10:14:31.003" endtime="20201112 10:14:31.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.022" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.021" endtime="20201112 10:14:31.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.025" level="INFO">VALUE: [7.540300000000166e-05, 8.301299999999984e-05, 8.12230000000018e-05, 8.404199999999945e-05, 8.109800000000167e-05, 8.220800000000028e-05, 8.206900000000059e-05, 8.697200000000113e-05, 8.397300000000107e-05, 8.506900000000012e-05, 8.491699999999686e-05, 8.126300000000156e-05, 8.39720000000016e-05, 8.208399999999963e-05, 8.41660000000001e-05, 8.401399999999684e-05, 8.417999999999967e-05, 8.111200000000124e-05, 8.509799999999873e-05, 8.308299999999769e-05, 8.31110000000003e-05, 8.694500000000147e-05, 8.488900000000119e-05, 8.599999999999927e-05, 8.305499999999855e-05, 8.025000000000046e-05, 8.591700000000133e-05, 8.312499999999987e-05, 8.409699999999826e-05, 8.105600000000296e-05, 8.312499999999987e-05, 8.59859999999997e-05, 8.304100000000245e-05, 8.297300000000007e-05, 8.31659999999991e-05, 8.11390000000009e-05, 8.597200000000013e-05, 8.307000000000106e-05, 8.020800000000175e-05, 8.691699999999886e-05, 8.116600000000057e-05, 8.21390000000019e-05, 8.594400000000099e-05, 8.401400000000031e-05, 8.213899999999844e-05, 8.400000000000074e-05, 8.218100000000061e-05, 8.502800000000088e-05, 8.588899999999872e-05, 8.215199999999853e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.023" endtime="20201112 10:14:31.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.019" endtime="20201112 10:14:31.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.033" endtime="20201112 10:14:31.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.036" endtime="20201112 10:14:31.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.035" endtime="20201112 10:14:31.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.031" endtime="20201112 10:14:31.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.651" endtime="20201112 10:14:31.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.650" endtime="20201112 10:14:31.057"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.066" endtime="20201112 10:14:31.090"></status>
</kw>
<msg timestamp="20201112 10:14:31.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.064" endtime="20201112 10:14:31.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.091" endtime="20201112 10:14:31.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.093" endtime="20201112 10:14:31.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.062" endtime="20201112 10:14:31.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.060" endtime="20201112 10:14:31.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.103" endtime="20201112 10:14:31.390"></status>
</kw>
<msg timestamp="20201112 10:14:31.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025169694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.101" endtime="20201112 10:14:31.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025169694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.394" endtime="20201112 10:14:31.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.402" endtime="20201112 10:14:31.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.098" endtime="20201112 10:14:31.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.097" endtime="20201112 10:14:31.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.409" level="INFO">${RESULT} = [{'time': 0.025169694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.87909999999986e-05, 'source_diff': 6.87909999999986e-05}, {'time': 0.025261208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:31.406" endtime="20201112 10:14:31.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.423" level="INFO">${ACCURACY} = {'time': [0.025169694, 0.025261208, 0.025352861, 0.025444861, 0.025536472, 0.025627861, 0.025719681, 0.025811069, 0.025901847, 0.0259935, 0.026084972, 0.026177208, 0.026268611, 0.026360222, 0.02645136...</msg>
<status status="PASS" starttime="20201112 10:14:31.410" endtime="20201112 10:14:31.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.427" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.426" endtime="20201112 10:14:31.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.430" level="INFO">VALUE: [6.87909999999986e-05, 8.123600000000189e-05, 8.408300000000216e-05, 8.505500000000055e-05, 8.602800000000188e-05, 8.601399999999884e-05, 8.216700000000104e-05, 8.599999999999927e-05, 8.21659999999981e-05, 8.3152999999999e-05, 8.594400000000099e-05, 8.218000000000114e-05, 8.601400000000231e-05, 8.119399999999971e-05, 8.222199999999985e-05, 8.595900000000004e-05, 8.215300000000147e-05, 8.41110000000013e-05, 8.495799999999956e-05, 8.219400000000071e-05, 8.119399999999971e-05, 8.213799999999896e-05, 8.21390000000019e-05, 8.506999999999959e-05, 8.697199999999766e-05, 8.025000000000046e-05, 8.686100000000058e-05, 8.408299999999869e-05, 8.409700000000173e-05, 8.394500000000193e-05, 8.408300000000216e-05, 8.118099999999961e-05, 8.2152999999998e-05, 8.594500000000047e-05, 8.404099999999998e-05, 8.411099999999783e-05, 8.312499999999987e-05, 8.505600000000002e-05, 8.597200000000013e-05, 8.112500000000133e-05, 8.21109999999993e-05, 8.216700000000104e-05, 8.2152000000002e-05, 8.406999999999859e-05, 8.312499999999987e-05, 8.301399999999931e-05, 8.504200000000045e-05, 8.694400000000199e-05, 8.595799999999709e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.428" endtime="20201112 10:14:31.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.424" endtime="20201112 10:14:31.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.433" endtime="20201112 10:14:31.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.437" endtime="20201112 10:14:31.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.435" endtime="20201112 10:14:31.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.432" endtime="20201112 10:14:31.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.058" endtime="20201112 10:14:31.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.057" endtime="20201112 10:14:31.458"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.467" endtime="20201112 10:14:31.486"></status>
</kw>
<msg timestamp="20201112 10:14:31.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.465" endtime="20201112 10:14:31.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.488" endtime="20201112 10:14:31.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.490" endtime="20201112 10:14:31.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.462" endtime="20201112 10:14:31.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.460" endtime="20201112 10:14:31.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.499" endtime="20201112 10:14:31.786"></status>
</kw>
<msg timestamp="20201112 10:14:31.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.498" endtime="20201112 10:14:31.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.791" endtime="20201112 10:14:31.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.799" endtime="20201112 10:14:31.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.495" endtime="20201112 10:14:31.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.493" endtime="20201112 10:14:31.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.806" level="INFO">${RESULT} = [{'time': 0.021359944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.786099999999892e-05, 'source_diff': 6.786099999999892e-05}, {'time': 0.02145225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:31.802" endtime="20201112 10:14:31.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.819" level="INFO">${ACCURACY} = {'time': [0.021359944, 0.02145225, 0.021543542, 0.021635389, 0.021726264, 0.021818347, 0.021909972, 0.022001292, 0.022092431, 0.022184431, 0.022276042, 0.0223675, 0.022458611, 0.022550972, 0.022641931...</msg>
<status status="PASS" starttime="20201112 10:14:31.807" endtime="20201112 10:14:31.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.824" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.823" endtime="20201112 10:14:31.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.826" level="INFO">VALUE: [6.786099999999892e-05, 8.505600000000002e-05, 8.012500000000033e-05, 8.418100000000261e-05, 8.209699999999973e-05, 8.13049999999968e-05, 8.690299999999929e-05, 8.606999999999712e-05, 8.11390000000009e-05, 8.218100000000061e-05, 8.495899999999904e-05, 8.119399999999971e-05, 8.208300000000016e-05, 8.697199999999766e-05, 8.505600000000002e-05, 8.208399999999963e-05, 8.4153e-05, 8.504199999999698e-05, 8.591700000000133e-05, 8.406899999999912e-05, 8.019399999999871e-05, 8.312499999999987e-05, 8.305599999999802e-05, 8.312499999999987e-05, 8.307000000000106e-05, 8.025000000000046e-05, 8.502799999999741e-05, 8.697200000000113e-05, 8.400000000000074e-05, 8.697199999999766e-05, 8.495899999999904e-05, 8.601399999999884e-05, 8.316699999999858e-05, 8.018099999999861e-05, 8.506900000000012e-05, 8.602700000000241e-05, 8.687500000000015e-05, 8.222199999999985e-05, 8.401400000000031e-05, 8.123600000000189e-05, 8.697199999999766e-05, 8.49309999999999e-05, 8.505500000000055e-05, 8.401400000000031e-05, 8.212500000000234e-05, 8.502800000000088e-05, 8.120799999999928e-05, 8.125000000000146e-05, 8.208399999999963e-05, 8.122299999999832e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.825" endtime="20201112 10:14:31.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.820" endtime="20201112 10:14:31.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.830" endtime="20201112 10:14:31.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.833" endtime="20201112 10:14:31.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.832" endtime="20201112 10:14:31.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.828" endtime="20201112 10:14:31.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.459" endtime="20201112 10:14:31.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.458" endtime="20201112 10:14:31.854"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.863" endtime="20201112 10:14:31.884"></status>
</kw>
<msg timestamp="20201112 10:14:31.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.861" endtime="20201112 10:14:31.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.886" endtime="20201112 10:14:31.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.888" endtime="20201112 10:14:31.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.859" endtime="20201112 10:14:31.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.857" endtime="20201112 10:14:31.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.897" endtime="20201112 10:14:32.184"></status>
</kw>
<msg timestamp="20201112 10:14:32.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.896" endtime="20201112 10:14:32.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.188" endtime="20201112 10:14:32.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.196" endtime="20201112 10:14:32.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.893" endtime="20201112 10:14:32.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.891" endtime="20201112 10:14:32.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.203" level="INFO">${RESULT} = [{'time': 0.022006778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.641700000000223e-05, 'source_diff': 7.641700000000223e-05}, {'time': 0.022098306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.200" endtime="20201112 10:14:32.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.217" level="INFO">${ACCURACY} = {'time': [0.022006778, 0.022098306, 0.022190306, 0.022281861, 0.02237275, 0.022464361, 0.022556292, 0.022648125, 0.022739556, 0.022831042, 0.022922653, 0.023014222, 0.023105875, 0.023197222, 0.0232886...</msg>
<status status="PASS" starttime="20201112 10:14:32.204" endtime="20201112 10:14:32.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.221" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.220" endtime="20201112 10:14:32.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.224" level="INFO">VALUE: [7.641700000000223e-05, 8.218100000000061e-05, 8.307000000000106e-05, 8.688899999999972e-05, 8.312499999999987e-05, 8.601399999999884e-05, 8.601399999999884e-05, 8.305600000000149e-05, 8.218100000000061e-05, 8.59859999999997e-05, 8.6847000000001e-05, 8.502800000000088e-05, 8.315300000000247e-05, 8.587499999999915e-05, 8.601400000000231e-05, 8.122299999999832e-05, 8.309700000000073e-05, 8.508300000000316e-05, 8.208399999999963e-05, 8.406900000000259e-05, 8.123600000000189e-05, 8.118000000000014e-05, 8.39720000000016e-05, 8.313799999999996e-05, 8.594400000000099e-05, 8.309699999999726e-05, 8.319400000000171e-05, 8.312499999999987e-05, 8.509700000000273e-05, 8.01389999999999e-05, 8.406899999999912e-05, 8.695800000000156e-05, 8.511099999999883e-05, 8.588900000000219e-05, 8.125000000000146e-05, 8.694400000000199e-05, 8.208299999999669e-05, 8.122200000000232e-05, 8.120799999999928e-05, 8.694500000000147e-05, 8.497199999999913e-05, 8.308300000000116e-05, 8.502800000000088e-05, 8.69860000000007e-05, 8.401400000000031e-05, 8.506999999999959e-05, 8.120799999999928e-05, 8.413900000000044e-05, 8.694399999999852e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.222" endtime="20201112 10:14:32.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.217" endtime="20201112 10:14:32.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.227" endtime="20201112 10:14:32.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.231" endtime="20201112 10:14:32.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.229" endtime="20201112 10:14:32.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.226" endtime="20201112 10:14:32.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.855" endtime="20201112 10:14:32.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.854" endtime="20201112 10:14:32.252"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.260" endtime="20201112 10:14:32.281"></status>
</kw>
<msg timestamp="20201112 10:14:32.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.259" endtime="20201112 10:14:32.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.282" endtime="20201112 10:14:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.285" endtime="20201112 10:14:32.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.256" endtime="20201112 10:14:32.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.254" endtime="20201112 10:14:32.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.294" endtime="20201112 10:14:32.580"></status>
</kw>
<msg timestamp="20201112 10:14:32.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.292" endtime="20201112 10:14:32.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021323056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.585" endtime="20201112 10:14:32.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.593" endtime="20201112 10:14:32.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.290" endtime="20201112 10:14:32.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.288" endtime="20201112 10:14:32.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.600" level="INFO">${RESULT} = [{'time': 0.021402333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.927699999999913e-05, 'source_diff': 7.927699999999913e-05}, {'time': 0.021493875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.596" endtime="20201112 10:14:32.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.615" level="INFO">${ACCURACY} = {'time': [0.021402333, 0.021493875, 0.021584639, 0.021676403, 0.021768319, 0.021859417, 0.021951153, 0.022042806, 0.022134694, 0.022225931, 0.022317264, 0.022408931, 0.022500986, 0.022592028, 0.022683...</msg>
<status status="PASS" starttime="20201112 10:14:32.601" endtime="20201112 10:14:32.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.619" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.618" endtime="20201112 10:14:32.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.622" level="INFO">VALUE: [7.927699999999913e-05, 8.687500000000015e-05, 8.123599999999842e-05, 8.111100000000177e-05, 8.312499999999987e-05, 8.49859999999987e-05, 8.408400000000163e-05, 8.688900000000319e-05, 8.597200000000013e-05, 8.301399999999931e-05, 8.409699999999826e-05, 8.316699999999858e-05, 8.116700000000004e-05, 8.307000000000106e-05, 8.116700000000004e-05, 8.402799999999988e-05, 8.025000000000046e-05, 8.119399999999971e-05, 8.399999999999727e-05, 8.690300000000276e-05, 8.113899999999744e-05, 8.599999999999927e-05, 8.309700000000073e-05, 8.49729999999986e-05, 8.309700000000073e-05, 8.600000000000274e-05, 8.205499999999755e-05, 8.217999999999767e-05, 8.509699999999926e-05, 8.20979999999992e-05, 8.219400000000071e-05, 8.601399999999884e-05, 8.302799999999888e-05, 8.112500000000133e-05, 8.212499999999887e-05, 8.405599999999902e-05, 8.406900000000259e-05, 8.105600000000296e-05, 8.41110000000013e-05, 8.601399999999884e-05, 8.504200000000045e-05, 8.597200000000013e-05, 8.59859999999997e-05, 8.219399999999724e-05, 8.404199999999945e-05, 8.304200000000192e-05, 8.217999999999767e-05, 8.408300000000216e-05, 8.21109999999993e-05, 8.319500000000118e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.620" endtime="20201112 10:14:32.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.616" endtime="20201112 10:14:32.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.625" endtime="20201112 10:14:32.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.629" endtime="20201112 10:14:32.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.627" endtime="20201112 10:14:32.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.624" endtime="20201112 10:14:32.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.252" endtime="20201112 10:14:32.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.252" endtime="20201112 10:14:32.650"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.659" endtime="20201112 10:14:32.682"></status>
</kw>
<msg timestamp="20201112 10:14:32.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.657" endtime="20201112 10:14:32.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.684" endtime="20201112 10:14:32.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.686" endtime="20201112 10:14:32.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.654" endtime="20201112 10:14:32.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.652" endtime="20201112 10:14:32.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.695" endtime="20201112 10:14:32.982"></status>
</kw>
<msg timestamp="20201112 10:14:32.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025160417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.694" endtime="20201112 10:14:32.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025160417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.986" endtime="20201112 10:14:32.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.995" endtime="20201112 10:14:32.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.691" endtime="20201112 10:14:32.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.690" endtime="20201112 10:14:32.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.002" level="INFO">${RESULT} = [{'time': 0.025160417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556999999999968e-05, 'source_diff': 9.556999999999968e-05}, {'time': 0.025252236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.998" endtime="20201112 10:14:33.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.015" level="INFO">${ACCURACY} = {'time': [0.025160417, 0.025252236, 0.025343819, 0.025435611, 0.025527097, 0.025618917, 0.025710458, 0.025801625, 0.025893556, 0.025985208, 0.026076236, 0.026167611, 0.026259528, 0.026350667, 0.026442...</msg>
<status status="PASS" starttime="20201112 10:14:33.003" endtime="20201112 10:14:33.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.020" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.019" endtime="20201112 10:14:33.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.022" level="INFO">VALUE: [9.556999999999968e-05, 8.215300000000147e-05, 8.409700000000173e-05, 8.505500000000055e-05, 8.506900000000012e-05, 8.695900000000104e-05, 8.313899999999944e-05, 8.41110000000013e-05, 8.683400000000091e-05, 8.315199999999953e-05, 8.408299999999869e-05, 8.41110000000013e-05, 8.413900000000044e-05, 8.413900000000044e-05, 8.597200000000013e-05, 8.688899999999972e-05, 8.2152999999998e-05, 8.40980000000012e-05, 8.698700000000018e-05, 8.224999999999899e-05, 8.39859999999977e-05, 8.026400000000003e-05, 8.59859999999997e-05, 8.504200000000045e-05, 8.124999999999799e-05, 8.59859999999997e-05, 8.218000000000114e-05, 8.505600000000002e-05, 8.319399999999824e-05, 8.218100000000061e-05, 8.506900000000012e-05, 8.601400000000231e-05, 8.304200000000192e-05, 8.312499999999987e-05, 8.406900000000259e-05, 8.315199999999953e-05, 8.219400000000071e-05, 8.505600000000002e-05, 8.311099999999683e-05, 8.020899999999775e-05, 8.316700000000204e-05, 8.316699999999858e-05, 8.316699999999858e-05, 8.411099999999783e-05, 8.211200000000224e-05, 8.116700000000004e-05, 8.405499999999955e-05, 8.216700000000104e-05, 8.408299999999869e-05, 8.605500000000155e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.021" endtime="20201112 10:14:33.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.016" endtime="20201112 10:14:33.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.026" endtime="20201112 10:14:33.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.030" endtime="20201112 10:14:33.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.028" endtime="20201112 10:14:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.024" endtime="20201112 10:14:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.651" endtime="20201112 10:14:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.650" endtime="20201112 10:14:33.051"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.060" endtime="20201112 10:14:33.083"></status>
</kw>
<msg timestamp="20201112 10:14:33.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.058" endtime="20201112 10:14:33.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.084" endtime="20201112 10:14:33.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.087" endtime="20201112 10:14:33.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.055" endtime="20201112 10:14:33.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.053" endtime="20201112 10:14:33.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.096" endtime="20201112 10:14:33.382"></status>
</kw>
<msg timestamp="20201112 10:14:33.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.095" endtime="20201112 10:14:33.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.387" endtime="20201112 10:14:33.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.395" endtime="20201112 10:14:33.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.092" endtime="20201112 10:14:33.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.090" endtime="20201112 10:14:33.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.402" level="INFO">${RESULT} = [{'time': 0.021290278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.504200000000045e-05, 'source_diff': 8.504200000000045e-05}, {'time': 0.021381889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.398" endtime="20201112 10:14:33.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.415" level="INFO">${ACCURACY} = {'time': [0.021290278, 0.021381889, 0.021473097, 0.021564958, 0.021655917, 0.021748028, 0.021839833, 0.021930972, 0.022022611, 0.022113736, 0.022205222, 0.022297528, 0.022388944, 0.022479972, 0.022572...</msg>
<status status="PASS" starttime="20201112 10:14:33.403" endtime="20201112 10:14:33.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.420" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.419" endtime="20201112 10:14:33.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.422" level="INFO">VALUE: [8.504200000000045e-05, 8.115300000000047e-05, 8.218000000000114e-05, 8.606899999999765e-05, 8.602800000000188e-05, 8.120899999999875e-05, 8.215199999999853e-05, 8.312499999999987e-05, 8.419399999999924e-05, 8.212499999999887e-05, 8.317999999999867e-05, 8.119499999999918e-05, 8.122200000000232e-05, 8.219400000000071e-05, 8.123700000000136e-05, 8.029200000000264e-05, 8.312499999999987e-05, 8.21659999999981e-05, 8.316699999999858e-05, 8.319399999999824e-05, 8.316699999999858e-05, 8.301399999999931e-05, 8.315199999999953e-05, 8.123600000000189e-05, 8.404099999999998e-05, 8.508399999999916e-05, 8.502799999999741e-05, 8.217999999999767e-05, 8.405499999999955e-05, 8.688899999999972e-05, 8.226399999999856e-05, 8.693099999999843e-05, 8.504200000000045e-05, 8.312499999999987e-05, 8.602799999999841e-05, 8.218099999999715e-05, 8.313899999999944e-05, 8.301399999999931e-05, 8.505600000000002e-05, 8.594399999999752e-05, 8.594400000000099e-05, 8.602799999999841e-05, 8.59859999999997e-05, 8.409699999999826e-05, 8.120899999999875e-05, 8.312499999999987e-05, 8.411099999999783e-05, 8.599999999999927e-05, 8.695799999999809e-05, 8.318099999999815e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.421" endtime="20201112 10:14:33.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.416" endtime="20201112 10:14:33.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.426" endtime="20201112 10:14:33.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.430" endtime="20201112 10:14:33.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.428" endtime="20201112 10:14:33.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.424" endtime="20201112 10:14:33.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.052" endtime="20201112 10:14:33.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.051" endtime="20201112 10:14:33.451"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.459" endtime="20201112 10:14:33.481"></status>
</kw>
<msg timestamp="20201112 10:14:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.458" endtime="20201112 10:14:33.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.482" endtime="20201112 10:14:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.485" endtime="20201112 10:14:33.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.455" endtime="20201112 10:14:33.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.453" endtime="20201112 10:14:33.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.494" endtime="20201112 10:14:33.779"></status>
</kw>
<msg timestamp="20201112 10:14:33.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.492" endtime="20201112 10:14:33.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.784" endtime="20201112 10:14:33.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.792" endtime="20201112 10:14:33.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.490" endtime="20201112 10:14:33.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.488" endtime="20201112 10:14:33.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.799" level="INFO">${RESULT} = [{'time': 0.023218028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.970900000000032e-05, 'source_diff': 8.970900000000032e-05}, {'time': 0.023308958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.795" endtime="20201112 10:14:33.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.812" level="INFO">${ACCURACY} = {'time': [0.023218028, 0.023308958, 0.023401222, 0.023492625, 0.023584097, 0.023675514, 0.023767514, 0.023858292, 0.023950278, 0.024042292, 0.024133472, 0.024224472, 0.024316847, 0.024408069, 0.024499...</msg>
<status status="PASS" starttime="20201112 10:14:33.800" endtime="20201112 10:14:33.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.817" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.816" endtime="20201112 10:14:33.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.819" level="INFO">VALUE: [8.970900000000032e-05, 8.118000000000014e-05, 8.408299999999869e-05, 8.59310000000009e-05, 8.117999999999667e-05, 8.407000000000206e-05, 8.408299999999869e-05, 8.11390000000009e-05, 8.120899999999875e-05, 8.11109999999983e-05, 8.493000000000042e-05, 8.122199999999885e-05, 8.395799999999856e-05, 8.601299999999937e-05, 8.505499999999708e-05, 8.113800000000143e-05, 8.504100000000098e-05, 8.594500000000047e-05, 8.215300000000147e-05, 8.688899999999972e-05, 8.220800000000028e-05, 8.594400000000099e-05, 8.405500000000302e-05, 8.307000000000106e-05, 8.208300000000016e-05, 8.691599999999938e-05, 8.494499999999947e-05, 8.13329999999994e-05, 8.402799999999988e-05, 8.498600000000217e-05, 8.31110000000003e-05, 8.39720000000016e-05, 8.687500000000015e-05, 8.591599999999838e-05, 8.116600000000057e-05, 8.017999999999914e-05, 8.507000000000306e-05, 8.695800000000156e-05, 8.587499999999915e-05, 8.215300000000147e-05, 8.400000000000074e-05, 8.506900000000012e-05, 8.308299999999769e-05, 8.315199999999953e-05, 8.495799999999956e-05, 8.49859999999987e-05, 8.02779999999996e-05, 8.115300000000047e-05, 8.413899999999697e-05, 8.304199999999845e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.818" endtime="20201112 10:14:33.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.813" endtime="20201112 10:14:33.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.823" endtime="20201112 10:14:33.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.827" endtime="20201112 10:14:33.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.825" endtime="20201112 10:14:33.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.821" endtime="20201112 10:14:33.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.451" endtime="20201112 10:14:33.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.451" endtime="20201112 10:14:33.848"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.856" endtime="20201112 10:14:33.879"></status>
</kw>
<msg timestamp="20201112 10:14:33.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.855" endtime="20201112 10:14:33.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.880" endtime="20201112 10:14:33.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.883" endtime="20201112 10:14:33.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.852" endtime="20201112 10:14:33.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.850" endtime="20201112 10:14:33.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.892" endtime="20201112 10:14:34.179"></status>
</kw>
<msg timestamp="20201112 10:14:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.890" endtime="20201112 10:14:34.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.183" endtime="20201112 10:14:34.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.192" endtime="20201112 10:14:34.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.888" endtime="20201112 10:14:34.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.886" endtime="20201112 10:14:34.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.198" level="INFO">${RESULT} = [{'time': 0.023223736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.159699999999963e-05, 'source_diff': 7.159699999999963e-05}, {'time': 0.023315111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.195" endtime="20201112 10:14:34.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.213" level="INFO">${ACCURACY} = {'time': [0.023223736, 0.023315111, 0.023406417, 0.023497792, 0.023589583, 0.023680875, 0.023772889, 0.023864375, 0.023955778, 0.024047639, 0.024138764, 0.024230375, 0.024321847, 0.024413681, 0.024505...</msg>
<status status="PASS" starttime="20201112 10:14:34.199" endtime="20201112 10:14:34.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.218" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.217" endtime="20201112 10:14:34.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.220" level="INFO">VALUE: [7.159699999999963e-05, 8.025000000000046e-05, 8.322300000000032e-05, 8.5153000000001e-05, 8.601400000000231e-05, 8.601399999999884e-05, 8.123599999999842e-05, 8.599999999999927e-05, 8.215300000000147e-05, 8.3152999999999e-05, 8.309700000000073e-05, 8.695799999999809e-05, 8.505500000000055e-05, 8.601399999999884e-05, 8.69310000000019e-05, 8.320800000000128e-05, 8.225000000000246e-05, 8.602799999999841e-05, 8.125000000000146e-05, 8.220800000000028e-05, 8.315199999999953e-05, 8.313899999999944e-05, 8.405499999999955e-05, 8.595800000000056e-05, 8.21659999999981e-05, 8.313899999999944e-05, 8.219399999999724e-05, 8.231900000000084e-05, 8.41110000000013e-05, 8.599999999999927e-05, 8.125000000000146e-05, 8.599999999999927e-05, 8.505600000000002e-05, 8.692999999999895e-05, 8.512500000000187e-05, 8.508400000000263e-05, 8.216700000000104e-05, 8.408299999999869e-05, 8.409699999999826e-05, 8.119499999999918e-05, 8.693099999999843e-05, 8.120799999999928e-05, 8.505600000000002e-05, 8.697200000000113e-05, 8.4153e-05, 8.602799999999841e-05, 8.704199999999898e-05, 8.604200000000145e-05, 8.122299999999832e-05, 8.133399999999888e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.219" endtime="20201112 10:14:34.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.214" endtime="20201112 10:14:34.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.224" endtime="20201112 10:14:34.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.227" endtime="20201112 10:14:34.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.226" endtime="20201112 10:14:34.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.222" endtime="20201112 10:14:34.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.848" endtime="20201112 10:14:34.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.848" endtime="20201112 10:14:34.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.274" endtime="20201112 10:14:34.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.253" endtime="20201112 10:14:34.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.251" endtime="20201112 10:14:34.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.250" endtime="20201112 10:14:34.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:54.195" endtime="20201112 10:14:34.274" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.281" endtime="20201112 10:14:34.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.279" endtime="20201112 10:14:34.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.315" endtime="20201112 10:14:34.338"></status>
</kw>
<msg timestamp="20201112 10:14:34.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.313" endtime="20201112 10:14:34.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.339" endtime="20201112 10:14:34.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.344" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:34.342" endtime="20201112 10:14:34.344"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:34.310" endtime="20201112 10:14:34.345"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:34.307" endtime="20201112 10:14:34.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.306" endtime="20201112 10:14:34.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:34.349" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:34.349" endtime="20201112 10:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.347" endtime="20201112 10:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.305" endtime="20201112 10:14:34.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.305" endtime="20201112 10:14:34.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.351" endtime="20201112 10:14:34.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.303" endtime="20201112 10:14:34.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.302" endtime="20201112 10:14:34.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.278" endtime="20201112 10:14:34.354"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.365" endtime="20201112 10:14:34.381"></status>
</kw>
<msg timestamp="20201112 10:14:34.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.363" endtime="20201112 10:14:34.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.383" endtime="20201112 10:14:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.385" endtime="20201112 10:14:34.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.360" endtime="20201112 10:14:34.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.358" endtime="20201112 10:14:34.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.394" endtime="20201112 10:14:34.679"></status>
</kw>
<msg timestamp="20201112 10:14:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076270208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076278431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.393" endtime="20201112 10:14:34.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076270208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076278431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.684" endtime="20201112 10:14:34.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.692" endtime="20201112 10:14:34.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.390" endtime="20201112 10:14:34.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.388" endtime="20201112 10:14:34.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.699" level="INFO">${RESULT} = [{'time': 0.076278431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999987768e-06, 'source_diff': 8.222999999987768e-06}, {'time': 0.076294542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.695" endtime="20201112 10:14:34.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.713" level="INFO">${ACCURACY} = {'time': [0.076278431, 0.076294542, 0.076312278, 0.076326014, 0.076344528, 0.076362208, 0.07637725, 0.076392861, 0.076405861, 0.076419972, 0.076434139, 0.076451458, 0.076468514, 0.076484403, 0.0764983...</msg>
<status status="PASS" starttime="20201112 10:14:34.700" endtime="20201112 10:14:34.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.718" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.717" endtime="20201112 10:14:34.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.720" level="INFO">VALUE: [8.222999999987768e-06, 8.195000000002506e-06, 8.180999999995997e-06, 8.207999999995663e-06, 8.221999999988294e-06, 8.222000000002172e-06, 8.180999999995997e-06, 8.222000000002172e-06, 8.208000000009541e-06, 8.208000000009541e-06, 8.235999999994803e-06, 8.179999999996523e-06, 8.207999999995663e-06, 8.195000000002506e-06, 8.235999999994803e-06, 8.207999999995663e-06, 8.194000000003032e-06, 8.166999999989488e-06, 8.207999999995663e-06, 8.194000000003032e-06, 8.194000000003032e-06, 8.209000000009015e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.166000000003892e-06, 8.209000000009015e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.167000000003366e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.180999999995997e-06, 8.208999999995137e-06, 8.207999999995663e-06, 8.26400000000782e-06, 8.180999999995997e-06, 8.179999999996523e-06, 8.263999999993943e-06, 8.263999999993943e-06, 8.195000000002506e-06, 8.209000000009015e-06, 8.207999999995663e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.193999999989154e-06, 8.208999999995137e-06, 8.222000000002172e-06, 8.207999999995663e-06, 8.194000000003032e-06]</msg>
<status status="PASS" starttime="20201112 10:14:34.719" endtime="20201112 10:14:34.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.714" endtime="20201112 10:14:34.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.723" endtime="20201112 10:14:34.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.727" endtime="20201112 10:14:34.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.725" endtime="20201112 10:14:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.722" endtime="20201112 10:14:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.356" endtime="20201112 10:14:34.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.355" endtime="20201112 10:14:34.748"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.757" endtime="20201112 10:14:34.777"></status>
</kw>
<msg timestamp="20201112 10:14:34.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.755" endtime="20201112 10:14:34.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.778" endtime="20201112 10:14:34.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.780" endtime="20201112 10:14:34.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.753" endtime="20201112 10:14:34.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.751" endtime="20201112 10:14:34.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.790" endtime="20201112 10:14:35.076"></status>
</kw>
<msg timestamp="20201112 10:14:35.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.788" endtime="20201112 10:14:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.081" endtime="20201112 10:14:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.089" endtime="20201112 10:14:35.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.785" endtime="20201112 10:14:35.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.784" endtime="20201112 10:14:35.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.096" level="INFO">${RESULT} = [{'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.022245583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.092" endtime="20201112 10:14:35.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.110" level="INFO">${ACCURACY} = {'time': [0.022229986, 0.022245583, 0.022263458, 0.022276028, 0.022293583, 0.022306056, 0.0223205, 0.022332986, 0.022346694, 0.022359236, 0.022371694, 0.022384139, 0.022400542, 0.022414986, 0.02242786...</msg>
<status status="PASS" starttime="20201112 10:14:35.097" endtime="20201112 10:14:35.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.115" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.114" endtime="20201112 10:14:35.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.117" level="INFO">VALUE: [8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.166000000000423e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.139000000000757e-06, 8.237000000001216e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.223000000001646e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.208000000002602e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.194999999999036e-06]</msg>
<status status="PASS" starttime="20201112 10:14:35.116" endtime="20201112 10:14:35.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.111" endtime="20201112 10:14:35.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.121" endtime="20201112 10:14:35.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.124" endtime="20201112 10:14:35.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.123" endtime="20201112 10:14:35.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.119" endtime="20201112 10:14:35.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.749" endtime="20201112 10:14:35.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.748" endtime="20201112 10:14:35.145"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.154" endtime="20201112 10:14:35.170"></status>
</kw>
<msg timestamp="20201112 10:14:35.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.152" endtime="20201112 10:14:35.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.172" endtime="20201112 10:14:35.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.175" endtime="20201112 10:14:35.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.150" endtime="20201112 10:14:35.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.148" endtime="20201112 10:14:35.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.184" endtime="20201112 10:14:35.469"></status>
</kw>
<msg timestamp="20201112 10:14:35.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.182" endtime="20201112 10:14:35.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.473" endtime="20201112 10:14:35.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.481" endtime="20201112 10:14:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.179" endtime="20201112 10:14:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.178" endtime="20201112 10:14:35.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.489" level="INFO">${RESULT} = [{'time': 0.021620194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.021634611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.486" endtime="20201112 10:14:35.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.502" level="INFO">${ACCURACY} = {'time': [0.021620194, 0.021634611, 0.021650889, 0.021666292, 0.021684944, 0.021701819, 0.021720403, 0.021737458, 0.021751903, 0.021770611, 0.021786847, 0.021804611, 0.021823319, 0.021835472, 0.021854...</msg>
<status status="PASS" starttime="20201112 10:14:35.490" endtime="20201112 10:14:35.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.507" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.506" endtime="20201112 10:14:35.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.509" level="INFO">VALUE: [8.179999999999993e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.167000000003366e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.165999999996953e-06, 8.208999999998606e-06, 8.138999999997287e-06, 8.264000000000882e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.236999999997746e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 10:14:35.508" endtime="20201112 10:14:35.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.503" endtime="20201112 10:14:35.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.513" endtime="20201112 10:14:35.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.517" endtime="20201112 10:14:35.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.515" endtime="20201112 10:14:35.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.511" endtime="20201112 10:14:35.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.146" endtime="20201112 10:14:35.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.146" endtime="20201112 10:14:35.538"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.546" endtime="20201112 10:14:35.562"></status>
</kw>
<msg timestamp="20201112 10:14:35.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.545" endtime="20201112 10:14:35.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.564" endtime="20201112 10:14:35.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.566" endtime="20201112 10:14:35.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.542" endtime="20201112 10:14:35.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.540" endtime="20201112 10:14:35.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.575" endtime="20201112 10:14:35.864"></status>
</kw>
<msg timestamp="20201112 10:14:35.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:35.574" endtime="20201112 10:14:35.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:35.868" endtime="20201112 10:14:35.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.877" endtime="20201112 10:14:35.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.571" endtime="20201112 10:14:35.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.569" endtime="20201112 10:14:35.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.883" level="INFO">${RESULT} = [{'time': 0.021065208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.021078625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.880" endtime="20201112 10:14:35.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.897" level="INFO">${ACCURACY} = {'time': [0.021065208, 0.021078625, 0.021094694, 0.021108222, 0.021120569, 0.021135125, 0.021149083, 0.021164125, 0.021176597, 0.021189083, 0.021205597, 0.021218778, 0.021234042, 0.021249861, 0.021265...</msg>
<status status="PASS" starttime="20201112 10:14:35.884" endtime="20201112 10:14:35.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.901" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.900" endtime="20201112 10:14:35.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.904" level="INFO">VALUE: [8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.208000000002602e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.223000000001646e-06]</msg>
<status status="PASS" starttime="20201112 10:14:35.902" endtime="20201112 10:14:35.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.898" endtime="20201112 10:14:35.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.907" endtime="20201112 10:14:35.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.911" endtime="20201112 10:14:35.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.909" endtime="20201112 10:14:35.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.906" endtime="20201112 10:14:35.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.539" endtime="20201112 10:14:35.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.538" endtime="20201112 10:14:35.932"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.941" endtime="20201112 10:14:35.963"></status>
</kw>
<msg timestamp="20201112 10:14:35.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.939" endtime="20201112 10:14:35.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.965" endtime="20201112 10:14:35.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.967" endtime="20201112 10:14:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.936" endtime="20201112 10:14:35.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.934" endtime="20201112 10:14:35.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.977" endtime="20201112 10:14:36.265"></status>
</kw>
<msg timestamp="20201112 10:14:36.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023837333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.975" endtime="20201112 10:14:36.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023837333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.269" endtime="20201112 10:14:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.277" endtime="20201112 10:14:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.972" endtime="20201112 10:14:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.971" endtime="20201112 10:14:36.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.284" level="INFO">${RESULT} = [{'time': 0.023837333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.023850847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.281" endtime="20201112 10:14:36.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.297" level="INFO">${ACCURACY} = {'time': [0.023837333, 0.023850847, 0.023864028, 0.023881306, 0.023894833, 0.023907125, 0.02392425, 0.023940986, 0.023955653, 0.023972167, 0.023988056, 0.024001653, 0.024017056, 0.024030653, 0.0240445...</msg>
<status status="PASS" starttime="20201112 10:14:36.285" endtime="20201112 10:14:36.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.302" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.301" endtime="20201112 10:14:36.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.304" level="INFO">VALUE: [8.207999999999133e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.125000000001187e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.139000000000757e-06, 8.181000000002936e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 10:14:36.303" endtime="20201112 10:14:36.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.298" endtime="20201112 10:14:36.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.312" endtime="20201112 10:14:36.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.316" endtime="20201112 10:14:36.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.314" endtime="20201112 10:14:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.310" endtime="20201112 10:14:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.933" endtime="20201112 10:14:36.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.932" endtime="20201112 10:14:36.337"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.345" endtime="20201112 10:14:36.360"></status>
</kw>
<msg timestamp="20201112 10:14:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.344" endtime="20201112 10:14:36.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.362" endtime="20201112 10:14:36.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.364" endtime="20201112 10:14:36.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.341" endtime="20201112 10:14:36.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.339" endtime="20201112 10:14:36.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.373" endtime="20201112 10:14:36.660"></status>
</kw>
<msg timestamp="20201112 10:14:36.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020952694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:36.372" endtime="20201112 10:14:36.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020952694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:36.664" endtime="20201112 10:14:36.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.673" endtime="20201112 10:14:36.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.369" endtime="20201112 10:14:36.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.368" endtime="20201112 10:14:36.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.680" level="INFO">${RESULT} = [{'time': 0.020952694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.020966833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.676" endtime="20201112 10:14:36.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.693" level="INFO">${ACCURACY} = {'time': [0.020952694, 0.020966833, 0.020984736, 0.021000333, 0.021012694, 0.021026708, 0.021042528, 0.021057097, 0.021070806, 0.021083597, 0.021098486, 0.021112389, 0.021126181, 0.021142819, 0.021158...</msg>
<status status="PASS" starttime="20201112 10:14:36.681" endtime="20201112 10:14:36.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.697" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.696" endtime="20201112 10:14:36.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.700" level="INFO">VALUE: [8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.139000000000757e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.138999999997287e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201112 10:14:36.699" endtime="20201112 10:14:36.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.694" endtime="20201112 10:14:36.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.704" endtime="20201112 10:14:36.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.707" endtime="20201112 10:14:36.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.706" endtime="20201112 10:14:36.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.702" endtime="20201112 10:14:36.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.337" endtime="20201112 10:14:36.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.337" endtime="20201112 10:14:36.728"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.737" endtime="20201112 10:14:36.753"></status>
</kw>
<msg timestamp="20201112 10:14:36.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.735" endtime="20201112 10:14:36.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.754" endtime="20201112 10:14:36.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.757" endtime="20201112 10:14:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.733" endtime="20201112 10:14:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.730" endtime="20201112 10:14:36.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.766" endtime="20201112 10:14:37.053"></status>
</kw>
<msg timestamp="20201112 10:14:37.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02136375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:36.765" endtime="20201112 10:14:37.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02136375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:37.058" endtime="20201112 10:14:37.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.066" endtime="20201112 10:14:37.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.762" endtime="20201112 10:14:37.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.760" endtime="20201112 10:14:37.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.073" level="INFO">${RESULT} = [{'time': 0.021371931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.021388208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.070" endtime="20201112 10:14:37.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.087" level="INFO">${ACCURACY} = {'time': [0.021371931, 0.021388208, 0.021401097, 0.021418014, 0.021430278, 0.021444431, 0.021463153, 0.021478833, 0.021491125, 0.021508583, 0.021524278, 0.021542861, 0.02156075, 0.021577486, 0.0215914...</msg>
<status status="PASS" starttime="20201112 10:14:37.074" endtime="20201112 10:14:37.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.091" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.090" endtime="20201112 10:14:37.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.094" level="INFO">VALUE: [8.180999999999466e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.138000000001283e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.165999999996953e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 10:14:37.092" endtime="20201112 10:14:37.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.088" endtime="20201112 10:14:37.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.098" endtime="20201112 10:14:37.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.102" endtime="20201112 10:14:37.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.100" endtime="20201112 10:14:37.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.096" endtime="20201112 10:14:37.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.729" endtime="20201112 10:14:37.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.728" endtime="20201112 10:14:37.123"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.132" endtime="20201112 10:14:37.150"></status>
</kw>
<msg timestamp="20201112 10:14:37.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.130" endtime="20201112 10:14:37.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.151" endtime="20201112 10:14:37.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.154" endtime="20201112 10:14:37.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.128" endtime="20201112 10:14:37.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.126" endtime="20201112 10:14:37.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.163" endtime="20201112 10:14:37.450"></status>
</kw>
<msg timestamp="20201112 10:14:37.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.161" endtime="20201112 10:14:37.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.454" endtime="20201112 10:14:37.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.462" endtime="20201112 10:14:37.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.159" endtime="20201112 10:14:37.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.157" endtime="20201112 10:14:37.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.469" level="INFO">${RESULT} = [{'time': 0.023364194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.023381111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.466" endtime="20201112 10:14:37.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.482" level="INFO">${ACCURACY} = {'time': [0.023364194, 0.023381111, 0.023397708, 0.023414736, 0.023427819, 0.023442806, 0.023460903, 0.023476292, 0.023491472, 0.023505111, 0.023518681, 0.0235325, 0.023550222, 0.023568486, 0.02358708...</msg>
<status status="PASS" starttime="20201112 10:14:37.470" endtime="20201112 10:14:37.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.487" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.486" endtime="20201112 10:14:37.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.490" level="INFO">VALUE: [8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.263000000001408e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.236999999997746e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 10:14:37.488" endtime="20201112 10:14:37.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.483" endtime="20201112 10:14:37.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.493" endtime="20201112 10:14:37.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.497" endtime="20201112 10:14:37.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.495" endtime="20201112 10:14:37.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.491" endtime="20201112 10:14:37.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.124" endtime="20201112 10:14:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.123" endtime="20201112 10:14:37.518"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.526" endtime="20201112 10:14:37.541"></status>
</kw>
<msg timestamp="20201112 10:14:37.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.525" endtime="20201112 10:14:37.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.542" endtime="20201112 10:14:37.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.545" endtime="20201112 10:14:37.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.522" endtime="20201112 10:14:37.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.520" endtime="20201112 10:14:37.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.554" endtime="20201112 10:14:37.840"></status>
</kw>
<msg timestamp="20201112 10:14:37.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:37.552" endtime="20201112 10:14:37.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:37.845" endtime="20201112 10:14:37.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.853" endtime="20201112 10:14:37.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.550" endtime="20201112 10:14:37.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.548" endtime="20201112 10:14:37.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.860" level="INFO">${RESULT} = [{'time': 0.020553181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.020565958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.856" endtime="20201112 10:14:37.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.873" level="INFO">${ACCURACY} = {'time': [0.020553181, 0.020565958, 0.020582028, 0.020596833, 0.020610944, 0.020628083, 0.020643625, 0.020659972, 0.020676403, 0.020690125, 0.020702806, 0.020719042, 0.02073275, 0.020747333, 0.0207655...</msg>
<status status="PASS" starttime="20201112 10:14:37.861" endtime="20201112 10:14:37.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.878" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.877" endtime="20201112 10:14:37.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.880" level="INFO">VALUE: [8.180999999999466e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.125000000001187e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.125000000001187e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201112 10:14:37.879" endtime="20201112 10:14:37.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.874" endtime="20201112 10:14:37.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.884" endtime="20201112 10:14:37.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.887" endtime="20201112 10:14:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.886" endtime="20201112 10:14:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.882" endtime="20201112 10:14:37.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.519" endtime="20201112 10:14:37.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.518" endtime="20201112 10:14:37.908"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.917" endtime="20201112 10:14:37.934"></status>
</kw>
<msg timestamp="20201112 10:14:37.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.916" endtime="20201112 10:14:37.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.935" endtime="20201112 10:14:37.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.938" endtime="20201112 10:14:37.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.913" endtime="20201112 10:14:37.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.911" endtime="20201112 10:14:37.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.947" endtime="20201112 10:14:38.233"></status>
</kw>
<msg timestamp="20201112 10:14:38.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.945" endtime="20201112 10:14:38.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.237" endtime="20201112 10:14:38.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.246" endtime="20201112 10:14:38.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.943" endtime="20201112 10:14:38.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.941" endtime="20201112 10:14:38.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.252" level="INFO">${RESULT} = [{'time': 0.021753444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.02176925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:38.249" endtime="20201112 10:14:38.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.266" level="INFO">${ACCURACY} = {'time': [0.021753444, 0.02176925, 0.021786931, 0.021800681, 0.021816903, 0.021834153, 0.021852125, 0.021864806, 0.021877597, 0.021892403, 0.021910444, 0.021928139, 0.021942153, 0.021956486, 0.0219702...</msg>
<status status="PASS" starttime="20201112 10:14:38.253" endtime="20201112 10:14:38.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.271" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.270" endtime="20201112 10:14:38.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.273" level="INFO">VALUE: [8.207999999999133e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.278000000000452e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.152999999996857e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.138000000001283e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 10:14:38.272" endtime="20201112 10:14:38.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.267" endtime="20201112 10:14:38.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.277" endtime="20201112 10:14:38.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.280" endtime="20201112 10:14:38.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.279" endtime="20201112 10:14:38.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.275" endtime="20201112 10:14:38.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.909" endtime="20201112 10:14:38.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.909" endtime="20201112 10:14:38.301"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.310" endtime="20201112 10:14:38.327"></status>
</kw>
<msg timestamp="20201112 10:14:38.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.308" endtime="20201112 10:14:38.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.328" endtime="20201112 10:14:38.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.331" endtime="20201112 10:14:38.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.306" endtime="20201112 10:14:38.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.304" endtime="20201112 10:14:38.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.340" endtime="20201112 10:14:38.626"></status>
</kw>
<msg timestamp="20201112 10:14:38.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.338" endtime="20201112 10:14:38.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020865014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.631" endtime="20201112 10:14:38.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.639" endtime="20201112 10:14:38.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.336" endtime="20201112 10:14:38.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.334" endtime="20201112 10:14:38.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.646" level="INFO">${RESULT} = [{'time': 0.020865014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.020877972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:38.642" endtime="20201112 10:14:38.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.659" level="INFO">${ACCURACY} = {'time': [0.020865014, 0.020877972, 0.020893236, 0.020911014, 0.020923889, 0.020938569, 0.020952056, 0.020969944, 0.020983458, 0.020997472, 0.021015653, 0.021028639, 0.021042847, 0.021058028, 0.021072...</msg>
<status status="PASS" starttime="20201112 10:14:38.647" endtime="20201112 10:14:38.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.664" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.663" endtime="20201112 10:14:38.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.666" level="INFO">VALUE: [8.208000000002602e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.278000000000452e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.223000000001646e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201112 10:14:38.665" endtime="20201112 10:14:38.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.660" endtime="20201112 10:14:38.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.670" endtime="20201112 10:14:38.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.673" endtime="20201112 10:14:38.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.672" endtime="20201112 10:14:38.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.668" endtime="20201112 10:14:38.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.302" endtime="20201112 10:14:38.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.301" endtime="20201112 10:14:38.694"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.703" endtime="20201112 10:14:38.722"></status>
</kw>
<msg timestamp="20201112 10:14:38.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.701" endtime="20201112 10:14:38.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.723" endtime="20201112 10:14:38.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.726" endtime="20201112 10:14:38.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.699" endtime="20201112 10:14:38.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.697" endtime="20201112 10:14:38.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.735" endtime="20201112 10:14:39.022"></status>
</kw>
<msg timestamp="20201112 10:14:39.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.733" endtime="20201112 10:14:39.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.027" endtime="20201112 10:14:39.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.035" endtime="20201112 10:14:39.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.731" endtime="20201112 10:14:39.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.729" endtime="20201112 10:14:39.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.042" level="INFO">${RESULT} = [{'time': 0.024609153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.024625069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.039" endtime="20201112 10:14:39.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.055" level="INFO">${ACCURACY} = {'time': [0.024609153, 0.024625069, 0.024642736, 0.024655708, 0.024671069, 0.024686931, 0.024699903, 0.024714306, 0.024726667, 0.024740806, 0.024756708, 0.024769472, 0.024785792, 0.024800931, 0.024816...</msg>
<status status="PASS" starttime="20201112 10:14:39.043" endtime="20201112 10:14:39.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.060" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.059" endtime="20201112 10:14:39.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.062" level="INFO">VALUE: [8.139000000000757e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.111999999997621e-06, 8.195000000002506e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.195000000002506e-06, 8.277999999996982e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.125000000001187e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.249999999997842e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.137999999997814e-06, 8.193999999999563e-06, 8.278000000000452e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.209000000002076e-06]</msg>
<status status="PASS" starttime="20201112 10:14:39.061" endtime="20201112 10:14:39.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.056" endtime="20201112 10:14:39.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.066" endtime="20201112 10:14:39.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.070" endtime="20201112 10:14:39.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.068" endtime="20201112 10:14:39.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.064" endtime="20201112 10:14:39.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.695" endtime="20201112 10:14:39.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.695" endtime="20201112 10:14:39.091"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.099" endtime="20201112 10:14:39.122"></status>
</kw>
<msg timestamp="20201112 10:14:39.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.098" endtime="20201112 10:14:39.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.123" endtime="20201112 10:14:39.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.126" endtime="20201112 10:14:39.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.095" endtime="20201112 10:14:39.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.093" endtime="20201112 10:14:39.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.136" endtime="20201112 10:14:39.423"></status>
</kw>
<msg timestamp="20201112 10:14:39.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025248917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.135" endtime="20201112 10:14:39.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025248917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.427" endtime="20201112 10:14:39.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.435" endtime="20201112 10:14:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.132" endtime="20201112 10:14:39.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.130" endtime="20201112 10:14:39.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.442" level="INFO">${RESULT} = [{'time': 0.025257139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.025275889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.439" endtime="20201112 10:14:39.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.455" level="INFO">${ACCURACY} = {'time': [0.025257139, 0.025275889, 0.025294597, 0.025313208, 0.025326597, 0.025340542, 0.025356222, 0.025374153, 0.025390444, 0.025408153, 0.025421694, 0.025435833, 0.025453917, 0.025469319, 0.025482...</msg>
<status status="PASS" starttime="20201112 10:14:39.443" endtime="20201112 10:14:39.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.460" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.459" endtime="20201112 10:14:39.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.462" level="INFO">VALUE: [8.222000000002172e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.166000000000423e-06, 8.153000000000327e-06, 8.166000000000423e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.125000000001187e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.194000000003032e-06, 8.208999999998606e-06, 8.291000000000548e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.110999999998147e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.194000000003032e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.222999999998176e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.166000000000423e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201112 10:14:39.461" endtime="20201112 10:14:39.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.456" endtime="20201112 10:14:39.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.466" endtime="20201112 10:14:39.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.470" endtime="20201112 10:14:39.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.468" endtime="20201112 10:14:39.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.464" endtime="20201112 10:14:39.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.091" endtime="20201112 10:14:39.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.091" endtime="20201112 10:14:39.491"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.499" endtime="20201112 10:14:39.516"></status>
</kw>
<msg timestamp="20201112 10:14:39.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.498" endtime="20201112 10:14:39.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.518" endtime="20201112 10:14:39.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.520" endtime="20201112 10:14:39.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.495" endtime="20201112 10:14:39.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.493" endtime="20201112 10:14:39.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.529" endtime="20201112 10:14:39.817"></status>
</kw>
<msg timestamp="20201112 10:14:39.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:39.528" endtime="20201112 10:14:39.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:39.822" endtime="20201112 10:14:39.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.830" endtime="20201112 10:14:39.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.525" endtime="20201112 10:14:39.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.524" endtime="20201112 10:14:39.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.837" level="INFO">${RESULT} = [{'time': 0.022088694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.022104347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.833" endtime="20201112 10:14:39.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.850" level="INFO">${ACCURACY} = {'time': [0.022088694, 0.022104347, 0.022119083, 0.022135542, 0.022152042, 0.022165167, 0.022182625, 0.022196667, 0.022213375, 0.022228875, 0.022246625, 0.022262847, 0.022275, 0.022288514, 0.022304764...</msg>
<status status="PASS" starttime="20201112 10:14:39.838" endtime="20201112 10:14:39.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.855" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.854" endtime="20201112 10:14:39.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.857" level="INFO">VALUE: [8.193999999999563e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.236000000001742e-06, 8.153000000000327e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.222999999998176e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.222999999998176e-06, 8.195000000002506e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.166000000000423e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.278000000000452e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 10:14:39.856" endtime="20201112 10:14:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.851" endtime="20201112 10:14:39.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.861" endtime="20201112 10:14:39.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.864" endtime="20201112 10:14:39.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.863" endtime="20201112 10:14:39.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.859" endtime="20201112 10:14:39.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.492" endtime="20201112 10:14:39.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.491" endtime="20201112 10:14:39.885"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.894" endtime="20201112 10:14:39.913"></status>
</kw>
<msg timestamp="20201112 10:14:39.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.892" endtime="20201112 10:14:39.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.914" endtime="20201112 10:14:39.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.917" endtime="20201112 10:14:39.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.890" endtime="20201112 10:14:39.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.888" endtime="20201112 10:14:39.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.926" endtime="20201112 10:14:40.213"></status>
</kw>
<msg timestamp="20201112 10:14:40.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024413, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:39.925" endtime="20201112 10:14:40.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024413, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:40.218" endtime="20201112 10:14:40.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.226" endtime="20201112 10:14:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.922" endtime="20201112 10:14:40.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.920" endtime="20201112 10:14:40.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.233" level="INFO">${RESULT} = [{'time': 0.024413, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.024425806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:40.229" endtime="20201112 10:14:40.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.246" level="INFO">${ACCURACY} = {'time': [0.024413, 0.024425806, 0.024441667, 0.024454778, 0.024471431, 0.024485361, 0.024499597, 0.02451175, 0.024528389, 0.024546792, 0.024563236, 0.024578903, 0.024597319, 0.024611472, 0.024626861,...</msg>
<status status="PASS" starttime="20201112 10:14:40.234" endtime="20201112 10:14:40.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.251" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.250" endtime="20201112 10:14:40.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.253" level="INFO">VALUE: [8.180999999999466e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.249999999997842e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.250000000001312e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 10:14:40.252" endtime="20201112 10:14:40.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.247" endtime="20201112 10:14:40.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.257" endtime="20201112 10:14:40.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.260" endtime="20201112 10:14:40.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.259" endtime="20201112 10:14:40.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.255" endtime="20201112 10:14:40.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.886" endtime="20201112 10:14:40.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.886" endtime="20201112 10:14:40.281"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.290" endtime="20201112 10:14:40.314"></status>
</kw>
<msg timestamp="20201112 10:14:40.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.288" endtime="20201112 10:14:40.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.315" endtime="20201112 10:14:40.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.318" endtime="20201112 10:14:40.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.286" endtime="20201112 10:14:40.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.284" endtime="20201112 10:14:40.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.327" endtime="20201112 10:14:40.614"></status>
</kw>
<msg timestamp="20201112 10:14:40.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.326" endtime="20201112 10:14:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.619" endtime="20201112 10:14:40.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.627" endtime="20201112 10:14:40.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.323" endtime="20201112 10:14:40.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.321" endtime="20201112 10:14:40.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.634" level="INFO">${RESULT} = [{'time': 0.025261167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.025278583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:40.630" endtime="20201112 10:14:40.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.647" level="INFO">${ACCURACY} = {'time': [0.025261167, 0.025278583, 0.025292389, 0.025306014, 0.025318153, 0.025331375, 0.025345694, 0.025360458, 0.025378556, 0.025393847, 0.025409847, 0.025423569, 0.025437861, 0.025452625, 0.025469...</msg>
<status status="PASS" starttime="20201112 10:14:40.635" endtime="20201112 10:14:40.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.652" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.651" endtime="20201112 10:14:40.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.654" level="INFO">VALUE: [8.250000000001312e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.208000000002602e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.263999999997412e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201112 10:14:40.653" endtime="20201112 10:14:40.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.648" endtime="20201112 10:14:40.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.658" endtime="20201112 10:14:40.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.661" endtime="20201112 10:14:40.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.660" endtime="20201112 10:14:40.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.656" endtime="20201112 10:14:40.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.282" endtime="20201112 10:14:40.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.282" endtime="20201112 10:14:40.682"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.691" endtime="20201112 10:14:40.707"></status>
</kw>
<msg timestamp="20201112 10:14:40.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.689" endtime="20201112 10:14:40.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.709" endtime="20201112 10:14:40.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.711" endtime="20201112 10:14:40.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.687" endtime="20201112 10:14:40.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.685" endtime="20201112 10:14:40.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.720" endtime="20201112 10:14:41.008"></status>
</kw>
<msg timestamp="20201112 10:14:41.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.719" endtime="20201112 10:14:41.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.012" endtime="20201112 10:14:41.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.021" endtime="20201112 10:14:41.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.716" endtime="20201112 10:14:41.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.714" endtime="20201112 10:14:41.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.027" level="INFO">${RESULT} = [{'time': 0.021150097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.021165278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.024" endtime="20201112 10:14:41.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.041" level="INFO">${ACCURACY} = {'time': [0.021150097, 0.021165278, 0.021180347, 0.021192889, 0.021210583, 0.021224722, 0.021241167, 0.021256222, 0.021270153, 0.021285611, 0.021300764, 0.021313222, 0.021331014, 0.021345542, 0.021361...</msg>
<status status="PASS" starttime="20201112 10:14:41.028" endtime="20201112 10:14:41.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.045" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.044" endtime="20201112 10:14:41.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.048" level="INFO">VALUE: [8.207999999999133e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.222999999998176e-06, 8.194000000003032e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.152000000000853e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.262999999997939e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.237000000001216e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.047" endtime="20201112 10:14:41.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.042" endtime="20201112 10:14:41.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.051" endtime="20201112 10:14:41.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.055" endtime="20201112 10:14:41.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.053" endtime="20201112 10:14:41.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.050" endtime="20201112 10:14:41.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.683" endtime="20201112 10:14:41.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.683" endtime="20201112 10:14:41.076"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.085" endtime="20201112 10:14:41.104"></status>
</kw>
<msg timestamp="20201112 10:14:41.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.083" endtime="20201112 10:14:41.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.105" endtime="20201112 10:14:41.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.108" endtime="20201112 10:14:41.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.081" endtime="20201112 10:14:41.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.078" endtime="20201112 10:14:41.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.117" endtime="20201112 10:14:41.403"></status>
</kw>
<msg timestamp="20201112 10:14:41.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024399403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.115" endtime="20201112 10:14:41.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024399403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.407" endtime="20201112 10:14:41.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.415" endtime="20201112 10:14:41.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.113" endtime="20201112 10:14:41.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.111" endtime="20201112 10:14:41.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.422" level="INFO">${RESULT} = [{'time': 0.024407597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.024422653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.419" endtime="20201112 10:14:41.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.436" level="INFO">${ACCURACY} = {'time': [0.024407597, 0.024422653, 0.024441264, 0.024454139, 0.024471708, 0.024486458, 0.024504347, 0.024519611, 0.02453825, 0.024553625, 0.024571903, 0.024586667, 0.024598833, 0.024611708, 0.0246301...</msg>
<status status="PASS" starttime="20201112 10:14:41.423" endtime="20201112 10:14:41.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.440" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.439" endtime="20201112 10:14:41.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.443" level="INFO">VALUE: [8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.110999999998147e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.125000000001187e-06, 8.166999999999897e-06, 8.291000000000548e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.441" endtime="20201112 10:14:41.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.437" endtime="20201112 10:14:41.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.451" endtime="20201112 10:14:41.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.455" endtime="20201112 10:14:41.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.453" endtime="20201112 10:14:41.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.450" endtime="20201112 10:14:41.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.077" endtime="20201112 10:14:41.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.076" endtime="20201112 10:14:41.476"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.485" endtime="20201112 10:14:41.501"></status>
</kw>
<msg timestamp="20201112 10:14:41.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.483" endtime="20201112 10:14:41.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.502" endtime="20201112 10:14:41.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.505" endtime="20201112 10:14:41.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.480" endtime="20201112 10:14:41.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.478" endtime="20201112 10:14:41.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.514" endtime="20201112 10:14:41.801"></status>
</kw>
<msg timestamp="20201112 10:14:41.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.512" endtime="20201112 10:14:41.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.805" endtime="20201112 10:14:41.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.813" endtime="20201112 10:14:41.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.510" endtime="20201112 10:14:41.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.508" endtime="20201112 10:14:41.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.820" level="INFO">${RESULT} = [{'time': 0.021496514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.021514708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.817" endtime="20201112 10:14:41.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.834" level="INFO">${ACCURACY} = {'time': [0.021496514, 0.021514708, 0.021527208, 0.021541958, 0.021559097, 0.021576153, 0.021590125, 0.021608611, 0.021621708, 0.021639611, 0.021656458, 0.021673528, 0.021689472, 0.021707597, 0.021724...</msg>
<status status="PASS" starttime="20201112 10:14:41.821" endtime="20201112 10:14:41.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.838" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.837" endtime="20201112 10:14:41.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.841" level="INFO">VALUE: [8.139000000000757e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.138999999997287e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.194000000003032e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.250000000001312e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 10:14:41.839" endtime="20201112 10:14:41.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.834" endtime="20201112 10:14:41.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.844" endtime="20201112 10:14:41.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.848" endtime="20201112 10:14:41.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.846" endtime="20201112 10:14:41.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.843" endtime="20201112 10:14:41.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.477" endtime="20201112 10:14:41.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.476" endtime="20201112 10:14:41.869"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.877" endtime="20201112 10:14:41.897"></status>
</kw>
<msg timestamp="20201112 10:14:41.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.876" endtime="20201112 10:14:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.898" endtime="20201112 10:14:41.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.901" endtime="20201112 10:14:41.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.873" endtime="20201112 10:14:41.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.871" endtime="20201112 10:14:41.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.910" endtime="20201112 10:14:42.197"></status>
</kw>
<msg timestamp="20201112 10:14:42.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025448694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.908" endtime="20201112 10:14:42.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025448694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.201" endtime="20201112 10:14:42.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.210" endtime="20201112 10:14:42.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.906" endtime="20201112 10:14:42.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.904" endtime="20201112 10:14:42.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.217" level="INFO">${RESULT} = [{'time': 0.025456917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.025469389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.213" endtime="20201112 10:14:42.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.230" level="INFO">${ACCURACY} = {'time': [0.025456917, 0.025469389, 0.025482597, 0.025496944, 0.025511181, 0.025526847, 0.025544403, 0.025556667, 0.025571944, 0.025588681, 0.025605403, 0.025620361, 0.025634514, 0.025651278, 0.025666...</msg>
<status status="PASS" starttime="20201112 10:14:42.218" endtime="20201112 10:14:42.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.235" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.234" endtime="20201112 10:14:42.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.237" level="INFO">VALUE: [8.222999999998176e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.125000000001187e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.165999999996953e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.152000000000853e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.278000000000452e-06, 8.195000000002506e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.250000000001312e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.236" endtime="20201112 10:14:42.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.231" endtime="20201112 10:14:42.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.241" endtime="20201112 10:14:42.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.244" endtime="20201112 10:14:42.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.243" endtime="20201112 10:14:42.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.239" endtime="20201112 10:14:42.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.870" endtime="20201112 10:14:42.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.869" endtime="20201112 10:14:42.265"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.274" endtime="20201112 10:14:42.289"></status>
</kw>
<msg timestamp="20201112 10:14:42.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.272" endtime="20201112 10:14:42.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.291" endtime="20201112 10:14:42.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.293" endtime="20201112 10:14:42.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.270" endtime="20201112 10:14:42.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.268" endtime="20201112 10:14:42.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.302" endtime="20201112 10:14:42.588"></status>
</kw>
<msg timestamp="20201112 10:14:42.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020690722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.301" endtime="20201112 10:14:42.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020690722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.592" endtime="20201112 10:14:42.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.600" endtime="20201112 10:14:42.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.298" endtime="20201112 10:14:42.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.297" endtime="20201112 10:14:42.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.607" level="INFO">${RESULT} = [{'time': 0.020690722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.020707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.604" endtime="20201112 10:14:42.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.621" level="INFO">${ACCURACY} = {'time': [0.020690722, 0.020707667, 0.020720847, 0.020737139, 0.020752361, 0.020764847, 0.020779403, 0.020794444, 0.020812431, 0.020826403, 0.020838986, 0.020854653, 0.020868917, 0.020886181, 0.020898...</msg>
<status status="PASS" starttime="20201112 10:14:42.608" endtime="20201112 10:14:42.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.625" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.624" endtime="20201112 10:14:42.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.628" level="INFO">VALUE: [8.208000000002602e-06, 8.124999999997717e-06, 8.179999999999993e-06, 8.264000000000882e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.222999999998176e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.152000000000853e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.250000000001312e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.193999999999563e-06, 8.111000000001617e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.263999999997412e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 10:14:42.626" endtime="20201112 10:14:42.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.621" endtime="20201112 10:14:42.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.631" endtime="20201112 10:14:42.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.635" endtime="20201112 10:14:42.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.633" endtime="20201112 10:14:42.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.630" endtime="20201112 10:14:42.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.266" endtime="20201112 10:14:42.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.266" endtime="20201112 10:14:42.656"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.665" endtime="20201112 10:14:42.683"></status>
</kw>
<msg timestamp="20201112 10:14:42.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.663" endtime="20201112 10:14:42.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.684" endtime="20201112 10:14:42.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.687" endtime="20201112 10:14:42.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.660" endtime="20201112 10:14:42.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.658" endtime="20201112 10:14:42.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.696" endtime="20201112 10:14:42.982"></status>
</kw>
<msg timestamp="20201112 10:14:42.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:42.694" endtime="20201112 10:14:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:42.987" endtime="20201112 10:14:42.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.995" endtime="20201112 10:14:42.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.692" endtime="20201112 10:14:42.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.690" endtime="20201112 10:14:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.002" level="INFO">${RESULT} = [{'time': 0.0219405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.021954611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:42.999" endtime="20201112 10:14:43.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.016" level="INFO">${ACCURACY} = {'time': [0.0219405, 0.021954611, 0.021969792, 0.021984611, 0.021999264, 0.022012569, 0.02203075, 0.022046875, 0.022060042, 0.022078347, 0.022092278, 0.022106403, 0.022120722, 0.022136181, 0.022151125...</msg>
<status status="PASS" starttime="20201112 10:14:43.003" endtime="20201112 10:14:43.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.020" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.019" endtime="20201112 10:14:43.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.023" level="INFO">VALUE: [8.194000000003032e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.166999999999897e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.277000000000978e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.125000000001187e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.125000000001187e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.222999999998176e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.022" endtime="20201112 10:14:43.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.017" endtime="20201112 10:14:43.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.027" endtime="20201112 10:14:43.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.030" endtime="20201112 10:14:43.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.029" endtime="20201112 10:14:43.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.025" endtime="20201112 10:14:43.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.657" endtime="20201112 10:14:43.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.656" endtime="20201112 10:14:43.051"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.060" endtime="20201112 10:14:43.077"></status>
</kw>
<msg timestamp="20201112 10:14:43.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.058" endtime="20201112 10:14:43.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.079" endtime="20201112 10:14:43.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.081" endtime="20201112 10:14:43.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.056" endtime="20201112 10:14:43.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.053" endtime="20201112 10:14:43.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.091" endtime="20201112 10:14:43.378"></status>
</kw>
<msg timestamp="20201112 10:14:43.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.089" endtime="20201112 10:14:43.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.382" endtime="20201112 10:14:43.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.391" endtime="20201112 10:14:43.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.087" endtime="20201112 10:14:43.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.085" endtime="20201112 10:14:43.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.397" level="INFO">${RESULT} = [{'time': 0.023779444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.023792431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.394" endtime="20201112 10:14:43.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.411" level="INFO">${ACCURACY} = {'time': [0.023779444, 0.023792431, 0.02381075, 0.023829125, 0.023842125, 0.023854444, 0.023868458, 0.023884917, 0.023902611, 0.023920528, 0.023933861, 0.023950917, 0.023967431, 0.023985958, 0.0239993...</msg>
<status status="PASS" starttime="20201112 10:14:43.398" endtime="20201112 10:14:43.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.416" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.414" endtime="20201112 10:14:43.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.418" level="INFO">VALUE: [8.207999999999133e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.181000000002936e-06, 8.222999999998176e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.417" endtime="20201112 10:14:43.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.412" endtime="20201112 10:14:43.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.422" endtime="20201112 10:14:43.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.425" endtime="20201112 10:14:43.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.424" endtime="20201112 10:14:43.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.420" endtime="20201112 10:14:43.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.052" endtime="20201112 10:14:43.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.051" endtime="20201112 10:14:43.446"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.455" endtime="20201112 10:14:43.474"></status>
</kw>
<msg timestamp="20201112 10:14:43.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.453" endtime="20201112 10:14:43.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.475" endtime="20201112 10:14:43.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.478" endtime="20201112 10:14:43.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.451" endtime="20201112 10:14:43.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.449" endtime="20201112 10:14:43.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.487" endtime="20201112 10:14:43.775"></status>
</kw>
<msg timestamp="20201112 10:14:43.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.486" endtime="20201112 10:14:43.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.779" endtime="20201112 10:14:43.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.788" endtime="20201112 10:14:43.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.483" endtime="20201112 10:14:43.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.481" endtime="20201112 10:14:43.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.794" level="INFO">${RESULT} = [{'time': 0.020542111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.020555083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.791" endtime="20201112 10:14:43.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.808" level="INFO">${ACCURACY} = {'time': [0.020542111, 0.020555083, 0.020572069, 0.020588, 0.020602889, 0.020615875, 0.020629806, 0.020645403, 0.020662153, 0.020678569, 0.020695306, 0.020712764, 0.020728778, 0.020741222, 0.020754597...</msg>
<status status="PASS" starttime="20201112 10:14:43.795" endtime="20201112 10:14:43.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.812" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.811" endtime="20201112 10:14:43.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.815" level="INFO">VALUE: [8.207999999999133e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.277999999996982e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.236999999997746e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.11200000000109e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.181000000002936e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.152999999996857e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201112 10:14:43.813" endtime="20201112 10:14:43.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.809" endtime="20201112 10:14:43.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.818" endtime="20201112 10:14:43.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.822" endtime="20201112 10:14:43.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.820" endtime="20201112 10:14:43.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.817" endtime="20201112 10:14:43.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.447" endtime="20201112 10:14:43.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.447" endtime="20201112 10:14:43.843"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.852" endtime="20201112 10:14:43.867"></status>
</kw>
<msg timestamp="20201112 10:14:43.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.850" endtime="20201112 10:14:43.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.868" endtime="20201112 10:14:43.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.871" endtime="20201112 10:14:43.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.847" endtime="20201112 10:14:43.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.845" endtime="20201112 10:14:43.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.880" endtime="20201112 10:14:44.166"></status>
</kw>
<msg timestamp="20201112 10:14:44.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02076825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:43.878" endtime="20201112 10:14:44.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02076825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:44.171" endtime="20201112 10:14:44.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.179" endtime="20201112 10:14:44.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.876" endtime="20201112 10:14:44.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.874" endtime="20201112 10:14:44.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.186" level="INFO">${RESULT} = [{'time': 0.020776458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.020795167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.182" endtime="20201112 10:14:44.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.200" level="INFO">${ACCURACY} = {'time': [0.020776458, 0.020795167, 0.020809514, 0.020823028, 0.020838417, 0.020850569, 0.020867139, 0.020884194, 0.020902611, 0.020914944, 0.020932069, 0.020949, 0.020962583, 0.020976486, 0.020989917...</msg>
<status status="PASS" starttime="20201112 10:14:44.187" endtime="20201112 10:14:44.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.205" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.203" endtime="20201112 10:14:44.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.207" level="INFO">VALUE: [8.208000000002602e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.278000000000452e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.11200000000109e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 10:14:44.206" endtime="20201112 10:14:44.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.201" endtime="20201112 10:14:44.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.211" endtime="20201112 10:14:44.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.215" endtime="20201112 10:14:44.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.213" endtime="20201112 10:14:44.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.209" endtime="20201112 10:14:44.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.844" endtime="20201112 10:14:44.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.843" endtime="20201112 10:14:44.236"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.245" endtime="20201112 10:14:44.263"></status>
</kw>
<msg timestamp="20201112 10:14:44.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.243" endtime="20201112 10:14:44.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.265" endtime="20201112 10:14:44.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.267" endtime="20201112 10:14:44.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.240" endtime="20201112 10:14:44.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.238" endtime="20201112 10:14:44.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.277" endtime="20201112 10:14:44.563"></status>
</kw>
<msg timestamp="20201112 10:14:44.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.275" endtime="20201112 10:14:44.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.568" endtime="20201112 10:14:44.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.576" endtime="20201112 10:14:44.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.272" endtime="20201112 10:14:44.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.271" endtime="20201112 10:14:44.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.583" level="INFO">${RESULT} = [{'time': 0.024722625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.024740903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.580" endtime="20201112 10:14:44.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.597" level="INFO">${ACCURACY} = {'time': [0.024722625, 0.024740903, 0.02475925, 0.024777319, 0.024795292, 0.024807556, 0.024821792, 0.024834278, 0.02484675, 0.024858903, 0.024874847, 0.024888819, 0.024903264, 0.024916986, 0.02492912...</msg>
<status status="PASS" starttime="20201112 10:14:44.584" endtime="20201112 10:14:44.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.601" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.600" endtime="20201112 10:14:44.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.604" level="INFO">VALUE: [8.208000000002602e-06, 8.209000000002076e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.125000000001187e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.263999999997412e-06, 8.195000000002506e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.263000000001408e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.124999999997717e-06, 8.208000000002602e-06, 8.111000000001617e-06]</msg>
<status status="PASS" starttime="20201112 10:14:44.602" endtime="20201112 10:14:44.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.598" endtime="20201112 10:14:44.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.607" endtime="20201112 10:14:44.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.611" endtime="20201112 10:14:44.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.609" endtime="20201112 10:14:44.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.606" endtime="20201112 10:14:44.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.237" endtime="20201112 10:14:44.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.236" endtime="20201112 10:14:44.632"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.641" endtime="20201112 10:14:44.660"></status>
</kw>
<msg timestamp="20201112 10:14:44.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.639" endtime="20201112 10:14:44.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.661" endtime="20201112 10:14:44.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.664" endtime="20201112 10:14:44.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.636" endtime="20201112 10:14:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.634" endtime="20201112 10:14:44.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.673" endtime="20201112 10:14:44.959"></status>
</kw>
<msg timestamp="20201112 10:14:44.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.671" endtime="20201112 10:14:44.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.963" endtime="20201112 10:14:44.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.971" endtime="20201112 10:14:44.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.669" endtime="20201112 10:14:44.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.667" endtime="20201112 10:14:44.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.978" level="INFO">${RESULT} = [{'time': 0.020663139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.020679792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.975" endtime="20201112 10:14:44.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.992" level="INFO">${ACCURACY} = {'time': [0.020663139, 0.020679792, 0.020694472, 0.020711097, 0.020729236, 0.020743347, 0.020761236, 0.020778111, 0.020794431, 0.020812958, 0.020830722, 0.020847653, 0.02086575, 0.020880806, 0.0208960...</msg>
<status status="PASS" starttime="20201112 10:14:44.979" endtime="20201112 10:14:44.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.996" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.995" endtime="20201112 10:14:44.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.999" level="INFO">VALUE: [8.222000000002172e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.153000000000327e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201112 10:14:44.998" endtime="20201112 10:14:45.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.993" endtime="20201112 10:14:45.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.003" endtime="20201112 10:14:45.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.006" endtime="20201112 10:14:45.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.005" endtime="20201112 10:14:45.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.001" endtime="20201112 10:14:45.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.633" endtime="20201112 10:14:45.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.632" endtime="20201112 10:14:45.027"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.036" endtime="20201112 10:14:45.053"></status>
</kw>
<msg timestamp="20201112 10:14:45.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.034" endtime="20201112 10:14:45.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.054" endtime="20201112 10:14:45.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.057" endtime="20201112 10:14:45.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.032" endtime="20201112 10:14:45.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.030" endtime="20201112 10:14:45.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.066" endtime="20201112 10:14:45.355"></status>
</kw>
<msg timestamp="20201112 10:14:45.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.064" endtime="20201112 10:14:45.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.360" endtime="20201112 10:14:45.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.368" endtime="20201112 10:14:45.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.062" endtime="20201112 10:14:45.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.060" endtime="20201112 10:14:45.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.375" level="INFO">${RESULT} = [{'time': 0.022095833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.02211175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:45.371" endtime="20201112 10:14:45.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.388" level="INFO">${ACCURACY} = {'time': [0.022095833, 0.02211175, 0.02212775, 0.022143639, 0.022158639, 0.022176625, 0.022194319, 0.022211764, 0.022230222, 0.022242486, 0.022258097, 0.022272653, 0.022286181, 0.022300111, 0.02231406...</msg>
<status status="PASS" starttime="20201112 10:14:45.376" endtime="20201112 10:14:45.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.393" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.392" endtime="20201112 10:14:45.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.395" level="INFO">VALUE: [8.207999999999133e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.222999999998176e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.194000000003032e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.237000000001216e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201112 10:14:45.394" endtime="20201112 10:14:45.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.389" endtime="20201112 10:14:45.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.399" endtime="20201112 10:14:45.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.402" endtime="20201112 10:14:45.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.401" endtime="20201112 10:14:45.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.397" endtime="20201112 10:14:45.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.028" endtime="20201112 10:14:45.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.027" endtime="20201112 10:14:45.423"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.432" endtime="20201112 10:14:45.449"></status>
</kw>
<msg timestamp="20201112 10:14:45.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.430" endtime="20201112 10:14:45.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.451" endtime="20201112 10:14:45.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.453" endtime="20201112 10:14:45.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.428" endtime="20201112 10:14:45.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.426" endtime="20201112 10:14:45.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.462" endtime="20201112 10:14:45.749"></status>
</kw>
<msg timestamp="20201112 10:14:45.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.461" endtime="20201112 10:14:45.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.753" endtime="20201112 10:14:45.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.761" endtime="20201112 10:14:45.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.458" endtime="20201112 10:14:45.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.456" endtime="20201112 10:14:45.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.768" level="INFO">${RESULT} = [{'time': 0.022812792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.022826097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.765" endtime="20201112 10:14:45.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.782" level="INFO">${ACCURACY} = {'time': [0.022812792, 0.022826097, 0.022839625, 0.022853986, 0.022871958, 0.022888806, 0.022901764, 0.022916292, 0.022930083, 0.0229465, 0.022964097, 0.022982444, 0.022994931, 0.023012694, 0.02302880...</msg>
<status status="PASS" starttime="20201112 10:14:45.769" endtime="20201112 10:14:45.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.786" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.785" endtime="20201112 10:14:45.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.789" level="INFO">VALUE: [8.208999999998606e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.195000000002506e-06, 8.181000000002936e-06, 8.195000000002506e-06, 8.179999999999993e-06, 8.194000000003032e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.194000000003032e-06]</msg>
<status status="PASS" starttime="20201112 10:14:45.787" endtime="20201112 10:14:45.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.782" endtime="20201112 10:14:45.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.792" endtime="20201112 10:14:45.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.796" endtime="20201112 10:14:45.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.794" endtime="20201112 10:14:45.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.791" endtime="20201112 10:14:45.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.424" endtime="20201112 10:14:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.424" endtime="20201112 10:14:45.817"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.826" endtime="20201112 10:14:45.842"></status>
</kw>
<msg timestamp="20201112 10:14:45.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.824" endtime="20201112 10:14:45.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.843" endtime="20201112 10:14:45.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.846" endtime="20201112 10:14:45.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.821" endtime="20201112 10:14:45.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.819" endtime="20201112 10:14:45.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.855" endtime="20201112 10:14:46.142"></status>
</kw>
<msg timestamp="20201112 10:14:46.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.853" endtime="20201112 10:14:46.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.147" endtime="20201112 10:14:46.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.155" endtime="20201112 10:14:46.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.851" endtime="20201112 10:14:46.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.849" endtime="20201112 10:14:46.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.162" level="INFO">${RESULT} = [{'time': 0.021129681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.021146528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.158" endtime="20201112 10:14:46.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.175" level="INFO">${ACCURACY} = {'time': [0.021129681, 0.021146528, 0.0211615, 0.021178431, 0.021196403, 0.021211306, 0.02122975, 0.021242028, 0.021256875, 0.021273514, 0.021287528, 0.021304375, 0.021316861, 0.021335194, 0.021352069...</msg>
<status status="PASS" starttime="20201112 10:14:46.163" endtime="20201112 10:14:46.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.180" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.179" endtime="20201112 10:14:46.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.182" level="INFO">VALUE: [8.195000000002506e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.262999999997939e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.208999999998606e-06, 8.278000000000452e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.208000000002602e-06, 8.249999999997842e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.179999999999993e-06]</msg>
<status status="PASS" starttime="20201112 10:14:46.181" endtime="20201112 10:14:46.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.176" endtime="20201112 10:14:46.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.186" endtime="20201112 10:14:46.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.189" endtime="20201112 10:14:46.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.188" endtime="20201112 10:14:46.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.184" endtime="20201112 10:14:46.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.818" endtime="20201112 10:14:46.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.817" endtime="20201112 10:14:46.210"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.219" endtime="20201112 10:14:46.240"></status>
</kw>
<msg timestamp="20201112 10:14:46.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.218" endtime="20201112 10:14:46.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.242" endtime="20201112 10:14:46.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.245" endtime="20201112 10:14:46.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.215" endtime="20201112 10:14:46.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.213" endtime="20201112 10:14:46.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.254" endtime="20201112 10:14:46.540"></status>
</kw>
<msg timestamp="20201112 10:14:46.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024525181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.252" endtime="20201112 10:14:46.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024525181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.544" endtime="20201112 10:14:46.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.553" endtime="20201112 10:14:46.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.250" endtime="20201112 10:14:46.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.248" endtime="20201112 10:14:46.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.559" level="INFO">${RESULT} = [{'time': 0.024547736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.255500000000049e-05, 'source_diff': 2.255500000000049e-05}, {'time': 0.024577653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.556" endtime="20201112 10:14:46.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.573" level="INFO">${ACCURACY} = {'time': [0.024547736, 0.024577653, 0.024608569, 0.024639403, 0.024669597, 0.024699694, 0.024730472, 0.024761222, 0.024791653, 0.024821764, 0.024853111, 0.024883306, 0.024913806, 0.024943736, 0.024974...</msg>
<status status="PASS" starttime="20201112 10:14:46.560" endtime="20201112 10:14:46.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.577" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.576" endtime="20201112 10:14:46.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.580" level="INFO">VALUE: [2.255500000000049e-05, 2.159700000000167e-05, 2.4472000000001076e-05, 2.445900000000098e-05, 2.540300000000023e-05, 2.351300000000278e-05, 2.3499999999999216e-05, 2.155499999999949e-05, 2.540300000000023e-05, 2.065299999999895e-05, 2.4472000000001076e-05, 2.448700000000012e-05, 2.445900000000098e-05, 2.5458000000002506e-05, 2.5415999999996858e-05, 2.638900000000166e-05, 2.05830000000011e-05, 2.1569999999998535e-05, 2.065299999999895e-05, 1.9680000000001086e-05, 2.4416000000002797e-05, 2.2569999999999535e-05, 2.4458000000001506e-05, 2.4486000000000646e-05, 2.1583999999998105e-05, 2.544499999999894e-05, 2.4500000000000216e-05, 2.159700000000167e-05, 2.065300000000242e-05, 2.162500000000081e-05, 2.156899999999906e-05, 2.2570000000003004e-05, 1.968100000000056e-05, 2.4513999999999786e-05, 2.5416000000000327e-05, 2.545900000000198e-05, 2.4486000000000646e-05, 2.0637999999999906e-05, 2.545899999999851e-05, 2.354100000000192e-05, 2.4485999999997177e-05, 2.7347999999999956e-05, 2.538900000000066e-05, 2.3485999999999646e-05, 2.4513999999999786e-05, 2.4457999999998037e-05, 2.4500000000000216e-05, 2.638900000000166e-05, 2.3514000000002255e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.578" endtime="20201112 10:14:46.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.574" endtime="20201112 10:14:46.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.587" endtime="20201112 10:14:46.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.591" endtime="20201112 10:14:46.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.589" endtime="20201112 10:14:46.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.585" endtime="20201112 10:14:46.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.211" endtime="20201112 10:14:46.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.211" endtime="20201112 10:14:46.612"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.620" endtime="20201112 10:14:46.643"></status>
</kw>
<msg timestamp="20201112 10:14:46.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.619" endtime="20201112 10:14:46.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.645" endtime="20201112 10:14:46.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.647" endtime="20201112 10:14:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.616" endtime="20201112 10:14:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.614" endtime="20201112 10:14:46.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.656" endtime="20201112 10:14:46.944"></status>
</kw>
<msg timestamp="20201112 10:14:46.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025297542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.655" endtime="20201112 10:14:46.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025297542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.948" endtime="20201112 10:14:46.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.957" endtime="20201112 10:14:46.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.652" endtime="20201112 10:14:46.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.650" endtime="20201112 10:14:46.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.963" level="INFO">${RESULT} = [{'time': 0.025315319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.777700000000007e-05, 'source_diff': 1.777700000000007e-05}, {'time': 0.025345958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.960" endtime="20201112 10:14:46.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.977" level="INFO">${ACCURACY} = {'time': [0.025315319, 0.025345958, 0.02537625, 0.025406681, 0.025437347, 0.025468208, 0.025498694, 0.025528653, 0.025559, 0.025590181, 0.025620542, 0.025650542, 0.025681306, 0.02571225, 0.025742417, ...</msg>
<status status="PASS" starttime="20201112 10:14:46.964" endtime="20201112 10:14:46.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.981" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.980" endtime="20201112 10:14:46.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.984" level="INFO">VALUE: [1.777700000000007e-05, 2.4429999999998897e-05, 2.062499999999981e-05, 2.440299999999923e-05, 2.640299999999776e-05, 2.5471999999998607e-05, 2.2526999999997882e-05, 2.061099999999677e-05, 2.3457999999997037e-05, 2.066699999999852e-05, 2.347299999999955e-05, 2.0597999999996675e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.4486000000000646e-05, 2.063899999999938e-05, 2.154099999999992e-05, 2.4401999999999757e-05, 2.3513999999998786e-05, 2.3485999999999646e-05, 2.15830000000021e-05, 2.254100000000092e-05, 2.258299999999963e-05, 2.063899999999938e-05, 2.155499999999949e-05, 2.440299999999923e-05, 2.6444000000000467e-05, 2.2542000000000395e-05, 2.4513999999999786e-05, 2.256900000000006e-05, 2.6387999999998718e-05, 2.3514000000002255e-05, 2.159700000000167e-05, 2.3499999999999216e-05, 2.6387999999998718e-05, 2.3499999999999216e-05, 2.063900000000285e-05, 2.1612000000000714e-05, 2.636100000000252e-05, 2.2499999999998216e-05, 2.3513999999998786e-05, 2.2500000000001685e-05, 2.4458000000001506e-05, 2.3528000000001825e-05, 2.1570000000002004e-05, 2.061100000000024e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.343100000000084e-05, 2.5333999999998386e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.982" endtime="20201112 10:14:46.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.978" endtime="20201112 10:14:46.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.987" endtime="20201112 10:14:46.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.991" endtime="20201112 10:14:47.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.989" endtime="20201112 10:14:47.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.986" endtime="20201112 10:14:47.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.612" endtime="20201112 10:14:47.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.612" endtime="20201112 10:14:47.012"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.021" endtime="20201112 10:14:47.040"></status>
</kw>
<msg timestamp="20201112 10:14:47.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.019" endtime="20201112 10:14:47.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.041" endtime="20201112 10:14:47.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.044" endtime="20201112 10:14:47.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.017" endtime="20201112 10:14:47.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.015" endtime="20201112 10:14:47.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.053" endtime="20201112 10:14:47.338"></status>
</kw>
<msg timestamp="20201112 10:14:47.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.052" endtime="20201112 10:14:47.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.343" endtime="20201112 10:14:47.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.351" endtime="20201112 10:14:47.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.049" endtime="20201112 10:14:47.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.047" endtime="20201112 10:14:47.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.358" level="INFO">${RESULT} = [{'time': 0.021780139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.021810597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.355" endtime="20201112 10:14:47.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.371" level="INFO">${ACCURACY} = {'time': [0.021780139, 0.021810597, 0.021841208, 0.021872236, 0.021902319, 0.021933125, 0.021962986, 0.021994014, 0.022024694, 0.022054444, 0.022085764, 0.022115556, 0.022146292, 0.022176972, 0.022207...</msg>
<status status="PASS" starttime="20201112 10:14:47.359" endtime="20201112 10:14:47.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.376" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.375" endtime="20201112 10:14:47.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.378" level="INFO">VALUE: [3.500000000000031e-05, 2.640300000000123e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.3512999999999312e-05, 2.634700000000295e-05, 2.155499999999949e-05, 2.540300000000023e-05, 2.6416000000001327e-05, 2.258299999999963e-05, 2.3528000000001825e-05, 1.962500000000228e-05, 2.1584000000001574e-05, 2.537500000000109e-05, 2.1555999999998965e-05, 2.4457999999998037e-05, 2.161100000000124e-05, 2.6444000000000467e-05, 2.159700000000167e-05, 2.5443999999999467e-05, 2.1598000000001144e-05, 1.9708000000000225e-05, 2.54169999999998e-05, 2.4486000000000646e-05, 2.2555999999999965e-05, 2.537500000000109e-05, 2.4429999999998897e-05, 2.162500000000081e-05, 2.3542000000001395e-05, 2.062499999999981e-05, 2.4472000000001076e-05, 2.3471999999996607e-05, 2.3500000000002685e-05, 2.063899999999938e-05, 2.15969999999982e-05, 2.2514000000001255e-05, 2.444499999999794e-05, 2.1569999999998535e-05, 2.2528000000000825e-05, 2.162500000000081e-05, 2.0651999999999476e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.644499999999994e-05, 2.6374999999998622e-05, 2.2500000000001685e-05, 2.4444000000001936e-05, 2.448700000000012e-05, 2.541700000000327e-05, 2.645899999999951e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.377" endtime="20201112 10:14:47.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.372" endtime="20201112 10:14:47.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.382" endtime="20201112 10:14:47.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.386" endtime="20201112 10:14:47.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.384" endtime="20201112 10:14:47.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.380" endtime="20201112 10:14:47.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.013" endtime="20201112 10:14:47.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.012" endtime="20201112 10:14:47.407"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.415" endtime="20201112 10:14:47.436"></status>
</kw>
<msg timestamp="20201112 10:14:47.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.414" endtime="20201112 10:14:47.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.438" endtime="20201112 10:14:47.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.440" endtime="20201112 10:14:47.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.411" endtime="20201112 10:14:47.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.409" endtime="20201112 10:14:47.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.450" endtime="20201112 10:14:47.738"></status>
</kw>
<msg timestamp="20201112 10:14:47.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.448" endtime="20201112 10:14:47.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.742" endtime="20201112 10:14:47.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.751" endtime="20201112 10:14:47.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.446" endtime="20201112 10:14:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.444" endtime="20201112 10:14:47.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.758" level="INFO">${RESULT} = [{'time': 0.024104903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.97089999999997e-05, 'source_diff': 1.97089999999997e-05}, {'time': 0.024135847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:47.754" endtime="20201112 10:14:47.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.771" level="INFO">${ACCURACY} = {'time': [0.024104903, 0.024135847, 0.024166181, 0.024196569, 0.024227167, 0.024257528, 0.024288167, 0.024318917, 0.024349417, 0.024379528, 0.024410986, 0.024440583, 0.024471625, 0.024501944, 0.024532...</msg>
<status status="PASS" starttime="20201112 10:14:47.759" endtime="20201112 10:14:47.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.776" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.774" endtime="20201112 10:14:47.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.778" level="INFO">VALUE: [1.97089999999997e-05, 2.5429999999999897e-05, 2.6374999999998622e-05, 2.351300000000278e-05, 2.54169999999998e-05, 2.545900000000198e-05, 2.640299999999776e-05, 2.1597999999997675e-05, 2.2598000000002144e-05, 2.2555999999999965e-05, 2.4486000000000646e-05, 2.5429999999999897e-05, 2.065299999999895e-05, 2.6388000000002187e-05, 2.356900000000106e-05, 2.3499999999999216e-05, 2.6374999999998622e-05, 2.2514000000001255e-05, 2.061100000000024e-05, 2.638900000000166e-05, 2.4471999999997607e-05, 2.159700000000167e-05, 2.6346999999999482e-05, 2.637500000000209e-05, 2.066699999999852e-05, 2.0651999999999476e-05, 2.54169999999998e-05, 2.538899999999719e-05, 2.3472000000000076e-05, 2.068099999999809e-05, 2.255500000000049e-05, 2.065299999999895e-05, 2.0707999999997756e-05, 2.540300000000023e-05, 2.4471999999997607e-05, 2.637500000000209e-05, 2.065299999999895e-05, 2.2499999999998216e-05, 2.352700000000235e-05, 2.44169999999988e-05, 2.6374999999998622e-05, 2.4486000000000646e-05, 2.256900000000006e-05, 2.354100000000192e-05, 2.4472000000001076e-05, 2.252700000000135e-05, 2.358300000000063e-05, 2.062499999999981e-05, 2.352700000000235e-05, 2.2500000000001685e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.777" endtime="20201112 10:14:47.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.772" endtime="20201112 10:14:47.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.782" endtime="20201112 10:14:47.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.785" endtime="20201112 10:14:47.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.784" endtime="20201112 10:14:47.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.780" endtime="20201112 10:14:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.407" endtime="20201112 10:14:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.407" endtime="20201112 10:14:47.806"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.815" endtime="20201112 10:14:47.834"></status>
</kw>
<msg timestamp="20201112 10:14:47.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.813" endtime="20201112 10:14:47.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.836" endtime="20201112 10:14:47.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.838" endtime="20201112 10:14:47.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.811" endtime="20201112 10:14:47.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.809" endtime="20201112 10:14:47.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.847" endtime="20201112 10:14:48.134"></status>
</kw>
<msg timestamp="20201112 10:14:48.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021372847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021394431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.846" endtime="20201112 10:14:48.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021372847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021394431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.138" endtime="20201112 10:14:48.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.147" endtime="20201112 10:14:48.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.843" endtime="20201112 10:14:48.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.841" endtime="20201112 10:14:48.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.153" level="INFO">${RESULT} = [{'time': 0.021394431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1583999999998105e-05, 'source_diff': 2.1583999999998105e-05}, {'time': 0.021424847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.150" endtime="20201112 10:14:48.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.167" level="INFO">${ACCURACY} = {'time': [0.021394431, 0.021424847, 0.021455597, 0.02148625, 0.021516, 0.021546597, 0.021577569, 0.021607889, 0.021638681, 0.021669125, 0.02169975, 0.021730417, 0.021760917, 0.021791069, 0.021821375, ...</msg>
<status status="PASS" starttime="20201112 10:14:48.154" endtime="20201112 10:14:48.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.171" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.170" endtime="20201112 10:14:48.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.174" level="INFO">VALUE: [2.1583999999998105e-05, 2.537500000000109e-05, 2.15969999999982e-05, 2.2555999999999965e-05, 2.256900000000006e-05, 2.0722000000000795e-05, 2.5416000000000327e-05, 2.15830000000021e-05, 2.2569999999999535e-05, 2.161100000000124e-05, 2.4472000000001076e-05, 2.161099999999777e-05, 2.4570000000001535e-05, 2.252700000000135e-05, 2.3542000000001395e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.5499999999997747e-05, 2.637500000000209e-05, 2.3472000000000076e-05, 2.4430000000002366e-05, 2.638899999999819e-05, 1.9694000000000655e-05, 2.537499999999762e-05, 2.637500000000209e-05, 1.966700000000099e-05, 2.447300000000055e-05, 2.063899999999938e-05, 2.3513999999998786e-05, 2.4444000000001936e-05, 2.638899999999819e-05, 2.2542000000000395e-05, 2.256900000000006e-05, 2.155500000000296e-05, 2.159700000000167e-05, 2.543100000000284e-05, 2.15969999999982e-05, 2.255500000000049e-05, 2.066699999999852e-05, 2.062499999999981e-05, 2.637500000000209e-05, 2.543100000000284e-05, 2.540299999999676e-05, 2.1570000000002004e-05, 2.4486000000000646e-05, 2.347299999999955e-05, 2.063899999999938e-05, 2.6361999999998526e-05, 2.444500000000141e-05, 2.543099999999937e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.172" endtime="20201112 10:14:48.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.168" endtime="20201112 10:14:48.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.177" endtime="20201112 10:14:48.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.181" endtime="20201112 10:14:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.179" endtime="20201112 10:14:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.176" endtime="20201112 10:14:48.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.807" endtime="20201112 10:14:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.806" endtime="20201112 10:14:48.202"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.210" endtime="20201112 10:14:48.231"></status>
</kw>
<msg timestamp="20201112 10:14:48.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.209" endtime="20201112 10:14:48.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.232" endtime="20201112 10:14:48.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.235" endtime="20201112 10:14:48.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.206" endtime="20201112 10:14:48.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.204" endtime="20201112 10:14:48.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.244" endtime="20201112 10:14:48.532"></status>
</kw>
<msg timestamp="20201112 10:14:48.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:48.243" endtime="20201112 10:14:48.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:48.537" endtime="20201112 10:14:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.545" endtime="20201112 10:14:48.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.240" endtime="20201112 10:14:48.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.238" endtime="20201112 10:14:48.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.552" level="INFO">${RESULT} = [{'time': 0.022651736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0235999999999458e-05, 'source_diff': 3.0235999999999458e-05}, {'time': 0.022681306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.548" endtime="20201112 10:14:48.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.565" level="INFO">${ACCURACY} = {'time': [0.022651736, 0.022681306, 0.022712181, 0.022742861, 0.022773167, 0.022803806, 0.022834847, 0.022864778, 0.022895028, 0.022925639, 0.022956403, 0.022986597, 0.023017319, 0.023048056, 0.023078...</msg>
<status status="PASS" starttime="20201112 10:14:48.553" endtime="20201112 10:14:48.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.570" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.569" endtime="20201112 10:14:48.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.572" level="INFO">VALUE: [3.0235999999999458e-05, 1.968099999999709e-05, 2.6362000000001995e-05, 2.161100000000124e-05, 2.1584000000001574e-05, 2.448700000000012e-05, 2.065299999999895e-05, 2.3499999999999216e-05, 2.161100000000124e-05, 2.059700000000067e-05, 2.545899999999851e-05, 2.063899999999938e-05, 2.4486000000000646e-05, 2.645899999999951e-05, 1.969500000000013e-05, 2.440299999999923e-05, 2.3514000000002255e-05, 2.4458000000001506e-05, 1.9708000000000225e-05, 2.2555999999999965e-05, 2.5443999999999467e-05, 2.543099999999937e-05, 2.3499999999999216e-05, 2.061100000000024e-05, 2.255500000000049e-05, 2.066699999999852e-05, 2.062499999999981e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.065299999999895e-05, 2.161099999999777e-05, 2.638899999999819e-05, 2.4472000000001076e-05, 2.3526999999998882e-05, 2.3514000000002255e-05, 2.54169999999998e-05, 2.159700000000167e-05, 1.9721999999999795e-05, 2.4500000000000216e-05, 2.162500000000081e-05, 2.5457999999999037e-05, 2.3527999999998356e-05, 2.066699999999852e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.162499999999734e-05, 2.4472000000001076e-05, 2.254100000000092e-05, 2.3527999999998356e-05, 2.4500000000000216e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.571" endtime="20201112 10:14:48.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.566" endtime="20201112 10:14:48.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.576" endtime="20201112 10:14:48.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.579" endtime="20201112 10:14:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.578" endtime="20201112 10:14:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.574" endtime="20201112 10:14:48.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.203" endtime="20201112 10:14:48.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.202" endtime="20201112 10:14:48.600"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.609" endtime="20201112 10:14:48.628"></status>
</kw>
<msg timestamp="20201112 10:14:48.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.608" endtime="20201112 10:14:48.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.629" endtime="20201112 10:14:48.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.632" endtime="20201112 10:14:48.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.605" endtime="20201112 10:14:48.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.603" endtime="20201112 10:14:48.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.641" endtime="20201112 10:14:48.927"></status>
</kw>
<msg timestamp="20201112 10:14:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.639" endtime="20201112 10:14:48.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.931" endtime="20201112 10:14:48.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.940" endtime="20201112 10:14:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.637" endtime="20201112 10:14:48.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.635" endtime="20201112 10:14:48.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.947" level="INFO">${RESULT} = [{'time': 0.020978097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8305000000002772e-05, 'source_diff': 2.8305000000002772e-05}, {'time': 0.021008361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.943" endtime="20201112 10:14:48.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.960" level="INFO">${ACCURACY} = {'time': [0.020978097, 0.021008361, 0.021039333, 0.021070167, 0.021100222, 0.021130833, 0.021161056, 0.021191583, 0.021222264, 0.021252403, 0.021283847, 0.021313819, 0.021344208, 0.021374458, 0.021405...</msg>
<status status="PASS" starttime="20201112 10:14:48.948" endtime="20201112 10:14:48.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.965" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.964" endtime="20201112 10:14:48.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.967" level="INFO">VALUE: [2.8305000000002772e-05, 2.4554999999999022e-05, 2.5402000000000757e-05, 2.54169999999998e-05, 2.4540999999999452e-05, 2.5472000000002076e-05, 2.163900000000038e-05, 2.5443999999999467e-05, 2.4458000000001506e-05, 2.545899999999851e-05, 2.261100000000224e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.2540999999997452e-05, 2.5415999999996858e-05, 2.1569999999998535e-05, 2.061099999999677e-05, 2.2500000000001685e-05, 2.3514000000002255e-05, 2.05969999999972e-05, 2.445899999999751e-05, 2.3500000000002685e-05, 2.7333000000000912e-05, 2.069500000000113e-05, 2.062499999999981e-05, 2.4472000000001076e-05, 2.543100000000284e-05, 2.061100000000024e-05, 2.4444000000001936e-05, 2.637500000000209e-05, 2.1597999999997675e-05, 2.1541999999999395e-05, 2.0637999999999906e-05, 2.544499999999894e-05, 2.638899999999819e-05, 2.445899999999751e-05, 2.158299999999863e-05, 2.445900000000098e-05, 2.261100000000224e-05, 2.3528000000001825e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.063899999999938e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, 2.252700000000135e-05, 2.3513999999998786e-05, 2.637500000000209e-05, 2.547299999999808e-05, 2.25969999999992e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.966" endtime="20201112 10:14:48.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.961" endtime="20201112 10:14:48.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.971" endtime="20201112 10:14:48.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.974" endtime="20201112 10:14:48.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.973" endtime="20201112 10:14:48.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.969" endtime="20201112 10:14:48.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.601" endtime="20201112 10:14:48.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.601" endtime="20201112 10:14:48.996"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.005" endtime="20201112 10:14:49.026"></status>
</kw>
<msg timestamp="20201112 10:14:49.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.003" endtime="20201112 10:14:49.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.028" endtime="20201112 10:14:49.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.030" endtime="20201112 10:14:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.000" endtime="20201112 10:14:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.998" endtime="20201112 10:14:49.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.039" endtime="20201112 10:14:49.333"></status>
</kw>
<msg timestamp="20201112 10:14:49.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.038" endtime="20201112 10:14:49.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.337" endtime="20201112 10:14:49.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.346" endtime="20201112 10:14:49.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.035" endtime="20201112 10:14:49.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.033" endtime="20201112 10:14:49.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.353" level="INFO">${RESULT} = [{'time': 0.022967361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.591699999999724e-05, 'source_diff': 1.591699999999724e-05}, {'time': 0.022997764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.349" endtime="20201112 10:14:49.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.366" level="INFO">${ACCURACY} = {'time': [0.022967361, 0.022997764, 0.02302875, 0.023059, 0.023089403, 0.023120417, 0.023150361, 0.023181042, 0.023211569, 0.023241639, 0.023272208, 0.023303347, 0.023333681, 0.023364056, 0.023394889,...</msg>
<status status="PASS" starttime="20201112 10:14:49.354" endtime="20201112 10:14:49.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.371" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.370" endtime="20201112 10:14:49.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.373" level="INFO">VALUE: [1.591699999999724e-05, 2.64170000000008e-05, 2.3514000000002255e-05, 2.256900000000006e-05, 2.4486000000000646e-05, 2.2598000000002144e-05, 2.059700000000067e-05, 2.540300000000023e-05, 2.159700000000167e-05, 2.4458000000001506e-05, 2.5457999999999037e-05, 2.6374999999998622e-05, 2.2541999999996926e-05, 2.248700000000159e-05, 2.543099999999937e-05, 2.1527999999999825e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.351300000000278e-05, 2.537499999999762e-05, 2.0637999999999906e-05, 2.6374999999998622e-05, 2.065299999999895e-05, 2.162500000000081e-05, 2.2651999999998007e-05, 2.1638000000000907e-05, 2.54169999999998e-05, 2.3485999999999646e-05, 2.0665999999999046e-05, 2.3527999999998356e-05, 2.156899999999906e-05, 2.638899999999819e-05, 2.543099999999937e-05, 2.643100000000037e-05, 2.061100000000024e-05, 2.4458000000001506e-05, 2.258299999999963e-05, 2.4500000000000216e-05, 2.54169999999998e-05, 2.15969999999982e-05, 2.2554999999997022e-05, 2.2569999999999535e-05, 2.3457999999997037e-05, 2.437500000000009e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.640299999999776e-05, 2.544500000000241e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.372" endtime="20201112 10:14:49.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.367" endtime="20201112 10:14:49.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.377" endtime="20201112 10:14:49.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.380" endtime="20201112 10:14:49.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.379" endtime="20201112 10:14:49.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.375" endtime="20201112 10:14:49.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.996" endtime="20201112 10:14:49.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.996" endtime="20201112 10:14:49.401"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.410" endtime="20201112 10:14:49.431"></status>
</kw>
<msg timestamp="20201112 10:14:49.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.409" endtime="20201112 10:14:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.432" endtime="20201112 10:14:49.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.435" endtime="20201112 10:14:49.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.406" endtime="20201112 10:14:49.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.404" endtime="20201112 10:14:49.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.444" endtime="20201112 10:14:49.730"></status>
</kw>
<msg timestamp="20201112 10:14:49.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.442" endtime="20201112 10:14:49.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.735" endtime="20201112 10:14:49.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.743" endtime="20201112 10:14:49.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.440" endtime="20201112 10:14:49.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.438" endtime="20201112 10:14:49.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.750" level="INFO">${RESULT} = [{'time': 0.023765264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.258299999999963e-05, 'source_diff': 2.258299999999963e-05}, {'time': 0.023795583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.747" endtime="20201112 10:14:49.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.764" level="INFO">${ACCURACY} = {'time': [0.023765264, 0.023795583, 0.023825681, 0.023856833, 0.0238875, 0.023918042, 0.023948222, 0.023978875, 0.02400925, 0.024040097, 0.024070097, 0.024101153, 0.024130764, 0.024161583, 0.024192625...</msg>
<status status="PASS" starttime="20201112 10:14:49.751" endtime="20201112 10:14:49.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.768" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.767" endtime="20201112 10:14:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.771" level="INFO">VALUE: [2.258299999999963e-05, 2.0651999999999476e-05, 2.2528000000000825e-05, 2.3472000000000076e-05, 2.2555999999999965e-05, 2.638900000000166e-05, 2.3514000000002255e-05, 2.161100000000124e-05, 2.256900000000006e-05, 2.4486000000000646e-05, 2.065299999999895e-05, 2.638900000000166e-05, 1.963899999999838e-05, 2.6346999999999482e-05, 2.540300000000023e-05, 2.4472000000001076e-05, 2.1612000000000714e-05, 2.4443999999998467e-05, 2.3556000000000965e-05, 2.445900000000098e-05, 2.5458000000002506e-05, 2.15830000000021e-05, 2.345899999999998e-05, 2.061100000000024e-05, 2.4500000000000216e-05, 2.256900000000006e-05, 2.161099999999777e-05, 2.4471999999997607e-05, 2.162500000000081e-05, 2.062499999999981e-05, 2.6319000000000342e-05, 2.061100000000024e-05, 2.3499999999999216e-05, 2.063899999999938e-05, 2.543100000000284e-05, 2.6374999999998622e-05, 2.537500000000109e-05, 2.0514000000002724e-05, 2.643100000000037e-05, 2.158299999999863e-05, 2.4458000000001506e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.438899999999966e-05, 2.2555999999999965e-05, 2.640299999999776e-05, 2.4458000000001506e-05, 2.4457999999998037e-05, 2.54169999999998e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.769" endtime="20201112 10:14:49.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.765" endtime="20201112 10:14:49.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.775" endtime="20201112 10:14:49.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.778" endtime="20201112 10:14:49.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.777" endtime="20201112 10:14:49.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.773" endtime="20201112 10:14:49.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.402" endtime="20201112 10:14:49.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.402" endtime="20201112 10:14:49.799"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.808" endtime="20201112 10:14:49.827"></status>
</kw>
<msg timestamp="20201112 10:14:49.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.806" endtime="20201112 10:14:49.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.829" endtime="20201112 10:14:49.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.831" endtime="20201112 10:14:49.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.804" endtime="20201112 10:14:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.802" endtime="20201112 10:14:49.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.841" endtime="20201112 10:14:50.129"></status>
</kw>
<msg timestamp="20201112 10:14:50.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.839" endtime="20201112 10:14:50.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.134" endtime="20201112 10:14:50.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.142" endtime="20201112 10:14:50.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.836" endtime="20201112 10:14:50.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.835" endtime="20201112 10:14:50.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.149" level="INFO">${RESULT} = [{'time': 0.023068625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.023099222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.145" endtime="20201112 10:14:50.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.162" level="INFO">${ACCURACY} = {'time': [0.023068625, 0.023099222, 0.023129569, 0.023160375, 0.023190236, 0.023221167, 0.023251889, 0.023282264, 0.023312625, 0.023343139, 0.023374083, 0.023404167, 0.023434722, 0.023465667, 0.023495...</msg>
<status status="PASS" starttime="20201112 10:14:50.150" endtime="20201112 10:14:50.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.167" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.166" endtime="20201112 10:14:50.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.169" level="INFO">VALUE: [2.7347000000000482e-05, 2.062499999999981e-05, 2.5443999999999467e-05, 2.54169999999998e-05, 2.4457999999998037e-05, 2.345899999999998e-05, 2.637500000000209e-05, 2.3499999999999216e-05, 2.256900000000006e-05, 2.6374999999998622e-05, 2.6360999999999052e-05, 2.445900000000098e-05, 2.5444000000002936e-05, 2.638899999999819e-05, 2.445900000000098e-05, 2.2555999999999965e-05, 2.2528000000000825e-05, 2.344500000000041e-05, 2.4472000000001076e-05, 2.5500000000001216e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.256900000000006e-05, 2.3528000000001825e-05, 2.543099999999937e-05, 2.640299999999776e-05, 2.3528000000001825e-05, 2.2528000000000825e-05, 2.0651999999999476e-05, 2.6374999999998622e-05, 2.4500000000000216e-05, 2.543099999999937e-05, 2.2500000000001685e-05, 2.3499999999999216e-05, 2.059700000000067e-05, 2.3526999999998882e-05, 2.3568999999997592e-05, 2.54169999999998e-05, 2.2528000000000825e-05, 2.065299999999895e-05, 2.638899999999819e-05, 2.5429999999999897e-05, 2.1597999999997675e-05, 2.637500000000209e-05, 1.9750000000002405e-05, 2.063899999999938e-05, 2.15969999999982e-05, 2.5415999999996858e-05, 2.638899999999819e-05, 2.062500000000328e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.168" endtime="20201112 10:14:50.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.163" endtime="20201112 10:14:50.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.173" endtime="20201112 10:14:50.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.176" endtime="20201112 10:14:50.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.175" endtime="20201112 10:14:50.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.171" endtime="20201112 10:14:50.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.800" endtime="20201112 10:14:50.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.799" endtime="20201112 10:14:50.197"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.206" endtime="20201112 10:14:50.225"></status>
</kw>
<msg timestamp="20201112 10:14:50.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.205" endtime="20201112 10:14:50.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.227" endtime="20201112 10:14:50.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.229" endtime="20201112 10:14:50.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.202" endtime="20201112 10:14:50.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.200" endtime="20201112 10:14:50.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.239" endtime="20201112 10:14:50.525"></status>
</kw>
<msg timestamp="20201112 10:14:50.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.237" endtime="20201112 10:14:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.529" endtime="20201112 10:14:50.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.538" endtime="20201112 10:14:50.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.234" endtime="20201112 10:14:50.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.233" endtime="20201112 10:14:50.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.544" level="INFO">${RESULT} = [{'time': 0.021578806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.822299999999736e-05, 'source_diff': 2.822299999999736e-05}, {'time': 0.021609292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.541" endtime="20201112 10:14:50.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.558" level="INFO">${ACCURACY} = {'time': [0.021578806, 0.021609292, 0.021639958, 0.021669569, 0.021700708, 0.021730792, 0.021761833, 0.021791833, 0.021822486, 0.021853333, 0.021883417, 0.021914333, 0.021944778, 0.021974875, 0.022005...</msg>
<status status="PASS" starttime="20201112 10:14:50.545" endtime="20201112 10:14:50.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.563" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.562" endtime="20201112 10:14:50.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.565" level="INFO">VALUE: [2.822299999999736e-05, 2.062499999999981e-05, 2.255500000000049e-05, 2.254100000000092e-05, 2.3526999999998882e-05, 2.445899999999751e-05, 2.063900000000285e-05, 2.5416000000000327e-05, 2.3485999999999646e-05, 2.438899999999966e-05, 2.3513999999998786e-05, 2.352700000000235e-05, 2.066700000000199e-05, 2.5444000000002936e-05, 2.6332999999999912e-05, 2.6332999999999912e-05, 2.4500000000000216e-05, 2.3513999999998786e-05, 2.544499999999894e-05, 2.2540999999997452e-05, 2.540300000000023e-05, 2.3485999999999646e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.537499999999762e-05, 2.1597999999997675e-05, 2.056899999999806e-05, 2.345899999999998e-05, 2.2542000000000395e-05, 2.5514000000000786e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.6362000000001995e-05, 2.059700000000067e-05, 2.15830000000021e-05, 1.9694000000000655e-05, 2.0652000000002946e-05, 2.448700000000012e-05, 2.3485999999999646e-05, 1.963900000000185e-05, 2.544499999999894e-05, 1.9708000000000225e-05, 2.4555999999998496e-05, 2.638900000000166e-05, 2.2527999999997356e-05, 2.4443999999998467e-05, 2.7415999999998858e-05, 2.5429999999999897e-05, 1.9708000000000225e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.564" endtime="20201112 10:14:50.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.559" endtime="20201112 10:14:50.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.569" endtime="20201112 10:14:50.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.572" endtime="20201112 10:14:50.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.571" endtime="20201112 10:14:50.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.567" endtime="20201112 10:14:50.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.198" endtime="20201112 10:14:50.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.198" endtime="20201112 10:14:50.593"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.602" endtime="20201112 10:14:50.622"></status>
</kw>
<msg timestamp="20201112 10:14:50.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.600" endtime="20201112 10:14:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.624" endtime="20201112 10:14:50.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.626" endtime="20201112 10:14:50.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.598" endtime="20201112 10:14:50.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.596" endtime="20201112 10:14:50.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.635" endtime="20201112 10:14:50.921"></status>
</kw>
<msg timestamp="20201112 10:14:50.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022743681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.634" endtime="20201112 10:14:50.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022743681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.926" endtime="20201112 10:14:50.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.934" endtime="20201112 10:14:50.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.631" endtime="20201112 10:14:50.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.629" endtime="20201112 10:14:50.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.941" level="INFO">${RESULT} = [{'time': 0.022743681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8737000000001308e-05, 'source_diff': 1.8737000000001308e-05}, {'time': 0.022773861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.938" endtime="20201112 10:14:50.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.955" level="INFO">${ACCURACY} = {'time': [0.022743681, 0.022773861, 0.022804611, 0.022835153, 0.022865319, 0.022896292, 0.022926806, 0.022956875, 0.022987653, 0.023018181, 0.023048931, 0.023079472, 0.023109931, 0.023140611, 0.023171...</msg>
<status status="PASS" starttime="20201112 10:14:50.942" endtime="20201112 10:14:50.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.959" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.958" endtime="20201112 10:14:50.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.962" level="INFO">VALUE: [1.8737000000001308e-05, 2.44169999999988e-05, 2.5360999999998052e-05, 2.066700000000199e-05, 2.3512999999999312e-05, 2.1597999999997675e-05, 2.544500000000241e-05, 2.533300000000238e-05, 2.444500000000141e-05, 2.1597999999997675e-05, 2.262500000000181e-05, 2.5429999999999897e-05, 2.640300000000123e-05, 2.05969999999972e-05, 2.44169999999988e-05, 2.1598000000001144e-05, 2.640299999999776e-05, 2.255500000000049e-05, 2.2514000000001255e-05, 2.2457999999999506e-05, 2.2457999999999506e-05, 2.640300000000123e-05, 2.162500000000081e-05, 2.640299999999776e-05, 2.25969999999992e-05, 2.3514000000002255e-05, 2.538900000000066e-05, 2.3513999999998786e-05, 2.6387999999998718e-05, 2.5416000000000327e-05, 2.1542000000002864e-05, 2.638900000000166e-05, 2.1514000000000255e-05, 2.6401999999998288e-05, 2.162499999999734e-05, 2.6416000000001327e-05, 2.158299999999863e-05, 2.4415999999999327e-05, 2.3499999999999216e-05, 2.2542000000000395e-05, 2.444500000000141e-05, 2.1584000000001574e-05, 2.05830000000011e-05, 2.543100000000284e-05, 2.256900000000006e-05, 1.966700000000099e-05, 2.3472000000000076e-05, 2.640299999999776e-05, 2.3556000000000965e-05, 2.3570000000000535e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.960" endtime="20201112 10:14:50.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.955" endtime="20201112 10:14:50.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.965" endtime="20201112 10:14:50.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.969" endtime="20201112 10:14:50.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.967" endtime="20201112 10:14:50.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.964" endtime="20201112 10:14:50.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.594" endtime="20201112 10:14:50.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.593" endtime="20201112 10:14:50.990"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.998" endtime="20201112 10:14:51.019"></status>
</kw>
<msg timestamp="20201112 10:14:51.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.997" endtime="20201112 10:14:51.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.020" endtime="20201112 10:14:51.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.023" endtime="20201112 10:14:51.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.994" endtime="20201112 10:14:51.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.992" endtime="20201112 10:14:51.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.032" endtime="20201112 10:14:51.320"></status>
</kw>
<msg timestamp="20201112 10:14:51.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.030" endtime="20201112 10:14:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.324" endtime="20201112 10:14:51.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.333" endtime="20201112 10:14:51.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.028" endtime="20201112 10:14:51.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.026" endtime="20201112 10:14:51.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.339" level="INFO">${RESULT} = [{'time': 0.022993347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.023023833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:51.336" endtime="20201112 10:14:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.353" level="INFO">${ACCURACY} = {'time': [0.022993347, 0.023023833, 0.023054347, 0.023084944, 0.023115514, 0.023145889, 0.023176889, 0.023206639, 0.023237139, 0.023268278, 0.023298306, 0.023328792, 0.023359792, 0.023390236, 0.023420...</msg>
<status status="PASS" starttime="20201112 10:14:51.340" endtime="20201112 10:14:51.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.358" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.357" endtime="20201112 10:14:51.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.360" level="INFO">VALUE: [1.2999999999999123e-05, 2.6430000000000897e-05, 2.254100000000092e-05, 2.6360999999999052e-05, 2.3513999999998786e-05, 2.2569999999999535e-05, 2.3513999999998786e-05, 2.2569999999999535e-05, 2.3528000000001825e-05, 2.4486000000000646e-05, 2.2555999999999965e-05, 2.445900000000098e-05, 2.3485999999999646e-05, 2.061099999999677e-05, 1.9694000000000655e-05, 2.356900000000106e-05, 2.065299999999895e-05, 2.4513999999999786e-05, 2.4500000000000216e-05, 1.969500000000013e-05, 2.0665999999999046e-05, 2.5416000000000327e-05, 2.4556000000001965e-05, 2.3499999999999216e-05, 2.162500000000081e-05, 2.063899999999938e-05, 2.0651999999999476e-05, 2.5416000000000327e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.3556000000000965e-05, 2.6416000000001327e-05, 2.062499999999981e-05, 2.4472000000001076e-05, 2.2597999999998675e-05, 2.634700000000295e-05, 2.4486000000000646e-05, 2.4443999999998467e-05, 2.0666000000002516e-05, 2.2569999999999535e-05, 2.4486000000000646e-05, 2.255500000000049e-05, 2.638900000000166e-05, 2.445899999999751e-05, 2.54169999999998e-05, 2.2500000000001685e-05, 2.544500000000241e-05, 2.4471999999997607e-05, 2.162500000000081e-05, 2.163899999999691e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.359" endtime="20201112 10:14:51.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.354" endtime="20201112 10:14:51.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.364" endtime="20201112 10:14:51.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.367" endtime="20201112 10:14:51.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.366" endtime="20201112 10:14:51.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.362" endtime="20201112 10:14:51.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.991" endtime="20201112 10:14:51.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.990" endtime="20201112 10:14:51.388"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.397" endtime="20201112 10:14:51.415"></status>
</kw>
<msg timestamp="20201112 10:14:51.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.395" endtime="20201112 10:14:51.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.417" endtime="20201112 10:14:51.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.419" endtime="20201112 10:14:51.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.393" endtime="20201112 10:14:51.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.391" endtime="20201112 10:14:51.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.429" endtime="20201112 10:14:51.717"></status>
</kw>
<msg timestamp="20201112 10:14:51.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.427" endtime="20201112 10:14:51.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021380889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.722" endtime="20201112 10:14:51.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.730" endtime="20201112 10:14:51.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.424" endtime="20201112 10:14:51.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.422" endtime="20201112 10:14:51.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.737" level="INFO">${RESULT} = [{'time': 0.021380889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3485999999999646e-05, 'source_diff': 2.3485999999999646e-05}, {'time': 0.021411375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:51.733" endtime="20201112 10:14:51.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.750" level="INFO">${ACCURACY} = {'time': [0.021380889, 0.021411375, 0.021442097, 0.021472861, 0.021503319, 0.021533653, 0.021564139, 0.021595361, 0.021625153, 0.021656264, 0.02168625, 0.021716778, 0.021747639, 0.021778181, 0.0218081...</msg>
<status status="PASS" starttime="20201112 10:14:51.738" endtime="20201112 10:14:51.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.755" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.754" endtime="20201112 10:14:51.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.757" level="INFO">VALUE: [2.3485999999999646e-05, 2.4443999999998467e-05, 2.354100000000192e-05, 2.2485999999998646e-05, 2.0679999999998616e-05, 2.3527999999998356e-05, 2.4457999999998037e-05, 2.537500000000109e-05, 2.063900000000285e-05, 2.3514000000002255e-05, 2.062499999999981e-05, 2.1583999999998105e-05, 2.15969999999982e-05, 2.1598000000001144e-05, 2.0651999999999476e-05, 2.54169999999998e-05, 2.2542000000000395e-05, 2.15969999999982e-05, 2.4429999999998897e-05, 2.3361999999998995e-05, 2.4458000000001506e-05, 2.440299999999923e-05, 2.4457999999998037e-05, 2.061100000000024e-05, 2.165299999999995e-05, 2.3513999999998786e-05, 2.065299999999895e-05, 2.068100000000156e-05, 2.3526999999998882e-05, 2.4429999999998897e-05, 2.3499999999999216e-05, 2.2485999999998646e-05, 2.3513999999998786e-05, 2.0637999999999906e-05, 2.065299999999895e-05, 2.5500000000001216e-05, 2.258299999999963e-05, 2.3514000000002255e-05, 2.4457999999998037e-05, 2.6360999999999052e-05, 2.4486000000000646e-05, 2.156900000000253e-05, 2.15830000000021e-05, 2.062499999999981e-05, 2.638899999999819e-05, 2.161099999999777e-05, 2.062499999999981e-05, 2.5429999999999897e-05, 2.065300000000242e-05, 2.065299999999895e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.756" endtime="20201112 10:14:51.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.751" endtime="20201112 10:14:51.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.765" endtime="20201112 10:14:51.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.769" endtime="20201112 10:14:51.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.767" endtime="20201112 10:14:51.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.763" endtime="20201112 10:14:51.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.389" endtime="20201112 10:14:51.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.389" endtime="20201112 10:14:51.789"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.798" endtime="20201112 10:14:51.817"></status>
</kw>
<msg timestamp="20201112 10:14:51.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.797" endtime="20201112 10:14:51.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.818" endtime="20201112 10:14:51.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.821" endtime="20201112 10:14:51.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.794" endtime="20201112 10:14:51.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.792" endtime="20201112 10:14:51.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.830" endtime="20201112 10:14:52.117"></status>
</kw>
<msg timestamp="20201112 10:14:52.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.829" endtime="20201112 10:14:52.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.121" endtime="20201112 10:14:52.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.129" endtime="20201112 10:14:52.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.826" endtime="20201112 10:14:52.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.824" endtime="20201112 10:14:52.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.136" level="INFO">${RESULT} = [{'time': 0.022057236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.066700000000199e-05, 'source_diff': 2.066700000000199e-05}, {'time': 0.022088097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.133" endtime="20201112 10:14:52.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.150" level="INFO">${ACCURACY} = {'time': [0.022057236, 0.022088097, 0.022118764, 0.022148694, 0.022179944, 0.022210083, 0.022240167, 0.022270958, 0.022301847, 0.0223325, 0.022363042, 0.022392764, 0.022424014, 0.022453986, 0.02248493...</msg>
<status status="PASS" starttime="20201112 10:14:52.137" endtime="20201112 10:14:52.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.154" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.153" endtime="20201112 10:14:52.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.157" level="INFO">VALUE: [2.066700000000199e-05, 2.161100000000124e-05, 2.4527999999999356e-05, 2.258299999999963e-05, 2.5402000000000757e-05, 2.3499999999999216e-05, 1.968100000000056e-05, 2.3430000000001366e-05, 2.256900000000006e-05, 2.2555999999999965e-05, 2.063899999999938e-05, 2.066699999999852e-05, 2.543099999999937e-05, 2.25969999999992e-05, 2.262499999999834e-05, 2.2555999999999965e-05, 2.062499999999981e-05, 2.448700000000012e-05, 2.1542000000002864e-05, 2.3527999999998356e-05, 2.640300000000123e-05, 2.1597999999997675e-05, 2.256900000000006e-05, 2.537500000000109e-05, 2.3597999999999675e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.5429999999999897e-05, 2.4513999999999786e-05, 2.5443999999999467e-05, 2.3485999999999646e-05, 2.538900000000066e-05, 2.3527999999998356e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.543099999999937e-05, 2.6402000000001757e-05, 2.5443999999999467e-05, 2.5443999999999467e-05, 2.258299999999963e-05, 2.158299999999863e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.159700000000167e-05, 2.161099999999777e-05, 2.54169999999998e-05, 2.445900000000098e-05, 2.5402000000000757e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.156" endtime="20201112 10:14:52.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.151" endtime="20201112 10:14:52.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.161" endtime="20201112 10:14:52.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.164" endtime="20201112 10:14:52.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.162" endtime="20201112 10:14:52.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.159" endtime="20201112 10:14:52.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.790" endtime="20201112 10:14:52.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.790" endtime="20201112 10:14:52.185"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.194" endtime="20201112 10:14:52.216"></status>
</kw>
<msg timestamp="20201112 10:14:52.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.192" endtime="20201112 10:14:52.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.218" endtime="20201112 10:14:52.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.220" endtime="20201112 10:14:52.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.190" endtime="20201112 10:14:52.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.188" endtime="20201112 10:14:52.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.229" endtime="20201112 10:14:52.516"></status>
</kw>
<msg timestamp="20201112 10:14:52.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.228" endtime="20201112 10:14:52.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.521" endtime="20201112 10:14:52.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.529" endtime="20201112 10:14:52.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.225" endtime="20201112 10:14:52.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.223" endtime="20201112 10:14:52.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.536" level="INFO">${RESULT} = [{'time': 0.023436847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7722000000001265e-05, 'source_diff': 1.7722000000001265e-05}, {'time': 0.023466778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:52.532" endtime="20201112 10:14:52.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.549" level="INFO">${ACCURACY} = {'time': [0.023436847, 0.023466778, 0.023497375, 0.023528111, 0.023558458, 0.023588722, 0.023619722, 0.023650389, 0.023680111, 0.023710972, 0.023741139, 0.023772389, 0.023803069, 0.023832694, 0.023863...</msg>
<status status="PASS" starttime="20201112 10:14:52.537" endtime="20201112 10:14:52.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.554" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.553" endtime="20201112 10:14:52.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.557" level="INFO">VALUE: [1.7722000000001265e-05, 2.161100000000124e-05, 2.441700000000227e-05, 2.6471999999999607e-05, 2.636100000000252e-05, 2.5360999999998052e-05, 2.4457999999998037e-05, 2.1556000000002434e-05, 2.159700000000167e-05, 2.255500000000049e-05, 2.25830000000031e-05, 2.543100000000284e-05, 2.4486000000000646e-05, 1.9694000000000655e-05, 2.3570000000000535e-05, 2.0651999999999476e-05, 2.256900000000006e-05, 2.4555999999998496e-05, 2.4500000000000216e-05, 2.4472000000001076e-05, 2.161099999999777e-05, 2.543099999999937e-05, 2.2514000000001255e-05, 2.1569999999998535e-05, 2.3584000000000105e-05, 2.15969999999982e-05, 2.255500000000049e-05, 2.3485999999999646e-05, 2.063899999999938e-05, 2.2569999999999535e-05, 2.3444000000000936e-05, 2.544499999999894e-05, 2.540300000000023e-05, 2.155499999999949e-05, 2.162500000000081e-05, 2.3528000000001825e-05, 2.444500000000141e-05, 2.2514000000001255e-05, 2.5429999999999897e-05, 2.3556000000000965e-05, 2.3514000000002255e-05, 2.065299999999895e-05, 2.3485999999999646e-05, 2.7347000000000482e-05, 2.441700000000227e-05, 2.4415999999999327e-05, 2.065300000000242e-05, 2.0666000000002516e-05, 2.640300000000123e-05, 2.2514000000001255e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.555" endtime="20201112 10:14:52.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.550" endtime="20201112 10:14:52.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.560" endtime="20201112 10:14:52.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.564" endtime="20201112 10:14:52.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.562" endtime="20201112 10:14:52.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.559" endtime="20201112 10:14:52.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.186" endtime="20201112 10:14:52.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.185" endtime="20201112 10:14:52.585"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.593" endtime="20201112 10:14:52.611"></status>
</kw>
<msg timestamp="20201112 10:14:52.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.592" endtime="20201112 10:14:52.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.613" endtime="20201112 10:14:52.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.616" endtime="20201112 10:14:52.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.589" endtime="20201112 10:14:52.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.587" endtime="20201112 10:14:52.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.625" endtime="20201112 10:14:52.910"></status>
</kw>
<msg timestamp="20201112 10:14:52.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.623" endtime="20201112 10:14:52.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.915" endtime="20201112 10:14:52.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.923" endtime="20201112 10:14:52.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.620" endtime="20201112 10:14:52.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.619" endtime="20201112 10:14:52.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.930" level="INFO">${RESULT} = [{'time': 0.020786611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6374999999998622e-05, 'source_diff': 2.6374999999998622e-05}, {'time': 0.020816681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:52.926" endtime="20201112 10:14:52.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.943" level="INFO">${ACCURACY} = {'time': [0.020786611, 0.020816681, 0.020847889, 0.020878417, 0.020908764, 0.020939375, 0.020969833, 0.020999903, 0.021030903, 0.021061444, 0.021092056, 0.021122389, 0.021152569, 0.02118325, 0.0212138...</msg>
<status status="PASS" starttime="20201112 10:14:52.931" endtime="20201112 10:14:52.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.948" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.947" endtime="20201112 10:14:52.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.950" level="INFO">VALUE: [2.6374999999998622e-05, 1.968100000000056e-05, 2.3472000000000076e-05, 2.543099999999937e-05, 2.1555999999998965e-05, 2.543099999999937e-05, 2.159700000000167e-05, 2.445900000000098e-05, 2.2555999999999965e-05, 2.6374999999998622e-05, 2.54169999999998e-05, 2.537499999999762e-05, 2.3526999999998882e-05, 2.4458000000001506e-05, 2.3514000000002255e-05, 1.9721999999999795e-05, 2.638899999999819e-05, 2.256900000000006e-05, 2.638900000000166e-05, 2.2555999999999965e-05, 2.3514000000002255e-05, 2.159700000000167e-05, 2.2500000000001685e-05, 2.3568999999997592e-05, 2.4513999999999786e-05, 2.2584000000002574e-05, 2.2584000000002574e-05, 2.065299999999895e-05, 2.3514000000002255e-05, 2.3514000000002255e-05, 2.544500000000241e-05, 2.544500000000241e-05, 2.2542000000000395e-05, 2.638899999999819e-05, 2.4444000000001936e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.3597999999999675e-05, 2.3472000000000076e-05, 2.6332999999999912e-05, 2.637500000000209e-05, 2.063900000000285e-05, 2.156900000000253e-05, 2.2540999999997452e-05, 2.541700000000327e-05, 2.163900000000038e-05, 2.259700000000267e-05, 2.3528000000001825e-05, 2.2555999999999965e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.949" endtime="20201112 10:14:52.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.944" endtime="20201112 10:14:52.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.954" endtime="20201112 10:14:52.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.957" endtime="20201112 10:14:52.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.956" endtime="20201112 10:14:52.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.952" endtime="20201112 10:14:52.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.586" endtime="20201112 10:14:52.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.585" endtime="20201112 10:14:52.978"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.987" endtime="20201112 10:14:53.008"></status>
</kw>
<msg timestamp="20201112 10:14:53.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.986" endtime="20201112 10:14:53.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.010" endtime="20201112 10:14:53.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.012" endtime="20201112 10:14:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.983" endtime="20201112 10:14:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.981" endtime="20201112 10:14:53.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.021" endtime="20201112 10:14:53.310"></status>
</kw>
<msg timestamp="20201112 10:14:53.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.020" endtime="20201112 10:14:53.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.314" endtime="20201112 10:14:53.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.322" endtime="20201112 10:14:53.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.017" endtime="20201112 10:14:53.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.015" endtime="20201112 10:14:53.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.329" level="INFO">${RESULT} = [{'time': 0.023874333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.023905292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:53.326" endtime="20201112 10:14:53.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.343" level="INFO">${ACCURACY} = {'time': [0.023874333, 0.023905292, 0.023935319, 0.023966458, 0.023996972, 0.024027153, 0.024057333, 0.024088542, 0.024118333, 0.024148986, 0.024179972, 0.024210097, 0.024240569, 0.024271236, 0.024302...</msg>
<status status="PASS" starttime="20201112 10:14:53.331" endtime="20201112 10:14:53.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.348" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.347" endtime="20201112 10:14:53.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.350" level="INFO">VALUE: [2.161100000000124e-05, 2.065300000000242e-05, 2.159700000000167e-05, 2.4486000000000646e-05, 2.6374999999998622e-05, 2.069499999999766e-05, 2.161100000000124e-05, 2.2569999999999535e-05, 1.9651999999998476e-05, 2.159700000000167e-05, 2.256900000000006e-05, 2.15969999999982e-05, 2.3512999999999312e-05, 2.638900000000166e-05, 2.3513999999998786e-05, 2.161099999999777e-05, 2.062499999999981e-05, 2.638899999999819e-05, 2.3514000000002255e-05, 2.162500000000081e-05, 2.355500000000149e-05, 2.444500000000141e-05, 2.161099999999777e-05, 2.54169999999998e-05, 2.5429999999999897e-05, 2.5402000000000757e-05, 2.0651999999999476e-05, 2.162499999999734e-05, 2.161099999999777e-05, 2.2542000000000395e-05, 2.344500000000041e-05, 2.065300000000242e-05, 1.9708000000000225e-05, 2.247299999999855e-05, 2.6402000000001757e-05, 2.6334000000002855e-05, 2.163900000000038e-05, 2.444500000000141e-05, 2.065299999999895e-05, 2.4513999999999786e-05, 1.966699999999752e-05, 2.54169999999998e-05, 2.1570000000002004e-05, 2.065299999999895e-05, 2.4458000000001506e-05, 2.5416000000000327e-05, 2.538900000000066e-05, 2.3472000000000076e-05, 2.0637999999999906e-05, 2.54169999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.349" endtime="20201112 10:14:53.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.344" endtime="20201112 10:14:53.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.354" endtime="20201112 10:14:53.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.358" endtime="20201112 10:14:53.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.356" endtime="20201112 10:14:53.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.352" endtime="20201112 10:14:53.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.979" endtime="20201112 10:14:53.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.979" endtime="20201112 10:14:53.379"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.387" endtime="20201112 10:14:53.407"></status>
</kw>
<msg timestamp="20201112 10:14:53.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.386" endtime="20201112 10:14:53.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.409" endtime="20201112 10:14:53.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.411" endtime="20201112 10:14:53.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.383" endtime="20201112 10:14:53.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.381" endtime="20201112 10:14:53.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.420" endtime="20201112 10:14:53.707"></status>
</kw>
<msg timestamp="20201112 10:14:53.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.419" endtime="20201112 10:14:53.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.712" endtime="20201112 10:14:53.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.720" endtime="20201112 10:14:53.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.416" endtime="20201112 10:14:53.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.414" endtime="20201112 10:14:53.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.727" level="INFO">${RESULT} = [{'time': 0.020491778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6916999999997424e-05, 'source_diff': 3.6916999999997424e-05}, {'time': 0.020522792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:53.723" endtime="20201112 10:14:53.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.740" level="INFO">${ACCURACY} = {'time': [0.020491778, 0.020522792, 0.020553653, 0.020583569, 0.020613875, 0.020645042, 0.020675042, 0.020705833, 0.02073625, 0.020766486, 0.020797514, 0.020828125, 0.020858417, 0.020889222, 0.0209191...</msg>
<status status="PASS" starttime="20201112 10:14:53.728" endtime="20201112 10:14:53.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.745" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.744" endtime="20201112 10:14:53.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.747" level="INFO">VALUE: [3.6916999999997424e-05, 2.2570000000003004e-05, 2.640300000000123e-05, 2.3540999999998452e-05, 2.5457999999999037e-05, 2.544499999999894e-05, 2.543100000000284e-05, 2.3458000000000506e-05, 2.4486000000000646e-05, 2.265300000000095e-05, 2.4541999999998926e-05, 2.638899999999819e-05, 2.447300000000055e-05, 2.25969999999992e-05, 2.3527999999998356e-05, 2.165299999999995e-05, 2.354100000000192e-05, 2.2555999999999965e-05, 2.5443999999999467e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.3458000000000506e-05, 2.538900000000066e-05, 2.2528000000000825e-05, 1.969500000000013e-05, 2.162500000000081e-05, 2.259700000000267e-05, 2.3513999999998786e-05, 2.4471999999997607e-05, 2.4500000000000216e-05, 2.065300000000242e-05, 2.4443999999998467e-05, 2.2542000000000395e-05, 2.6401999999998288e-05, 2.4444000000001936e-05, 2.538899999999719e-05, 2.54169999999998e-05, 2.5388000000001187e-05, 2.3527999999998356e-05, 2.640300000000123e-05, 2.159700000000167e-05, 2.256900000000006e-05, 2.54169999999998e-05, 2.2540999999997452e-05, 2.6347999999998956e-05, 2.255500000000049e-05, 2.15969999999982e-05, 2.3527999999998356e-05, 2.061100000000024e-05, 2.4430000000002366e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.746" endtime="20201112 10:14:53.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.741" endtime="20201112 10:14:53.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.751" endtime="20201112 10:14:53.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.754" endtime="20201112 10:14:53.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.753" endtime="20201112 10:14:53.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.749" endtime="20201112 10:14:53.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.380" endtime="20201112 10:14:53.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.379" endtime="20201112 10:14:53.775"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.784" endtime="20201112 10:14:53.803"></status>
</kw>
<msg timestamp="20201112 10:14:53.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.782" endtime="20201112 10:14:53.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.804" endtime="20201112 10:14:53.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.807" endtime="20201112 10:14:53.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.780" endtime="20201112 10:14:53.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.778" endtime="20201112 10:14:53.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.816" endtime="20201112 10:14:54.103"></status>
</kw>
<msg timestamp="20201112 10:14:54.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.814" endtime="20201112 10:14:54.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.107" endtime="20201112 10:14:54.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.115" endtime="20201112 10:14:54.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.812" endtime="20201112 10:14:54.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.810" endtime="20201112 10:14:54.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.122" level="INFO">${RESULT} = [{'time': 0.020711444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.016599999999814e-05, 'source_diff': 3.016599999999814e-05}, {'time': 0.020742139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.119" endtime="20201112 10:14:54.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.136" level="INFO">${ACCURACY} = {'time': [0.020711444, 0.020742139, 0.020772125, 0.020803, 0.020833833, 0.020864028, 0.020894375, 0.020925292, 0.020955097, 0.020986292, 0.021016833, 0.021047236, 0.021077917, 0.021107819, 0.021138361...</msg>
<status status="PASS" starttime="20201112 10:14:54.123" endtime="20201112 10:14:54.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.140" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.139" endtime="20201112 10:14:54.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.143" level="INFO">VALUE: [3.016599999999814e-05, 2.166699999999952e-05, 2.3513999999998786e-05, 2.640299999999776e-05, 2.4486000000000646e-05, 1.97089999999997e-05, 2.6360999999999052e-05, 2.636100000000252e-05, 2.2540999999997452e-05, 2.2514000000001255e-05, 2.6290999999997733e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.5429999999999897e-05, 2.0708000000001225e-05, 2.3500000000002685e-05, 2.161100000000124e-05, 2.5443999999999467e-05, 2.2542000000000395e-05, 2.165299999999995e-05, 2.6346999999999482e-05, 2.3499999999999216e-05, 2.063899999999938e-05, 2.447300000000055e-05, 2.355500000000149e-05, 2.638899999999819e-05, 2.15969999999982e-05, 2.062499999999981e-05, 2.156899999999906e-05, 2.1569999999998535e-05, 2.159700000000167e-05, 2.2542000000000395e-05, 2.262500000000181e-05, 2.3499999999999216e-05, 2.543099999999937e-05, 2.062500000000328e-05, 2.7277999999998637e-05, 2.2513999999997786e-05, 2.066700000000199e-05, 2.0707999999997756e-05, 2.1583999999998105e-05, 2.638900000000166e-05, 2.3499999999999216e-05, 2.445900000000098e-05, 2.1527999999999825e-05, 2.4500000000000216e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.1598000000001144e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.141" endtime="20201112 10:14:54.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.136" endtime="20201112 10:14:54.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.146" endtime="20201112 10:14:54.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.150" endtime="20201112 10:14:54.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.148" endtime="20201112 10:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.145" endtime="20201112 10:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.776" endtime="20201112 10:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.776" endtime="20201112 10:14:54.171"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.179" endtime="20201112 10:14:54.199"></status>
</kw>
<msg timestamp="20201112 10:14:54.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.178" endtime="20201112 10:14:54.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.201" endtime="20201112 10:14:54.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.203" endtime="20201112 10:14:54.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.175" endtime="20201112 10:14:54.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.173" endtime="20201112 10:14:54.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.212" endtime="20201112 10:14:54.500"></status>
</kw>
<msg timestamp="20201112 10:14:54.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.211" endtime="20201112 10:14:54.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.504" endtime="20201112 10:14:54.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.513" endtime="20201112 10:14:54.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.208" endtime="20201112 10:14:54.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.206" endtime="20201112 10:14:54.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.519" level="INFO">${RESULT} = [{'time': 0.022334125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.022365458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:54.516" endtime="20201112 10:14:54.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.533" level="INFO">${ACCURACY} = {'time': [0.022334125, 0.022365458, 0.022395903, 0.022425611, 0.022456569, 0.022486722, 0.022517444, 0.022547653, 0.022578931, 0.022608847, 0.022639375, 0.022669986, 0.022700278, 0.022731208, 0.022761...</msg>
<status status="PASS" starttime="20201112 10:14:54.520" endtime="20201112 10:14:54.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.537" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.536" endtime="20201112 10:14:54.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.540" level="INFO">VALUE: [1.2985999999999553e-05, 2.4472000000001076e-05, 2.161100000000124e-05, 2.4430000000002366e-05, 2.3415999999998327e-05, 2.4527999999999356e-05, 2.256900000000006e-05, 2.4486000000000646e-05, 2.1598000000001144e-05, 2.159700000000167e-05, 2.4500000000000216e-05, 2.356900000000106e-05, 2.544500000000241e-05, 2.0651999999999476e-05, 2.4458000000001506e-05, 2.063899999999938e-05, 2.638900000000166e-05, 2.158299999999863e-05, 2.638899999999819e-05, 2.637500000000209e-05, 2.2541999999996926e-05, 2.340299999999823e-05, 2.158299999999863e-05, 2.5429999999999897e-05, 2.2569999999999535e-05, 2.4472000000001076e-05, 2.254100000000092e-05, 2.1555999999998965e-05, 2.4443999999998467e-05, 2.163899999999691e-05, 2.162500000000081e-05, 1.972299999999927e-05, 2.6402000000001757e-05, 1.9721999999999795e-05, 2.162500000000081e-05, 2.4472000000001076e-05, 2.6360999999999052e-05, 2.344500000000041e-05, 2.15969999999982e-05, 2.4485999999997177e-05, 2.1612000000000714e-05, 2.065299999999895e-05, 2.3457999999997037e-05, 2.0651999999999476e-05, 2.638899999999819e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.3499999999999216e-05, 1.963900000000185e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.538" endtime="20201112 10:14:54.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.534" endtime="20201112 10:14:54.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.543" endtime="20201112 10:14:54.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.547" endtime="20201112 10:14:54.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.545" endtime="20201112 10:14:54.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.542" endtime="20201112 10:14:54.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.171" endtime="20201112 10:14:54.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.171" endtime="20201112 10:14:54.568"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.577" endtime="20201112 10:14:54.596"></status>
</kw>
<msg timestamp="20201112 10:14:54.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.575" endtime="20201112 10:14:54.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.597" endtime="20201112 10:14:54.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.600" endtime="20201112 10:14:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.572" endtime="20201112 10:14:54.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.570" endtime="20201112 10:14:54.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.609" endtime="20201112 10:14:54.897"></status>
</kw>
<msg timestamp="20201112 10:14:54.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:54.607" endtime="20201112 10:14:54.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:54.901" endtime="20201112 10:14:54.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.909" endtime="20201112 10:14:54.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.605" endtime="20201112 10:14:54.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.603" endtime="20201112 10:14:54.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.916" level="INFO">${RESULT} = [{'time': 0.021943486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.598600000000174e-05, 'source_diff': 3.598600000000174e-05}, {'time': 0.021974042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.913" endtime="20201112 10:14:54.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.930" level="INFO">${ACCURACY} = {'time': [0.021943486, 0.021974042, 0.022004417, 0.02203475, 0.022065583, 0.022095889, 0.022125903, 0.022156931, 0.022187278, 0.022217458, 0.022248014, 0.022278833, 0.022309861, 0.022340333, 0.0223700...</msg>
<status status="PASS" starttime="20201112 10:14:54.917" endtime="20201112 10:14:54.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.934" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.933" endtime="20201112 10:14:54.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.937" level="INFO">VALUE: [3.598600000000174e-05, 2.2569999999999535e-05, 2.3513999999998786e-05, 2.1514000000000255e-05, 2.5429999999999897e-05, 2.3542000000001395e-05, 2.15969999999982e-05, 2.637500000000209e-05, 2.2584000000002574e-05, 2.3526999999998882e-05, 2.059700000000067e-05, 2.355500000000149e-05, 2.265300000000095e-05, 2.637500000000209e-05, 2.3527999999998356e-05, 2.1597999999997675e-05, 2.638900000000166e-05, 1.968100000000056e-05, 2.6374999999998622e-05, 2.4472000000001076e-05, 2.062499999999981e-05, 2.54169999999998e-05, 2.4457999999998037e-05, 2.3528000000001825e-05, 2.151300000000078e-05, 2.062499999999981e-05, 1.965299999999795e-05, 2.447300000000055e-05, 1.9693999999997186e-05, 2.6374999999998622e-05, 2.6416000000001327e-05, 2.162499999999734e-05, 2.3472000000000076e-05, 2.0611999999999714e-05, 2.15830000000021e-05, 2.3499999999999216e-05, 2.062499999999981e-05, 2.5416000000000327e-05, 2.2569999999999535e-05, 2.7361000000000052e-05, 2.065299999999895e-05, 2.5360999999998052e-05, 2.154099999999992e-05, 2.544500000000241e-05, 2.256900000000006e-05, 2.3500000000002685e-05, 2.2541999999996926e-05, 2.254100000000092e-05, 2.0679999999998616e-05, 2.161100000000124e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.935" endtime="20201112 10:14:54.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.930" endtime="20201112 10:14:54.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.940" endtime="20201112 10:14:54.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.944" endtime="20201112 10:14:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.942" endtime="20201112 10:14:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.939" endtime="20201112 10:14:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.569" endtime="20201112 10:14:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.568" endtime="20201112 10:14:54.965"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.973" endtime="20201112 10:14:54.993"></status>
</kw>
<msg timestamp="20201112 10:14:54.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.972" endtime="20201112 10:14:54.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.994" endtime="20201112 10:14:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.997" endtime="20201112 10:14:54.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.969" endtime="20201112 10:14:54.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.967" endtime="20201112 10:14:54.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.006" endtime="20201112 10:14:55.292"></status>
</kw>
<msg timestamp="20201112 10:14:55.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.004" endtime="20201112 10:14:55.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.297" endtime="20201112 10:14:55.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.305" endtime="20201112 10:14:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.002" endtime="20201112 10:14:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.000" endtime="20201112 10:14:55.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.312" level="INFO">${RESULT} = [{'time': 0.022070653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4471999999997607e-05, 'source_diff': 2.4471999999997607e-05}, {'time': 0.022101139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:55.308" endtime="20201112 10:14:55.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.325" level="INFO">${ACCURACY} = {'time': [0.022070653, 0.022101139, 0.022132236, 0.022162736, 0.022192486, 0.022223569, 0.022254153, 0.02228475, 0.022314542, 0.022345167, 0.02237575, 0.022406083, 0.022437444, 0.022467431, 0.02249834...</msg>
<status status="PASS" starttime="20201112 10:14:55.313" endtime="20201112 10:14:55.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.330" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.329" endtime="20201112 10:14:55.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.332" level="INFO">VALUE: [2.4471999999997607e-05, 2.4457999999998037e-05, 2.4541999999998926e-05, 2.4429999999998897e-05, 2.4458000000001506e-05, 2.6401999999998288e-05, 2.5485999999998177e-05, 2.063899999999938e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.4415999999999327e-05, 2.636100000000252e-05, 1.968100000000056e-05, 2.3527999999998356e-05, 2.5429999999999897e-05, 2.6458000000000037e-05, 2.637500000000209e-05, 2.254100000000092e-05, 2.5457999999999037e-05, 2.4485999999997177e-05, 2.4500000000000216e-05, 1.969500000000013e-05, 2.066700000000199e-05, 2.5443999999999467e-05, 2.445899999999751e-05, 2.543100000000284e-05, 2.068099999999809e-05, 1.968100000000056e-05, 2.062499999999981e-05, 2.3500000000002685e-05, 2.6332999999999912e-05, 2.161100000000124e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.638900000000166e-05, 2.637500000000209e-05, 2.063899999999938e-05, 2.4500000000000216e-05, 2.4486000000000646e-05, 1.9694000000000655e-05, 2.3527999999998356e-05, 1.9694000000000655e-05, 2.2486000000002115e-05, 2.4444000000001936e-05, 2.062499999999981e-05, 2.443100000000184e-05, 2.2500000000001685e-05, 2.640300000000123e-05, 2.065299999999895e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.331" endtime="20201112 10:14:55.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.326" endtime="20201112 10:14:55.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.336" endtime="20201112 10:14:55.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.340" endtime="20201112 10:14:55.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.338" endtime="20201112 10:14:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.334" endtime="20201112 10:14:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.966" endtime="20201112 10:14:55.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.965" endtime="20201112 10:14:55.361"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.371" endtime="20201112 10:14:55.390"></status>
</kw>
<msg timestamp="20201112 10:14:55.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.369" endtime="20201112 10:14:55.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.391" endtime="20201112 10:14:55.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.394" endtime="20201112 10:14:55.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.366" endtime="20201112 10:14:55.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.364" endtime="20201112 10:14:55.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.403" endtime="20201112 10:14:55.690"></status>
</kw>
<msg timestamp="20201112 10:14:55.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.401" endtime="20201112 10:14:55.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.694" endtime="20201112 10:14:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.703" endtime="20201112 10:14:55.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.399" endtime="20201112 10:14:55.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.397" endtime="20201112 10:14:55.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.710" level="INFO">${RESULT} = [{'time': 0.023144917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.023175111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:55.706" endtime="20201112 10:14:55.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.723" level="INFO">${ACCURACY} = {'time': [0.023144917, 0.023175111, 0.023205806, 0.023235722, 0.023266486, 0.023297167, 0.023327917, 0.023357708, 0.023388375, 0.023419, 0.023450125, 0.023480722, 0.023511042, 0.023540875, 0.023571958...</msg>
<status status="PASS" starttime="20201112 10:14:55.711" endtime="20201112 10:14:55.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.728" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.727" endtime="20201112 10:14:55.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.730" level="INFO">VALUE: [8.209000000002076e-06, 2.156900000000253e-05, 2.1555999999998965e-05, 2.159700000000167e-05, 2.15969999999982e-05, 2.2542000000000395e-05, 2.638900000000166e-05, 2.4486000000000646e-05, 2.2555999999999965e-05, 2.062499999999981e-05, 2.4471999999997607e-05, 2.258299999999963e-05, 2.543099999999937e-05, 2.2542000000000395e-05, 2.156899999999906e-05, 2.062499999999981e-05, 2.5416000000000327e-05, 2.3528000000001825e-05, 1.9708000000000225e-05, 2.258299999999963e-05, 2.065299999999895e-05, 1.9708000000000225e-05, 2.3514000000002255e-05, 2.5457999999999037e-05, 2.640299999999776e-05, 2.6401999999998288e-05, 2.3528000000001825e-05, 2.6374999999998622e-05, 2.15830000000021e-05, 2.251300000000178e-05, 2.637500000000209e-05, 2.063900000000285e-05, 2.258299999999963e-05, 2.6374999999998622e-05, 2.161099999999777e-05, 2.640299999999776e-05, 2.54169999999998e-05, 2.543099999999937e-05, 2.161099999999777e-05, 2.3500000000002685e-05, 2.2555999999999965e-05, 2.161100000000124e-05, 2.4472000000001076e-05, 2.258299999999963e-05, 2.543099999999937e-05, 2.063900000000285e-05, 2.6360999999999052e-05, 2.352700000000235e-05, 2.162500000000081e-05, 2.066700000000199e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.729" endtime="20201112 10:14:55.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.724" endtime="20201112 10:14:55.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.734" endtime="20201112 10:14:55.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.737" endtime="20201112 10:14:55.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.736" endtime="20201112 10:14:55.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.732" endtime="20201112 10:14:55.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.362" endtime="20201112 10:14:55.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.361" endtime="20201112 10:14:55.758"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.767" endtime="20201112 10:14:55.787"></status>
</kw>
<msg timestamp="20201112 10:14:55.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.766" endtime="20201112 10:14:55.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.789" endtime="20201112 10:14:55.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.791" endtime="20201112 10:14:55.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.763" endtime="20201112 10:14:55.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.761" endtime="20201112 10:14:55.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.800" endtime="20201112 10:14:56.087"></status>
</kw>
<msg timestamp="20201112 10:14:56.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.799" endtime="20201112 10:14:56.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.092" endtime="20201112 10:14:56.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.100" endtime="20201112 10:14:56.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.796" endtime="20201112 10:14:56.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.794" endtime="20201112 10:14:56.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.107" level="INFO">${RESULT} = [{'time': 0.022081917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.063899999999938e-05, 'source_diff': 2.063899999999938e-05}, {'time': 0.022112653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.103" endtime="20201112 10:14:56.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.120" level="INFO">${ACCURACY} = {'time': [0.022081917, 0.022112653, 0.022142569, 0.022173458, 0.02220375, 0.022234042, 0.022264486, 0.022295014, 0.022325472, 0.022356083, 0.022386681, 0.022417722, 0.022448083, 0.022478431, 0.0225087...</msg>
<status status="PASS" starttime="20201112 10:14:56.108" endtime="20201112 10:14:56.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.125" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.124" endtime="20201112 10:14:56.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.127" level="INFO">VALUE: [2.063899999999938e-05, 2.065299999999895e-05, 2.0666000000002516e-05, 2.4458000000001506e-05, 2.3444000000000936e-05, 2.6306000000000246e-05, 2.161100000000124e-05, 2.158299999999863e-05, 2.255500000000049e-05, 2.4485999999997177e-05, 2.2583999999999105e-05, 2.4486000000000646e-05, 2.0708000000001225e-05, 2.0611999999999714e-05, 2.062499999999981e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.640300000000123e-05, 2.0556000000001434e-05, 2.3554999999998022e-05, 2.2542000000000395e-05, 2.355500000000149e-05, 2.444500000000141e-05, 2.2542000000000395e-05, 2.2554999999997022e-05, 1.965299999999795e-05, 2.3458000000000506e-05, 2.254100000000092e-05, 1.9708000000000225e-05, 2.543099999999937e-05, 2.3486000000003115e-05, 2.545899999999851e-05, 2.258299999999963e-05, 2.061100000000024e-05, 2.5443999999999467e-05, 2.3513999999998786e-05, 2.538899999999719e-05, 2.155499999999949e-05, 2.2555999999999965e-05, 2.5443999999999467e-05, 2.068100000000156e-05, 2.2514000000001255e-05, 2.2513999999997786e-05, 2.537500000000109e-05, 2.063899999999938e-05, 2.640299999999776e-05, 2.256900000000006e-05, 2.6360999999999052e-05, 2.154099999999992e-05, 2.44169999999988e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.126" endtime="20201112 10:14:56.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.121" endtime="20201112 10:14:56.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.131" endtime="20201112 10:14:56.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.135" endtime="20201112 10:14:56.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.133" endtime="20201112 10:14:56.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.129" endtime="20201112 10:14:56.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.759" endtime="20201112 10:14:56.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.759" endtime="20201112 10:14:56.156"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.164" endtime="20201112 10:14:56.184"></status>
</kw>
<msg timestamp="20201112 10:14:56.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.163" endtime="20201112 10:14:56.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.185" endtime="20201112 10:14:56.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.188" endtime="20201112 10:14:56.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.160" endtime="20201112 10:14:56.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.158" endtime="20201112 10:14:56.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.197" endtime="20201112 10:14:56.485"></status>
</kw>
<msg timestamp="20201112 10:14:56.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.195" endtime="20201112 10:14:56.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.489" endtime="20201112 10:14:56.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.498" endtime="20201112 10:14:56.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.193" endtime="20201112 10:14:56.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.191" endtime="20201112 10:14:56.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.504" level="INFO">${RESULT} = [{'time': 0.021935056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.021965278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.501" endtime="20201112 10:14:56.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.518" level="INFO">${ACCURACY} = {'time': [0.021935056, 0.021965278, 0.021995819, 0.022026306, 0.022056833, 0.022087097, 0.022118306, 0.022148042, 0.022179014, 0.022209625, 0.022240278, 0.022270569, 0.022300653, 0.022331542, 0.022362...</msg>
<status status="PASS" starttime="20201112 10:14:56.505" endtime="20201112 10:14:56.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.522" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.521" endtime="20201112 10:14:56.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.525" level="INFO">VALUE: [2.062499999999981e-05, 1.9721999999999795e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.256900000000006e-05, 2.255500000000049e-05, 2.2583999999999105e-05, 2.07090000000007e-05, 2.644499999999994e-05, 2.2542000000000395e-05, 2.15969999999982e-05, 2.4458000000001506e-05, 1.968100000000056e-05, 2.162500000000081e-05, 2.3513999999998786e-05, 2.5457999999999037e-05, 2.538900000000066e-05, 2.5443999999999467e-05, 2.5429999999999897e-05, 2.637500000000209e-05, 2.2542000000000395e-05, 2.64170000000008e-05, 2.445900000000098e-05, 2.3485999999999646e-05, 2.5443999999999467e-05, 2.3540999999998452e-05, 2.5443999999999467e-05, 2.3540999999998452e-05, 2.640300000000123e-05, 2.4472000000001076e-05, 2.1584000000001574e-05, 2.066700000000199e-05, 2.063899999999938e-05, 2.6401999999998288e-05, 2.158299999999863e-05, 2.3556000000000965e-05, 2.447300000000055e-05, 2.543099999999937e-05, 2.3486000000003115e-05, 2.4443999999998467e-05, 2.3485999999999646e-05, 2.062499999999981e-05, 2.638899999999819e-05, 2.5457999999999037e-05, 1.9680000000001086e-05, 2.540300000000023e-05, 2.5402000000000757e-05, 1.97089999999997e-05, 2.447300000000055e-05, 2.5416000000000327e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.524" endtime="20201112 10:14:56.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.519" endtime="20201112 10:14:56.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.529" endtime="20201112 10:14:56.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.532" endtime="20201112 10:14:56.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.531" endtime="20201112 10:14:56.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.527" endtime="20201112 10:14:56.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.156" endtime="20201112 10:14:56.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.156" endtime="20201112 10:14:56.553"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.562" endtime="20201112 10:14:56.582"></status>
</kw>
<msg timestamp="20201112 10:14:56.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.560" endtime="20201112 10:14:56.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.583" endtime="20201112 10:14:56.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.586" endtime="20201112 10:14:56.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.558" endtime="20201112 10:14:56.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.555" endtime="20201112 10:14:56.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.595" endtime="20201112 10:14:56.882"></status>
</kw>
<msg timestamp="20201112 10:14:56.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.593" endtime="20201112 10:14:56.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.886" endtime="20201112 10:14:56.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.894" endtime="20201112 10:14:56.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.591" endtime="20201112 10:14:56.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.589" endtime="20201112 10:14:56.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.901" level="INFO">${RESULT} = [{'time': 0.021299236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.021329542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.898" endtime="20201112 10:14:56.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.915" level="INFO">${ACCURACY} = {'time': [0.021299236, 0.021329542, 0.021359903, 0.021391083, 0.021421611, 0.021451403, 0.021482403, 0.021512639, 0.021543319, 0.021574333, 0.021604139, 0.021634583, 0.021665264, 0.021696042, 0.021726...</msg>
<status status="PASS" starttime="20201112 10:14:56.902" endtime="20201112 10:14:56.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.919" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.918" endtime="20201112 10:14:56.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.922" level="INFO">VALUE: [8.193999999999563e-06, 2.166699999999952e-05, 2.063899999999938e-05, 2.6402000000001757e-05, 2.638900000000166e-05, 1.963900000000185e-05, 2.3514000000002255e-05, 2.2555999999999965e-05, 2.2568999999996592e-05, 2.5416000000000327e-05, 2.4500000000000216e-05, 2.161099999999777e-05, 2.4541999999998926e-05, 2.5360999999998052e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.4513999999999786e-05, 2.255500000000049e-05, 2.64170000000008e-05, 2.25969999999992e-05, 2.162500000000081e-05, 2.2569999999999535e-05, 2.4443999999998467e-05, 1.9694000000000655e-05, 2.6360999999999052e-05, 2.4443999999998467e-05, 2.54169999999998e-05, 2.161099999999777e-05, 2.640300000000123e-05, 2.6402000000001757e-05, 2.3528000000001825e-05, 2.2528000000000825e-05, 2.05969999999972e-05, 2.158299999999863e-05, 2.0679999999998616e-05, 2.2528000000000825e-05, 2.5485999999998177e-05, 2.065300000000242e-05, 2.255500000000049e-05, 2.2555999999999965e-05, 2.3513999999998786e-05, 2.163900000000038e-05, 2.259700000000267e-05, 2.544499999999894e-05, 2.7347000000000482e-05, 2.058299999999763e-05, 2.6278000000001106e-05, 2.263900000000138e-05, 2.1541999999999395e-05, 2.640300000000123e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.920" endtime="20201112 10:14:56.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.916" endtime="20201112 10:14:56.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.931" endtime="20201112 10:14:56.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.935" endtime="20201112 10:14:56.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.933" endtime="20201112 10:14:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.929" endtime="20201112 10:14:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.554" endtime="20201112 10:14:56.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.553" endtime="20201112 10:14:56.956"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.965" endtime="20201112 10:14:56.987"></status>
</kw>
<msg timestamp="20201112 10:14:56.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.963" endtime="20201112 10:14:56.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.988" endtime="20201112 10:14:56.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.991" endtime="20201112 10:14:56.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.960" endtime="20201112 10:14:56.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.958" endtime="20201112 10:14:56.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.000" endtime="20201112 10:14:57.287"></status>
</kw>
<msg timestamp="20201112 10:14:57.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025523542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.999" endtime="20201112 10:14:57.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025523542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.291" endtime="20201112 10:14:57.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.300" endtime="20201112 10:14:57.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.996" endtime="20201112 10:14:57.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.994" endtime="20201112 10:14:57.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.306" level="INFO">${RESULT} = [{'time': 0.025546056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2514000000001255e-05, 'source_diff': 2.2514000000001255e-05}, {'time': 0.025575833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:57.303" endtime="20201112 10:14:57.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.320" level="INFO">${ACCURACY} = {'time': [0.025546056, 0.025575833, 0.025606958, 0.025636847, 0.025667333, 0.025698625, 0.025728597, 0.025759431, 0.025790097, 0.025820111, 0.025851361, 0.025881417, 0.0259115, 0.025942347, 0.02597325...</msg>
<status status="PASS" starttime="20201112 10:14:57.307" endtime="20201112 10:14:57.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.325" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.323" endtime="20201112 10:14:57.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.327" level="INFO">VALUE: [2.2514000000001255e-05, 2.5416000000000327e-05, 2.3526999999998882e-05, 2.156900000000253e-05, 2.155499999999949e-05, 2.6360999999999052e-05, 2.3527999999998356e-05, 2.6374999999998622e-05, 2.4444000000001936e-05, 1.9749999999998935e-05, 2.4527999999999356e-05, 1.968100000000056e-05, 1.968100000000056e-05, 2.637500000000209e-05, 2.538900000000066e-05, 2.3499999999999216e-05, 2.64170000000008e-05, 2.3514000000002255e-05, 2.7333000000000912e-05, 2.4444000000001936e-05, 2.540300000000023e-05, 2.15830000000021e-05, 2.447300000000055e-05, 2.447300000000055e-05, 2.255500000000049e-05, 2.637500000000209e-05, 2.5388000000001187e-05, 2.4485999999997177e-05, 2.543100000000284e-05, 2.538899999999719e-05, 2.347299999999955e-05, 2.3485999999999646e-05, 2.544499999999894e-05, 2.634700000000295e-05, 2.063899999999938e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.062499999999981e-05, 2.536100000000152e-05, 2.3527999999998356e-05, 2.2598000000002144e-05, 2.5429999999999897e-05, 2.0598000000000144e-05, 2.4472000000001076e-05, 2.3485999999999646e-05, 2.061100000000024e-05, 2.2499999999998216e-05, 2.4486000000000646e-05, 2.065300000000242e-05, 2.638900000000166e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.326" endtime="20201112 10:14:57.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.321" endtime="20201112 10:14:57.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.331" endtime="20201112 10:14:57.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.334" endtime="20201112 10:14:57.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.333" endtime="20201112 10:14:57.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.329" endtime="20201112 10:14:57.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.957" endtime="20201112 10:14:57.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.956" endtime="20201112 10:14:57.355"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.364" endtime="20201112 10:14:57.384"></status>
</kw>
<msg timestamp="20201112 10:14:57.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.362" endtime="20201112 10:14:57.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.385" endtime="20201112 10:14:57.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.388" endtime="20201112 10:14:57.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.360" endtime="20201112 10:14:57.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.358" endtime="20201112 10:14:57.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.398" endtime="20201112 10:14:57.686"></status>
</kw>
<msg timestamp="20201112 10:14:57.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.396" endtime="20201112 10:14:57.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.690" endtime="20201112 10:14:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.698" endtime="20201112 10:14:57.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.393" endtime="20201112 10:14:57.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.391" endtime="20201112 10:14:57.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.705" level="INFO">${RESULT} = [{'time': 0.023048361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0221999999999888e-05, 'source_diff': 3.0221999999999888e-05}, {'time': 0.023079625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:57.701" endtime="20201112 10:14:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.718" level="INFO">${ACCURACY} = {'time': [0.023048361, 0.023079625, 0.023109319, 0.023140625, 0.023170542, 0.023201639, 0.023232139, 0.023262, 0.023292653, 0.023323417, 0.023354194, 0.023384278, 0.023415139, 0.023445472, 0.023476194...</msg>
<status status="PASS" starttime="20201112 10:14:57.706" endtime="20201112 10:14:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.723" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.722" endtime="20201112 10:14:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.725" level="INFO">VALUE: [3.0221999999999888e-05, 2.5443999999999467e-05, 2.5443999999999467e-05, 2.4556000000001965e-05, 2.54169999999998e-05, 2.162500000000081e-05, 2.4485999999997177e-05, 1.968100000000056e-05, 2.159700000000167e-05, 2.537499999999762e-05, 2.537500000000109e-05, 2.445900000000098e-05, 2.2542000000000395e-05, 2.156899999999906e-05, 2.4457999999998037e-05, 2.068099999999809e-05, 2.063899999999938e-05, 2.4513999999999786e-05, 2.3513999999998786e-05, 2.161100000000124e-05, 2.158299999999863e-05, 2.638899999999819e-05, 2.6415999999997858e-05, 2.166699999999952e-05, 2.4500000000000216e-05, 2.3513999999998786e-05, 2.644499999999994e-05, 2.15969999999982e-05, 2.2540999999997452e-05, 2.15830000000021e-05, 2.44169999999988e-05, 2.54169999999998e-05, 2.1583999999998105e-05, 2.3499999999999216e-05, 2.062499999999981e-05, 2.6348000000002425e-05, 2.4457999999998037e-05, 1.9694000000000655e-05, 2.538900000000066e-05, 2.1583999999998105e-05, 2.063900000000285e-05, 2.638900000000166e-05, 1.9721999999999795e-05, 2.638900000000166e-05, 2.066699999999852e-05, 2.6334000000002855e-05, 2.063899999999938e-05, 1.97089999999997e-05, 2.161099999999777e-05, 2.161099999999777e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.724" endtime="20201112 10:14:57.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.719" endtime="20201112 10:14:57.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.729" endtime="20201112 10:14:57.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.732" endtime="20201112 10:14:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.731" endtime="20201112 10:14:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.727" endtime="20201112 10:14:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.356" endtime="20201112 10:14:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.356" endtime="20201112 10:14:57.753"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.762" endtime="20201112 10:14:57.781"></status>
</kw>
<msg timestamp="20201112 10:14:57.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.761" endtime="20201112 10:14:57.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.783" endtime="20201112 10:14:57.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.785" endtime="20201112 10:14:57.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.758" endtime="20201112 10:14:57.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.756" endtime="20201112 10:14:57.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.795" endtime="20201112 10:14:58.082"></status>
</kw>
<msg timestamp="20201112 10:14:58.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.793" endtime="20201112 10:14:58.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.086" endtime="20201112 10:14:58.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.095" endtime="20201112 10:14:58.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.790" endtime="20201112 10:14:58.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.789" endtime="20201112 10:14:58.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.102" level="INFO">${RESULT} = [{'time': 0.021649958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139000000001942e-05, 'source_diff': 3.0139000000001942e-05}, {'time': 0.021680194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.098" endtime="20201112 10:14:58.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.115" level="INFO">${ACCURACY} = {'time': [0.021649958, 0.021680194, 0.021711347, 0.021742083, 0.021771944, 0.021803042, 0.021833569, 0.021863333, 0.021893875, 0.021924472, 0.021955069, 0.021985597, 0.022016319, 0.022047069, 0.022077...</msg>
<status status="PASS" starttime="20201112 10:14:58.102" endtime="20201112 10:14:58.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.120" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.119" endtime="20201112 10:14:58.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.122" level="INFO">VALUE: [3.0139000000001942e-05, 2.162500000000081e-05, 2.638899999999819e-05, 2.5429999999999897e-05, 2.4472000000001076e-05, 2.066700000000199e-05, 2.6388000000002187e-05, 2.4457999999998037e-05, 2.5332999999998912e-05, 2.062499999999981e-05, 2.5500000000001216e-05, 2.3513999999998786e-05, 2.4486000000000646e-05, 2.2540999999997452e-05, 2.3500000000002685e-05, 2.0598000000000144e-05, 2.161099999999777e-05, 2.3528000000001825e-05, 2.0679999999998616e-05, 2.059700000000067e-05, 2.6360999999999052e-05, 2.638899999999819e-05, 2.5500000000001216e-05, 2.2526999999997882e-05, 2.347299999999955e-05, 2.162500000000081e-05, 2.2555999999999965e-05, 2.063899999999938e-05, 2.358300000000063e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.358300000000063e-05, 2.3514000000002255e-05, 2.636100000000252e-05, 2.066699999999852e-05, 2.0637999999999906e-05, 2.2486000000002115e-05, 1.9680000000001086e-05, 2.544499999999894e-05, 2.543099999999937e-05, 2.638899999999819e-05, 2.3472000000000076e-05, 2.2500000000001685e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.15830000000021e-05, 2.6333999999999386e-05, 2.0708000000001225e-05, 2.4486000000000646e-05, 2.4541999999998926e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.121" endtime="20201112 10:14:58.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.116" endtime="20201112 10:14:58.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.126" endtime="20201112 10:14:58.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.129" endtime="20201112 10:14:58.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.128" endtime="20201112 10:14:58.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.124" endtime="20201112 10:14:58.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.754" endtime="20201112 10:14:58.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.754" endtime="20201112 10:14:58.150"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.159" endtime="20201112 10:14:58.178"></status>
</kw>
<msg timestamp="20201112 10:14:58.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.157" endtime="20201112 10:14:58.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.180" endtime="20201112 10:14:58.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.182" endtime="20201112 10:14:58.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.155" endtime="20201112 10:14:58.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.153" endtime="20201112 10:14:58.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.191" endtime="20201112 10:14:58.478"></status>
</kw>
<msg timestamp="20201112 10:14:58.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.190" endtime="20201112 10:14:58.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.482" endtime="20201112 10:14:58.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.490" endtime="20201112 10:14:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.187" endtime="20201112 10:14:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.185" endtime="20201112 10:14:58.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.497" level="INFO">${RESULT} = [{'time': 0.021838931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9263999999997597e-05, 'source_diff': 2.9263999999997597e-05}, {'time': 0.021869764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.494" endtime="20201112 10:14:58.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.510" level="INFO">${ACCURACY} = {'time': [0.021838931, 0.021869764, 0.021899806, 0.021929931, 0.021961181, 0.021991361, 0.022021444, 0.022052167, 0.022082778, 0.022113417, 0.022144125, 0.022174931, 0.022204792, 0.022235528, 0.022266...</msg>
<status status="PASS" starttime="20201112 10:14:58.498" endtime="20201112 10:14:58.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.515" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.514" endtime="20201112 10:14:58.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.518" level="INFO">VALUE: [2.9263999999997597e-05, 2.54169999999998e-05, 2.2555999999999965e-05, 2.247299999999855e-05, 2.1598000000001144e-05, 1.9680000000001086e-05, 2.352700000000235e-05, 2.445900000000098e-05, 2.261100000000224e-05, 2.640300000000123e-05, 2.3528000000001825e-05, 2.0611999999999714e-05, 2.063899999999938e-05, 2.636100000000252e-05, 2.065299999999895e-05, 2.2514000000001255e-05, 2.0528000000002294e-05, 2.4471999999997607e-05, 2.161100000000124e-05, 2.1500000000000685e-05, 2.256900000000006e-05, 2.548700000000112e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.3512999999999312e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.6402000000001757e-05, 2.640299999999776e-05, 2.5416000000000327e-05, 2.538900000000066e-05, 2.4486000000000646e-05, 2.5443999999999467e-05, 2.4500000000000216e-05, 2.256900000000006e-05, 2.1583999999998105e-05, 2.062499999999981e-05, 2.062500000000328e-05, 2.6319000000000342e-05, 2.4486000000000646e-05, 2.2555999999999965e-05, 2.5457999999999037e-05, 2.434700000000095e-05, 2.638899999999819e-05, 2.25969999999992e-05, 2.443100000000184e-05, 2.2514000000001255e-05, 2.3472000000000076e-05, 2.2514000000001255e-05, 1.97089999999997e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.516" endtime="20201112 10:14:58.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.511" endtime="20201112 10:14:58.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.521" endtime="20201112 10:14:58.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.525" endtime="20201112 10:14:58.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.523" endtime="20201112 10:14:58.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.520" endtime="20201112 10:14:58.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.151" endtime="20201112 10:14:58.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.150" endtime="20201112 10:14:58.546"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.554" endtime="20201112 10:14:58.575"></status>
</kw>
<msg timestamp="20201112 10:14:58.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.553" endtime="20201112 10:14:58.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.577" endtime="20201112 10:14:58.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.579" endtime="20201112 10:14:58.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.550" endtime="20201112 10:14:58.582"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.548" endtime="20201112 10:14:58.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.589" endtime="20201112 10:14:58.876"></status>
</kw>
<msg timestamp="20201112 10:14:58.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023186792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.587" endtime="20201112 10:14:58.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023186792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.880" endtime="20201112 10:14:58.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.888" endtime="20201112 10:14:58.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.584" endtime="20201112 10:14:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.583" endtime="20201112 10:14:58.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.895" level="INFO">${RESULT} = [{'time': 0.023186792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.893100000000165e-05, 'source_diff': 5.893100000000165e-05}, {'time': 0.023248056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.892" endtime="20201112 10:14:58.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.909" level="INFO">${ACCURACY} = {'time': [0.023186792, 0.023248056, 0.023309111, 0.023370208, 0.023431708, 0.023492653, 0.023553542, 0.023614889, 0.023675306, 0.023736764, 0.023797819, 0.023858681, 0.023919486, 0.023980319, 0.024041...</msg>
<status status="PASS" starttime="20201112 10:14:58.896" endtime="20201112 10:14:58.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.913" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.912" endtime="20201112 10:14:58.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.916" level="INFO">VALUE: [5.893100000000165e-05, 5.7014000000001064e-05, 5.211100000000052e-05, 5.3179999999999894e-05, 5.312499999999762e-05, 5.124999999999921e-05, 5.218100000000184e-05, 5.608299999999844e-05, 5.6055999999998773e-05, 5.127800000000182e-05, 5.2151999999999754e-05, 5.129199999999792e-05, 5.033299999999963e-05, 5.509700000000048e-05, 5.41670000000008e-05, 5.60549999999993e-05, 5.604200000000267e-05, 5.5999999999997024e-05, 5.512499999999962e-05, 5.225000000000021e-05, 5.7013999999997594e-05, 5.5971999999997885e-05, 5.4180000000000894e-05, 5.415300000000123e-05, 5.698699999999793e-05, 5.2165999999999324e-05, 5.509799999999995e-05, 5.6027999999999634e-05, 5.501400000000253e-05, 5.413900000000166e-05, 5.7014000000001064e-05, 5.6000000000000494e-05, 5.2179999999998894e-05, 5.7014000000001064e-05, 5.219400000000193e-05, 5.693100000000312e-05, 5.606900000000234e-05, 5.605600000000224e-05, 5.123599999999964e-05, 5.608399999999791e-05, 5.511100000000005e-05, 5.227799999999935e-05, 5.31669999999998e-05, 5.601300000000059e-05, 5.605600000000224e-05, 5.506900000000134e-05, 5.5971999999997885e-05, 5.508400000000038e-05, 5.60549999999993e-05, 5.313899999999719e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.914" endtime="20201112 10:14:58.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.909" endtime="20201112 10:14:58.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.920" endtime="20201112 10:14:58.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.923" endtime="20201112 10:14:58.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.921" endtime="20201112 10:14:58.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.918" endtime="20201112 10:14:58.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.547" endtime="20201112 10:14:58.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.546" endtime="20201112 10:14:58.944"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.953" endtime="20201112 10:14:58.972"></status>
</kw>
<msg timestamp="20201112 10:14:58.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.951" endtime="20201112 10:14:58.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.974" endtime="20201112 10:14:58.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.976" endtime="20201112 10:14:58.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.948" endtime="20201112 10:14:58.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.946" endtime="20201112 10:14:58.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.985" endtime="20201112 10:14:59.272"></status>
</kw>
<msg timestamp="20201112 10:14:59.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:58.984" endtime="20201112 10:14:59.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:59.276" endtime="20201112 10:14:59.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.284" endtime="20201112 10:14:59.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.981" endtime="20201112 10:14:59.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.979" endtime="20201112 10:14:59.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.291" level="INFO">${RESULT} = [{'time': 0.02188025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3625000000001996e-05, 'source_diff': 4.3625000000001996e-05}, {'time': 0.021941278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:59.287" endtime="20201112 10:14:59.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.304" level="INFO">${ACCURACY} = {'time': [0.02188025, 0.021941278, 0.022002333, 0.022063028, 0.022124556, 0.022185347, 0.022246319, 0.022307972, 0.022368875, 0.022429667, 0.022490375, 0.022551431, 0.022612556, 0.022673903, 0.0227349...</msg>
<status status="PASS" starttime="20201112 10:14:59.292" endtime="20201112 10:14:59.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.309" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.308" endtime="20201112 10:14:59.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.311" level="INFO">VALUE: [4.3625000000001996e-05, 5.604200000000267e-05, 5.60549999999993e-05, 5.508399999999691e-05, 5.404200000000067e-05, 5.123599999999964e-05, 5.701300000000159e-05, 5.6027999999999634e-05, 5.415300000000123e-05, 5.411099999999905e-05, 5.509700000000048e-05, 5.512499999999962e-05, 5.416699999999733e-05, 5.6985999999998455e-05, 5.511100000000005e-05, 5.2221999999997604e-05, 5.408399999999938e-05, 5.602700000000016e-05, 5.031900000000006e-05, 5.223600000000064e-05, 5.6943999999999745e-05, 5.120899999999998e-05, 5.222200000000107e-05, 5.318099999999937e-05, 5.030500000000049e-05, 5.318099999999937e-05, 5.60549999999993e-05, 5.604200000000267e-05, 5.606900000000234e-05, 5.129200000000139e-05, 5.123599999999964e-05, 5.511100000000005e-05, 5.127799999999835e-05, 5.412499999999862e-05, 5.508300000000091e-05, 5.220900000000098e-05, 5.608400000000138e-05, 5.60549999999993e-05, 5.605600000000224e-05, 5.415300000000123e-05, 5.413900000000166e-05, 5.412499999999862e-05, 5.31669999999998e-05, 5.3179999999999894e-05, 5.223600000000064e-05, 5.311099999999805e-05, 5.222200000000107e-05, 5.606900000000234e-05, 5.3221999999998604e-05, 5.509799999999995e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.310" endtime="20201112 10:14:59.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.305" endtime="20201112 10:14:59.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.315" endtime="20201112 10:14:59.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.319" endtime="20201112 10:14:59.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.317" endtime="20201112 10:14:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.313" endtime="20201112 10:14:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.945" endtime="20201112 10:14:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.944" endtime="20201112 10:14:59.339"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.348" endtime="20201112 10:14:59.369"></status>
</kw>
<msg timestamp="20201112 10:14:59.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.347" endtime="20201112 10:14:59.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.370" endtime="20201112 10:14:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.373" endtime="20201112 10:14:59.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.344" endtime="20201112 10:14:59.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.342" endtime="20201112 10:14:59.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.382" endtime="20201112 10:14:59.669"></status>
</kw>
<msg timestamp="20201112 10:14:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.380" endtime="20201112 10:14:59.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.673" endtime="20201112 10:14:59.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.681" endtime="20201112 10:14:59.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.378" endtime="20201112 10:14:59.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.376" endtime="20201112 10:14:59.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.688" level="INFO">${RESULT} = [{'time': 0.023137375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.454200000000158e-05, 'source_diff': 4.454200000000158e-05}, {'time': 0.023197944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.685" endtime="20201112 10:14:59.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.701" level="INFO">${ACCURACY} = {'time': [0.023137375, 0.023197944, 0.023259083, 0.023320097, 0.023381333, 0.023442833, 0.023503194, 0.023564153, 0.023625292, 0.023686708, 0.023747861, 0.023808764, 0.023869306, 0.023930847, 0.023991...</msg>
<status status="PASS" starttime="20201112 10:14:59.689" endtime="20201112 10:14:59.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.706" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.705" endtime="20201112 10:14:59.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.708" level="INFO">VALUE: [4.454200000000158e-05, 5.411100000000252e-05, 5.506900000000134e-05, 5.12080000000005e-05, 5.506900000000134e-05, 5.6985999999998455e-05, 5.3166000000000324e-05, 5.118100000000084e-05, 5.7013999999997594e-05, 5.123599999999964e-05, 5.6985999999998455e-05, 5.413899999999819e-05, 5.126399999999878e-05, 5.508300000000091e-05, 5.5972000000001354e-05, 5.7014000000001064e-05, 5.4999999999999494e-05, 5.127799999999835e-05, 5.413900000000166e-05, 5.124999999999921e-05, 5.604200000000267e-05, 5.219400000000193e-05, 5.4972000000000354e-05, 5.322200000000207e-05, 5.412499999999862e-05, 5.222200000000107e-05, 5.604099999999973e-05, 5.416699999999733e-05, 5.03330000000031e-05, 5.7014000000001064e-05, 5.68749999999979e-05, 5.6041999999999204e-05, 5.508300000000091e-05, 5.594500000000169e-05, 5.606899999999887e-05, 5.030500000000049e-05, 5.219500000000141e-05, 5.509799999999995e-05, 5.223600000000064e-05, 5.411099999999905e-05, 5.6999999999998024e-05, 5.219499999999794e-05, 5.40280000000011e-05, 5.319400000000293e-05, 5.126400000000225e-05, 5.413899999999819e-05, 5.127799999999835e-05, 5.6014000000000064e-05, 5.230500000000249e-05, 5.11530000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.707" endtime="20201112 10:14:59.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.702" endtime="20201112 10:14:59.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.712" endtime="20201112 10:14:59.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.716" endtime="20201112 10:14:59.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.714" endtime="20201112 10:14:59.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.710" endtime="20201112 10:14:59.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.340" endtime="20201112 10:14:59.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.340" endtime="20201112 10:14:59.737"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.745" endtime="20201112 10:14:59.772"></status>
</kw>
<msg timestamp="20201112 10:14:59.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.744" endtime="20201112 10:14:59.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.773" endtime="20201112 10:14:59.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.776" endtime="20201112 10:14:59.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.741" endtime="20201112 10:14:59.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.739" endtime="20201112 10:14:59.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.785" endtime="20201112 10:15:00.072"></status>
</kw>
<msg timestamp="20201112 10:15:00.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022964694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.783" endtime="20201112 10:15:00.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022964694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.076" endtime="20201112 10:15:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.085" endtime="20201112 10:15:00.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.781" endtime="20201112 10:15:00.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.779" endtime="20201112 10:15:00.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.091" level="INFO">${RESULT} = [{'time': 0.023020625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.593099999999865e-05, 'source_diff': 5.593099999999865e-05}, {'time': 0.023081597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:00.088" endtime="20201112 10:15:00.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.105" level="INFO">${ACCURACY} = {'time': [0.023020625, 0.023081597, 0.023142708, 0.02320375, 0.023264653, 0.023326181, 0.023386514, 0.023448083, 0.023508903, 0.023570319, 0.023631139, 0.023692389, 0.023753194, 0.023814347, 0.0238749...</msg>
<status status="PASS" starttime="20201112 10:15:00.092" endtime="20201112 10:15:00.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.109" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.108" endtime="20201112 10:15:00.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.112" level="INFO">VALUE: [5.593099999999865e-05, 5.412499999999862e-05, 5.702700000000116e-05, 5.6041999999999204e-05, 5.6055999999998773e-05, 5.1223000000003016e-05, 5.593100000000212e-05, 5.127700000000235e-05, 5.6014000000000064e-05, 5.408299999999991e-05, 5.6027999999999634e-05, 5.126400000000225e-05, 5.029099999999745e-05, 5.406900000000034e-05, 5.311199999999752e-05, 5.127799999999835e-05, 5.6041999999999204e-05, 5.509799999999995e-05, 5.406899999999687e-05, 5.50280000000021e-05, 5.122200000000007e-05, 5.41670000000008e-05, 5.222300000000055e-05, 5.126399999999878e-05, 5.6986000000001924e-05, 5.124999999999921e-05, 5.602699999999669e-05, 5.6943999999999745e-05, 5.3166000000000324e-05, 5.127800000000182e-05, 5.4221999999999604e-05, 5.406999999999981e-05, 5.124999999999921e-05, 5.509799999999995e-05, 5.2166000000002793e-05, 5.511100000000005e-05, 5.129199999999792e-05, 5.605600000000224e-05, 5.31669999999998e-05, 5.501299999999959e-05, 5.123599999999964e-05, 5.127799999999835e-05, 5.694499999999922e-05, 5.125000000000268e-05, 5.2235999999997174e-05, 5.3152000000000754e-05, 5.129200000000139e-05, 5.223600000000064e-05, 5.312500000000109e-05, 5.118099999999737e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.110" endtime="20201112 10:15:00.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.106" endtime="20201112 10:15:00.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.115" endtime="20201112 10:15:00.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.119" endtime="20201112 10:15:00.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.117" endtime="20201112 10:15:00.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.114" endtime="20201112 10:15:00.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.737" endtime="20201112 10:15:00.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.737" endtime="20201112 10:15:00.140"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.149" endtime="20201112 10:15:00.168"></status>
</kw>
<msg timestamp="20201112 10:15:00.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.147" endtime="20201112 10:15:00.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.170" endtime="20201112 10:15:00.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.172" endtime="20201112 10:15:00.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.144" endtime="20201112 10:15:00.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.142" endtime="20201112 10:15:00.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.182" endtime="20201112 10:15:00.469"></status>
</kw>
<msg timestamp="20201112 10:15:00.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.180" endtime="20201112 10:15:00.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.473" endtime="20201112 10:15:00.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.482" endtime="20201112 10:15:00.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.177" endtime="20201112 10:15:00.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.176" endtime="20201112 10:15:00.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.488" level="INFO">${RESULT} = [{'time': 0.021590875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9846999999999105e-05, 'source_diff': 3.9846999999999105e-05}, {'time': 0.021652167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.485" endtime="20201112 10:15:00.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.502" level="INFO">${ACCURACY} = {'time': [0.021590875, 0.021652167, 0.021713375, 0.021773903, 0.021835125, 0.021895972, 0.021957278, 0.022018069, 0.022079472, 0.022140597, 0.022201528, 0.022262139, 0.022323736, 0.022384653, 0.022445...</msg>
<status status="PASS" starttime="20201112 10:15:00.489" endtime="20201112 10:15:00.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.506" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.505" endtime="20201112 10:15:00.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.509" level="INFO">VALUE: [3.9846999999999105e-05, 5.116700000000127e-05, 5.126399999999878e-05, 5.605600000000224e-05, 5.3193999999999464e-05, 5.223600000000064e-05, 5.413900000000166e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.508300000000091e-05, 5.229200000000239e-05, 5.31669999999998e-05, 5.308299999999891e-05, 5.5986000000000924e-05, 5.605600000000224e-05, 5.31669999999998e-05, 5.594499999999822e-05, 5.411099999999905e-05, 5.319499999999894e-05, 5.127800000000182e-05, 5.412499999999862e-05, 5.3221999999998604e-05, 5.209700000000095e-05, 5.415300000000123e-05, 5.511100000000005e-05, 5.3207999999999034e-05, 5.7000000000001494e-05, 5.41670000000008e-05, 5.607000000000181e-05, 5.126399999999878e-05, 5.222200000000107e-05, 5.501400000000253e-05, 5.7014000000001064e-05, 5.318099999999937e-05, 5.015200000000122e-05, 5.2221999999997604e-05, 5.223600000000064e-05, 5.608400000000138e-05, 5.6971999999998885e-05, 5.127700000000235e-05, 5.3999999999998494e-05, 5.126399999999878e-05, 5.511100000000005e-05, 5.130499999999802e-05, 5.691700000000008e-05, 5.31669999999998e-05, 5.413900000000166e-05, 5.780500000000105e-05, 5.5179999999998425e-05, 5.225000000000021e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.507" endtime="20201112 10:15:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.503" endtime="20201112 10:15:00.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.512" endtime="20201112 10:15:00.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.516" endtime="20201112 10:15:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.514" endtime="20201112 10:15:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.511" endtime="20201112 10:15:00.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.141" endtime="20201112 10:15:00.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.140" endtime="20201112 10:15:00.537"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.546" endtime="20201112 10:15:00.565"></status>
</kw>
<msg timestamp="20201112 10:15:00.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.544" endtime="20201112 10:15:00.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.567" endtime="20201112 10:15:00.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.569" endtime="20201112 10:15:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.542" endtime="20201112 10:15:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.540" endtime="20201112 10:15:00.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.578" endtime="20201112 10:15:00.865"></status>
</kw>
<msg timestamp="20201112 10:15:00.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.577" endtime="20201112 10:15:00.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.869" endtime="20201112 10:15:00.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.878" endtime="20201112 10:15:00.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.574" endtime="20201112 10:15:00.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.572" endtime="20201112 10:15:00.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.884" level="INFO">${RESULT} = [{'time': 0.021290806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.838899999999938e-05, 'source_diff': 4.838899999999938e-05}, {'time': 0.021352333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:00.881" endtime="20201112 10:15:00.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.898" level="INFO">${ACCURACY} = {'time': [0.021290806, 0.021352333, 0.021413042, 0.021473986, 0.021535208, 0.021596222, 0.021657597, 0.021718014, 0.021779153, 0.021840583, 0.021901819, 0.021962458, 0.022023222, 0.022084444, 0.022145...</msg>
<status status="PASS" starttime="20201112 10:15:00.885" endtime="20201112 10:15:00.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.902" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.901" endtime="20201112 10:15:00.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.905" level="INFO">VALUE: [4.838899999999938e-05, 5.322200000000207e-05, 5.03339999999991e-05, 5.7014000000001064e-05, 5.3207999999999034e-05, 5.50410000000022e-05, 5.505500000000177e-05, 5.126400000000225e-05, 5.416699999999733e-05, 5.2179999999998894e-05, 5.6957999999999315e-05, 5.126400000000225e-05, 5.2221999999997604e-05, 5.4152000000001754e-05, 5.212500000000009e-05, 5.509799999999995e-05, 5.413900000000166e-05, 5.606999999999834e-05, 5.127699999999888e-05, 5.415299999999776e-05, 5.606999999999834e-05, 5.124999999999921e-05, 5.031999999999953e-05, 5.219499999999794e-05, 5.512499999999962e-05, 5.32080000000025e-05, 5.604099999999973e-05, 5.223600000000064e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.507000000000081e-05, 5.508400000000038e-05, 5.222200000000107e-05, 5.123599999999964e-05, 5.6041999999999204e-05, 5.030499999999702e-05, 5.605600000000224e-05, 5.225000000000021e-05, 5.6055999999998773e-05, 5.511100000000005e-05, 5.409799999999895e-05, 5.2207999999998034e-05, 5.6041999999999204e-05, 5.511100000000005e-05, 5.127799999999835e-05, 5.412500000000209e-05, 5.126399999999878e-05, 5.319499999999894e-05, 5.611099999999758e-05, 5.311100000000152e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.904" endtime="20201112 10:15:00.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.899" endtime="20201112 10:15:00.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.909" endtime="20201112 10:15:00.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.912" endtime="20201112 10:15:00.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.910" endtime="20201112 10:15:00.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.907" endtime="20201112 10:15:00.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.538" endtime="20201112 10:15:00.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.537" endtime="20201112 10:15:00.933"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.942" endtime="20201112 10:15:00.963"></status>
</kw>
<msg timestamp="20201112 10:15:00.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.940" endtime="20201112 10:15:00.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.964" endtime="20201112 10:15:00.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.967" endtime="20201112 10:15:00.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.938" endtime="20201112 10:15:00.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.936" endtime="20201112 10:15:00.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.976" endtime="20201112 10:15:01.264"></status>
</kw>
<msg timestamp="20201112 10:15:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.974" endtime="20201112 10:15:01.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.268" endtime="20201112 10:15:01.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.277" endtime="20201112 10:15:01.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.972" endtime="20201112 10:15:01.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.970" endtime="20201112 10:15:01.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.284" level="INFO">${RESULT} = [{'time': 0.022334472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.413900000000166e-05, 'source_diff': 5.413900000000166e-05}, {'time': 0.022395458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:01.280" endtime="20201112 10:15:01.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.297" level="INFO">${ACCURACY} = {'time': [0.022334472, 0.022395458, 0.022457, 0.022517806, 0.022578472, 0.022640056, 0.022700792, 0.022761806, 0.022822486, 0.022884264, 0.022945333, 0.023005986, 0.023066681, 0.023128347, 0.023189264...</msg>
<status status="PASS" starttime="20201112 10:15:01.285" endtime="20201112 10:15:01.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.302" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.301" endtime="20201112 10:15:01.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.304" level="INFO">VALUE: [5.413900000000166e-05, 5.2151999999999754e-05, 5.219400000000193e-05, 5.415300000000123e-05, 5.3193999999999464e-05, 5.608399999999791e-05, 5.126400000000225e-05, 5.311199999999752e-05, 5.506899999999787e-05, 5.126400000000225e-05, 5.60549999999993e-05, 5.3179999999999894e-05, 5.029199999999692e-05, 5.509700000000048e-05, 5.404200000000067e-05, 5.118099999999737e-05, 5.611200000000052e-05, 5.124999999999921e-05, 5.2207999999998034e-05, 5.6027999999999634e-05, 5.126399999999878e-05, 5.7028000000000634e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.609699999999801e-05, 5.405500000000077e-05, 5.22080000000015e-05, 5.511100000000005e-05, 5.702700000000116e-05, 5.602700000000016e-05, 5.60280000000031e-05, 5.6027999999999634e-05, 5.319499999999894e-05, 5.7000000000001494e-05, 5.309699999999848e-05, 5.318100000000284e-05, 5.318100000000284e-05, 5.213899999999966e-05, 5.126299999999931e-05, 5.41670000000008e-05, 5.133300000000063e-05, 5.602700000000016e-05, 5.6014000000000064e-05, 5.41670000000008e-05, 5.31669999999998e-05, 5.319499999999894e-05, 5.218100000000184e-05, 5.6027999999999634e-05, 5.031900000000006e-05, 5.411099999999905e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.303" endtime="20201112 10:15:01.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.298" endtime="20201112 10:15:01.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.308" endtime="20201112 10:15:01.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.311" endtime="20201112 10:15:01.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.310" endtime="20201112 10:15:01.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.306" endtime="20201112 10:15:01.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.934" endtime="20201112 10:15:01.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.933" endtime="20201112 10:15:01.332"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.341" endtime="20201112 10:15:01.363"></status>
</kw>
<msg timestamp="20201112 10:15:01.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.339" endtime="20201112 10:15:01.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.365" endtime="20201112 10:15:01.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.367" endtime="20201112 10:15:01.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.337" endtime="20201112 10:15:01.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.335" endtime="20201112 10:15:01.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.377" endtime="20201112 10:15:01.664"></status>
</kw>
<msg timestamp="20201112 10:15:01.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025038986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.375" endtime="20201112 10:15:01.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025038986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.668" endtime="20201112 10:15:01.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.677" endtime="20201112 10:15:01.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.372" endtime="20201112 10:15:01.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.370" endtime="20201112 10:15:01.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.683" level="INFO">${RESULT} = [{'time': 0.025086444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.745800000000022e-05, 'source_diff': 4.745800000000022e-05}, {'time': 0.0251475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:01.680" endtime="20201112 10:15:01.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.697" level="INFO">${ACCURACY} = {'time': [0.025086444, 0.0251475, 0.025208042, 0.025268833, 0.025330653, 0.025391333, 0.025452028, 0.025513736, 0.025574764, 0.025635028, 0.025696708, 0.025758014, 0.025818375, 0.025879278, 0.02594056...</msg>
<status status="PASS" starttime="20201112 10:15:01.684" endtime="20201112 10:15:01.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.701" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.700" endtime="20201112 10:15:01.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.704" level="INFO">VALUE: [4.745800000000022e-05, 5.112499999999909e-05, 5.222300000000055e-05, 5.3179999999999894e-05, 5.787500000000237e-05, 5.3179999999999894e-05, 5.501400000000253e-05, 5.6930000000000175e-05, 5.124999999999921e-05, 5.404200000000067e-05, 5.602700000000016e-05, 5.31669999999998e-05, 5.6014000000000064e-05, 5.515299999999876e-05, 5.501299999999959e-05, 5.129199999999792e-05, 5.31669999999998e-05, 5.406900000000034e-05, 5.60549999999993e-05, 5.12080000000005e-05, 5.126399999999878e-05, 5.31669999999998e-05, 5.406900000000034e-05, 5.027800000000082e-05, 5.693099999999965e-05, 5.03469999999992e-05, 5.509700000000048e-05, 5.4999999999999494e-05, 5.608299999999844e-05, 5.126400000000225e-05, 5.408399999999938e-05, 5.508300000000091e-05, 5.6000000000000494e-05, 5.119400000000093e-05, 5.6985999999998455e-05, 5.207000000000128e-05, 5.606999999999834e-05, 5.412500000000209e-05, 5.319499999999894e-05, 5.415300000000123e-05, 5.40280000000011e-05, 5.223600000000064e-05, 5.126400000000225e-05, 5.124999999999921e-05, 5.2165999999999324e-05, 5.127800000000182e-05, 5.6014000000000064e-05, 5.1165999999998324e-05, 5.222200000000107e-05, 5.604099999999973e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.702" endtime="20201112 10:15:01.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.698" endtime="20201112 10:15:01.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.708" endtime="20201112 10:15:01.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.711" endtime="20201112 10:15:01.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.709" endtime="20201112 10:15:01.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.706" endtime="20201112 10:15:01.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.333" endtime="20201112 10:15:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.332" endtime="20201112 10:15:01.732"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.741" endtime="20201112 10:15:01.761"></status>
</kw>
<msg timestamp="20201112 10:15:01.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.739" endtime="20201112 10:15:01.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.763" endtime="20201112 10:15:01.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.765" endtime="20201112 10:15:01.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.737" endtime="20201112 10:15:01.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.734" endtime="20201112 10:15:01.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.774" endtime="20201112 10:15:02.062"></status>
</kw>
<msg timestamp="20201112 10:15:02.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.773" endtime="20201112 10:15:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.067" endtime="20201112 10:15:02.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.075" endtime="20201112 10:15:02.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.770" endtime="20201112 10:15:02.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.768" endtime="20201112 10:15:02.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.082" level="INFO">${RESULT} = [{'time': 0.022223028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7013999999997594e-05, 'source_diff': 5.7013999999997594e-05}, {'time': 0.022283806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.078" endtime="20201112 10:15:02.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.095" level="INFO">${ACCURACY} = {'time': [0.022223028, 0.022283806, 0.022345028, 0.022406264, 0.022466764, 0.022527542, 0.022588653, 0.022649792, 0.022711167, 0.022771722, 0.022833153, 0.022893944, 0.022955361, 0.023016097, 0.023077...</msg>
<status status="PASS" starttime="20201112 10:15:02.083" endtime="20201112 10:15:02.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.100" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.099" endtime="20201112 10:15:02.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.102" level="INFO">VALUE: [5.7013999999997594e-05, 5.027800000000082e-05, 5.511100000000005e-05, 5.318099999999937e-05, 5.123599999999964e-05, 5.029200000000039e-05, 5.21669999999988e-05, 5.309799999999795e-05, 5.607000000000181e-05, 5.608300000000191e-05, 5.312499999999762e-05, 5.508300000000091e-05, 5.6027999999999634e-05, 5.12080000000005e-05, 5.125000000000268e-05, 5.21530000000027e-05, 5.406899999999687e-05, 5.5027999999998634e-05, 5.218100000000184e-05, 5.222299999999708e-05, 5.409699999999948e-05, 5.311200000000099e-05, 5.6972000000002354e-05, 5.223600000000064e-05, 5.41670000000008e-05, 5.5137999999999715e-05, 5.3221999999998604e-05, 5.408299999999991e-05, 5.222200000000107e-05, 5.512500000000309e-05, 5.409699999999948e-05, 5.219400000000193e-05, 5.416699999999733e-05, 5.41670000000008e-05, 5.129199999999792e-05, 5.225000000000021e-05, 5.411100000000252e-05, 5.413900000000166e-05, 5.227799999999935e-05, 5.223600000000064e-05, 5.512500000000309e-05, 5.123599999999964e-05, 5.6000000000000494e-05, 5.412499999999862e-05, 5.3193999999999464e-05, 5.604099999999973e-05, 5.223600000000064e-05, 5.505500000000177e-05, 5.3166000000000324e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.101" endtime="20201112 10:15:02.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.096" endtime="20201112 10:15:02.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.112" endtime="20201112 10:15:02.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.115" endtime="20201112 10:15:02.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.113" endtime="20201112 10:15:02.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.110" endtime="20201112 10:15:02.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.733" endtime="20201112 10:15:02.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.732" endtime="20201112 10:15:02.136"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.145" endtime="20201112 10:15:02.168"></status>
</kw>
<msg timestamp="20201112 10:15:02.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.143" endtime="20201112 10:15:02.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.169" endtime="20201112 10:15:02.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.172" endtime="20201112 10:15:02.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.141" endtime="20201112 10:15:02.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.139" endtime="20201112 10:15:02.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.181" endtime="20201112 10:15:02.469"></status>
</kw>
<msg timestamp="20201112 10:15:02.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024973847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.179" endtime="20201112 10:15:02.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024973847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.474" endtime="20201112 10:15:02.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.483" endtime="20201112 10:15:02.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.177" endtime="20201112 10:15:02.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.175" endtime="20201112 10:15:02.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.489" level="INFO">${RESULT} = [{'time': 0.024973847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180500000000158e-05, 'source_diff': 6.180500000000158e-05}, {'time': 0.025035236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:02.486" endtime="20201112 10:15:02.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.503" level="INFO">${ACCURACY} = {'time': [0.024973847, 0.025035236, 0.025095958, 0.025157014, 0.025218319, 0.025279111, 0.02533975, 0.025400819, 0.025462333, 0.025522806, 0.025584514, 0.025645181, 0.025706597, 0.025767375, 0.0258279...</msg>
<status status="PASS" starttime="20201112 10:15:02.490" endtime="20201112 10:15:02.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.507" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.506" endtime="20201112 10:15:02.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.510" level="INFO">VALUE: [6.180500000000158e-05, 5.5013999999999064e-05, 5.4180000000000894e-05, 5.2249999999996743e-05, 5.2138000000000184e-05, 5.029200000000039e-05, 5.406900000000034e-05, 5.223600000000064e-05, 5.312500000000109e-05, 5.122299999999955e-05, 5.4027999999997633e-05, 5.516699999999833e-05, 5.501400000000253e-05, 5.038899999999791e-05, 5.311099999999805e-05, 5.129199999999792e-05, 5.505599999999777e-05, 5.413899999999819e-05, 5.409699999999948e-05, 5.606899999999887e-05, 5.313900000000066e-05, 5.320899999999851e-05, 5.7027999999997164e-05, 5.593100000000212e-05, 5.223600000000064e-05, 5.5027999999998634e-05, 5.7013999999997594e-05, 5.5027999999998634e-05, 5.5013999999999064e-05, 5.511100000000005e-05, 5.6000000000000494e-05, 5.127699999999888e-05, 5.5013999999999064e-05, 5.315300000000023e-05, 5.504200000000167e-05, 5.3207999999999034e-05, 5.40280000000011e-05, 5.125000000000268e-05, 5.118100000000084e-05, 5.3193999999999464e-05, 5.218099999999837e-05, 5.127699999999888e-05, 5.327800000000035e-05, 5.213899999999966e-05, 5.225000000000021e-05, 5.2179999999998894e-05, 5.4180000000000894e-05, 5.119400000000093e-05, 5.418100000000037e-05, 5.118000000000136e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.508" endtime="20201112 10:15:02.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.504" endtime="20201112 10:15:02.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.513" endtime="20201112 10:15:02.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.517" endtime="20201112 10:15:02.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.515" endtime="20201112 10:15:02.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.512" endtime="20201112 10:15:02.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.137" endtime="20201112 10:15:02.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.136" endtime="20201112 10:15:02.539"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.547" endtime="20201112 10:15:02.569"></status>
</kw>
<msg timestamp="20201112 10:15:02.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.546" endtime="20201112 10:15:02.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.571" endtime="20201112 10:15:02.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.573" endtime="20201112 10:15:02.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.543" endtime="20201112 10:15:02.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.541" endtime="20201112 10:15:02.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.583" endtime="20201112 10:15:02.870"></status>
</kw>
<msg timestamp="20201112 10:15:02.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.581" endtime="20201112 10:15:02.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.874" endtime="20201112 10:15:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.882" endtime="20201112 10:15:02.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.579" endtime="20201112 10:15:02.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.577" endtime="20201112 10:15:02.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.889" level="INFO">${RESULT} = [{'time': 0.024398236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2179999999998894e-05, 'source_diff': 5.2179999999998894e-05}, {'time': 0.024460014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.886" endtime="20201112 10:15:02.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.902" level="INFO">${ACCURACY} = {'time': [0.024398236, 0.024460014, 0.024520792, 0.02458125, 0.024642333, 0.024703903, 0.024765014, 0.024825389, 0.024886403, 0.024947611, 0.025009014, 0.025069903, 0.025130736, 0.025191903, 0.0252526...</msg>
<status status="PASS" starttime="20201112 10:15:02.890" endtime="20201112 10:15:02.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.907" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.906" endtime="20201112 10:15:02.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.909" level="INFO">VALUE: [5.2179999999998894e-05, 5.129199999999792e-05, 5.122299999999955e-05, 5.213899999999966e-05, 5.3179999999999894e-05, 5.606999999999834e-05, 5.123599999999964e-05, 5.21669999999988e-05, 5.413900000000166e-05, 5.508300000000091e-05, 5.309699999999848e-05, 5.504200000000167e-05, 5.5013999999999064e-05, 5.315300000000023e-05, 5.30410000000002e-05, 5.126399999999878e-05, 5.315300000000023e-05, 5.2193999999998464e-05, 5.215299999999923e-05, 5.122299999999955e-05, 5.409699999999948e-05, 5.126399999999878e-05, 5.507000000000081e-05, 5.504099999999873e-05, 5.2235999999997174e-05, 5.505600000000124e-05, 5.126399999999878e-05, 5.2221999999997604e-05, 5.50549999999983e-05, 5.222300000000055e-05, 5.6971999999998885e-05, 5.5986000000000924e-05, 5.608399999999791e-05, 5.413900000000166e-05, 5.409699999999948e-05, 5.7028000000000634e-05, 5.3179999999999894e-05, 5.409699999999948e-05, 5.126400000000225e-05, 5.123599999999964e-05, 5.2151999999999754e-05, 5.126399999999878e-05, 5.408299999999991e-05, 5.1221999999996604e-05, 5.219499999999794e-05, 5.408399999999938e-05, 5.129099999999845e-05, 5.409800000000242e-05, 5.5972000000001354e-05, 5.512499999999962e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.908" endtime="20201112 10:15:02.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.903" endtime="20201112 10:15:02.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.913" endtime="20201112 10:15:02.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.917" endtime="20201112 10:15:02.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.915" endtime="20201112 10:15:02.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.911" endtime="20201112 10:15:02.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.540" endtime="20201112 10:15:02.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.539" endtime="20201112 10:15:02.938"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.946" endtime="20201112 10:15:02.966"></status>
</kw>
<msg timestamp="20201112 10:15:02.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.945" endtime="20201112 10:15:02.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.967" endtime="20201112 10:15:02.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.970" endtime="20201112 10:15:02.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.942" endtime="20201112 10:15:02.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.940" endtime="20201112 10:15:02.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.979" endtime="20201112 10:15:03.267"></status>
</kw>
<msg timestamp="20201112 10:15:03.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:02.978" endtime="20201112 10:15:03.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:03.271" endtime="20201112 10:15:03.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.279" endtime="20201112 10:15:03.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.975" endtime="20201112 10:15:03.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.973" endtime="20201112 10:15:03.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.286" level="INFO">${RESULT} = [{'time': 0.0222985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.318099999999937e-05, 'source_diff': 5.318099999999937e-05}, {'time': 0.022359, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5....</msg>
<status status="PASS" starttime="20201112 10:15:03.283" endtime="20201112 10:15:03.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.299" level="INFO">${ACCURACY} = {'time': [0.0222985, 0.022359, 0.022420375, 0.022481639, 0.022541986, 0.022603639, 0.022664028, 0.022725014, 0.022786694, 0.022847333, 0.022908167, 0.022969306, 0.023030861, 0.0230915, 0.023152347, 0....</msg>
<status status="PASS" starttime="20201112 10:15:03.287" endtime="20201112 10:15:03.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.304" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.303" endtime="20201112 10:15:03.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.307" level="INFO">VALUE: [5.318099999999937e-05, 5.311100000000152e-05, 5.7014000000001064e-05, 5.212500000000009e-05, 5.126399999999878e-05, 5.218099999999837e-05, 5.03339999999991e-05, 5.216700000000227e-05, 5.127699999999888e-05, 5.5986000000000924e-05, 5.03339999999991e-05, 5.595899999999779e-05, 5.41670000000008e-05, 5.212500000000009e-05, 5.512499999999962e-05, 5.2151999999999754e-05, 5.222200000000107e-05, 5.2151999999999754e-05, 5.03339999999991e-05, 5.119499999999694e-05, 5.13470000000002e-05, 5.215299999999923e-05, 5.6014000000000064e-05, 5.026399999999778e-05, 5.509700000000048e-05, 5.5957999999998315e-05, 5.594499999999822e-05, 5.6999999999998024e-05, 5.504200000000167e-05, 5.031999999999953e-05, 5.694499999999922e-05, 5.5152000000002754e-05, 5.311100000000152e-05, 5.7028000000000634e-05, 5.601300000000059e-05, 5.222200000000107e-05, 5.213899999999966e-05, 5.32080000000025e-05, 5.6000000000000494e-05, 5.7028000000000634e-05, 5.5013999999999064e-05, 5.7000000000001494e-05, 5.405500000000077e-05, 5.318100000000284e-05, 5.7028000000000634e-05, 5.6943999999999745e-05, 5.604099999999973e-05, 5.130600000000096e-05, 5.026400000000125e-05, 5.318099999999937e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.305" endtime="20201112 10:15:03.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.300" endtime="20201112 10:15:03.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.310" endtime="20201112 10:15:03.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.314" endtime="20201112 10:15:03.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.312" endtime="20201112 10:15:03.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.308" endtime="20201112 10:15:03.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.938" endtime="20201112 10:15:03.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.938" endtime="20201112 10:15:03.335"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.343" endtime="20201112 10:15:03.364"></status>
</kw>
<msg timestamp="20201112 10:15:03.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.342" endtime="20201112 10:15:03.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.366" endtime="20201112 10:15:03.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.368" endtime="20201112 10:15:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.339" endtime="20201112 10:15:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.337" endtime="20201112 10:15:03.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.377" endtime="20201112 10:15:03.666"></status>
</kw>
<msg timestamp="20201112 10:15:03.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.376" endtime="20201112 10:15:03.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.670" endtime="20201112 10:15:03.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.678" endtime="20201112 10:15:03.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.373" endtime="20201112 10:15:03.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.371" endtime="20201112 10:15:03.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.685" level="INFO">${RESULT} = [{'time': 0.022181556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.176400000000234e-05, 'source_diff': 6.176400000000234e-05}, {'time': 0.022242069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.682" endtime="20201112 10:15:03.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.699" level="INFO">${ACCURACY} = {'time': [0.022181556, 0.022242069, 0.022303958, 0.022364347, 0.022425292, 0.022486694, 0.022547597, 0.022608444, 0.022669639, 0.02273125, 0.022791597, 0.022852903, 0.022913625, 0.022975125, 0.023036,...</msg>
<status status="PASS" starttime="20201112 10:15:03.686" endtime="20201112 10:15:03.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.703" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.702" endtime="20201112 10:15:03.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.706" level="INFO">VALUE: [6.176400000000234e-05, 5.3235999999998174e-05, 5.78749999999989e-05, 5.508300000000091e-05, 5.6985999999998455e-05, 5.608300000000191e-05, 5.509700000000048e-05, 5.211099999999705e-05, 5.413899999999819e-05, 5.608300000000191e-05, 5.308299999999891e-05, 5.509700000000048e-05, 5.031900000000006e-05, 5.225000000000021e-05, 5.213899999999966e-05, 5.512499999999962e-05, 5.509699999999701e-05, 5.312500000000109e-05, 5.508300000000091e-05, 5.404200000000067e-05, 5.129199999999792e-05, 5.4194000000000464e-05, 5.11530000000017e-05, 5.607000000000181e-05, 5.226400000000325e-05, 5.5957999999998315e-05, 5.602700000000016e-05, 5.40410000000012e-05, 5.033299999999963e-05, 5.419499999999994e-05, 5.306999999999881e-05, 5.223700000000012e-05, 5.32080000000025e-05, 5.1165999999998324e-05, 5.508300000000091e-05, 5.5943999999998745e-05, 5.511100000000005e-05, 5.40280000000011e-05, 5.318099999999937e-05, 5.126400000000225e-05, 5.5958000000001784e-05, 5.7014000000001064e-05, 5.212500000000009e-05, 5.127800000000182e-05, 5.7014000000001064e-05, 5.116700000000127e-05, 5.320899999999851e-05, 5.5957999999998315e-05, 5.22080000000015e-05, 5.318100000000284e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.704" endtime="20201112 10:15:03.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.700" endtime="20201112 10:15:03.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.709" endtime="20201112 10:15:03.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.713" endtime="20201112 10:15:03.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.711" endtime="20201112 10:15:03.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.708" endtime="20201112 10:15:03.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.336" endtime="20201112 10:15:03.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.335" endtime="20201112 10:15:03.734"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.742" endtime="20201112 10:15:03.766"></status>
</kw>
<msg timestamp="20201112 10:15:03.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.741" endtime="20201112 10:15:03.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.767" endtime="20201112 10:15:03.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.770" endtime="20201112 10:15:03.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.738" endtime="20201112 10:15:03.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.736" endtime="20201112 10:15:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.779" endtime="20201112 10:15:04.066"></status>
</kw>
<msg timestamp="20201112 10:15:04.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.777" endtime="20201112 10:15:04.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.071" endtime="20201112 10:15:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.079" endtime="20201112 10:15:04.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.775" endtime="20201112 10:15:04.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.773" endtime="20201112 10:15:04.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.086" level="INFO">${RESULT} = [{'time': 0.025054986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.086100000000233e-05, 'source_diff': 6.086100000000233e-05}, {'time': 0.025115944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.082" endtime="20201112 10:15:04.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.099" level="INFO">${ACCURACY} = {'time': [0.025054986, 0.025115944, 0.02517725, 0.025238264, 0.025299639, 0.025359972, 0.025421083, 0.025482444, 0.025543153, 0.025604083, 0.025665292, 0.025726264, 0.025787792, 0.025848917, 0.0259094...</msg>
<status status="PASS" starttime="20201112 10:15:04.087" endtime="20201112 10:15:04.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.104" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.103" endtime="20201112 10:15:04.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.106" level="INFO">VALUE: [6.086100000000233e-05, 5.606900000000234e-05, 5.7028000000000634e-05, 5.3207999999999034e-05, 5.608299999999844e-05, 5.608300000000191e-05, 5.413900000000166e-05, 5.60549999999993e-05, 5.026399999999778e-05, 5.509700000000048e-05, 5.406999999999981e-05, 5.7027999999997164e-05, 5.509799999999995e-05, 5.415299999999776e-05, 5.030599999999996e-05, 5.319499999999894e-05, 5.127799999999835e-05, 5.70550000000003e-05, 5.033299999999963e-05, 5.4194000000000464e-05, 5.027800000000082e-05, 5.6014000000000064e-05, 5.3166000000000324e-05, 5.7000000000001494e-05, 5.130599999999749e-05, 5.412500000000209e-05, 5.416699999999733e-05, 5.693099999999965e-05, 5.22080000000015e-05, 5.6041999999999204e-05, 5.605500000000277e-05, 5.126399999999878e-05, 5.413899999999819e-05, 5.7028000000000634e-05, 5.607000000000181e-05, 5.319499999999894e-05, 5.412499999999862e-05, 5.6014000000000064e-05, 5.60549999999993e-05, 5.7000000000001494e-05, 5.124999999999921e-05, 5.226300000000031e-05, 5.4221999999999604e-05, 5.6999999999998024e-05, 5.509700000000048e-05, 5.413900000000166e-05, 5.509700000000048e-05, 5.7014000000001064e-05, 5.3193999999999464e-05, 5.7027999999997164e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.105" endtime="20201112 10:15:04.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.100" endtime="20201112 10:15:04.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.110" endtime="20201112 10:15:04.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.113" endtime="20201112 10:15:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.112" endtime="20201112 10:15:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.108" endtime="20201112 10:15:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.735" endtime="20201112 10:15:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.734" endtime="20201112 10:15:04.134"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.143" endtime="20201112 10:15:04.162"></status>
</kw>
<msg timestamp="20201112 10:15:04.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.141" endtime="20201112 10:15:04.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.164" endtime="20201112 10:15:04.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.166" endtime="20201112 10:15:04.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.139" endtime="20201112 10:15:04.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.137" endtime="20201112 10:15:04.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.176" endtime="20201112 10:15:04.464"></status>
</kw>
<msg timestamp="20201112 10:15:04.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:04.174" endtime="20201112 10:15:04.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:04.469" endtime="20201112 10:15:04.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.477" endtime="20201112 10:15:04.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.171" endtime="20201112 10:15:04.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.170" endtime="20201112 10:15:04.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.484" level="INFO">${RESULT} = [{'time': 0.0214595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.891699999999861e-05, 'source_diff': 5.891699999999861e-05}, {'time': 0.021520208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:04.480" endtime="20201112 10:15:04.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.498" level="INFO">${ACCURACY} = {'time': [0.0214595, 0.021520208, 0.021580958, 0.021641875, 0.021703097, 0.021764486, 0.021825236, 0.021886986, 0.021947319, 0.022008347, 0.022069583, 0.022131083, 0.022191944, 0.022252847, 0.02231384...</msg>
<status status="PASS" starttime="20201112 10:15:04.485" endtime="20201112 10:15:04.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.502" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.501" endtime="20201112 10:15:04.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.505" level="INFO">VALUE: [5.891699999999861e-05, 5.50549999999983e-05, 5.126400000000225e-05, 5.405600000000024e-05, 5.6972000000002354e-05, 5.222200000000107e-05, 5.3179999999999894e-05, 5.504200000000167e-05, 5.222200000000107e-05, 5.126400000000225e-05, 5.126399999999878e-05, 5.2221999999997604e-05, 5.223600000000064e-05, 5.415299999999776e-05, 5.411100000000252e-05, 5.03469999999992e-05, 5.41670000000008e-05, 5.4166000000001324e-05, 5.316700000000327e-05, 5.127800000000182e-05, 5.4137999999998715e-05, 5.127800000000182e-05, 5.409699999999948e-05, 5.220900000000098e-05, 5.222200000000107e-05, 5.315300000000023e-05, 5.312500000000109e-05, 5.3193999999999464e-05, 5.608300000000191e-05, 5.319500000000241e-05, 5.508300000000091e-05, 5.60549999999993e-05, 5.6985999999998455e-05, 5.124999999999921e-05, 5.406900000000034e-05, 5.609699999999801e-05, 5.3179999999999894e-05, 5.027800000000082e-05, 5.320899999999851e-05, 5.606899999999887e-05, 5.6041999999999204e-05, 5.031900000000006e-05, 5.604099999999973e-05, 5.3179999999999894e-05, 5.6014000000000064e-05, 5.31669999999998e-05, 5.6000000000000494e-05, 5.605600000000224e-05, 5.129099999999845e-05, 5.319400000000293e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.504" endtime="20201112 10:15:04.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.499" endtime="20201112 10:15:04.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.509" endtime="20201112 10:15:04.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.512" endtime="20201112 10:15:04.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.511" endtime="20201112 10:15:04.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.507" endtime="20201112 10:15:04.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.135" endtime="20201112 10:15:04.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.135" endtime="20201112 10:15:04.533"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.542" endtime="20201112 10:15:04.564"></status>
</kw>
<msg timestamp="20201112 10:15:04.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.541" endtime="20201112 10:15:04.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.565" endtime="20201112 10:15:04.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.568" endtime="20201112 10:15:04.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.538" endtime="20201112 10:15:04.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.536" endtime="20201112 10:15:04.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.577" endtime="20201112 10:15:04.864"></status>
</kw>
<msg timestamp="20201112 10:15:04.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.575" endtime="20201112 10:15:04.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.869" endtime="20201112 10:15:04.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.877" endtime="20201112 10:15:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.573" endtime="20201112 10:15:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.571" endtime="20201112 10:15:04.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.884" level="INFO">${RESULT} = [{'time': 0.024272389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.269499999999803e-05, 'source_diff': 6.269499999999803e-05}, {'time': 0.024333069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.880" endtime="20201112 10:15:04.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.897" level="INFO">${ACCURACY} = {'time': [0.024272389, 0.024333069, 0.024393722, 0.024454792, 0.024515889, 0.024577042, 0.024638556, 0.024699264, 0.024760375, 0.024820875, 0.024882472, 0.024943764, 0.025004792, 0.025065528, 0.025126...</msg>
<status status="PASS" starttime="20201112 10:15:04.885" endtime="20201112 10:15:04.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.902" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.901" endtime="20201112 10:15:04.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.904" level="INFO">VALUE: [6.269499999999803e-05, 5.3193999999999464e-05, 5.504099999999873e-05, 5.5041999999998203e-05, 5.226399999999978e-05, 5.6055999999998773e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.509700000000048e-05, 5.6027999999999634e-05, 5.5986000000000924e-05, 5.215299999999923e-05, 5.312500000000109e-05, 5.124999999999921e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.119500000000041e-05, 5.697300000000183e-05, 5.030599999999996e-05, 5.606899999999887e-05, 5.31669999999998e-05, 5.219400000000193e-05, 5.129200000000139e-05, 5.412500000000209e-05, 5.4194000000000464e-05, 5.5972000000001354e-05, 5.3138000000001184e-05, 5.509700000000048e-05, 5.406999999999981e-05, 5.6916000000000605e-05, 5.59870000000004e-05, 5.311099999999805e-05, 5.318099999999937e-05, 5.512499999999962e-05, 5.413900000000166e-05, 5.223600000000064e-05, 5.124999999999921e-05, 5.50280000000021e-05, 5.126399999999878e-05, 5.504200000000167e-05, 5.122200000000007e-05, 5.7014000000001064e-05, 5.21669999999988e-05, 5.409699999999948e-05, 5.511100000000005e-05, 5.613900000000019e-05, 5.4027999999997633e-05, 5.2165999999999324e-05, 5.225000000000021e-05, 5.5958000000001784e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.903" endtime="20201112 10:15:04.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.898" endtime="20201112 10:15:04.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.908" endtime="20201112 10:15:04.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.911" endtime="20201112 10:15:04.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.910" endtime="20201112 10:15:04.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.906" endtime="20201112 10:15:04.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.534" endtime="20201112 10:15:04.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.534" endtime="20201112 10:15:04.932"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.941" endtime="20201112 10:15:04.960"></status>
</kw>
<msg timestamp="20201112 10:15:04.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.939" endtime="20201112 10:15:04.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.962" endtime="20201112 10:15:04.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.965" endtime="20201112 10:15:04.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.937" endtime="20201112 10:15:04.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.935" endtime="20201112 10:15:04.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.974" endtime="20201112 10:15:05.260"></status>
</kw>
<msg timestamp="20201112 10:15:05.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:04.972" endtime="20201112 10:15:05.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:05.264" endtime="20201112 10:15:05.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.273" endtime="20201112 10:15:05.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.970" endtime="20201112 10:15:05.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.968" endtime="20201112 10:15:05.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.279" level="INFO">${RESULT} = [{'time': 0.022171347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.084699999999929e-05, 'source_diff': 6.084699999999929e-05}, {'time': 0.022232639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.276" endtime="20201112 10:15:05.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.293" level="INFO">${ACCURACY} = {'time': [0.022171347, 0.022232639, 0.022293458, 0.022354583, 0.022415819, 0.022476278, 0.022537597, 0.02259875, 0.022659653, 0.022721111, 0.022781792, 0.022842361, 0.022903972, 0.022964833, 0.0230263...</msg>
<status status="PASS" starttime="20201112 10:15:05.280" endtime="20201112 10:15:05.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.297" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.296" endtime="20201112 10:15:05.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.300" level="INFO">VALUE: [6.084699999999929e-05, 5.5985999999997454e-05, 5.2207999999998034e-05, 5.413900000000166e-05, 5.126299999999931e-05, 5.2235999999997174e-05, 5.415299999999776e-05, 5.116700000000127e-05, 5.21669999999988e-05, 5.511100000000005e-05, 5.209799999999695e-05, 5.123599999999964e-05, 5.412500000000209e-05, 5.3166000000000324e-05, 5.6916000000000605e-05, 5.6027999999999634e-05, 5.320900000000198e-05, 5.511100000000005e-05, 5.223600000000064e-05, 5.124999999999921e-05, 5.509700000000048e-05, 5.415299999999776e-05, 5.412499999999862e-05, 5.313899999999719e-05, 5.505600000000124e-05, 5.512499999999962e-05, 5.126399999999878e-05, 5.412499999999862e-05, 5.209700000000095e-05, 5.124999999999921e-05, 5.6999999999998024e-05, 5.22080000000015e-05, 5.511100000000005e-05, 5.127800000000182e-05, 5.6055999999998773e-05, 5.411100000000252e-05, 5.6999999999998024e-05, 5.116700000000127e-05, 5.3152000000000754e-05, 5.7014000000001064e-05, 5.515299999999876e-05, 5.690300000000051e-05, 5.3166000000000324e-05, 5.411099999999905e-05, 5.501400000000253e-05, 5.405600000000024e-05, 5.118100000000084e-05, 5.6027999999999634e-05, 5.409699999999948e-05, 5.608399999999791e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.299" endtime="20201112 10:15:05.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.294" endtime="20201112 10:15:05.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.304" endtime="20201112 10:15:05.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.307" endtime="20201112 10:15:05.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.306" endtime="20201112 10:15:05.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.302" endtime="20201112 10:15:05.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.933" endtime="20201112 10:15:05.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.933" endtime="20201112 10:15:05.328"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.337" endtime="20201112 10:15:05.360"></status>
</kw>
<msg timestamp="20201112 10:15:05.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.335" endtime="20201112 10:15:05.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.361" endtime="20201112 10:15:05.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.364" endtime="20201112 10:15:05.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.333" endtime="20201112 10:15:05.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.331" endtime="20201112 10:15:05.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.373" endtime="20201112 10:15:05.659"></status>
</kw>
<msg timestamp="20201112 10:15:05.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023180903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.371" endtime="20201112 10:15:05.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023180903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.664" endtime="20201112 10:15:05.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.672" endtime="20201112 10:15:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.369" endtime="20201112 10:15:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.367" endtime="20201112 10:15:05.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.679" level="INFO">${RESULT} = [{'time': 0.023245542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.463900000000175e-05, 'source_diff': 6.463900000000175e-05}, {'time': 0.023306153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.675" endtime="20201112 10:15:05.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.692" level="INFO">${ACCURACY} = {'time': [0.023245542, 0.023306153, 0.023366764, 0.023428083, 0.023489056, 0.023550528, 0.023611125, 0.023672542, 0.023732972, 0.023794083, 0.023855278, 0.023916514, 0.023977681, 0.024038889, 0.024099...</msg>
<status status="PASS" starttime="20201112 10:15:05.680" endtime="20201112 10:15:05.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.697" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.696" endtime="20201112 10:15:05.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.699" level="INFO">VALUE: [6.463900000000175e-05, 5.030599999999996e-05, 5.605600000000224e-05, 5.509700000000048e-05, 5.404200000000067e-05, 5.318100000000284e-05, 5.415300000000123e-05, 5.123599999999964e-05, 5.03330000000031e-05, 5.1152000000002223e-05, 5.411099999999905e-05, 5.5013999999999064e-05, 5.411200000000199e-05, 5.413900000000166e-05, 5.227800000000282e-05, 5.211100000000052e-05, 5.127700000000235e-05, 5.4152000000001754e-05, 5.311100000000152e-05, 5.511100000000005e-05, 5.511100000000005e-05, 5.4999999999999494e-05, 5.415300000000123e-05, 5.130500000000149e-05, 5.691700000000008e-05, 5.604099999999973e-05, 5.11669999999978e-05, 5.126400000000225e-05, 5.215299999999923e-05, 5.41670000000008e-05, 5.30280000000001e-05, 5.223600000000064e-05, 5.515300000000223e-05, 5.5972000000001354e-05, 5.4138000000002184e-05, 5.401400000000153e-05, 5.415300000000123e-05, 5.509700000000048e-05, 5.112499999999909e-05, 5.315300000000023e-05, 5.4999999999999494e-05, 5.319499999999894e-05, 5.4972000000000354e-05, 5.506999999999734e-05, 5.605600000000224e-05, 5.220900000000098e-05, 5.5957999999998315e-05, 5.2221999999997604e-05, 5.401300000000206e-05, 5.60280000000031e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.698" endtime="20201112 10:15:05.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.693" endtime="20201112 10:15:05.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.703" endtime="20201112 10:15:05.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.706" endtime="20201112 10:15:05.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.705" endtime="20201112 10:15:05.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.701" endtime="20201112 10:15:05.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.329" endtime="20201112 10:15:05.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.328" endtime="20201112 10:15:05.727"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.736" endtime="20201112 10:15:05.755"></status>
</kw>
<msg timestamp="20201112 10:15:05.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.735" endtime="20201112 10:15:05.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.757" endtime="20201112 10:15:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.759" endtime="20201112 10:15:05.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.732" endtime="20201112 10:15:05.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.730" endtime="20201112 10:15:05.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.768" endtime="20201112 10:15:06.055"></status>
</kw>
<msg timestamp="20201112 10:15:06.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.766" endtime="20201112 10:15:06.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.059" endtime="20201112 10:15:06.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.068" endtime="20201112 10:15:06.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.764" endtime="20201112 10:15:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.762" endtime="20201112 10:15:06.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.074" level="INFO">${RESULT} = [{'time': 0.020992514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555599999999868e-05, 'source_diff': 4.555599999999868e-05}, {'time': 0.021053208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.071" endtime="20201112 10:15:06.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.088" level="INFO">${ACCURACY} = {'time': [0.020992514, 0.021053208, 0.021113986, 0.021174819, 0.021236014, 0.021297514, 0.021358472, 0.021419597, 0.021479931, 0.021541097, 0.021602361, 0.021663778, 0.021724278, 0.021785778, 0.021846...</msg>
<status status="PASS" starttime="20201112 10:15:06.075" endtime="20201112 10:15:06.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.092" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.091" endtime="20201112 10:15:06.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.095" level="INFO">VALUE: [4.555599999999868e-05, 5.029100000000092e-05, 5.505500000000177e-05, 5.223600000000064e-05, 5.5986000000000924e-05, 5.691700000000008e-05, 5.606899999999887e-05, 5.412499999999862e-05, 5.50280000000021e-05, 5.411099999999905e-05, 5.322200000000207e-05, 5.605600000000224e-05, 5.405600000000024e-05, 5.505599999999777e-05, 5.225000000000021e-05, 5.509799999999995e-05, 5.5986000000000924e-05, 5.409699999999948e-05, 5.225000000000021e-05, 5.1165999999998324e-05, 5.223600000000064e-05, 5.508300000000091e-05, 5.6055999999998773e-05, 5.604200000000267e-05, 5.41670000000008e-05, 5.225000000000021e-05, 5.6041999999999204e-05, 5.211100000000052e-05, 5.4180000000000894e-05, 5.325000000000121e-05, 5.126399999999878e-05, 5.212500000000009e-05, 5.22080000000015e-05, 5.308400000000185e-05, 5.6041999999999204e-05, 5.123599999999964e-05, 5.5958000000001784e-05, 5.6014000000000064e-05, 5.412499999999862e-05, 5.027800000000082e-05, 5.309799999999795e-05, 5.608400000000138e-05, 5.5027999999998634e-05, 5.126399999999878e-05, 5.305499999999977e-05, 5.127799999999835e-05, 5.604099999999973e-05, 5.7014000000001064e-05, 5.223600000000064e-05, 5.211100000000052e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.093" endtime="20201112 10:15:06.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.089" endtime="20201112 10:15:06.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.098" endtime="20201112 10:15:06.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.102" endtime="20201112 10:15:06.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.100" endtime="20201112 10:15:06.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.097" endtime="20201112 10:15:06.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.728" endtime="20201112 10:15:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.728" endtime="20201112 10:15:06.123"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.131" endtime="20201112 10:15:06.152"></status>
</kw>
<msg timestamp="20201112 10:15:06.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.130" endtime="20201112 10:15:06.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.153" endtime="20201112 10:15:06.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.156" endtime="20201112 10:15:06.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.127" endtime="20201112 10:15:06.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.125" endtime="20201112 10:15:06.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.165" endtime="20201112 10:15:06.453"></status>
</kw>
<msg timestamp="20201112 10:15:06.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.163" endtime="20201112 10:15:06.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.457" endtime="20201112 10:15:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.465" endtime="20201112 10:15:06.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.161" endtime="20201112 10:15:06.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.159" endtime="20201112 10:15:06.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.472" level="INFO">${RESULT} = [{'time': 0.022432167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.455600000000034e-05, 'source_diff': 6.455600000000034e-05}, {'time': 0.022492931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.468" endtime="20201112 10:15:06.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.485" level="INFO">${ACCURACY} = {'time': [0.022432167, 0.022492931, 0.022554458, 0.022615389, 0.022676444, 0.022737389, 0.022797917, 0.022859597, 0.022920542, 0.022981125, 0.023042264, 0.023103083, 0.023163903, 0.02322525, 0.0232865...</msg>
<status status="PASS" starttime="20201112 10:15:06.473" endtime="20201112 10:15:06.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.490" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.489" endtime="20201112 10:15:06.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.492" level="INFO">VALUE: [6.455600000000034e-05, 5.411200000000199e-05, 5.506899999999787e-05, 5.406999999999981e-05, 5.119400000000093e-05, 5.126399999999878e-05, 5.126400000000225e-05, 5.511100000000005e-05, 5.409799999999895e-05, 5.405600000000024e-05, 5.218099999999837e-05, 5.124999999999921e-05, 5.031999999999953e-05, 5.6971999999998885e-05, 5.604099999999973e-05, 5.029100000000092e-05, 5.5943999999998745e-05, 5.4151999999998285e-05, 5.315300000000023e-05, 5.411099999999905e-05, 5.597299999999736e-05, 5.60549999999993e-05, 5.318099999999937e-05, 5.312500000000109e-05, 5.4971999999996884e-05, 5.2193999999998464e-05, 5.505600000000124e-05, 5.515299999999876e-05, 5.6041999999999204e-05, 5.691700000000008e-05, 5.6957999999999315e-05, 5.511100000000005e-05, 5.6972000000002354e-05, 5.3166000000000324e-05, 5.127800000000182e-05, 5.501400000000253e-05, 5.50280000000021e-05, 5.126400000000225e-05, 5.411099999999905e-05, 5.116700000000127e-05, 5.1223000000003016e-05, 5.50280000000021e-05, 5.219400000000193e-05, 5.6000000000000494e-05, 5.308299999999891e-05, 5.7028000000000634e-05, 5.604099999999973e-05, 5.12080000000005e-05, 5.3207999999999034e-05, 5.319400000000293e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.491" endtime="20201112 10:15:06.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.486" endtime="20201112 10:15:06.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.496" endtime="20201112 10:15:06.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.499" endtime="20201112 10:15:06.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.498" endtime="20201112 10:15:06.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.494" endtime="20201112 10:15:06.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.124" endtime="20201112 10:15:06.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.123" endtime="20201112 10:15:06.521"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.530" endtime="20201112 10:15:06.553"></status>
</kw>
<msg timestamp="20201112 10:15:06.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.528" endtime="20201112 10:15:06.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.555" endtime="20201112 10:15:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.557" endtime="20201112 10:15:06.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.526" endtime="20201112 10:15:06.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.523" endtime="20201112 10:15:06.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.566" endtime="20201112 10:15:06.853"></status>
</kw>
<msg timestamp="20201112 10:15:06.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026587792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026648611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.565" endtime="20201112 10:15:06.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026587792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026648611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.857" endtime="20201112 10:15:06.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.865" endtime="20201112 10:15:06.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.562" endtime="20201112 10:15:06.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.561" endtime="20201112 10:15:06.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.872" level="INFO">${RESULT} = [{'time': 0.026648611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.081900000000015e-05, 'source_diff': 6.081900000000015e-05}, {'time': 0.026709806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.869" endtime="20201112 10:15:06.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.886" level="INFO">${ACCURACY} = {'time': [0.026648611, 0.026709806, 0.026770792, 0.026831403, 0.026892375, 0.026953458, 0.027015125, 0.027075819, 0.027136736, 0.027197958, 0.027258889, 0.027320403, 0.027381083, 0.027442375, 0.027502...</msg>
<status status="PASS" starttime="20201112 10:15:06.873" endtime="20201112 10:15:06.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.890" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.889" endtime="20201112 10:15:06.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.893" level="INFO">VALUE: [6.081900000000015e-05, 5.318099999999937e-05, 5.411100000000252e-05, 5.41670000000008e-05, 5.123599999999964e-05, 5.223600000000064e-05, 5.127800000000182e-05, 5.4152000000001754e-05, 5.509700000000048e-05, 5.322200000000207e-05, 5.126400000000225e-05, 5.7042000000000204e-05, 5.029100000000092e-05, 5.311100000000152e-05, 5.411099999999905e-05, 5.412499999999862e-05, 5.225000000000021e-05, 5.412499999999862e-05, 5.319499999999894e-05, 5.124999999999921e-05, 5.5013999999999064e-05, 5.6041999999999204e-05, 5.606899999999887e-05, 5.220900000000098e-05, 5.124999999999921e-05, 5.609700000000148e-05, 5.509700000000048e-05, 5.219499999999794e-05, 5.6027999999999634e-05, 5.319499999999894e-05, 5.124999999999921e-05, 5.2207999999998034e-05, 5.124999999999921e-05, 5.508400000000038e-05, 5.606899999999887e-05, 5.319499999999894e-05, 5.127799999999835e-05, 5.31669999999998e-05, 5.412499999999862e-05, 5.130599999999749e-05, 5.508400000000038e-05, 5.124999999999921e-05, 5.130600000000096e-05, 5.411099999999905e-05, 5.222300000000055e-05, 5.126400000000225e-05, 5.030500000000049e-05, 5.3166000000000324e-05, 5.60410000000032e-05, 5.511100000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.891" endtime="20201112 10:15:06.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.887" endtime="20201112 10:15:06.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.896" endtime="20201112 10:15:06.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.900" endtime="20201112 10:15:06.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.898" endtime="20201112 10:15:06.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.895" endtime="20201112 10:15:06.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.522" endtime="20201112 10:15:06.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.521" endtime="20201112 10:15:06.921"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.929" endtime="20201112 10:15:06.951"></status>
</kw>
<msg timestamp="20201112 10:15:06.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.928" endtime="20201112 10:15:06.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.953" endtime="20201112 10:15:06.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.955" endtime="20201112 10:15:06.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.925" endtime="20201112 10:15:06.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.923" endtime="20201112 10:15:06.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.964" endtime="20201112 10:15:07.251"></status>
</kw>
<msg timestamp="20201112 10:15:07.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.963" endtime="20201112 10:15:07.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.255" endtime="20201112 10:15:07.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.263" endtime="20201112 10:15:07.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.960" endtime="20201112 10:15:07.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.958" endtime="20201112 10:15:07.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.270" level="INFO">${RESULT} = [{'time': 0.023265986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.030500000000049e-05, 'source_diff': 5.030500000000049e-05}, {'time': 0.023327444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.267" endtime="20201112 10:15:07.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.283" level="INFO">${ACCURACY} = {'time': [0.023265986, 0.023327444, 0.023388556, 0.023449431, 0.023510333, 0.023571764, 0.023632069, 0.023693333, 0.023754792, 0.023816, 0.023876375, 0.023937375, 0.023998681, 0.024059917, 0.024120875...</msg>
<status status="PASS" starttime="20201112 10:15:07.271" endtime="20201112 10:15:07.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.288" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.287" endtime="20201112 10:15:07.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.291" level="INFO">VALUE: [5.030500000000049e-05, 5.5957999999998315e-05, 5.413900000000166e-05, 5.609800000000095e-05, 5.127700000000235e-05, 5.611099999999758e-05, 5.404099999999773e-05, 5.118000000000136e-05, 5.122299999999955e-05, 5.6014000000000064e-05, 5.318099999999937e-05, 5.412499999999862e-05, 5.40280000000011e-05, 5.127800000000182e-05, 5.7014000000001064e-05, 5.126400000000225e-05, 5.4152000000001754e-05, 5.608399999999791e-05, 5.404200000000067e-05, 5.223600000000064e-05, 5.318099999999937e-05, 5.318099999999937e-05, 5.511100000000005e-05, 5.223700000000012e-05, 5.127799999999835e-05, 5.41670000000008e-05, 5.509700000000048e-05, 5.2207999999998034e-05, 5.3179999999999894e-05, 5.118099999999737e-05, 5.7013999999997594e-05, 5.6055999999998773e-05, 5.505600000000124e-05, 5.223700000000012e-05, 5.604099999999973e-05, 5.505600000000124e-05, 5.126399999999878e-05, 5.506900000000134e-05, 5.2221999999997604e-05, 5.030599999999996e-05, 5.41670000000008e-05, 5.413900000000166e-05, 5.131899999999759e-05, 5.3207999999999034e-05, 5.313900000000066e-05, 5.604200000000267e-05, 5.1236999999999117e-05, 5.7000000000001494e-05, 5.6000000000000494e-05, 5.6999999999998024e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.289" endtime="20201112 10:15:07.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.284" endtime="20201112 10:15:07.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.298" endtime="20201112 10:15:07.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.302" endtime="20201112 10:15:07.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.300" endtime="20201112 10:15:07.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.296" endtime="20201112 10:15:07.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.922" endtime="20201112 10:15:07.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.921" endtime="20201112 10:15:07.322"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.331" endtime="20201112 10:15:07.357"></status>
</kw>
<msg timestamp="20201112 10:15:07.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.330" endtime="20201112 10:15:07.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.359" endtime="20201112 10:15:07.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.361" endtime="20201112 10:15:07.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.327" endtime="20201112 10:15:07.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.325" endtime="20201112 10:15:07.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.370" endtime="20201112 10:15:07.658"></status>
</kw>
<msg timestamp="20201112 10:15:07.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.369" endtime="20201112 10:15:07.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.663" endtime="20201112 10:15:07.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.671" endtime="20201112 10:15:07.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.366" endtime="20201112 10:15:07.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.364" endtime="20201112 10:15:07.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.678" level="INFO">${RESULT} = [{'time': 0.023331889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.309700000000195e-05, 'source_diff': 5.309700000000195e-05}, {'time': 0.023393056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.674" endtime="20201112 10:15:07.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.691" level="INFO">${ACCURACY} = {'time': [0.023331889, 0.023393056, 0.023454347, 0.023515125, 0.023576208, 0.023637681, 0.023698264, 0.023759, 0.023820125, 0.023881597, 0.023942653, 0.024003292, 0.024064167, 0.024125208, 0.024186681...</msg>
<status status="PASS" starttime="20201112 10:15:07.679" endtime="20201112 10:15:07.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.696" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.695" endtime="20201112 10:15:07.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.698" level="INFO">VALUE: [5.309700000000195e-05, 5.412499999999862e-05, 5.7014000000001064e-05, 5.038900000000138e-05, 5.6930000000000175e-05, 5.307000000000228e-05, 5.319499999999894e-05, 5.2221999999997604e-05, 5.126400000000225e-05, 5.212500000000009e-05, 5.308400000000185e-05, 5.309799999999795e-05, 5.31669999999998e-05, 5.123599999999964e-05, 5.411200000000199e-05, 5.126399999999878e-05, 5.225000000000021e-05, 5.504200000000167e-05, 5.213899999999966e-05, 5.131900000000106e-05, 5.315300000000023e-05, 5.222200000000107e-05, 5.11530000000017e-05, 5.3166000000000324e-05, 5.3152000000000754e-05, 5.509700000000048e-05, 5.691700000000008e-05, 5.223600000000064e-05, 5.113900000000213e-05, 5.126399999999878e-05, 5.413899999999819e-05, 5.6027999999999634e-05, 5.127800000000182e-05, 5.49869999999994e-05, 5.411099999999905e-05, 5.508299999999744e-05, 5.508300000000091e-05, 5.6999999999998024e-05, 5.511100000000005e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.511100000000005e-05, 5.591700000000255e-05, 5.123599999999964e-05, 5.7041999999996734e-05, 5.2221999999997604e-05, 5.124999999999921e-05, 5.593100000000212e-05, 5.6014000000000064e-05, 5.406900000000034e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.697" endtime="20201112 10:15:07.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.692" endtime="20201112 10:15:07.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.702" endtime="20201112 10:15:07.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.705" endtime="20201112 10:15:07.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.704" endtime="20201112 10:15:07.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.700" endtime="20201112 10:15:07.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.323" endtime="20201112 10:15:07.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.323" endtime="20201112 10:15:07.726"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.735" endtime="20201112 10:15:07.754"></status>
</kw>
<msg timestamp="20201112 10:15:07.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.733" endtime="20201112 10:15:07.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.756" endtime="20201112 10:15:07.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.758" endtime="20201112 10:15:07.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.731" endtime="20201112 10:15:07.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.729" endtime="20201112 10:15:07.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.768" endtime="20201112 10:15:08.054"></status>
</kw>
<msg timestamp="20201112 10:15:08.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.766" endtime="20201112 10:15:08.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.059" endtime="20201112 10:15:08.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.067" endtime="20201112 10:15:08.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.763" endtime="20201112 10:15:08.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.762" endtime="20201112 10:15:08.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.074" level="INFO">${RESULT} = [{'time': 0.021597569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83879999999999e-05, 'source_diff': 4.83879999999999e-05}, {'time': 0.021658264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:08.071" endtime="20201112 10:15:08.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.088" level="INFO">${ACCURACY} = {'time': [0.021597569, 0.021658264, 0.021719486, 0.021780528, 0.021841097, 0.021902764, 0.021963389, 0.022023986, 0.022085333, 0.022146361, 0.022207028, 0.022268556, 0.022329625, 0.022390458, 0.022451...</msg>
<status status="PASS" starttime="20201112 10:15:08.075" endtime="20201112 10:15:08.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.092" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.091" endtime="20201112 10:15:08.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.095" level="INFO">VALUE: [4.83879999999999e-05, 5.412499999999862e-05, 5.415300000000123e-05, 5.222200000000107e-05, 5.405500000000077e-05, 5.126400000000225e-05, 5.6041999999999204e-05, 5.511100000000005e-05, 5.6971999999998885e-05, 5.6014000000000064e-05, 5.31669999999998e-05, 5.415299999999776e-05, 5.21669999999988e-05, 5.126399999999878e-05, 5.127800000000182e-05, 5.127800000000182e-05, 5.508300000000091e-05, 5.604099999999973e-05, 5.029200000000039e-05, 5.420900000000298e-05, 5.225000000000021e-05, 5.509700000000048e-05, 5.2221999999997604e-05, 5.222200000000107e-05, 5.2193999999998464e-05, 5.311100000000152e-05, 5.411099999999905e-05, 5.412499999999862e-05, 5.412499999999862e-05, 5.220900000000098e-05, 5.50549999999983e-05, 5.604200000000267e-05, 5.127799999999835e-05, 5.033299999999963e-05, 5.506900000000134e-05, 5.6971999999998885e-05, 5.509700000000048e-05, 5.508300000000091e-05, 5.513899999999919e-05, 5.6055999999998773e-05, 5.606899999999887e-05, 5.127800000000182e-05, 5.2179999999998894e-05, 5.515299999999876e-05, 5.124999999999921e-05, 5.6027999999999634e-05, 5.2235999999997174e-05, 5.7027999999997164e-05, 5.511100000000005e-05, 5.227799999999935e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.093" endtime="20201112 10:15:08.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.089" endtime="20201112 10:15:08.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.098" endtime="20201112 10:15:08.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.102" endtime="20201112 10:15:08.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.100" endtime="20201112 10:15:08.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.097" endtime="20201112 10:15:08.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.727" endtime="20201112 10:15:08.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.726" endtime="20201112 10:15:08.123"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.131" endtime="20201112 10:15:08.151"></status>
</kw>
<msg timestamp="20201112 10:15:08.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.130" endtime="20201112 10:15:08.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.153" endtime="20201112 10:15:08.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.155" endtime="20201112 10:15:08.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.127" endtime="20201112 10:15:08.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.125" endtime="20201112 10:15:08.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.164" endtime="20201112 10:15:08.451"></status>
</kw>
<msg timestamp="20201112 10:15:08.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.163" endtime="20201112 10:15:08.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.455" endtime="20201112 10:15:08.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.463" endtime="20201112 10:15:08.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.160" endtime="20201112 10:15:08.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.158" endtime="20201112 10:15:08.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.470" level="INFO">${RESULT} = [{'time': 0.021907722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.848599999999955e-05, 'source_diff': 6.848599999999955e-05}, {'time': 0.021969222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.467" endtime="20201112 10:15:08.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.483" level="INFO">${ACCURACY} = {'time': [0.021907722, 0.021969222, 0.022029833, 0.022091292, 0.022152333, 0.022213181, 0.022274389, 0.022334972, 0.022395722, 0.022457167, 0.02251775, 0.022579111, 0.022640222, 0.022701556, 0.0227624...</msg>
<status status="PASS" starttime="20201112 10:15:08.471" endtime="20201112 10:15:08.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.488" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.487" endtime="20201112 10:15:08.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.491" level="INFO">VALUE: [6.848599999999955e-05, 5.225000000000021e-05, 5.031900000000006e-05, 5.416699999999733e-05, 5.702700000000116e-05, 5.311199999999752e-05, 5.413899999999819e-05, 5.413900000000166e-05, 5.129099999999845e-05, 5.507000000000081e-05, 5.611100000000105e-05, 5.3179999999999894e-05, 5.2166000000002793e-05, 5.312500000000109e-05, 5.31669999999998e-05, 5.127700000000235e-05, 5.033299999999963e-05, 5.7028000000000634e-05, 5.223600000000064e-05, 5.411099999999905e-05, 5.318100000000284e-05, 5.415299999999776e-05, 5.6041999999999204e-05, 5.2207999999998034e-05, 5.418100000000037e-05, 5.223600000000064e-05, 5.127799999999835e-05, 5.31669999999998e-05, 5.2207999999998034e-05, 5.125000000000268e-05, 5.411099999999905e-05, 5.607000000000181e-05, 5.029200000000039e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.413899999999819e-05, 5.219499999999794e-05, 5.6027999999999634e-05, 5.511199999999952e-05, 5.6999999999998024e-05, 5.5986000000000924e-05, 5.215299999999923e-05, 5.315300000000023e-05, 5.219500000000141e-05, 5.6055999999998773e-05, 5.223600000000064e-05, 5.4151999999998285e-05, 5.508300000000091e-05, 5.222200000000107e-05, 5.509700000000048e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.489" endtime="20201112 10:15:08.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.484" endtime="20201112 10:15:08.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.494" endtime="20201112 10:15:08.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.498" endtime="20201112 10:15:08.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.496" endtime="20201112 10:15:08.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.493" endtime="20201112 10:15:08.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.124" endtime="20201112 10:15:08.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.123" endtime="20201112 10:15:08.519"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.528" endtime="20201112 10:15:08.548"></status>
</kw>
<msg timestamp="20201112 10:15:08.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.526" endtime="20201112 10:15:08.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.550" endtime="20201112 10:15:08.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.553" endtime="20201112 10:15:08.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.523" endtime="20201112 10:15:08.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.521" endtime="20201112 10:15:08.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.563" endtime="20201112 10:15:08.850"></status>
</kw>
<msg timestamp="20201112 10:15:08.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:08.561" endtime="20201112 10:15:08.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:08.854" endtime="20201112 10:15:08.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.862" endtime="20201112 10:15:08.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.558" endtime="20201112 10:15:08.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.556" endtime="20201112 10:15:08.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.869" level="INFO">${RESULT} = [{'time': 0.022798667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.891700000000208e-05, 'source_diff': 5.891700000000208e-05}, {'time': 0.022859653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.866" endtime="20201112 10:15:08.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.882" level="INFO">${ACCURACY} = {'time': [0.022798667, 0.022859653, 0.022920611, 0.022981333, 0.023042903, 0.023103861, 0.023164736, 0.023225236, 0.023286986, 0.023347792, 0.023408472, 0.023470125, 0.023530958, 0.023591681, 0.023652...</msg>
<status status="PASS" starttime="20201112 10:15:08.870" endtime="20201112 10:15:08.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.887" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.886" endtime="20201112 10:15:08.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.890" level="INFO">VALUE: [5.891700000000208e-05, 5.413900000000166e-05, 5.688900000000094e-05, 5.413899999999819e-05, 5.606999999999834e-05, 5.222200000000107e-05, 5.215299999999923e-05, 5.6000000000000494e-05, 5.41670000000008e-05, 5.4985999999999924e-05, 5.223600000000064e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.415300000000123e-05, 5.401299999999859e-05, 5.127799999999835e-05, 5.688900000000094e-05, 5.126299999999931e-05, 5.7028000000000634e-05, 5.213899999999966e-05, 5.501400000000253e-05, 5.127699999999888e-05, 5.7013999999997594e-05, 5.123599999999964e-05, 5.606900000000234e-05, 5.127699999999888e-05, 5.127800000000182e-05, 5.595900000000126e-05, 5.222200000000107e-05, 5.5916000000003074e-05, 5.129099999999845e-05, 5.118100000000084e-05, 5.509700000000048e-05, 5.031999999999953e-05, 5.4999999999999494e-05, 5.225000000000021e-05, 5.7014000000001064e-05, 5.40410000000012e-05, 5.60549999999993e-05, 5.6027999999999634e-05, 5.116600000000179e-05, 5.605500000000277e-05, 5.415300000000123e-05, 5.5957999999998315e-05, 5.415299999999776e-05, 5.604099999999973e-05, 5.493099999999765e-05, 5.129200000000139e-05, 5.03339999999991e-05, 5.5929999999999175e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.888" endtime="20201112 10:15:08.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.883" endtime="20201112 10:15:08.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.893" endtime="20201112 10:15:08.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.897" endtime="20201112 10:15:08.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.895" endtime="20201112 10:15:08.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.892" endtime="20201112 10:15:08.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.520" endtime="20201112 10:15:08.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.519" endtime="20201112 10:15:08.918"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.927" endtime="20201112 10:15:08.946"></status>
</kw>
<msg timestamp="20201112 10:15:08.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.925" endtime="20201112 10:15:08.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.947" endtime="20201112 10:15:08.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.950" endtime="20201112 10:15:08.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.922" endtime="20201112 10:15:08.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.920" endtime="20201112 10:15:08.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.961" endtime="20201112 10:15:09.249"></status>
</kw>
<msg timestamp="20201112 10:15:09.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.959" endtime="20201112 10:15:09.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.254" endtime="20201112 10:15:09.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.262" endtime="20201112 10:15:09.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.956" endtime="20201112 10:15:09.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.954" endtime="20201112 10:15:09.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.269" level="INFO">${RESULT} = [{'time': 0.020698333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.411099999999905e-05, 'source_diff': 5.411099999999905e-05}, {'time': 0.020759097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.265" endtime="20201112 10:15:09.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.282" level="INFO">${ACCURACY} = {'time': [0.020698333, 0.020759097, 0.020819875, 0.020880764, 0.020941611, 0.021003431, 0.021064389, 0.021124806, 0.021186611, 0.021247153, 0.021308583, 0.021369639, 0.021430222, 0.021491153, 0.021552...</msg>
<status status="PASS" starttime="20201112 10:15:09.270" endtime="20201112 10:15:09.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.287" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.286" endtime="20201112 10:15:09.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.289" level="INFO">VALUE: [5.411099999999905e-05, 5.608300000000191e-05, 5.4958000000000784e-05, 5.319499999999894e-05, 5.2193999999998464e-05, 5.31669999999998e-05, 5.6999999999998024e-05, 5.126399999999878e-05, 5.7014000000001064e-05, 5.025000000000168e-05, 5.4165999999997855e-05, 5.223600000000064e-05, 5.40549999999973e-05, 5.415299999999776e-05, 5.126400000000225e-05, 5.308399999999838e-05, 5.6957999999999315e-05, 5.322200000000207e-05, 5.6916000000000605e-05, 5.608300000000191e-05, 5.218099999999837e-05, 5.129200000000139e-05, 5.115299999999823e-05, 5.4166000000001324e-05, 5.6055999999998773e-05, 5.129100000000192e-05, 5.41670000000008e-05, 5.6902000000001035e-05, 5.512499999999962e-05, 5.4138000000002184e-05, 5.223600000000064e-05, 5.2221999999997604e-05, 5.3151999999997285e-05, 5.222200000000107e-05, 5.031999999999953e-05, 5.116700000000127e-05, 5.031999999999953e-05, 5.225000000000021e-05, 5.023599999999864e-05, 5.3179999999999894e-05, 5.124999999999921e-05, 5.691700000000008e-05, 5.03469999999992e-05, 5.413899999999819e-05, 5.4999999999999494e-05, 5.701299999999812e-05, 5.125000000000268e-05, 5.232000000000153e-05, 5.029100000000092e-05, 5.59870000000004e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.288" endtime="20201112 10:15:09.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.283" endtime="20201112 10:15:09.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.293" endtime="20201112 10:15:09.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.297" endtime="20201112 10:15:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.295" endtime="20201112 10:15:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.291" endtime="20201112 10:15:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.919" endtime="20201112 10:15:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.918" endtime="20201112 10:15:09.318"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.326" endtime="20201112 10:15:09.347"></status>
</kw>
<msg timestamp="20201112 10:15:09.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.325" endtime="20201112 10:15:09.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.349" endtime="20201112 10:15:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.351" endtime="20201112 10:15:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.322" endtime="20201112 10:15:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.320" endtime="20201112 10:15:09.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.361" endtime="20201112 10:15:09.647"></status>
</kw>
<msg timestamp="20201112 10:15:09.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.359" endtime="20201112 10:15:09.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.651" endtime="20201112 10:15:09.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.659" endtime="20201112 10:15:09.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.356" endtime="20201112 10:15:09.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.354" endtime="20201112 10:15:09.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.666" level="INFO">${RESULT} = [{'time': 0.022839278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.44999999999994e-05, 'source_diff': 4.44999999999994e-05}, {'time': 0.022900056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:09.663" endtime="20201112 10:15:09.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.680" level="INFO">${ACCURACY} = {'time': [0.022839278, 0.022900056, 0.022961236, 0.023022486, 0.023083597, 0.02314475, 0.023205444, 0.023266681, 0.02332775, 0.023388542, 0.023449806, 0.023510861, 0.023571917, 0.023632764, 0.02369393...</msg>
<status status="PASS" starttime="20201112 10:15:09.667" endtime="20201112 10:15:09.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.684" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.683" endtime="20201112 10:15:09.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.687" level="INFO">VALUE: [4.44999999999994e-05, 5.318099999999937e-05, 5.606899999999887e-05, 5.127800000000182e-05, 5.415300000000123e-05, 5.606899999999887e-05, 5.030499999999702e-05, 5.49869999999994e-05, 5.225000000000021e-05, 5.413899999999819e-05, 5.31669999999998e-05, 5.688900000000094e-05, 5.31669999999998e-05, 5.127800000000182e-05, 5.305600000000271e-05, 5.609699999999801e-05, 5.415300000000123e-05, 5.509799999999995e-05, 5.6055999999998773e-05, 5.4999999999999494e-05, 5.512499999999962e-05, 5.226399999999978e-05, 5.40280000000011e-05, 5.222200000000107e-05, 5.509799999999995e-05, 5.305499999999977e-05, 5.506900000000134e-05, 5.606899999999887e-05, 5.127699999999888e-05, 5.308400000000185e-05, 5.513899999999919e-05, 5.412500000000209e-05, 5.127800000000182e-05, 5.412500000000209e-05, 5.408400000000285e-05, 5.031900000000006e-05, 5.31669999999998e-05, 5.3179999999999894e-05, 5.605600000000224e-05, 5.509699999999701e-05, 5.3193999999999464e-05, 5.031999999999953e-05, 5.113899999999866e-05, 5.6985999999998455e-05, 5.413899999999819e-05, 5.2235999999997174e-05, 5.6027999999999634e-05, 5.507000000000081e-05, 5.3971999999999354e-05, 5.511199999999952e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.686" endtime="20201112 10:15:09.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.681" endtime="20201112 10:15:09.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.691" endtime="20201112 10:15:09.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.694" endtime="20201112 10:15:09.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.693" endtime="20201112 10:15:09.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.689" endtime="20201112 10:15:09.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.318" endtime="20201112 10:15:09.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.318" endtime="20201112 10:15:09.715"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.724" endtime="20201112 10:15:09.745"></status>
</kw>
<msg timestamp="20201112 10:15:09.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.722" endtime="20201112 10:15:09.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.747" endtime="20201112 10:15:09.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.749" endtime="20201112 10:15:09.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.720" endtime="20201112 10:15:09.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.718" endtime="20201112 10:15:09.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.758" endtime="20201112 10:15:10.044"></status>
</kw>
<msg timestamp="20201112 10:15:10.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.757" endtime="20201112 10:15:10.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.048" endtime="20201112 10:15:10.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.057" endtime="20201112 10:15:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.754" endtime="20201112 10:15:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.753" endtime="20201112 10:15:10.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.064" level="INFO">${RESULT} = [{'time': 0.022082069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0721999999999166e-05, 'source_diff': 6.0721999999999166e-05}, {'time': 0.022142458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:10.060" endtime="20201112 10:15:10.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.077" level="INFO">${ACCURACY} = {'time': [0.022082069, 0.022142458, 0.022203931, 0.022264472, 0.022325306, 0.0223865, 0.022447389, 0.022508444, 0.022569708, 0.022631278, 0.022691792, 0.022753153, 0.022813847, 0.022875389, 0.02293572...</msg>
<status status="PASS" starttime="20201112 10:15:10.065" endtime="20201112 10:15:10.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.082" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.081" endtime="20201112 10:15:10.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.084" level="INFO">VALUE: [6.0721999999999166e-05, 5.4166000000001324e-05, 5.6041999999999204e-05, 5.215299999999923e-05, 5.511199999999952e-05, 5.6957999999999315e-05, 5.404200000000067e-05, 5.5137999999999715e-05, 5.12080000000005e-05, 5.7014000000001064e-05, 5.4999999999999494e-05, 5.508400000000038e-05, 5.116600000000179e-05, 5.41670000000008e-05, 5.608299999999844e-05, 5.687500000000137e-05, 5.320900000000198e-05, 5.119400000000093e-05, 5.608300000000191e-05, 5.409799999999895e-05, 5.511100000000005e-05, 5.60549999999993e-05, 5.40280000000011e-05, 5.222200000000107e-05, 5.323600000000164e-05, 5.212500000000009e-05, 5.031999999999953e-05, 5.227699999999988e-05, 5.6930000000000175e-05, 5.606999999999834e-05, 5.127800000000182e-05, 5.212500000000009e-05, 5.51809999999979e-05, 5.023599999999864e-05, 5.126399999999878e-05, 5.515299999999876e-05, 5.308300000000238e-05, 5.509700000000048e-05, 5.507000000000081e-05, 5.11530000000017e-05, 5.6041999999999204e-05, 5.319499999999894e-05, 5.223699999999665e-05, 5.416699999999733e-05, 5.119400000000093e-05, 5.4999999999999494e-05, 5.130600000000096e-05, 5.415300000000123e-05, 5.11669999999978e-05, 5.604099999999973e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.083" endtime="20201112 10:15:10.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.078" endtime="20201112 10:15:10.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.088" endtime="20201112 10:15:10.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.092" endtime="20201112 10:15:10.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.090" endtime="20201112 10:15:10.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.086" endtime="20201112 10:15:10.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.716" endtime="20201112 10:15:10.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.716" endtime="20201112 10:15:10.113"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.121" endtime="20201112 10:15:10.141"></status>
</kw>
<msg timestamp="20201112 10:15:10.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.120" endtime="20201112 10:15:10.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.142" endtime="20201112 10:15:10.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.145" endtime="20201112 10:15:10.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.117" endtime="20201112 10:15:10.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.115" endtime="20201112 10:15:10.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.154" endtime="20201112 10:15:10.440"></status>
</kw>
<msg timestamp="20201112 10:15:10.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.152" endtime="20201112 10:15:10.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.445" endtime="20201112 10:15:10.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.453" endtime="20201112 10:15:10.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.149" endtime="20201112 10:15:10.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.148" endtime="20201112 10:15:10.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.460" level="INFO">${RESULT} = [{'time': 0.021537722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.413899999999819e-05, 'source_diff': 5.413899999999819e-05}, {'time': 0.021598514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.456" endtime="20201112 10:15:10.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.473" level="INFO">${ACCURACY} = {'time': [0.021537722, 0.021598514, 0.021659514, 0.021720458, 0.021782042, 0.021842569, 0.021904264, 0.021964806, 0.022025972, 0.022087417, 0.022148167, 0.022209403, 0.022269819, 0.022331528, 0.022391...</msg>
<status status="PASS" starttime="20201112 10:15:10.461" endtime="20201112 10:15:10.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.478" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.477" endtime="20201112 10:15:10.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.480" level="INFO">VALUE: [5.413899999999819e-05, 5.609699999999801e-05, 5.605600000000224e-05, 5.22080000000015e-05, 5.126400000000225e-05, 5.127699999999888e-05, 5.223600000000064e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.125000000000268e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.031900000000006e-05, 5.7028000000000634e-05, 5.030500000000049e-05, 5.511100000000005e-05, 5.129100000000192e-05, 5.415300000000123e-05, 5.608300000000191e-05, 5.3193999999999464e-05, 5.4999999999999494e-05, 5.223600000000064e-05, 5.3193999999999464e-05, 5.322299999999808e-05, 5.60549999999993e-05, 5.509699999999701e-05, 5.6055999999998773e-05, 5.40410000000012e-05, 5.415299999999776e-05, 5.511100000000005e-05, 5.127800000000182e-05, 5.315300000000023e-05, 5.323600000000164e-05, 5.127800000000182e-05, 5.319500000000241e-05, 5.031900000000006e-05, 5.4985999999999924e-05, 5.123599999999964e-05, 5.708300000000291e-05, 5.226399999999978e-05, 5.7013999999997594e-05, 5.412500000000209e-05, 5.606899999999887e-05, 5.320899999999851e-05, 5.6999999999998024e-05, 5.4027999999997633e-05, 5.127799999999835e-05, 5.606899999999887e-05, 5.506900000000134e-05, 5.130600000000096e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.479" endtime="20201112 10:15:10.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.474" endtime="20201112 10:15:10.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.484" endtime="20201112 10:15:10.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.487" endtime="20201112 10:15:10.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.486" endtime="20201112 10:15:10.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.482" endtime="20201112 10:15:10.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.113" endtime="20201112 10:15:10.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.113" endtime="20201112 10:15:10.508"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.517" endtime="20201112 10:15:10.539"></status>
</kw>
<msg timestamp="20201112 10:15:10.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.516" endtime="20201112 10:15:10.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.541" endtime="20201112 10:15:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.543" endtime="20201112 10:15:10.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.513" endtime="20201112 10:15:10.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.511" endtime="20201112 10:15:10.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.552" endtime="20201112 10:15:10.844"></status>
</kw>
<msg timestamp="20201112 10:15:10.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:10.551" endtime="20201112 10:15:10.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:10.849" endtime="20201112 10:15:10.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.857" endtime="20201112 10:15:10.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.548" endtime="20201112 10:15:10.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.546" endtime="20201112 10:15:10.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.863" level="INFO">${RESULT} = [{'time': 0.022764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.71669999999987e-05, 'source_diff': 9.71669999999987e-05}, {'time': 0.022855556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8....</msg>
<status status="PASS" starttime="20201112 10:15:10.860" endtime="20201112 10:15:10.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.877" level="INFO">${ACCURACY} = {'time': [0.022764, 0.022855556, 0.022946667, 0.023038694, 0.023130514, 0.023221333, 0.023312819, 0.023404639, 0.023496389, 0.023588417, 0.023679722, 0.023771208, 0.023862292, 0.023954, 0.024045403, 0...</msg>
<status status="PASS" starttime="20201112 10:15:10.864" endtime="20201112 10:15:10.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.881" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.880" endtime="20201112 10:15:10.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.884" level="INFO">VALUE: [9.71669999999987e-05, 8.56249999999989e-05, 8.476400000000106e-05, 8.756899999999915e-05, 8.475000000000149e-05, 8.094399999999946e-05, 8.365200000000003e-05, 8.380600000000224e-05, 8.187499999999862e-05, 8.755599999999905e-05, 8.475000000000149e-05, 8.661099999999686e-05, 8.568100000000065e-05, 8.661100000000033e-05, 8.476400000000106e-05, 8.562500000000237e-05, 8.379099999999973e-05, 8.659700000000076e-05, 8.094399999999946e-05, 8.755599999999905e-05, 8.100000000000121e-05, 8.577699999999869e-05, 8.176399999999806e-05, 8.47920000000002e-05, 8.369499999999822e-05, 8.666599999999913e-05, 8.458299999999919e-05, 8.572199999999988e-05, 8.661100000000033e-05, 8.568100000000065e-05, 8.187499999999862e-05, 8.38049999999993e-05, 8.758400000000166e-05, 8.180500000000077e-05, 8.476400000000106e-05, 8.46249999999979e-05, 8.755599999999905e-05, 8.66799999999987e-05, 8.569500000000022e-05, 8.181900000000034e-05, 8.17780000000011e-05, 8.475000000000149e-05, 8.46530000000005e-05, 8.473599999999845e-05, 8.655599999999805e-05, 8.19170000000008e-05, 8.565200000000203e-05, 8.27780000000021e-05, 8.468099999999965e-05, 8.09169999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.882" endtime="20201112 10:15:10.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.878" endtime="20201112 10:15:10.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.887" endtime="20201112 10:15:10.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.891" endtime="20201112 10:15:10.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.889" endtime="20201112 10:15:10.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.886" endtime="20201112 10:15:10.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.509" endtime="20201112 10:15:10.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.509" endtime="20201112 10:15:10.912"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.921" endtime="20201112 10:15:10.941"></status>
</kw>
<msg timestamp="20201112 10:15:10.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.919" endtime="20201112 10:15:10.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.942" endtime="20201112 10:15:10.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.945" endtime="20201112 10:15:10.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.916" endtime="20201112 10:15:10.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.914" endtime="20201112 10:15:10.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.954" endtime="20201112 10:15:11.241"></status>
</kw>
<msg timestamp="20201112 10:15:11.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021125181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.952" endtime="20201112 10:15:11.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021125181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.245" endtime="20201112 10:15:11.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.253" endtime="20201112 10:15:11.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.950" endtime="20201112 10:15:11.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.948" endtime="20201112 10:15:11.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.260" level="INFO">${RESULT} = [{'time': 0.021211875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.669400000000174e-05, 'source_diff': 8.669400000000174e-05}, {'time': 0.021303597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.257" endtime="20201112 10:15:11.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.274" level="INFO">${ACCURACY} = {'time': [0.021211875, 0.021303597, 0.021394889, 0.021486667, 0.021578458, 0.021669458, 0.021761181, 0.021852958, 0.021944486, 0.022035653, 0.022127958, 0.022219236, 0.022310708, 0.022402361, 0.022494...</msg>
<status status="PASS" starttime="20201112 10:15:11.261" endtime="20201112 10:15:11.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.278" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.277" endtime="20201112 10:15:11.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.281" level="INFO">VALUE: [8.669400000000174e-05, 8.459700000000223e-05, 8.380599999999877e-05, 8.668100000000165e-05, 8.566599999999813e-05, 8.474999999999802e-05, 8.37370000000004e-05, 8.761099999999786e-05, 8.375000000000049e-05, 8.284700000000048e-05, 8.188899999999819e-05, 8.388900000000019e-05, 8.466599999999713e-05, 8.66799999999987e-05, 8.573599999999945e-05, 8.38049999999993e-05, 8.276399999999906e-05, 8.761099999999786e-05, 8.474999999999802e-05, 8.188799999999871e-05, 8.376400000000006e-05, 8.188900000000165e-05, 8.765300000000004e-05, 8.665199999999956e-05, 8.669400000000174e-05, 8.281899999999787e-05, 8.186100000000252e-05, 8.380500000000277e-05, 8.377799999999963e-05, 8.284700000000048e-05, 8.37780000000031e-05, 8.570800000000031e-05, 8.663899999999947e-05, 8.47920000000002e-05, 8.570800000000031e-05, 8.09169999999998e-05, 8.668100000000165e-05, 8.27919999999982e-05, 8.477800000000063e-05, 8.283299999999744e-05, 8.190300000000122e-05, 8.265300000000197e-05, 8.190200000000175e-05, 8.473599999999845e-05, 8.475000000000149e-05, 8.093099999999936e-05, 8.176400000000153e-05, 8.763900000000047e-05, 8.572199999999988e-05, 8.38049999999993e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.279" endtime="20201112 10:15:11.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.275" endtime="20201112 10:15:11.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.284" endtime="20201112 10:15:11.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.288" endtime="20201112 10:15:11.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.286" endtime="20201112 10:15:11.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.283" endtime="20201112 10:15:11.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.913" endtime="20201112 10:15:11.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.912" endtime="20201112 10:15:11.309"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.318" endtime="20201112 10:15:11.337"></status>
</kw>
<msg timestamp="20201112 10:15:11.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.316" endtime="20201112 10:15:11.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.339" endtime="20201112 10:15:11.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.341" endtime="20201112 10:15:11.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.313" endtime="20201112 10:15:11.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.311" endtime="20201112 10:15:11.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.351" endtime="20201112 10:15:11.638"></status>
</kw>
<msg timestamp="20201112 10:15:11.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021125889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.349" endtime="20201112 10:15:11.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021125889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.642" endtime="20201112 10:15:11.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.650" endtime="20201112 10:15:11.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.347" endtime="20201112 10:15:11.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.345" endtime="20201112 10:15:11.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.657" level="INFO">${RESULT} = [{'time': 0.021125889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.956999999999715e-05, 'source_diff': 8.956999999999715e-05}, {'time': 0.021218069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.654" endtime="20201112 10:15:11.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.670" level="INFO">${ACCURACY} = {'time': [0.021125889, 0.021218069, 0.021309014, 0.021400778, 0.021492556, 0.021583708, 0.021675736, 0.021766639, 0.021858972, 0.021949847, 0.022041333, 0.022133167, 0.022224528, 0.022315931, 0.022407...</msg>
<status status="PASS" starttime="20201112 10:15:11.658" endtime="20201112 10:15:11.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.675" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.674" endtime="20201112 10:15:11.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.678" level="INFO">VALUE: [8.956999999999715e-05, 8.470799999999931e-05, 8.566700000000108e-05, 8.190299999999776e-05, 8.658400000000066e-05, 8.46660000000006e-05, 8.473600000000192e-05, 8.090300000000022e-05, 8.38049999999993e-05, 8.569400000000074e-05, 8.274999999999949e-05, 8.573599999999945e-05, 8.37919999999992e-05, 8.276399999999906e-05, 8.284799999999995e-05, 8.661100000000033e-05, 8.184699999999948e-05, 8.379099999999973e-05, 8.574999999999902e-05, 8.369400000000221e-05, 8.569400000000074e-05, 8.086100000000151e-05, 8.18329999999999e-05, 8.76250000000009e-05, 8.381899999999887e-05, 8.272299999999982e-05, 8.380500000000277e-05, 8.37919999999992e-05, 8.180599999999677e-05, 8.570800000000031e-05, 8.095799999999903e-05, 8.558300000000019e-05, 8.476400000000106e-05, 8.66249999999999e-05, 8.186099999999905e-05, 8.570800000000031e-05, 8.28330000000009e-05, 8.669499999999775e-05, 8.651399999999934e-05, 8.18329999999999e-05, 8.476400000000106e-05, 8.081999999999881e-05, 8.283400000000038e-05, 8.66249999999999e-05, 8.66249999999999e-05, 8.473599999999845e-05, 8.188900000000165e-05, 8.477800000000063e-05, 8.480599999999977e-05, 8.274999999999949e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.676" endtime="20201112 10:15:11.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.671" endtime="20201112 10:15:11.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.681" endtime="20201112 10:15:11.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.685" endtime="20201112 10:15:11.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.683" endtime="20201112 10:15:11.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.680" endtime="20201112 10:15:11.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.310" endtime="20201112 10:15:11.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.309" endtime="20201112 10:15:11.706"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.714" endtime="20201112 10:15:11.738"></status>
</kw>
<msg timestamp="20201112 10:15:11.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.713" endtime="20201112 10:15:11.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.739" endtime="20201112 10:15:11.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.742" endtime="20201112 10:15:11.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.710" endtime="20201112 10:15:11.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.708" endtime="20201112 10:15:11.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.751" endtime="20201112 10:15:12.038"></status>
</kw>
<msg timestamp="20201112 10:15:12.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021085056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.750" endtime="20201112 10:15:12.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021085056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.043" endtime="20201112 10:15:12.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.051" endtime="20201112 10:15:12.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.747" endtime="20201112 10:15:12.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.745" endtime="20201112 10:15:12.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.058" level="INFO">${RESULT} = [{'time': 0.021162139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708299999999862e-05, 'source_diff': 7.708299999999862e-05}, {'time': 0.02125325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:12.054" endtime="20201112 10:15:12.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.071" level="INFO">${ACCURACY} = {'time': [0.021162139, 0.02125325, 0.021344903, 0.02143725, 0.021528181, 0.021619847, 0.021711736, 0.021802944, 0.021894264, 0.021986472, 0.022078125, 0.022168917, 0.022261097, 0.022352431, 0.02244431...</msg>
<status status="PASS" starttime="20201112 10:15:12.059" endtime="20201112 10:15:12.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.076" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.075" endtime="20201112 10:15:12.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.078" level="INFO">VALUE: [7.708299999999862e-05, 8.570800000000031e-05, 8.187499999999862e-05, 8.768100000000265e-05, 8.47370000000014e-05, 8.273599999999992e-05, 8.288899999999919e-05, 8.281900000000134e-05, 8.476400000000106e-05, 8.38049999999993e-05, 8.573599999999945e-05, 8.570899999999979e-05, 8.668000000000217e-05, 8.476399999999759e-05, 8.379099999999973e-05, 8.377799999999963e-05, 8.181999999999981e-05, 8.468000000000017e-05, 8.37919999999992e-05, 8.090300000000022e-05, 8.187499999999862e-05, 8.473600000000192e-05, 8.28330000000009e-05, 8.27919999999982e-05, 8.090300000000022e-05, 8.569500000000022e-05, 8.570800000000031e-05, 8.568000000000117e-05, 8.187500000000208e-05, 8.282000000000081e-05, 8.476399999999759e-05, 8.18329999999999e-05, 8.373600000000092e-05, 8.186099999999905e-05, 8.283400000000038e-05, 8.66249999999999e-05, 8.18329999999999e-05, 8.377799999999963e-05, 8.573599999999945e-05, 8.28049999999983e-05, 8.284700000000048e-05, 8.377700000000016e-05, 8.29170000000018e-05, 8.474999999999802e-05, 8.761099999999786e-05, 8.74860000000012e-05, 8.569500000000022e-05, 8.286100000000005e-05, 8.476400000000106e-05, 8.291699999999833e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.077" endtime="20201112 10:15:12.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.072" endtime="20201112 10:15:12.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.082" endtime="20201112 10:15:12.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.085" endtime="20201112 10:15:12.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.084" endtime="20201112 10:15:12.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.080" endtime="20201112 10:15:12.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.707" endtime="20201112 10:15:12.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.706" endtime="20201112 10:15:12.106"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.115" endtime="20201112 10:15:12.136"></status>
</kw>
<msg timestamp="20201112 10:15:12.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.113" endtime="20201112 10:15:12.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.137" endtime="20201112 10:15:12.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.140" endtime="20201112 10:15:12.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.111" endtime="20201112 10:15:12.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.109" endtime="20201112 10:15:12.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.149" endtime="20201112 10:15:12.437"></status>
</kw>
<msg timestamp="20201112 10:15:12.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.147" endtime="20201112 10:15:12.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.441" endtime="20201112 10:15:12.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.450" endtime="20201112 10:15:12.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.145" endtime="20201112 10:15:12.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.143" endtime="20201112 10:15:12.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.457" level="INFO">${RESULT} = [{'time': 0.022539986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.850000000000259e-05, 'source_diff': 6.850000000000259e-05}, {'time': 0.022631972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.453" endtime="20201112 10:15:12.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.515" level="INFO">${ACCURACY} = {'time': [0.022539986, 0.022631972, 0.022723667, 0.022815292, 0.022906222, 0.022998042, 0.02308925, 0.023180889, 0.023272542, 0.023364306, 0.023455986, 0.023547, 0.023638931, 0.023730431, 0.023822056,...</msg>
<status status="PASS" starttime="20201112 10:15:12.458" endtime="20201112 10:15:12.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.520" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.519" endtime="20201112 10:15:12.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.522" level="INFO">VALUE: [6.850000000000259e-05, 8.761100000000133e-05, 8.37919999999992e-05, 8.283400000000038e-05, 8.087500000000108e-05, 8.184799999999895e-05, 8.380599999999877e-05, 8.570800000000031e-05, 8.563900000000194e-05, 8.480599999999977e-05, 8.577800000000163e-05, 8.377799999999963e-05, 8.373699999999693e-05, 8.283400000000038e-05, 8.475000000000149e-05, 8.281899999999787e-05, 8.469499999999922e-05, 8.476400000000106e-05, 8.46530000000005e-05, 8.476400000000106e-05, 8.563900000000194e-05, 8.380600000000224e-05, 8.187500000000208e-05, 8.188899999999819e-05, 8.181999999999981e-05, 8.090300000000022e-05, 8.286100000000005e-05, 8.66660000000026e-05, 8.280599999999777e-05, 8.38049999999993e-05, 8.284700000000048e-05, 8.563899999999847e-05, 8.37919999999992e-05, 8.473599999999845e-05, 8.766700000000308e-05, 8.76250000000009e-05, 8.188899999999819e-05, 8.761099999999786e-05, 8.180500000000077e-05, 8.474999999999802e-05, 8.093100000000283e-05, 8.380599999999877e-05, 8.670900000000079e-05, 8.38049999999993e-05, 8.577800000000163e-05, 8.190200000000175e-05, 8.477800000000063e-05, 8.17780000000011e-05, 8.669499999999775e-05, 8.28330000000009e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.521" endtime="20201112 10:15:12.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.516" endtime="20201112 10:15:12.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.526" endtime="20201112 10:15:12.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.530" endtime="20201112 10:15:12.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.528" endtime="20201112 10:15:12.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.524" endtime="20201112 10:15:12.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.107" endtime="20201112 10:15:12.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.107" endtime="20201112 10:15:12.551"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.560" endtime="20201112 10:15:12.584"></status>
</kw>
<msg timestamp="20201112 10:15:12.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.559" endtime="20201112 10:15:12.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.585" endtime="20201112 10:15:12.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.588" endtime="20201112 10:15:12.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.555" endtime="20201112 10:15:12.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.553" endtime="20201112 10:15:12.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.597" endtime="20201112 10:15:12.882"></status>
</kw>
<msg timestamp="20201112 10:15:12.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:12.595" endtime="20201112 10:15:12.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025133292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:12.886" endtime="20201112 10:15:12.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.894" endtime="20201112 10:15:12.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.593" endtime="20201112 10:15:12.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.591" endtime="20201112 10:15:12.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.901" level="INFO">${RESULT} = [{'time': 0.025133292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.379200000000267e-05, 'source_diff': 8.379200000000267e-05}, {'time': 0.025224319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.898" endtime="20201112 10:15:12.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.915" level="INFO">${ACCURACY} = {'time': [0.025133292, 0.025224319, 0.025315972, 0.025407306, 0.025499292, 0.025590931, 0.025682667, 0.025774222, 0.025865486, 0.025956833, 0.026048625, 0.026140514, 0.026232167, 0.026323319, 0.026414...</msg>
<status status="PASS" starttime="20201112 10:15:12.902" endtime="20201112 10:15:12.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.919" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.918" endtime="20201112 10:15:12.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.922" level="INFO">VALUE: [8.379200000000267e-05, 8.572199999999988e-05, 8.665299999999904e-05, 8.477800000000063e-05, 8.284799999999995e-05, 8.566700000000108e-05, 8.768099999999918e-05, 8.763900000000047e-05, 8.574999999999902e-05, 8.188899999999819e-05, 8.284700000000048e-05, 8.661100000000033e-05, 8.661100000000033e-05, 8.188800000000218e-05, 8.479100000000073e-05, 8.290199999999928e-05, 8.377799999999963e-05, 8.380600000000224e-05, 8.382000000000181e-05, 8.188899999999819e-05, 8.66799999999987e-05, 8.475000000000149e-05, 8.765300000000004e-05, 8.663900000000294e-05, 8.284700000000048e-05, 8.283400000000038e-05, 8.474999999999802e-05, 8.659700000000076e-05, 8.568100000000065e-05, 8.181999999999981e-05, 8.095900000000197e-05, 8.084699999999848e-05, 8.48050000000003e-05, 8.369500000000168e-05, 8.472199999999888e-05, 8.3846999999998e-05, 8.274999999999949e-05, 8.287499999999962e-05, 8.095900000000197e-05, 8.575000000000249e-05, 8.476400000000106e-05, 8.56660000000016e-05, 8.181900000000034e-05, 8.472199999999888e-05, 8.376400000000006e-05, 8.287499999999962e-05, 8.190300000000122e-05, 8.763900000000047e-05, 8.66799999999987e-05, 8.670800000000131e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.920" endtime="20201112 10:15:12.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.915" endtime="20201112 10:15:12.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.925" endtime="20201112 10:15:12.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.929" endtime="20201112 10:15:12.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.927" endtime="20201112 10:15:12.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.923" endtime="20201112 10:15:12.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.552" endtime="20201112 10:15:12.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.551" endtime="20201112 10:15:12.950"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.959" endtime="20201112 10:15:12.985"></status>
</kw>
<msg timestamp="20201112 10:15:12.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.957" endtime="20201112 10:15:12.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.987" endtime="20201112 10:15:12.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.989" endtime="20201112 10:15:12.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.954" endtime="20201112 10:15:12.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.952" endtime="20201112 10:15:12.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.999" endtime="20201112 10:15:13.284"></status>
</kw>
<msg timestamp="20201112 10:15:13.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.997" endtime="20201112 10:15:13.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.288" endtime="20201112 10:15:13.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.297" endtime="20201112 10:15:13.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.994" endtime="20201112 10:15:13.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.993" endtime="20201112 10:15:13.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.303" level="INFO">${RESULT} = [{'time': 0.023215944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.424999999999711e-05, 'source_diff': 9.424999999999711e-05}, {'time': 0.023307431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.300" endtime="20201112 10:15:13.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.317" level="INFO">${ACCURACY} = {'time': [0.023215944, 0.023307431, 0.023399181, 0.023490431, 0.023582417, 0.023673792, 0.023764778, 0.023856153, 0.023947819, 0.024039722, 0.024130847, 0.024222792, 0.024314264, 0.024405653, 0.024497...</msg>
<status status="PASS" starttime="20201112 10:15:13.304" endtime="20201112 10:15:13.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.321" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.320" endtime="20201112 10:15:13.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.324" level="INFO">VALUE: [9.424999999999711e-05, 8.56530000000015e-05, 8.37780000000031e-05, 8.086199999999752e-05, 8.372300000000082e-05, 8.661100000000033e-05, 8.184699999999948e-05, 8.190300000000122e-05, 8.270799999999731e-05, 8.565299999999804e-05, 8.095799999999903e-05, 8.750000000000077e-05, 8.377799999999963e-05, 8.274999999999949e-05, 8.668100000000165e-05, 8.755599999999905e-05, 8.379099999999973e-05, 8.09450000000024e-05, 8.48050000000003e-05, 8.179200000000067e-05, 8.376400000000006e-05, 8.570800000000031e-05, 8.46110000000018e-05, 8.186099999999905e-05, 8.188900000000165e-05, 8.46530000000005e-05, 8.668000000000217e-05, 8.191600000000132e-05, 8.763900000000047e-05, 8.18329999999999e-05, 8.372200000000135e-05, 8.563899999999847e-05, 8.756899999999915e-05, 8.179200000000067e-05, 8.279099999999873e-05, 8.276400000000253e-05, 8.090300000000022e-05, 8.761099999999786e-05, 8.187500000000208e-05, 8.7638999999997e-05, 8.176400000000153e-05, 8.66669999999986e-05, 8.663899999999947e-05, 8.658400000000066e-05, 8.380500000000277e-05, 8.750000000000077e-05, 8.474999999999802e-05, 8.570800000000031e-05, 8.282000000000081e-05, 8.195800000000003e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.322" endtime="20201112 10:15:13.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.318" endtime="20201112 10:15:13.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.328" endtime="20201112 10:15:13.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.331" endtime="20201112 10:15:13.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.329" endtime="20201112 10:15:13.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.326" endtime="20201112 10:15:13.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.950" endtime="20201112 10:15:13.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.950" endtime="20201112 10:15:13.352"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.361" endtime="20201112 10:15:13.382"></status>
</kw>
<msg timestamp="20201112 10:15:13.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.360" endtime="20201112 10:15:13.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.384" endtime="20201112 10:15:13.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.386" endtime="20201112 10:15:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.357" endtime="20201112 10:15:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.355" endtime="20201112 10:15:13.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.396" endtime="20201112 10:15:13.684"></status>
</kw>
<msg timestamp="20201112 10:15:13.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.394" endtime="20201112 10:15:13.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.688" endtime="20201112 10:15:13.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.697" endtime="20201112 10:15:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.391" endtime="20201112 10:15:13.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.390" endtime="20201112 10:15:13.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.704" level="INFO">${RESULT} = [{'time': 0.022732611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945800000000059e-05, 'source_diff': 8.945800000000059e-05}, {'time': 0.022824014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.700" endtime="20201112 10:15:13.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.718" level="INFO">${ACCURACY} = {'time': [0.022732611, 0.022824014, 0.022915167, 0.023006611, 0.023098889, 0.023189944, 0.023281639, 0.023372903, 0.023464472, 0.023556028, 0.023647653, 0.023739167, 0.023830833, 0.023922083, 0.024013...</msg>
<status status="PASS" starttime="20201112 10:15:13.705" endtime="20201112 10:15:13.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.722" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.721" endtime="20201112 10:15:13.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.725" level="INFO">VALUE: [8.945800000000059e-05, 8.09169999999998e-05, 8.190300000000122e-05, 8.573599999999945e-05, 8.274999999999949e-05, 8.377700000000016e-05, 8.282000000000081e-05, 8.37919999999992e-05, 8.376400000000006e-05, 8.372200000000135e-05, 8.476400000000106e-05, 8.277799999999863e-05, 8.761099999999786e-05, 8.094399999999946e-05, 8.655600000000152e-05, 8.281899999999787e-05, 8.755499999999958e-05, 8.090300000000022e-05, 8.369499999999822e-05, 8.38049999999993e-05, 8.379099999999973e-05, 8.562500000000237e-05, 8.181999999999981e-05, 8.373600000000092e-05, 8.37370000000004e-05, 8.184699999999948e-05, 8.094399999999946e-05, 8.081999999999881e-05, 8.288899999999919e-05, 8.09169999999998e-05, 8.751400000000034e-05, 8.572199999999988e-05, 8.083399999999838e-05, 8.279099999999873e-05, 8.563899999999847e-05, 8.376400000000006e-05, 8.470799999999931e-05, 8.188899999999819e-05, 8.377799999999963e-05, 8.270900000000025e-05, 8.477800000000063e-05, 8.56669999999976e-05, 8.18329999999999e-05, 8.74860000000012e-05, 8.38049999999993e-05, 8.652699999999944e-05, 8.76250000000009e-05, 8.473599999999845e-05, 8.08329999999989e-05, 8.758300000000219e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.723" endtime="20201112 10:15:13.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.718" endtime="20201112 10:15:13.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.729" endtime="20201112 10:15:13.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.732" endtime="20201112 10:15:13.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.731" endtime="20201112 10:15:13.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.727" endtime="20201112 10:15:13.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.353" endtime="20201112 10:15:13.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.352" endtime="20201112 10:15:13.753"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.763" endtime="20201112 10:15:13.784"></status>
</kw>
<msg timestamp="20201112 10:15:13.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.761" endtime="20201112 10:15:13.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.785" endtime="20201112 10:15:13.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.788" endtime="20201112 10:15:13.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.758" endtime="20201112 10:15:13.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.756" endtime="20201112 10:15:13.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.798" endtime="20201112 10:15:14.107"></status>
</kw>
<msg timestamp="20201112 10:15:14.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.796" endtime="20201112 10:15:14.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.112" endtime="20201112 10:15:14.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.120" endtime="20201112 10:15:14.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.793" endtime="20201112 10:15:14.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.791" endtime="20201112 10:15:14.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.127" level="INFO">${RESULT} = [{'time': 0.023378319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422200000000226e-05, 'source_diff': 7.422200000000226e-05}, {'time': 0.023469194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.124" endtime="20201112 10:15:14.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.142" level="INFO">${ACCURACY} = {'time': [0.023378319, 0.023469194, 0.023560667, 0.023652792, 0.023743583, 0.023835944, 0.023927653, 0.024018681, 0.024110181, 0.024201528, 0.024293792, 0.024384861, 0.024475986, 0.024568097, 0.024659...</msg>
<status status="PASS" starttime="20201112 10:15:14.128" endtime="20201112 10:15:14.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.147" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.146" endtime="20201112 10:15:14.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.150" level="INFO">VALUE: [7.422200000000226e-05, 8.286100000000005e-05, 8.274999999999949e-05, 8.283400000000038e-05, 8.381899999999887e-05, 8.475000000000149e-05, 8.658400000000066e-05, 8.572299999999936e-05, 8.276400000000253e-05, 8.283400000000038e-05, 8.187500000000208e-05, 8.372200000000135e-05, 8.086100000000151e-05, 8.284700000000048e-05, 8.286100000000005e-05, 8.477800000000063e-05, 8.572199999999988e-05, 8.080499999999977e-05, 8.7638999999997e-05, 8.186100000000252e-05, 8.468000000000017e-05, 8.758299999999872e-05, 8.086099999999805e-05, 8.659700000000076e-05, 8.469399999999974e-05, 8.177799999999763e-05, 8.66530000000025e-05, 8.284700000000048e-05, 8.470799999999931e-05, 8.665299999999904e-05, 8.18329999999999e-05, 8.665299999999904e-05, 8.563899999999847e-05, 8.474999999999802e-05, 8.755599999999905e-05, 8.093000000000336e-05, 8.287499999999962e-05, 8.559699999999976e-05, 8.476399999999759e-05, 8.556999999999662e-05, 8.369399999999874e-05, 8.469500000000268e-05, 8.563899999999847e-05, 8.388900000000019e-05, 8.093100000000283e-05, 8.46660000000006e-05, 8.474999999999802e-05, 8.476400000000106e-05, 8.470900000000225e-05, 8.668000000000217e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.148" endtime="20201112 10:15:14.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.143" endtime="20201112 10:15:14.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.153" endtime="20201112 10:15:14.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.157" endtime="20201112 10:15:14.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.155" endtime="20201112 10:15:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.152" endtime="20201112 10:15:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.754" endtime="20201112 10:15:14.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.754" endtime="20201112 10:15:14.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.355" endtime="20201112 10:15:14.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.187" endtime="20201112 10:15:14.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.186" endtime="20201112 10:15:14.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.184" endtime="20201112 10:15:14.208"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:34.275" endtime="20201112 10:15:14.209" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:52.693" endtime="20201112 10:15:14.216"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.277" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:15:14.286" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:15:15.432" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:15:14.276" endtime="20201112 10:15:15.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.439" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:15:15.436" endtime="20201112 10:15:15.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.275" endtime="20201112 10:15:15.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.445" endtime="20201112 10:15:15.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.442" endtime="20201112 10:15:15.713"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.726" endtime="20201112 10:15:15.749"></status>
</kw>
<msg timestamp="20201112 10:15:15.750" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd3...</msg>
<status status="PASS" starttime="20201112 10:15:15.724" endtime="20201112 10:15:15.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd3...</msg>
<status status="PASS" starttime="20201112 10:15:15.751" endtime="20201112 10:15:15.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.756" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:15.753" endtime="20201112 10:15:15.756"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:15.722" endtime="20201112 10:15:15.757"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:15.719" endtime="20201112 10:15:15.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.718" endtime="20201112 10:15:15.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:15.763" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:15.762" endtime="20201112 10:15:15.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.758" endtime="20201112 10:15:15.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.717" endtime="20201112 10:15:15.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.717" endtime="20201112 10:15:15.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.765" endtime="20201112 10:15:15.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.715" endtime="20201112 10:15:15.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.768" endtime="20201112 10:15:15.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.714" endtime="20201112 10:15:15.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.273" endtime="20201112 10:15:15.770"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.777" endtime="20201112 10:15:15.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.776" endtime="20201112 10:15:15.798"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.811" endtime="20201112 10:15:15.835"></status>
</kw>
<msg timestamp="20201112 10:15:15.835" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.810" endtime="20201112 10:15:15.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.836" endtime="20201112 10:15:15.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:15.839" endtime="20201112 10:15:15.841"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:15.807" endtime="20201112 10:15:15.842"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:15.804" endtime="20201112 10:15:15.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.803" endtime="20201112 10:15:15.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:15.847" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:15.846" endtime="20201112 10:15:15.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.844" endtime="20201112 10:15:15.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.802" endtime="20201112 10:15:15.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.801" endtime="20201112 10:15:15.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.849" endtime="20201112 10:15:15.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.800" endtime="20201112 10:15:15.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.798" endtime="20201112 10:15:15.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.775" endtime="20201112 10:15:15.851"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:15.856" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.866" endtime="20201112 10:15:17.985"></status>
</kw>
<msg timestamp="20201112 10:15:17.987" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 488922, 'wakeups': [498931, 508941, 518951, 528930, 538940, 548950, 55...</msg>
<status status="PASS" starttime="20201112 10:15:15.864" endtime="20201112 10:15:17.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 488922, 'wakeups': [498931, 508941, 518951, 528930, 538940, 548950, 55...</msg>
<status status="PASS" starttime="20201112 10:15:17.989" endtime="20201112 10:15:18.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.005" endtime="20201112 10:15:18.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.861" endtime="20201112 10:15:18.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.858" endtime="20201112 10:15:18.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.012" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [498931, 508941, 518951, 528930, 538940, 548950, 558929, 568939, 578948, 588928, 598937, 608947, 618927, 628936, 638946, 648925, 658935, 668945, 678924, 688934, 698944, 7...</msg>
<status status="PASS" starttime="20201112 10:15:18.010" endtime="20201112 10:15:18.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.017" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:18.016" endtime="20201112 10:15:18.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.019" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:18.018" endtime="20201112 10:15:18.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.013" endtime="20201112 10:15:18.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.024" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:18.023" endtime="20201112 10:15:18.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.027" level="INFO">VALUE: 488922</msg>
<status status="PASS" starttime="20201112 10:15:18.026" endtime="20201112 10:15:18.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.021" endtime="20201112 10:15:18.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.032" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:18.031" endtime="20201112 10:15:18.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.034" level="INFO">VALUE: [498931, 508941, 518951, 528930, 538940, 548950, 558929, 568939, 578948, 588928, 598937, 608947, 618927, 628936, 638946, 648925, 658935, 668945, 678924, 688934, 698944, 708923, 718933, 728942, 738952, 748931, 758941, 768951, 778930, 788940, 798950, 808929, 818939, 828948, 838928, 848937, 858947, 868927, 878936, 888946, 898925, 908935, 918945, 928924, 938934, 948944, 958923, 968933, 978942, 988952, 998931, 1008941, 1018951, 1028930, 1038940, 1048950, 1058929, 1068939, 1078948, 1088928, 1098937, 1108947, 1118927, 1128936, 1138946, 1148925, 1158935, 1168945, 1178924, 1188934, 1198944, 1208923, 1218933, 1228942, 1238952, 1248931, 1258941, 1268951, 1278930, 1288940, 1298950, 1308929, 1318939, 1328948, 1338928, 1348937, 1358947, 1368927, 1378936, 1388946, 1398925, 1408935, 1418945, 1428924, 1438934, 1448944, 1458923, 1468933, 1478942, 1488952]</msg>
<status status="PASS" starttime="20201112 10:15:18.033" endtime="20201112 10:15:18.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.028" endtime="20201112 10:15:18.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.042" endtime="20201112 10:15:18.339"></status>
</kw>
<msg timestamp="20201112 10:15:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091852083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.040" endtime="20201112 10:15:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091852083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.343" endtime="20201112 10:15:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.351" endtime="20201112 10:15:18.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.037" endtime="20201112 10:15:18.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.036" endtime="20201112 10:15:18.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.379" level="INFO">${RESULT} = {'time': [0.081850542, 0.091852083, 0.101861486, 0.111870972, 0.121849889, 0.131859375, 0.141868778, 0.151847736, 0.161857139, 0.171866625, 0.181845556, 0.191854958, 0.201864458, 0.211843361, 0.221852...</msg>
<status status="PASS" starttime="20201112 10:15:18.355" endtime="20201112 10:15:18.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.384" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:18.383" endtime="20201112 10:15:18.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.387" level="INFO">VALUE: 0.081850542</msg>
<status status="PASS" starttime="20201112 10:15:18.386" endtime="20201112 10:15:18.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.380" endtime="20201112 10:15:18.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.392" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:18.391" endtime="20201112 10:15:18.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.394" level="INFO">VALUE: [0.091852083, 0.101861486, 0.111870972, 0.121849889, 0.131859375, 0.141868778, 0.151847736, 0.161857139, 0.171866625, 0.181845556, 0.191854958, 0.201864458, 0.211843361, 0.221852819, 0.23186225, 0.241841208, 0.251850611, 0.261860056, 0.271839028, 0.281848431, 0.291857903, 0.301836764, 0.311846333, 0.321855736, 0.331865181, 0.341844069, 0.351853569, 0.361863014, 0.371841958, 0.381851403, 0.391860847, 0.401839736, 0.411849194, 0.421858639, 0.431837597, 0.441847, 0.451856458, 0.461835417, 0.471844819, 0.481854292, 0.491833222, 0.501842722, 0.511852083, 0.521831014, 0.531840444, 0.541849917, 0.551828903, 0.561838333, 0.571847736, 0.581857208, 0.591836153, 0.601845597, 0.611855056, 0.621833972, 0.631843431, 0.641852861, 0.651831847, 0.66184125, 0.671850667, 0.681829681, 0.691839069, 0.701848472, 0.711827431, 0.721836847, 0.731846403, 0.741825278, 0.751834722, 0.761844139, 0.771823042, 0.781832597, 0.791842, 0.801820944, 0.811830375, 0.821839861, 0.831849236, 0.841828167, 0.851837583, 0.861847083, 0.871825986, 0.881835375, 0.891844889, 0.901823833, 0.911833264, 0.921842681, 0.931821583, 0.941831042, 0.9518405, 0.961819431, 0.971828917, 0.981838361, 0.991817319, 1.001826708, 1.011836167, 1.021815125, 1.031824514, 1.041834014, 1.051812889, 1.061822375, 1.071831792, 1.081841264] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:18.393" endtime="20201112 10:15:18.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.388" endtime="20201112 10:15:18.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.398" endtime="20201112 10:15:18.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.401" endtime="20201112 10:15:18.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.400" endtime="20201112 10:15:18.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.396" endtime="20201112 10:15:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.857" endtime="20201112 10:15:18.422"></status>
</kw>
<msg timestamp="20201112 10:15:18.422" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.431" endtime="20201112 10:15:20.552"></status>
</kw>
<msg timestamp="20201112 10:15:20.553" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3051513, 'wakeups': [3061553, 3071533, 3081542, 3091522, 3101531, 3111...</msg>
<status status="PASS" starttime="20201112 10:15:18.429" endtime="20201112 10:15:20.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.559" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3051513, 'wakeups': [3061553, 3071533, 3081542, 3091522, 3101531, 3111...</msg>
<status status="PASS" starttime="20201112 10:15:20.555" endtime="20201112 10:15:20.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.562" endtime="20201112 10:15:20.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.427" endtime="20201112 10:15:20.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.425" endtime="20201112 10:15:20.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.567" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [3061553, 3071533, 3081542, 3091522, 3101531, 3111541, 3121520, 3131530, 3141540, 3151519, 3161529, 3171539, 3181518, 3191528, 3201538, 3211517, 3221527, 3231536, 3241516...</msg>
<status status="PASS" starttime="20201112 10:15:20.565" endtime="20201112 10:15:20.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.573" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:20.572" endtime="20201112 10:15:20.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.575" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:20.574" endtime="20201112 10:15:20.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.568" endtime="20201112 10:15:20.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.581" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:20.580" endtime="20201112 10:15:20.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.583" level="INFO">VALUE: 3051513</msg>
<status status="PASS" starttime="20201112 10:15:20.582" endtime="20201112 10:15:20.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.577" endtime="20201112 10:15:20.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.588" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:20.587" endtime="20201112 10:15:20.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.590" level="INFO">VALUE: [3061553, 3071533, 3081542, 3091522, 3101531, 3111541, 3121520, 3131530, 3141540, 3151519, 3161529, 3171539, 3181518, 3191528, 3201538, 3211517, 3221527, 3231536, 3241516, 3251525, 3261535, 3271514, 3281524, 3291534, 3301513, 3311523, 3321533, 3331542, 3341522, 3351531, 3361541, 3371520, 3381530, 3391540, 3401519, 3411529, 3421539, 3431518, 3441528, 3451538, 3461517, 3471527, 3481536, 3491516, 3501525, 3511535, 3521514, 3531524, 3541534, 3551513, 3561523, 3571533, 3581542, 3591522, 3601531, 3611541, 3621520, 3631530, 3641540, 3651519, 3661529, 3671539, 3681518, 3691528, 3701538, 3711517, 3721527, 3731536, 3741516, 3751525, 3761535, 3771514, 3781524, 3791534, 3801513, 3811523, 3821533, 3831542, 3841522, 3851531, 3861541, 3871520, 3881530, 3891540, 3901519, 3911529, 3921539, 3931518, 3941528, 3951538, 3961517, 3971527, 3981536, 3991516, 4001525, 4011535, 4021514, 4031524, 4041534, 4051513]</msg>
<status status="PASS" starttime="20201112 10:15:20.589" endtime="20201112 10:15:20.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.584" endtime="20201112 10:15:20.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.598" endtime="20201112 10:15:20.889"></status>
</kw>
<msg timestamp="20201112 10:15:20.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.596" endtime="20201112 10:15:20.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.893" endtime="20201112 10:15:20.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.901" endtime="20201112 10:15:20.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.593" endtime="20201112 10:15:20.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.592" endtime="20201112 10:15:20.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.929" level="INFO">${RESULT} = {'time': [0.020221514, 0.030238083, 0.040217, 0.050226375, 0.060205417, 0.070214806, 0.080224278, 0.090203153, 0.100212653, 0.110222097, 0.120201, 0.130210458, 0.140219944, 0.150198847, 0.160208292, 0...</msg>
<status status="PASS" starttime="20201112 10:15:20.904" endtime="20201112 10:15:20.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.934" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:20.933" endtime="20201112 10:15:20.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.936" level="INFO">VALUE: 0.020221514</msg>
<status status="PASS" starttime="20201112 10:15:20.935" endtime="20201112 10:15:20.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.930" endtime="20201112 10:15:20.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.942" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:20.941" endtime="20201112 10:15:20.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.944" level="INFO">VALUE: [0.030238083, 0.040217, 0.050226375, 0.060205417, 0.070214806, 0.080224278, 0.090203153, 0.100212653, 0.110222097, 0.120201, 0.130210458, 0.140219944, 0.150198847, 0.160208292, 0.170217694, 0.180196667, 0.190206125, 0.200215597, 0.210194486, 0.220203944, 0.230213403, 0.240192319, 0.250201792, 0.260211194, 0.270190194, 0.280199639, 0.290209042, 0.300218431, 0.310197417, 0.320206819, 0.330216292, 0.340195208, 0.350204639, 0.360214069, 0.370193069, 0.380202444, 0.390211889, 0.400190889, 0.410200319, 0.420209778, 0.430188694, 0.440198125, 0.450207611, 0.460186486, 0.470195931, 0.480205389, 0.490184389, 0.500193792, 0.510203194, 0.520182153, 0.530191667, 0.540201028, 0.5502105, 0.560189417, 0.570198875, 0.580208292, 0.590187236, 0.600196694, 0.610206125, 0.620185042, 0.6301945, 0.640203944, 0.650182889, 0.660192292, 0.670201764, 0.680180694, 0.690190153, 0.700199597, 0.710178486, 0.720187958, 0.730197417, 0.740176333, 0.750185806, 0.760195264, 0.770174153, 0.780183583, 0.790193014, 0.800202528, 0.810181417, 0.820190861, 0.830200333, 0.840179264, 0.850188681, 0.860198139, 0.870177097, 0.880186569, 0.890195903, 0.900174875, 0.910184347, 0.920193792, 0.930172681, 0.940182181, 0.950191597, 0.960170583, 0.970179972, 0.980189417, 0.990168389, 1.000177819, 1.010187278, 1.020166208] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:20.943" endtime="20201112 10:15:20.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.938" endtime="20201112 10:15:20.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.948" endtime="20201112 10:15:20.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.951" endtime="20201112 10:15:20.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.950" endtime="20201112 10:15:20.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.946" endtime="20201112 10:15:20.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.423" endtime="20201112 10:15:20.972"></status>
</kw>
<msg timestamp="20201112 10:15:20.972" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.981" endtime="20201112 10:15:23.103"></status>
</kw>
<msg timestamp="20201112 10:15:23.105" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5604095, 'wakeups': [5614105, 5624114, 5634124, 5644104, 5654113, 5664...</msg>
<status status="PASS" starttime="20201112 10:15:20.979" endtime="20201112 10:15:23.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5604095, 'wakeups': [5614105, 5624114, 5634124, 5644104, 5654113, 5664...</msg>
<status status="PASS" starttime="20201112 10:15:23.107" endtime="20201112 10:15:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.113" endtime="20201112 10:15:23.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.976" endtime="20201112 10:15:23.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.974" endtime="20201112 10:15:23.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.124" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [5614105, 5624114, 5634124, 5644104, 5654113, 5664123, 5674102, 5684112, 5694122, 5704101, 5714111, 5724121, 5734100, 5744110, 5754119, 5764099, 5774108, 5784118, 5794097...</msg>
<status status="PASS" starttime="20201112 10:15:23.120" endtime="20201112 10:15:23.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.130" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:23.128" endtime="20201112 10:15:23.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.132" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:23.131" endtime="20201112 10:15:23.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.126" endtime="20201112 10:15:23.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.137" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:23.136" endtime="20201112 10:15:23.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.139" level="INFO">VALUE: 5604095</msg>
<status status="PASS" starttime="20201112 10:15:23.138" endtime="20201112 10:15:23.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.133" endtime="20201112 10:15:23.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.143" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:23.142" endtime="20201112 10:15:23.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.146" level="INFO">VALUE: [5614105, 5624114, 5634124, 5644104, 5654113, 5664123, 5674102, 5684112, 5694122, 5704101, 5714111, 5724121, 5734100, 5744110, 5754119, 5764099, 5774108, 5784118, 5794097, 5804107, 5814117, 5824096, 5834106, 5844116, 5854095, 5864105, 5874114, 5884124, 5894104, 5904113, 5914123, 5924102, 5934112, 5944122, 5954101, 5964111, 5974121, 5984100, 5994110, 6004119, 6014099, 6024108, 6034118, 6044097, 6054107, 6064117, 6074096, 6084106, 6094116, 6104095, 6114105, 6124114, 6134124, 6144104, 6154113, 6164123, 6174102, 6184112, 6194122, 6204101, 6214111, 6224121, 6234100, 6244110, 6254119, 6264099, 6274108, 6284118, 6294097, 6304107, 6314117, 6324096, 6334106, 6344116, 6354095, 6364105, 6374114, 6384124, 6394104, 6404113, 6414123, 6424102, 6434112, 6444122, 6454101, 6464111, 6474121, 6484100, 6494110, 6504119, 6514099, 6524108, 6534118, 6544097, 6554107, 6564117, 6574096, 6584106, 6594116, 6604095]</msg>
<status status="PASS" starttime="20201112 10:15:23.145" endtime="20201112 10:15:23.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.140" endtime="20201112 10:15:23.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.155" endtime="20201112 10:15:23.448"></status>
</kw>
<msg timestamp="20201112 10:15:23.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032566708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.154" endtime="20201112 10:15:23.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032566708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.452" endtime="20201112 10:15:23.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.459" endtime="20201112 10:15:23.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.151" endtime="20201112 10:15:23.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.148" endtime="20201112 10:15:23.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.486" level="INFO">${RESULT} = {'time': [0.022565764, 0.032566708, 0.042576139, 0.052585611, 0.062564472, 0.072574, 0.082583458, 0.092562347, 0.102571819, 0.112581278, 0.122560222, 0.132569597, 0.142579042, 0.152558014, 0.162567431...</msg>
<status status="PASS" starttime="20201112 10:15:23.463" endtime="20201112 10:15:23.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.490" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:23.489" endtime="20201112 10:15:23.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.492" level="INFO">VALUE: 0.022565764</msg>
<status status="PASS" starttime="20201112 10:15:23.491" endtime="20201112 10:15:23.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.487" endtime="20201112 10:15:23.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.498" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:23.497" endtime="20201112 10:15:23.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.500" level="INFO">VALUE: [0.032566708, 0.042576139, 0.052585611, 0.062564472, 0.072574, 0.082583458, 0.092562347, 0.102571819, 0.112581278, 0.122560222, 0.132569597, 0.142579042, 0.152558014, 0.162567431, 0.172576903, 0.182555806, 0.19256525, 0.202574667, 0.212553681, 0.222563097, 0.232572542, 0.242551472, 0.252560903, 0.262570347, 0.272549278, 0.282558708, 0.292568181, 0.302577625, 0.312556542, 0.322566042, 0.332575444, 0.342554403, 0.352563847, 0.362573236, 0.372552181, 0.382561667, 0.392571125, 0.402550069, 0.412559472, 0.422568931, 0.432547861, 0.442557292, 0.452566722, 0.462545625, 0.472555083, 0.482564556, 0.492543458, 0.502552944, 0.512562431, 0.522541361, 0.532550722, 0.542560208, 0.552569667, 0.562548569, 0.572558014, 0.582567403, 0.592546417, 0.602555833, 0.61256525, 0.622544208, 0.632553681, 0.642563139, 0.652542028, 0.662551458, 0.672560903, 0.682539875, 0.692549319, 0.702558792, 0.712537764, 0.722547139, 0.732556611, 0.742535514, 0.752544903, 0.762554361, 0.772533278, 0.782542792, 0.792552194, 0.802561653, 0.812540569, 0.822550042, 0.832559486, 0.842538431, 0.852547931, 0.862557347, 0.872536236, 0.882545681, 0.892555181, 0.902534097, 0.912543514, 0.922552931, 0.932531903, 0.942541375, 0.952550819, 0.962529722, 0.972539153, 0.982548556, 0.992527514, 1.002537014, 1.012546417, 1.022525375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:23.499" endtime="20201112 10:15:23.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.494" endtime="20201112 10:15:23.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.503" endtime="20201112 10:15:23.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.507" endtime="20201112 10:15:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.505" endtime="20201112 10:15:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.501" endtime="20201112 10:15:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.973" endtime="20201112 10:15:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.854" endtime="20201112 10:15:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.853" endtime="20201112 10:15:23.529"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:23.531" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.540" endtime="20201112 10:15:25.656"></status>
</kw>
<msg timestamp="20201112 10:15:25.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8161682, 'wakeups': [8171722, 8181701, 8191711, 8201690, 8211700, 8221...</msg>
<status status="PASS" starttime="20201112 10:15:23.538" endtime="20201112 10:15:25.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.663" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8161682, 'wakeups': [8171722, 8181701, 8191711, 8201690, 8211700, 8221...</msg>
<status status="PASS" starttime="20201112 10:15:25.659" endtime="20201112 10:15:25.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.665" endtime="20201112 10:15:25.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.535" endtime="20201112 10:15:25.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.533" endtime="20201112 10:15:25.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.674" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [8171722, 8181701, 8191711, 8201690, 8211700, 8221710, 8231689, 8241699, 8251708, 8261688, 8271697, 8281707, 8291687, 8301696, 8311706, 8321685, 8331695, 8341705, 8351684...</msg>
<status status="PASS" starttime="20201112 10:15:25.672" endtime="20201112 10:15:25.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.679" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:25.678" endtime="20201112 10:15:25.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.681" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:25.680" endtime="20201112 10:15:25.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.675" endtime="20201112 10:15:25.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.686" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:25.685" endtime="20201112 10:15:25.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.688" level="INFO">VALUE: 8161682</msg>
<status status="PASS" starttime="20201112 10:15:25.687" endtime="20201112 10:15:25.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.682" endtime="20201112 10:15:25.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.693" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:25.692" endtime="20201112 10:15:25.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.695" level="INFO">VALUE: [8171722, 8181701, 8191711, 8201690, 8211700, 8221710, 8231689, 8241699, 8251708, 8261688, 8271697, 8281707, 8291687, 8301696, 8311706, 8321685, 8331695, 8341705, 8351684, 8361694, 8371704, 8381683, 8391693, 8401702, 8411712, 8421691, 8431701, 8441711, 8451690, 8461700, 8471710, 8481689, 8491699, 8501708, 8511688, 8521697, 8531707, 8541687, 8551696, 8561706, 8571685, 8581695, 8591705, 8601684, 8611694, 8621704, 8631683, 8641693, 8651702, 8661712, 8671691, 8681701, 8691711, 8701690, 8711700, 8721710, 8731689, 8741699, 8751708, 8761688, 8771697, 8781707, 8791687, 8801696, 8811706, 8821685, 8831695, 8841705, 8851684, 8861694, 8871704, 8881683, 8891693, 8901702, 8911712, 8921691, 8931701, 8941711, 8951690, 8961700, 8971710, 8981689, 8991699, 9001708, 9011688, 9021697, 9031707, 9041687, 9051696, 9061706, 9071685, 9081695, 9091705, 9101684, 9111694, 9121704, 9131683, 9141693, 9151702, 9161712]</msg>
<status status="PASS" starttime="20201112 10:15:25.694" endtime="20201112 10:15:25.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.689" endtime="20201112 10:15:25.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.702" endtime="20201112 10:15:25.996"></status>
</kw>
<msg timestamp="20201112 10:15:25.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0336285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:25.701" endtime="20201112 10:15:25.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0336285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:26.000" endtime="20201112 10:15:26.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.007" endtime="20201112 10:15:26.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.698" endtime="20201112 10:15:26.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.696" endtime="20201112 10:15:26.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.035" level="INFO">${RESULT} = {'time': [0.023592722, 0.0336285, 0.043607403, 0.053616903, 0.06359575, 0.073605194, 0.083614667, 0.093593569, 0.103603014, 0.1136125, 0.123591389, 0.133600889, 0.14361025, 0.153589222, 0.163598708, 0...</msg>
<status status="PASS" starttime="20201112 10:15:26.011" endtime="20201112 10:15:26.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.040" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:26.039" endtime="20201112 10:15:26.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.042" level="INFO">VALUE: 0.023592722</msg>
<status status="PASS" starttime="20201112 10:15:26.041" endtime="20201112 10:15:26.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.036" endtime="20201112 10:15:26.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.047" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:26.046" endtime="20201112 10:15:26.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.049" level="INFO">VALUE: [0.0336285, 0.043607403, 0.053616903, 0.06359575, 0.073605194, 0.083614667, 0.093593569, 0.103603014, 0.1136125, 0.123591389, 0.133600889, 0.14361025, 0.153589222, 0.163598708, 0.173608111, 0.183587056, 0.193596472, 0.203605958, 0.213584861, 0.223594375, 0.233603736, 0.24358275, 0.253592125, 0.263601611, 0.273611056, 0.283589972, 0.293599458, 0.303608875, 0.313587819, 0.323597264, 0.333606681, 0.343585625, 0.353595083, 0.363604514, 0.373583444, 0.383592931, 0.393602403, 0.403581264, 0.41359075, 0.423600208, 0.433579083, 0.443588597, 0.453598014, 0.463576875, 0.473586417, 0.483595764, 0.493574736, 0.503584208, 0.513593653, 0.523603014, 0.533582014, 0.543591486, 0.553600889, 0.563579764, 0.573589319, 0.58359875, 0.593577681, 0.603587167, 0.613596542, 0.6235755, 0.633584958, 0.643594389, 0.653573264, 0.663582694, 0.673592139, 0.683571139, 0.6935805, 0.703590014, 0.713568931, 0.723578403, 0.733587875, 0.743566819, 0.753576181, 0.763585694, 0.773595153, 0.783574014, 0.793583514, 0.803592944, 0.813571889, 0.823581319, 0.833590764, 0.843569736, 0.853579097, 0.863588583, 0.873567458, 0.883576917, 0.893586403, 0.903565347, 0.913574806, 0.923584222, 0.933563181, 0.943572597, 0.953582014, 0.963560903, 0.973570403, 0.983579875, 0.993558792, 1.003568292, 1.013577694, 1.023587167] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:26.048" endtime="20201112 10:15:26.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.043" endtime="20201112 10:15:26.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.052" endtime="20201112 10:15:26.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.056" endtime="20201112 10:15:26.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.054" endtime="20201112 10:15:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.051" endtime="20201112 10:15:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.532" endtime="20201112 10:15:26.077"></status>
</kw>
<msg timestamp="20201112 10:15:26.077" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.085" endtime="20201112 10:15:28.213"></status>
</kw>
<msg timestamp="20201112 10:15:28.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10709228, 'wakeups': [10719268, 10729248, 10739257, 10749237, 10759246...</msg>
<status status="PASS" starttime="20201112 10:15:26.083" endtime="20201112 10:15:28.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.220" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10709228, 'wakeups': [10719268, 10729248, 10739257, 10749237, 10759246...</msg>
<status status="PASS" starttime="20201112 10:15:28.216" endtime="20201112 10:15:28.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.222" endtime="20201112 10:15:28.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.081" endtime="20201112 10:15:28.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.079" endtime="20201112 10:15:28.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.230" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [10719268, 10729248, 10739257, 10749237, 10759246, 10769256, 10779235, 10789245, 10799255, 10809234, 10819244, 10829254, 10839233, 10849243, 10859252, 10869232, 10879241,...</msg>
<status status="PASS" starttime="20201112 10:15:28.228" endtime="20201112 10:15:28.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.239" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:28.238" endtime="20201112 10:15:28.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.241" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:28.240" endtime="20201112 10:15:28.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.231" endtime="20201112 10:15:28.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.246" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:28.245" endtime="20201112 10:15:28.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.248" level="INFO">VALUE: 10709228</msg>
<status status="PASS" starttime="20201112 10:15:28.247" endtime="20201112 10:15:28.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.243" endtime="20201112 10:15:28.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.253" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:28.252" endtime="20201112 10:15:28.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.255" level="INFO">VALUE: [10719268, 10729248, 10739257, 10749237, 10759246, 10769256, 10779235, 10789245, 10799255, 10809234, 10819244, 10829254, 10839233, 10849243, 10859252, 10869232, 10879241, 10889251, 10899230, 10909240, 10919250, 10929229, 10939239, 10949249, 10959228, 10969238, 10979248, 10989257, 10999237, 11009246, 11019256, 11029235, 11039245, 11049255, 11059234, 11069244, 11079254, 11089233, 11099243, 11109252, 11119232, 11129241, 11139251, 11149230, 11159240, 11169250, 11179229, 11189239, 11199249, 11209228, 11219238, 11229248, 11239257, 11249237, 11259246, 11269256, 11279235, 11289245, 11299255, 11309234, 11319244, 11329254, 11339233, 11349243, 11359252, 11369232, 11379241, 11389251, 11399230, 11409240, 11419250, 11429229, 11439239, 11449249, 11459228, 11469238, 11479248, 11489257, 11499237, 11509246, 11519256, 11529235, 11539245, 11549255, 11559234, 11569244, 11579254, 11589233, 11599243, 11609252, 11619232, 11629241, 11639251, 11649230, 11659240, 11669250, 11679229, 11689239, 11699249, 11709228]</msg>
<status status="PASS" starttime="20201112 10:15:28.254" endtime="20201112 10:15:28.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.249" endtime="20201112 10:15:28.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.263" endtime="20201112 10:15:28.554"></status>
</kw>
<msg timestamp="20201112 10:15:28.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032368056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.261" endtime="20201112 10:15:28.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032368056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.558" endtime="20201112 10:15:28.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.565" endtime="20201112 10:15:28.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.258" endtime="20201112 10:15:28.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.257" endtime="20201112 10:15:28.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.592" level="INFO">${RESULT} = {'time': [0.022342375, 0.032368056, 0.042365667, 0.052375181, 0.062354069, 0.072363528, 0.082372972, 0.092351889, 0.102361375, 0.112370819, 0.12234975, 0.132359181, 0.142368611, 0.152347542, 0.1623570...</msg>
<status status="PASS" starttime="20201112 10:15:28.569" endtime="20201112 10:15:28.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.597" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:28.596" endtime="20201112 10:15:28.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.599" level="INFO">VALUE: 0.022342375</msg>
<status status="PASS" starttime="20201112 10:15:28.598" endtime="20201112 10:15:28.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.593" endtime="20201112 10:15:28.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.604" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:28.603" endtime="20201112 10:15:28.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.607" level="INFO">VALUE: [0.032368056, 0.042365667, 0.052375181, 0.062354069, 0.072363528, 0.082372972, 0.092351889, 0.102361375, 0.112370819, 0.12234975, 0.132359181, 0.142368611, 0.152347542, 0.162357028, 0.1723665, 0.182345417, 0.192354792, 0.202364278, 0.212343167, 0.222352639, 0.232362125, 0.242340958, 0.252350472, 0.262359889, 0.272338889, 0.282348292, 0.292357764, 0.302367222, 0.312346111, 0.322355639, 0.332365014, 0.342343931, 0.352353389, 0.362362819, 0.372341819, 0.382351125, 0.392360667, 0.402339611, 0.412349042, 0.422358514, 0.432337458, 0.442346833, 0.452356389, 0.462335236, 0.472344639, 0.482354139, 0.492333028, 0.502342486, 0.512351903, 0.522330833, 0.532340333, 0.542349806, 0.552359306, 0.562338125, 0.572347583, 0.582356958, 0.592335861, 0.602345389, 0.612354778, 0.622333778, 0.632343236, 0.642352639, 0.652331597, 0.662341056, 0.672350472, 0.682329431, 0.692338861, 0.702348278, 0.71232725, 0.722336667, 0.732346139, 0.742325056, 0.752334417, 0.762343917, 0.772322889, 0.78233225, 0.792341736, 0.802351208, 0.812330167, 0.822339597, 0.832349139, 0.842327917, 0.852337361, 0.862346875, 0.872325833, 0.882335222, 0.892344667, 0.902323639, 0.912333069, 0.9223425, 0.932321472, 0.942330875, 0.952340319, 0.96231925, 0.972328722, 0.982338153, 0.992317097, 1.002326542, 1.012335986, 1.022314875] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:28.606" endtime="20201112 10:15:28.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.600" endtime="20201112 10:15:28.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.610" endtime="20201112 10:15:28.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.614" endtime="20201112 10:15:28.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.612" endtime="20201112 10:15:28.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.609" endtime="20201112 10:15:28.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.078" endtime="20201112 10:15:28.634"></status>
</kw>
<msg timestamp="20201112 10:15:28.635" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.643" endtime="20201112 10:15:30.771"></status>
</kw>
<msg timestamp="20201112 10:15:30.773" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13266815, 'wakeups': [13276855, 13286834, 13296844, 13306823, 13316833...</msg>
<status status="PASS" starttime="20201112 10:15:28.641" endtime="20201112 10:15:30.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.779" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13266815, 'wakeups': [13276855, 13286834, 13296844, 13306823, 13316833...</msg>
<status status="PASS" starttime="20201112 10:15:30.775" endtime="20201112 10:15:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.781" endtime="20201112 10:15:30.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.639" endtime="20201112 10:15:30.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.637" endtime="20201112 10:15:30.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.787" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [13276855, 13286834, 13296844, 13306823, 13316833, 13326843, 13336822, 13346832, 13356842, 13366821, 13376831, 13386840, 13396820, 13406829, 13416839, 13426818, 13436828,...</msg>
<status status="PASS" starttime="20201112 10:15:30.785" endtime="20201112 10:15:30.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.791" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:30.790" endtime="20201112 10:15:30.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.793" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:30.792" endtime="20201112 10:15:30.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.788" endtime="20201112 10:15:30.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.798" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:30.797" endtime="20201112 10:15:30.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.802" level="INFO">VALUE: 13266815</msg>
<status status="PASS" starttime="20201112 10:15:30.799" endtime="20201112 10:15:30.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.795" endtime="20201112 10:15:30.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.807" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:30.806" endtime="20201112 10:15:30.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.809" level="INFO">VALUE: [13276855, 13286834, 13296844, 13306823, 13316833, 13326843, 13336822, 13346832, 13356842, 13366821, 13376831, 13386840, 13396820, 13406829, 13416839, 13426818, 13436828, 13446838, 13456817, 13466827, 13476837, 13486816, 13496826, 13506835, 13516845, 13526824, 13536834, 13546844, 13556823, 13566833, 13576843, 13586822, 13596832, 13606842, 13616821, 13626831, 13636840, 13646820, 13656829, 13666839, 13676818, 13686828, 13696838, 13706817, 13716827, 13726837, 13736816, 13746826, 13756835, 13766845, 13776824, 13786834, 13796844, 13806823, 13816833, 13826843, 13836822, 13846832, 13856842, 13866821, 13876831, 13886840, 13896820, 13906829, 13916839, 13926818, 13936828, 13946838, 13956817, 13966827, 13976837, 13986816, 13996826, 14006835, 14016845, 14026824, 14036834, 14046844, 14056823, 14066833, 14076843, 14086822, 14096832, 14106842, 14116821, 14126831, 14136840, 14146820, 14156829, 14166839, 14176818, 14186828, 14196838, 14206817, 14216827, 14226837, 14236816, 14246826, 14256835, 14266845]</msg>
<status status="PASS" starttime="20201112 10:15:30.808" endtime="20201112 10:15:30.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.803" endtime="20201112 10:15:30.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.817" endtime="20201112 10:15:31.110"></status>
</kw>
<msg timestamp="20201112 10:15:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031815431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.815" endtime="20201112 10:15:31.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031815431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.114" endtime="20201112 10:15:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.122" endtime="20201112 10:15:31.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.813" endtime="20201112 10:15:31.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.811" endtime="20201112 10:15:31.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.150" level="INFO">${RESULT} = {'time': [0.021779375, 0.031815431, 0.041794375, 0.051803792, 0.061782722, 0.071792222, 0.081801597, 0.091780556, 0.101789972, 0.111799458, 0.121778389, 0.131787806, 0.14179725, 0.151776222, 0.1617856...</msg>
<status status="PASS" starttime="20201112 10:15:31.126" endtime="20201112 10:15:31.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.154" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:31.153" endtime="20201112 10:15:31.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.156" level="INFO">VALUE: 0.021779375</msg>
<status status="PASS" starttime="20201112 10:15:31.155" endtime="20201112 10:15:31.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.150" endtime="20201112 10:15:31.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.162" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:31.161" endtime="20201112 10:15:31.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.164" level="INFO">VALUE: [0.031815431, 0.041794375, 0.051803792, 0.061782722, 0.071792222, 0.081801597, 0.091780556, 0.101789972, 0.111799458, 0.121778389, 0.131787806, 0.14179725, 0.151776222, 0.161785653, 0.171795069, 0.181774014, 0.191783458, 0.201792931, 0.211771833, 0.221781319, 0.231790778, 0.241769611, 0.251779139, 0.261788556, 0.271798042, 0.281776875, 0.291786361, 0.301795875, 0.311774806, 0.321784222, 0.331793736, 0.341772597, 0.351782083, 0.361791417, 0.371770417, 0.381779875, 0.391789333, 0.401768264, 0.411777722, 0.421787153, 0.431766083, 0.441775514, 0.451784917, 0.461763944, 0.471773403, 0.481782792, 0.491761708, 0.501771153, 0.511780708, 0.521790042, 0.531768958, 0.541778514, 0.551787875, 0.561766833, 0.571776278, 0.581785708, 0.591764583, 0.601774028, 0.611783528, 0.621762458, 0.631771833, 0.641781319, 0.651760306, 0.661769694, 0.671779125, 0.681758167, 0.6917675, 0.701777042, 0.711755875, 0.721765375, 0.731774833, 0.741753736, 0.751763208, 0.761772681, 0.771782097, 0.781761, 0.791770417, 0.801779889, 0.811758806, 0.821768264, 0.831777681, 0.841756542, 0.851766111, 0.861775569, 0.871754403, 0.881763917, 0.891773292, 0.901752306, 0.911761708, 0.921771111, 0.931750181, 0.941759472, 0.951768972, 0.961747917, 0.971757333, 0.981766792, 0.991745736, 1.001755153, 1.011764653, 1.021774069] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:31.163" endtime="20201112 10:15:31.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.158" endtime="20201112 10:15:31.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.168" endtime="20201112 10:15:31.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.171" endtime="20201112 10:15:31.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.170" endtime="20201112 10:15:31.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.166" endtime="20201112 10:15:31.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.635" endtime="20201112 10:15:31.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.530" endtime="20201112 10:15:31.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.529" endtime="20201112 10:15:31.193"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:31.195" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.203" endtime="20201112 10:15:33.333"></status>
</kw>
<msg timestamp="20201112 10:15:33.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15829437, 'wakeups': [15839477, 15849456, 15859497, 15869445, 15879486...</msg>
<status status="PASS" starttime="20201112 10:15:31.202" endtime="20201112 10:15:33.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.340" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15829437, 'wakeups': [15839477, 15849456, 15859497, 15869445, 15879486...</msg>
<status status="PASS" starttime="20201112 10:15:33.336" endtime="20201112 10:15:33.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.342" endtime="20201112 10:15:33.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.199" endtime="20201112 10:15:33.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.197" endtime="20201112 10:15:33.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.349" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [15839477, 15849456, 15859497, 15869445, 15879486, 15889465, 15899475, 15909454, 15919494, 15929443, 15939483, 15949462, 15959472, 15969451, 15979492, 15989440, 15999481,...</msg>
<status status="PASS" starttime="20201112 10:15:33.347" endtime="20201112 10:15:33.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.353" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:33.352" endtime="20201112 10:15:33.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.355" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:33.354" endtime="20201112 10:15:33.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.350" endtime="20201112 10:15:33.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.360" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:33.359" endtime="20201112 10:15:33.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.362" level="INFO">VALUE: 15829437</msg>
<status status="PASS" starttime="20201112 10:15:33.361" endtime="20201112 10:15:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.357" endtime="20201112 10:15:33.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.367" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:33.366" endtime="20201112 10:15:33.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.370" level="INFO">VALUE: [15839477, 15849456, 15859497, 15869445, 15879486, 15889465, 15899475, 15909454, 15919494, 15929443, 15939483, 15949462, 15959472, 15969451, 15979492, 15989440, 15999481, 16009460, 16019470, 16029449, 16039489, 16049438, 16059478, 16069458, 16079437, 16089477, 16099456, 16109497, 16119445, 16129486, 16139465, 16149475, 16159454, 16169494, 16179443, 16189483, 16199462, 16209472, 16219451, 16229492, 16239440, 16249481, 16259460, 16269470, 16279449, 16289489, 16299438, 16309478, 16319458, 16329437, 16339477, 16349456, 16359497, 16369445, 16379486, 16389465, 16399475, 16409454, 16419494, 16429443, 16439483, 16449462, 16459472, 16469451, 16479492, 16489440, 16499481, 16509460, 16519470, 16529449, 16539489, 16549438, 16559478, 16569458, 16579437, 16589477, 16599456, 16609497, 16619445, 16629486, 16639465, 16649475, 16659454, 16669494, 16679443, 16689483, 16699462, 16709472, 16719451, 16729492, 16739440, 16749481, 16759460, 16769470, 16779449, 16789489, 16799438, 16809478, 16819458, 16829437]</msg>
<status status="PASS" starttime="20201112 10:15:33.369" endtime="20201112 10:15:33.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.364" endtime="20201112 10:15:33.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.383" endtime="20201112 10:15:33.673"></status>
</kw>
<msg timestamp="20201112 10:15:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026626847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036662333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.375" endtime="20201112 10:15:33.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026626847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036662333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.677" endtime="20201112 10:15:33.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.684" endtime="20201112 10:15:33.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.373" endtime="20201112 10:15:33.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.371" endtime="20201112 10:15:33.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.711" level="INFO">${RESULT} = {'time': [0.026626847, 0.036662333, 0.046655347, 0.056681181, 0.066643736, 0.076669542, 0.086662667, 0.096657944, 0.106651, 0.116676736, 0.126639417, 0.136665194, 0.146658208, 0.156653597, 0.166646653...</msg>
<status status="PASS" starttime="20201112 10:15:33.688" endtime="20201112 10:15:33.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.715" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:33.714" endtime="20201112 10:15:33.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.717" level="INFO">VALUE: 0.026626847</msg>
<status status="PASS" starttime="20201112 10:15:33.716" endtime="20201112 10:15:33.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.712" endtime="20201112 10:15:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.723" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:33.722" endtime="20201112 10:15:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.725" level="INFO">VALUE: [0.036662333, 0.046655347, 0.056681181, 0.066643736, 0.076669542, 0.086662667, 0.096657944, 0.106651, 0.116676736, 0.126639417, 0.136665194, 0.146658208, 0.156653597, 0.166646653, 0.176672458, 0.186635056, 0.196660833, 0.206653931, 0.216649167, 0.226642278, 0.236668125, 0.246630653, 0.256656486, 0.266649597, 0.276628597, 0.286654236, 0.296647375, 0.306673181, 0.31663575, 0.326661542, 0.336654611, 0.346649847, 0.356643028, 0.366668764, 0.376631361, 0.386657208, 0.396650389, 0.406645569, 0.416638667, 0.426664472, 0.436627056, 0.446652861, 0.456645944, 0.466641167, 0.476634236, 0.486660097, 0.496622681, 0.506648542, 0.516641514, 0.526620542, 0.536646292, 0.546639444, 0.556665208, 0.566627764, 0.576653597, 0.586646694, 0.596641903, 0.606635042, 0.616660861, 0.626623417, 0.636649139, 0.64664225, 0.656637597, 0.666630708, 0.6766565, 0.686619042, 0.696644833, 0.706637903, 0.716633208, 0.726626306, 0.736652125, 0.746614694, 0.756640514, 0.766633583, 0.776612625, 0.786638292, 0.796631389, 0.806657194, 0.816619833, 0.826645583, 0.836638667, 0.846633972, 0.856627056, 0.866652903, 0.8766155, 0.886641222, 0.896634292, 0.906629597, 0.916622722, 0.926648528, 0.936611083, 0.946636861, 0.95663, 0.966625194, 0.976618292, 0.986644181, 0.996606694, 1.006632472, 1.016625556, 1.026604639] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:33.724" endtime="20201112 10:15:33.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.719" endtime="20201112 10:15:33.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.728" endtime="20201112 10:15:33.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.731" endtime="20201112 10:15:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.730" endtime="20201112 10:15:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.726" endtime="20201112 10:15:33.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.196" endtime="20201112 10:15:33.752"></status>
</kw>
<msg timestamp="20201112 10:15:33.752" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.761" endtime="20201112 10:15:35.892"></status>
</kw>
<msg timestamp="20201112 10:15:35.893" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18387023, 'wakeups': [18397064, 18407043, 18417083, 18427032, 18437072...</msg>
<status status="PASS" starttime="20201112 10:15:33.760" endtime="20201112 10:15:35.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18387023, 'wakeups': [18397064, 18407043, 18417083, 18427032, 18437072...</msg>
<status status="PASS" starttime="20201112 10:15:35.894" endtime="20201112 10:15:35.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.897" endtime="20201112 10:15:35.899"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.756" endtime="20201112 10:15:35.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.754" endtime="20201112 10:15:35.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.903" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [18397064, 18407043, 18417083, 18427032, 18437072, 18447052, 18457061, 18467041, 18477081, 18487030, 18497070, 18507049, 18517059, 18527038, 18537078, 18547027, 18557067,...</msg>
<status status="PASS" starttime="20201112 10:15:35.901" endtime="20201112 10:15:35.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.907" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:35.906" endtime="20201112 10:15:35.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.909" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:35.908" endtime="20201112 10:15:35.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.904" endtime="20201112 10:15:35.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.914" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:35.913" endtime="20201112 10:15:35.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.916" level="INFO">VALUE: 18387023</msg>
<status status="PASS" starttime="20201112 10:15:35.915" endtime="20201112 10:15:35.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.910" endtime="20201112 10:15:35.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.921" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:35.920" endtime="20201112 10:15:35.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.923" level="INFO">VALUE: [18397064, 18407043, 18417083, 18427032, 18437072, 18447052, 18457061, 18467041, 18477081, 18487030, 18497070, 18507049, 18517059, 18527038, 18537078, 18547027, 18557067, 18567047, 18577056, 18587036, 18597076, 18607025, 18617065, 18627044, 18637054, 18647033, 18657073, 18667053, 18677062, 18687042, 18697082, 18707031, 18717071, 18727050, 18737060, 18747039, 18757080, 18767028, 18777069, 18787048, 18797058, 18807037, 18817077, 18827026, 18837066, 18847045, 18857055, 18867034, 18877075, 18887023, 18897064, 18907043, 18917083, 18927032, 18937072, 18947052, 18957061, 18967041, 18977081, 18987030, 18997070, 19007049, 19017059, 19027038, 19037078, 19047027, 19057067, 19067047, 19077056, 19087036, 19097076, 19107025, 19117065, 19127044, 19137054, 19147033, 19157073, 19167053, 19177062, 19187042, 19197082, 19207031, 19217071, 19227050, 19237060, 19247039, 19257080, 19267028, 19277069, 19287048, 19297058, 19307037, 19317077, 19327026, 19337066, 19347045, 19357055, 19367034, 19377075, 19387023]</msg>
<status status="PASS" starttime="20201112 10:15:35.922" endtime="20201112 10:15:35.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.917" endtime="20201112 10:15:35.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.930" endtime="20201112 10:15:36.223"></status>
</kw>
<msg timestamp="20201112 10:15:36.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03352725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:35.929" endtime="20201112 10:15:36.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03352725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:36.227" endtime="20201112 10:15:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.234" endtime="20201112 10:15:36.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.926" endtime="20201112 10:15:36.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.925" endtime="20201112 10:15:36.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.262" level="INFO">${RESULT} = {'time': [0.023487153, 0.03352725, 0.04352025, 0.053546097, 0.063508639, 0.073534472, 0.083527514, 0.093522764, 0.103515889, 0.113541694, 0.123504278, 0.133530042, 0.143523153, 0.153518444, 0.16351154...</msg>
<status status="PASS" starttime="20201112 10:15:36.237" endtime="20201112 10:15:36.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.267" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:36.266" endtime="20201112 10:15:36.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.270" level="INFO">VALUE: 0.023487153</msg>
<status status="PASS" starttime="20201112 10:15:36.268" endtime="20201112 10:15:36.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.263" endtime="20201112 10:15:36.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.276" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:36.274" endtime="20201112 10:15:36.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.278" level="INFO">VALUE: [0.03352725, 0.04352025, 0.053546097, 0.063508639, 0.073534472, 0.083527514, 0.093522764, 0.103515889, 0.113541694, 0.123504278, 0.133530042, 0.143523153, 0.153518444, 0.163511542, 0.173537319, 0.183499875, 0.193525625, 0.203518778, 0.213514069, 0.223507181, 0.233532986, 0.243495458, 0.253521361, 0.2635145, 0.273509722, 0.283502806, 0.293528625, 0.303521736, 0.313516986, 0.323510125, 0.333535875, 0.343498486, 0.353524278, 0.363517361, 0.373512556, 0.383505722, 0.393531486, 0.403494097, 0.413519889, 0.423513014, 0.433508306, 0.443501278, 0.453527111, 0.463489667, 0.473515431, 0.483508625, 0.493503903, 0.503496986, 0.513522792, 0.523485361, 0.533511167, 0.543504264, 0.55353, 0.563492597, 0.573518472, 0.583511514, 0.593506889, 0.603499958, 0.613525625, 0.623488306, 0.633514125, 0.643507153, 0.6535025, 0.663495583, 0.673521361, 0.683483958, 0.693509722, 0.703502875, 0.713498125, 0.723491208, 0.733517, 0.743479611, 0.753505375, 0.763498444, 0.773493764, 0.783486917, 0.793512653, 0.803505764, 0.813501014, 0.823494097, 0.833519861, 0.843482528, 0.853508306, 0.863501417, 0.873496625, 0.883489764, 0.893515542, 0.903478139, 0.913504, 0.923497, 0.933492306, 0.943485403, 0.953511222, 0.963473806, 0.973499583, 0.98349275, 0.993487958, 1.003481042, 1.013506833, 1.023469375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:36.277" endtime="20201112 10:15:36.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.271" endtime="20201112 10:15:36.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.281" endtime="20201112 10:15:36.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.285" endtime="20201112 10:15:36.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.283" endtime="20201112 10:15:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.280" endtime="20201112 10:15:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.753" endtime="20201112 10:15:36.306"></status>
</kw>
<msg timestamp="20201112 10:15:36.306" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.314" endtime="20201112 10:15:38.443"></status>
</kw>
<msg timestamp="20201112 10:15:38.444" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20939575, 'wakeups': [20949645, 20959594, 20969635, 20979583, 20989624...</msg>
<status status="PASS" starttime="20201112 10:15:36.312" endtime="20201112 10:15:38.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20939575, 'wakeups': [20949645, 20959594, 20969635, 20979583, 20989624...</msg>
<status status="PASS" starttime="20201112 10:15:38.446" endtime="20201112 10:15:38.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.452" endtime="20201112 10:15:38.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.310" endtime="20201112 10:15:38.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.308" endtime="20201112 10:15:38.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.460" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [20949645, 20959594, 20969635, 20979583, 20989624, 20999603, 21009613, 21019592, 21029632, 21039581, 21049621, 21059600, 21069610, 21079589, 21089630, 21099578, 21109619,...</msg>
<status status="PASS" starttime="20201112 10:15:38.458" endtime="20201112 10:15:38.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.464" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:38.463" endtime="20201112 10:15:38.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.466" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:38.465" endtime="20201112 10:15:38.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.461" endtime="20201112 10:15:38.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.476" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:38.475" endtime="20201112 10:15:38.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.478" level="INFO">VALUE: 20939575</msg>
<status status="PASS" starttime="20201112 10:15:38.477" endtime="20201112 10:15:38.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.471" endtime="20201112 10:15:38.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.483" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:38.482" endtime="20201112 10:15:38.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.485" level="INFO">VALUE: [20949645, 20959594, 20969635, 20979583, 20989624, 20999603, 21009613, 21019592, 21029632, 21039581, 21049621, 21059600, 21069610, 21079589, 21089630, 21099578, 21109619, 21119598, 21129608, 21139587, 21149627, 21159576, 21169616, 21179595, 21189636, 21199584, 21209625, 21219604, 21229614, 21239593, 21249633, 21259582, 21269622, 21279602, 21289611, 21299591, 21309631, 21319580, 21329620, 21339599, 21349609, 21359588, 21369628, 21379577, 21389617, 21399597, 21409606, 21419586, 21429626, 21439605, 21449615, 21459594, 21469635, 21479583, 21489624, 21499603, 21509613, 21519592, 21529632, 21539581, 21549621, 21559600, 21569610, 21579589, 21589630, 21599578, 21609619, 21619598, 21629608, 21639587, 21649627, 21659576, 21669616, 21679595, 21689636, 21699584, 21709625, 21719604, 21729614, 21739593, 21749633, 21759582, 21769622, 21779602, 21789611, 21799591, 21809631, 21819580, 21829620, 21839599, 21849609, 21859588, 21869628, 21879577, 21889617, 21899597, 21909606, 21919586, 21929626, 21939605]</msg>
<status status="PASS" starttime="20201112 10:15:38.484" endtime="20201112 10:15:38.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.480" endtime="20201112 10:15:38.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.493" endtime="20201112 10:15:38.783"></status>
</kw>
<msg timestamp="20201112 10:15:38.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032376556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.491" endtime="20201112 10:15:38.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032376556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.787" endtime="20201112 10:15:38.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.795" endtime="20201112 10:15:38.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.489" endtime="20201112 10:15:38.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.487" endtime="20201112 10:15:38.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.821" level="INFO">${RESULT} = {'time': [0.022321639, 0.032376556, 0.042339083, 0.052364861, 0.062327486, 0.072353292, 0.082346403, 0.092341708, 0.102334778, 0.112360556, 0.122323139, 0.132348917, 0.142341972, 0.152337319, 0.162330...</msg>
<status status="PASS" starttime="20201112 10:15:38.798" endtime="20201112 10:15:38.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.826" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:38.825" endtime="20201112 10:15:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.828" level="INFO">VALUE: 0.022321639</msg>
<status status="PASS" starttime="20201112 10:15:38.827" endtime="20201112 10:15:38.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.822" endtime="20201112 10:15:38.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.834" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:38.833" endtime="20201112 10:15:38.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.836" level="INFO">VALUE: [0.032376556, 0.042339083, 0.052364861, 0.062327486, 0.072353292, 0.082346403, 0.092341708, 0.102334778, 0.112360556, 0.122323139, 0.132348917, 0.142341972, 0.152337319, 0.162330375, 0.172356153, 0.182318736, 0.192344528, 0.202337597, 0.212332944, 0.222325986, 0.232351764, 0.242314333, 0.252340236, 0.262333292, 0.272359125, 0.282321736, 0.292347444, 0.302340542, 0.312335764, 0.322328931, 0.332354639, 0.342317292, 0.352343153, 0.362336208, 0.372331458, 0.382324611, 0.392350347, 0.402312944, 0.412338736, 0.422331875, 0.432327125, 0.442320222, 0.452346014, 0.462308583, 0.472334347, 0.482327486, 0.492322778, 0.502315833, 0.512341597, 0.522334708, 0.532330014, 0.542323139, 0.552348903, 0.5623115, 0.572337278, 0.582330347, 0.592325611, 0.60231875, 0.612344542, 0.622307181, 0.632332972, 0.642326014, 0.652321403, 0.662314431, 0.67234025, 0.682302806, 0.692328611, 0.702321681, 0.712316944, 0.722310028, 0.732335778, 0.742298458, 0.752324278, 0.762317375, 0.772343125, 0.782305736, 0.792331514, 0.802324583, 0.812319833, 0.822312972, 0.83233875, 0.842301306, 0.852327139, 0.862320264, 0.872315403, 0.882308611, 0.892334403, 0.902296972, 0.912322806, 0.922315931, 0.932311125, 0.942304208, 0.952330042, 0.962292556, 0.972318417, 0.982311556, 0.99230675, 1.002299889, 1.012325681, 1.022318792] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:38.835" endtime="20201112 10:15:38.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.830" endtime="20201112 10:15:38.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.840" endtime="20201112 10:15:38.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.843" endtime="20201112 10:15:38.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.842" endtime="20201112 10:15:38.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.838" endtime="20201112 10:15:38.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.306" endtime="20201112 10:15:38.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.194" endtime="20201112 10:15:38.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.193" endtime="20201112 10:15:38.864"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:38.867" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.875" endtime="20201112 10:15:41.004"></status>
</kw>
<msg timestamp="20201112 10:15:41.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23502197, 'wakeups': [23512237, 23522247, 23532257, 23542236, 23552246...</msg>
<status status="PASS" starttime="20201112 10:15:38.874" endtime="20201112 10:15:41.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23502197, 'wakeups': [23512237, 23522247, 23532257, 23542236, 23552246...</msg>
<status status="PASS" starttime="20201112 10:15:41.006" endtime="20201112 10:15:41.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.009" endtime="20201112 10:15:41.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.871" endtime="20201112 10:15:41.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.869" endtime="20201112 10:15:41.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.014" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [23512237, 23522247, 23532257, 23542236, 23552246, 23562255, 23572235, 23582244, 23592254, 23602233, 23612243, 23622253, 23632232, 23642242, 23652252, 23662231, 23672241,...</msg>
<status status="PASS" starttime="20201112 10:15:41.012" endtime="20201112 10:15:41.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.018" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:41.017" endtime="20201112 10:15:41.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.021" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:41.019" endtime="20201112 10:15:41.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.015" endtime="20201112 10:15:41.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.025" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.024" endtime="20201112 10:15:41.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.028" level="INFO">VALUE: 23502197</msg>
<status status="PASS" starttime="20201112 10:15:41.027" endtime="20201112 10:15:41.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.022" endtime="20201112 10:15:41.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.032" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.031" endtime="20201112 10:15:41.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.035" level="INFO">VALUE: [23512237, 23522247, 23532257, 23542236, 23552246, 23562255, 23572235, 23582244, 23592254, 23602233, 23612243, 23622253, 23632232, 23642242, 23652252, 23662231, 23672241, 23682250, 23692230, 23702239, 23712249, 23722229, 23732238, 23742248, 23752227, 23762237, 23772247, 23782257, 23792236, 23802246, 23812255, 23822235, 23832244, 23842254, 23852233, 23862243, 23872253, 23882232, 23892242, 23902252, 23912231, 23922241, 23932250, 23942230, 23952239, 23962249, 23972229, 23982238, 23992248, 24002227, 24012237, 24022247, 24032257, 24042236, 24052246, 24062255, 24072235, 24082244, 24092254, 24102233, 24112243, 24122253, 24132232, 24142242, 24152252, 24162231, 24172241, 24182250, 24192230, 24202239, 24212249, 24222229, 24232238, 24242248, 24252227, 24262237, 24272247, 24282257, 24292236, 24302246, 24312255, 24322235, 24332244, 24342254, 24352233, 24362243, 24372253, 24382232, 24392242, 24402252, 24412231, 24422241, 24432250, 24442230, 24452239, 24462249, 24472229, 24482238, 24492248, 24502227]</msg>
<status status="PASS" starttime="20201112 10:15:41.033" endtime="20201112 10:15:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.029" endtime="20201112 10:15:41.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.044" endtime="20201112 10:15:41.336"></status>
</kw>
<msg timestamp="20201112 10:15:41.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026105444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036186958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.042" endtime="20201112 10:15:41.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026105444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036186958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.340" endtime="20201112 10:15:41.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.347" endtime="20201112 10:15:41.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.038" endtime="20201112 10:15:41.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.037" endtime="20201112 10:15:41.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.374" level="INFO">${RESULT} = {'time': [0.026105444, 0.036186958, 0.046196417, 0.056205861, 0.066184792, 0.07619425, 0.086203569, 0.096182556, 0.106192014, 0.116201472, 0.126180403, 0.136189792, 0.146199292, 0.156178153, 0.1661876...</msg>
<status status="PASS" starttime="20201112 10:15:41.351" endtime="20201112 10:15:41.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.379" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.378" endtime="20201112 10:15:41.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.381" level="INFO">VALUE: 0.026105444</msg>
<status status="PASS" starttime="20201112 10:15:41.380" endtime="20201112 10:15:41.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.375" endtime="20201112 10:15:41.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.386" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.385" endtime="20201112 10:15:41.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.389" level="INFO">VALUE: [0.036186958, 0.046196417, 0.056205861, 0.066184792, 0.07619425, 0.086203569, 0.096182556, 0.106192014, 0.116201472, 0.126180403, 0.136189792, 0.146199292, 0.156178153, 0.166187694, 0.176197083, 0.186175972, 0.196185486, 0.206194972, 0.216173861, 0.226183347, 0.236192708, 0.246171708, 0.256181194, 0.26619075, 0.276169681, 0.286179, 0.296188431, 0.306197889, 0.316176708, 0.326186194, 0.336195653, 0.346174542, 0.356184014, 0.366193361, 0.376172417, 0.386181875, 0.396191389, 0.406170208, 0.416179597, 0.426189069, 0.436168083, 0.446177556, 0.456186972, 0.466165819, 0.476175347, 0.486184764, 0.496163694, 0.506173222, 0.516182819, 0.526161778, 0.536171014, 0.546180431, 0.556189903, 0.566168736, 0.576178208, 0.586187625, 0.596166611, 0.606176069, 0.616185542, 0.626164444, 0.636173917, 0.646183292, 0.656162306, 0.666171736, 0.676181153, 0.686160125, 0.696169556, 0.706178903, 0.716157889, 0.726167361, 0.736176833, 0.746155736, 0.756165181, 0.766174764, 0.776153694, 0.786163, 0.796172458, 0.806181944, 0.816160736, 0.826170306, 0.836179597, 0.846158611, 0.856168111, 0.866177597, 0.876156486, 0.886165917, 0.89617525, 0.906154264, 0.91616375, 0.926173125, 0.936152083, 0.946161653, 0.956170986, 0.966149972, 0.976159347, 0.986168778, 0.996147819, 1.006157208, 1.016166736, 1.026145764] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:41.388" endtime="20201112 10:15:41.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.382" endtime="20201112 10:15:41.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.392" endtime="20201112 10:15:41.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.395" endtime="20201112 10:15:41.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.394" endtime="20201112 10:15:41.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.390" endtime="20201112 10:15:41.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.868" endtime="20201112 10:15:41.416"></status>
</kw>
<msg timestamp="20201112 10:15:41.417" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.426" endtime="20201112 10:15:43.552"></status>
</kw>
<msg timestamp="20201112 10:15:43.553" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26049713, 'wakeups': [26059753, 26069763, 26079772, 26089752, 26099761...</msg>
<status status="PASS" starttime="20201112 10:15:41.425" endtime="20201112 10:15:43.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.559" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26049713, 'wakeups': [26059753, 26069763, 26079772, 26089752, 26099761...</msg>
<status status="PASS" starttime="20201112 10:15:43.555" endtime="20201112 10:15:43.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.562" endtime="20201112 10:15:43.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.421" endtime="20201112 10:15:43.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.419" endtime="20201112 10:15:43.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.569" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [26059753, 26069763, 26079772, 26089752, 26099761, 26109771, 26119750, 26129760, 26139770, 26149749, 26159759, 26169769, 26179748, 26189758, 26199768, 26209747, 26219757,...</msg>
<status status="PASS" starttime="20201112 10:15:43.567" endtime="20201112 10:15:43.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.574" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:43.573" endtime="20201112 10:15:43.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.576" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:43.575" endtime="20201112 10:15:43.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.570" endtime="20201112 10:15:43.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.581" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:43.580" endtime="20201112 10:15:43.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.583" level="INFO">VALUE: 26049713</msg>
<status status="PASS" starttime="20201112 10:15:43.582" endtime="20201112 10:15:43.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.577" endtime="20201112 10:15:43.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.588" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:43.587" endtime="20201112 10:15:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.590" level="INFO">VALUE: [26059753, 26069763, 26079772, 26089752, 26099761, 26109771, 26119750, 26129760, 26139770, 26149749, 26159759, 26169769, 26179748, 26189758, 26199768, 26209747, 26219757, 26229766, 26239746, 26249755, 26259765, 26269744, 26279754, 26289764, 26299774, 26309753, 26319763, 26329772, 26339752, 26349761, 26359771, 26369750, 26379760, 26389770, 26399749, 26409759, 26419769, 26429748, 26439758, 26449768, 26459747, 26469757, 26479766, 26489746, 26499755, 26509765, 26519744, 26529754, 26539764, 26549774, 26559753, 26569763, 26579772, 26589752, 26599761, 26609771, 26619750, 26629760, 26639770, 26649749, 26659759, 26669769, 26679748, 26689758, 26699768, 26709747, 26719757, 26729766, 26739746, 26749755, 26759765, 26769744, 26779754, 26789764, 26799774, 26809753, 26819763, 26829772, 26839752, 26849761, 26859771, 26869750, 26879760, 26889770, 26899749, 26909759, 26919769, 26929748, 26939758, 26949768, 26959747, 26969757, 26979766, 26989746, 26999755, 27009765, 27019744, 27029754, 27039764, 27049774]</msg>
<status status="PASS" starttime="20201112 10:15:43.589" endtime="20201112 10:15:43.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.584" endtime="20201112 10:15:43.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.597" endtime="20201112 10:15:43.888"></status>
</kw>
<msg timestamp="20201112 10:15:43.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031435514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.596" endtime="20201112 10:15:43.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031435514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.892" endtime="20201112 10:15:43.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.900" endtime="20201112 10:15:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.593" endtime="20201112 10:15:43.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.591" endtime="20201112 10:15:43.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.931" level="INFO">${RESULT} = {'time': [0.021377458, 0.031435514, 0.041444903, 0.051454319, 0.061433278, 0.071442625, 0.081452139, 0.091431097, 0.101440528, 0.111449861, 0.121428875, 0.131438319, 0.141447694, 0.151426708, 0.161436...</msg>
<status status="PASS" starttime="20201112 10:15:43.908" endtime="20201112 10:15:43.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.936" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:43.935" endtime="20201112 10:15:43.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.938" level="INFO">VALUE: 0.021377458</msg>
<status status="PASS" starttime="20201112 10:15:43.937" endtime="20201112 10:15:43.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.932" endtime="20201112 10:15:43.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.943" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:43.942" endtime="20201112 10:15:43.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.946" level="INFO">VALUE: [0.031435514, 0.041444903, 0.051454319, 0.061433278, 0.071442625, 0.081452139, 0.091431097, 0.101440528, 0.111449861, 0.121428875, 0.131438319, 0.141447694, 0.151426708, 0.161436194, 0.171445625, 0.1814245, 0.191433972, 0.201443403, 0.211422431, 0.221431847, 0.231441264, 0.241420111, 0.251429625, 0.261439083, 0.271448542, 0.2814275, 0.291436889, 0.301446347, 0.311425319, 0.321434708, 0.331444208, 0.341423125, 0.351432528, 0.361441889, 0.371420917, 0.381430278, 0.391439819, 0.401418764, 0.411428153, 0.421437653, 0.431416569, 0.441426069, 0.451435431, 0.461414306, 0.471423736, 0.481433264, 0.491412069, 0.501421639, 0.511431042, 0.521440486, 0.531419486, 0.541428819, 0.551438347, 0.561417292, 0.571426694, 0.581436181, 0.591415083, 0.601424486, 0.611434042, 0.621412958, 0.631422375, 0.641431694, 0.65141075, 0.661420167, 0.671429625, 0.681408514, 0.691418056, 0.701427347, 0.711406333, 0.72141575, 0.731425236, 0.741404153, 0.751413653, 0.761423042, 0.771432556, 0.7814115, 0.791420931, 0.801430319, 0.811409319, 0.821418764, 0.831428181, 0.841407097, 0.851416486, 0.861426042, 0.871404958, 0.881414389, 0.89142375, 0.901402764, 0.911412264, 0.921421639, 0.931400611, 0.941409931, 0.951419472, 0.961398417, 0.971407819, 0.981417319, 0.991396222, 1.001405556, 1.011415125, 1.021424472] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:43.945" endtime="20201112 10:15:43.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.939" endtime="20201112 10:15:43.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.949" endtime="20201112 10:15:43.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.952" endtime="20201112 10:15:43.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.951" endtime="20201112 10:15:43.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.947" endtime="20201112 10:15:43.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.417" endtime="20201112 10:15:43.973"></status>
</kw>
<msg timestamp="20201112 10:15:43.973" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.981" endtime="20201112 10:15:46.094"></status>
</kw>
<msg timestamp="20201112 10:15:46.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28607299, 'wakeups': [28617340, 28627349, 28637359, 28647338, 28657348...</msg>
<status status="PASS" starttime="20201112 10:15:43.980" endtime="20201112 10:15:46.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28607299, 'wakeups': [28617340, 28627349, 28637359, 28647338, 28657348...</msg>
<status status="PASS" starttime="20201112 10:15:46.096" endtime="20201112 10:15:46.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.099" endtime="20201112 10:15:46.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.977" endtime="20201112 10:15:46.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.975" endtime="20201112 10:15:46.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.104" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28617340, 28627349, 28637359, 28647338, 28657348, 28667358, 28677337, 28687347, 28697357, 28707336, 28717346, 28727355, 28737335, 28747344, 28757354, 28767333, 28777343,...</msg>
<status status="PASS" starttime="20201112 10:15:46.102" endtime="20201112 10:15:46.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.109" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:46.107" endtime="20201112 10:15:46.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.111" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:46.110" endtime="20201112 10:15:46.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.105" endtime="20201112 10:15:46.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.116" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.115" endtime="20201112 10:15:46.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.119" level="INFO">VALUE: 28607299</msg>
<status status="PASS" starttime="20201112 10:15:46.118" endtime="20201112 10:15:46.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.112" endtime="20201112 10:15:46.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.124" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.123" endtime="20201112 10:15:46.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.126" level="INFO">VALUE: [28617340, 28627349, 28637359, 28647338, 28657348, 28667358, 28677337, 28687347, 28697357, 28707336, 28717346, 28727355, 28737335, 28747344, 28757354, 28767333, 28777343, 28787353, 28797332, 28807342, 28817352, 28827331, 28837341, 28847351, 28857330, 28867340, 28877349, 28887359, 28897338, 28907348, 28917358, 28927337, 28937347, 28947357, 28957336, 28967346, 28977355, 28987335, 28997344, 29007354, 29017333, 29027343, 29037353, 29047332, 29057342, 29067352, 29077331, 29087341, 29097351, 29107330, 29117340, 29127349, 29137359, 29147338, 29157348, 29167358, 29177337, 29187347, 29197357, 29207336, 29217346, 29227355, 29237335, 29247344, 29257354, 29267333, 29277343, 29287353, 29297332, 29307342, 29317352, 29327331, 29337341, 29347351, 29357330, 29367340, 29377349, 29387359, 29397338, 29407348, 29417358, 29427337, 29437347, 29447357, 29457336, 29467346, 29477355, 29487335, 29497344, 29507354, 29517333, 29527343, 29537353, 29547332, 29557342, 29567352, 29577331, 29587341, 29597351, 29607330]</msg>
<status status="PASS" starttime="20201112 10:15:46.125" endtime="20201112 10:15:46.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.120" endtime="20201112 10:15:46.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.134" endtime="20201112 10:15:46.426"></status>
</kw>
<msg timestamp="20201112 10:15:46.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031626986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.132" endtime="20201112 10:15:46.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031626986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.430" endtime="20201112 10:15:46.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.437" endtime="20201112 10:15:46.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.130" endtime="20201112 10:15:46.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.128" endtime="20201112 10:15:46.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.465" level="INFO">${RESULT} = {'time': [0.021574236, 0.031626986, 0.041636319, 0.051645861, 0.061624639, 0.071634139, 0.081643528, 0.091622556, 0.101631875, 0.111641486, 0.121620403, 0.131629833, 0.141639222, 0.151618194, 0.161627...</msg>
<status status="PASS" starttime="20201112 10:15:46.441" endtime="20201112 10:15:46.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.469" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.468" endtime="20201112 10:15:46.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.471" level="INFO">VALUE: 0.021574236</msg>
<status status="PASS" starttime="20201112 10:15:46.470" endtime="20201112 10:15:46.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.466" endtime="20201112 10:15:46.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.477" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.476" endtime="20201112 10:15:46.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.480" level="INFO">VALUE: [0.031626986, 0.041636319, 0.051645861, 0.061624639, 0.071634139, 0.081643528, 0.091622556, 0.101631875, 0.111641486, 0.121620403, 0.131629833, 0.141639222, 0.151618194, 0.161627653, 0.171637125, 0.181615917, 0.191625444, 0.201634861, 0.211613875, 0.221623333, 0.231632708, 0.241611597, 0.251621014, 0.261630486, 0.271609542, 0.281618847, 0.291628292, 0.301637792, 0.311616722, 0.321626167, 0.331635667, 0.341614583, 0.351624, 0.361633458, 0.371612361, 0.381621847, 0.391631292, 0.401610222, 0.411619708, 0.421629139, 0.431607986, 0.441617458, 0.451626958, 0.461605833, 0.471615333, 0.48162475, 0.491603736, 0.501613153, 0.511622597, 0.5216015, 0.531610931, 0.541620403, 0.551629806, 0.561608708, 0.571618222, 0.581627597, 0.591606542, 0.601615944, 0.6116255, 0.621604417, 0.631613931, 0.641623306, 0.651602222, 0.661611681, 0.671621167, 0.681600056, 0.691609458, 0.701618931, 0.711597847, 0.721607292, 0.73161675, 0.741595694, 0.751605139, 0.761614528, 0.7715935, 0.781602931, 0.791612306, 0.801621833, 0.811600667, 0.821610222, 0.831619639, 0.841598569, 0.851608153, 0.861617542, 0.871596333, 0.881605889, 0.891615292, 0.901594208, 0.911603694, 0.921613167, 0.931592028, 0.941601486, 0.951610944, 0.961589917, 0.97159925, 0.981608722, 0.991587694, 1.001597083, 1.011606597, 1.021585556] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:46.478" endtime="20201112 10:15:46.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.472" endtime="20201112 10:15:46.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.483" endtime="20201112 10:15:46.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.487" endtime="20201112 10:15:46.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.485" endtime="20201112 10:15:46.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.481" endtime="20201112 10:15:46.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.974" endtime="20201112 10:15:46.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.866" endtime="20201112 10:15:46.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.865" endtime="20201112 10:15:46.508"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:46.510" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.518" endtime="20201112 10:15:48.630"></status>
</kw>
<msg timestamp="20201112 10:15:48.631" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31144805, 'wakeups': [31154876, 31164855, 31174835, 31184875, 31194854...</msg>
<status status="PASS" starttime="20201112 10:15:46.517" endtime="20201112 10:15:48.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31144805, 'wakeups': [31154876, 31164855, 31174835, 31184875, 31194854...</msg>
<status status="PASS" starttime="20201112 10:15:48.632" endtime="20201112 10:15:48.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.635" endtime="20201112 10:15:48.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.514" endtime="20201112 10:15:48.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.512" endtime="20201112 10:15:48.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.640" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [31154876, 31164855, 31174835, 31184875, 31194854, 31204833, 31214874, 31224853, 31234832, 31244873, 31254852, 31264831, 31274871, 31284851, 31294830, 31304870, 31314849,...</msg>
<status status="PASS" starttime="20201112 10:15:48.638" endtime="20201112 10:15:48.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.644" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:48.643" endtime="20201112 10:15:48.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.646" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:48.645" endtime="20201112 10:15:48.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.641" endtime="20201112 10:15:48.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.651" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:48.650" endtime="20201112 10:15:48.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.653" level="INFO">VALUE: 31144805</msg>
<status status="PASS" starttime="20201112 10:15:48.652" endtime="20201112 10:15:48.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.648" endtime="20201112 10:15:48.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.659" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:48.657" endtime="20201112 10:15:48.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.661" level="INFO">VALUE: [31154876, 31164855, 31174835, 31184875, 31194854, 31204833, 31214874, 31224853, 31234832, 31244873, 31254852, 31264831, 31274871, 31284851, 31294830, 31304870, 31314849, 31324829, 31334869, 31344848, 31354827, 31364868, 31374847, 31384826, 31394866, 31404846, 31414825, 31424896, 31434844, 31444824, 31454895, 31464843, 31474822, 31484893, 31494842, 31504821, 31514892, 31524841, 31534820, 31544891, 31554840, 31564819, 31574890, 31584838, 31594818, 31604888, 31614837, 31624816, 31634887, 31644836, 31654815, 31664886, 31674865, 31684814, 31694854, 31704895, 31714843, 31724822, 31734893, 31744842, 31754821, 31764892, 31774841, 31784820, 31794891, 31804840, 31814819, 31824890, 31834838, 31844818, 31854888, 31864837, 31874816, 31884857, 31894866, 31904846, 31914825, 31924896, 31934844, 31944824, 31954895, 31964843, 31974822, 31984893, 31994842, 32004821, 32014892, 32024841, 32034820, 32044891, 32054840, 32064819, 32074890, 32084838, 32094818, 32104888, 32114837, 32124816, 32134887, 32144836]</msg>
<status status="PASS" starttime="20201112 10:15:48.660" endtime="20201112 10:15:48.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.655" endtime="20201112 10:15:48.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.669" endtime="20201112 10:15:48.963"></status>
</kw>
<msg timestamp="20201112 10:15:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034466, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:48.667" endtime="20201112 10:15:48.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034466, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:48.967" endtime="20201112 10:15:48.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.974" endtime="20201112 10:15:48.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.664" endtime="20201112 10:15:48.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.662" endtime="20201112 10:15:48.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.001" level="INFO">${RESULT} = {'time': [0.024381083, 0.034466, 0.044439903, 0.054431764, 0.064463625, 0.074437833, 0.084429528, 0.094461333, 0.104435597, 0.114427403, 0.124459264, 0.134433431, 0.144425181, 0.154457056, 0.164431194...</msg>
<status status="PASS" starttime="20201112 10:15:48.978" endtime="20201112 10:15:49.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.005" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:49.004" endtime="20201112 10:15:49.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.007" level="INFO">VALUE: 0.024381083</msg>
<status status="PASS" starttime="20201112 10:15:49.006" endtime="20201112 10:15:49.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.002" endtime="20201112 10:15:49.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.013" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:49.012" endtime="20201112 10:15:49.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.015" level="INFO">VALUE: [0.034466, 0.044439903, 0.054431764, 0.064463625, 0.074437833, 0.084429528, 0.094461333, 0.104435597, 0.114427403, 0.124459264, 0.134433431, 0.144425181, 0.154457056, 0.164431194, 0.174423014, 0.184454847, 0.194429069, 0.204420819, 0.21445275, 0.224426917, 0.234418625, 0.244450486, 0.254424667, 0.264416542, 0.274448236, 0.284422458, 0.29441425, 0.304476667, 0.314420417, 0.324412139, 0.334474486, 0.344418236, 0.354409958, 0.364472278, 0.374415986, 0.384407736, 0.394470097, 0.404413847, 0.414405625, 0.424467986, 0.434411639, 0.444403361, 0.454465764, 0.464409486, 0.47440125, 0.484463583, 0.494407236, 0.504399, 0.514461431, 0.524405111, 0.534396889, 0.544459139, 0.554433458, 0.564394583, 0.574439319, 0.584466542, 0.594410153, 0.604401931, 0.614464278, 0.624408014, 0.634399778, 0.644462097, 0.654405722, 0.664397542, 0.674459972, 0.684403625, 0.694395417, 0.704457833, 0.714401444, 0.72439325, 0.734455569, 0.744399292, 0.754390972, 0.764435681, 0.774432292, 0.784406583, 0.794398278, 0.804460694, 0.814404417, 0.824396153, 0.834458431, 0.844402181, 0.854394, 0.864456222, 0.874399944, 0.884391736, 0.894454153, 0.904397778, 0.914389611, 0.924451917, 0.934395653, 0.944387417, 0.954449778, 0.964393514, 0.974385236, 0.984447653, 0.994391333, 1.004383097, 1.014445472, 1.024389125] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:49.014" endtime="20201112 10:15:49.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.009" endtime="20201112 10:15:49.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.018" endtime="20201112 10:15:49.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.039" endtime="20201112 10:15:49.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.038" endtime="20201112 10:15:49.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.016" endtime="20201112 10:15:49.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.511" endtime="20201112 10:15:49.060"></status>
</kw>
<msg timestamp="20201112 10:15:49.060" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.069" endtime="20201112 10:15:51.182"></status>
</kw>
<msg timestamp="20201112 10:15:51.183" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33697357, 'wakeups': [33707427, 33717407, 33727386, 33737426, 33747406...</msg>
<status status="PASS" starttime="20201112 10:15:49.068" endtime="20201112 10:15:51.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.186" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33697357, 'wakeups': [33707427, 33717407, 33727386, 33737426, 33747406...</msg>
<status status="PASS" starttime="20201112 10:15:51.184" endtime="20201112 10:15:51.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.187" endtime="20201112 10:15:51.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.064" endtime="20201112 10:15:51.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.062" endtime="20201112 10:15:51.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.192" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [33707427, 33717407, 33727386, 33737426, 33747406, 33757385, 33767425, 33777404, 33787384, 33797424, 33807403, 33817382, 33827423, 33837402, 33847381, 33857421, 33867401,...</msg>
<status status="PASS" starttime="20201112 10:15:51.190" endtime="20201112 10:15:51.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.196" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:51.195" endtime="20201112 10:15:51.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.198" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:51.197" endtime="20201112 10:15:51.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.193" endtime="20201112 10:15:51.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.203" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.202" endtime="20201112 10:15:51.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.205" level="INFO">VALUE: 33697357</msg>
<status status="PASS" starttime="20201112 10:15:51.204" endtime="20201112 10:15:51.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.200" endtime="20201112 10:15:51.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.210" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.209" endtime="20201112 10:15:51.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.212" level="INFO">VALUE: [33707427, 33717407, 33727386, 33737426, 33747406, 33757385, 33767425, 33777404, 33787384, 33797424, 33807403, 33817382, 33827423, 33837402, 33847381, 33857421, 33867401, 33877380, 33887420, 33897399, 33907379, 33917419, 33927398, 33937377, 33947448, 33957397, 33967376, 33977416, 33987426, 33997406, 34007385, 34017425, 34027404, 34037384, 34047424, 34057403, 34067382, 34077423, 34087402, 34097381, 34107421, 34117401, 34127380, 34137420, 34147399, 34157379, 34167388, 34177429, 34187408, 34197387, 34207427, 34217407, 34227386, 34237426, 34247406, 34257385, 34267395, 34277435, 34287414, 34297363, 34307403, 34317443, 34327392, 34337371, 34347442, 34357391, 34367370, 34377441, 34387390, 34397369, 34407440, 34417388, 34427368, 34437438, 34447418, 34457366, 34467437, 34477416, 34487365, 34497436, 34507415, 34517364, 34527435, 34537414, 34547363, 34557434, 34567413, 34577362, 34587432, 34597412, 34607360, 34617431, 34627410, 34637359, 34647399, 34657440, 34667388, 34677368, 34687438, 34697418]</msg>
<status status="PASS" starttime="20201112 10:15:51.211" endtime="20201112 10:15:51.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.207" endtime="20201112 10:15:51.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.220" endtime="20201112 10:15:51.512"></status>
</kw>
<msg timestamp="20201112 10:15:51.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033711931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.218" endtime="20201112 10:15:51.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033711931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.516" endtime="20201112 10:15:51.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.524" endtime="20201112 10:15:51.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.215" endtime="20201112 10:15:51.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.214" endtime="20201112 10:15:51.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.551" level="INFO">${RESULT} = {'time': [0.023637069, 0.033711931, 0.043686083, 0.053677847, 0.063709639, 0.073683875, 0.083675611, 0.093707417, 0.103681681, 0.113673444, 0.123705292, 0.133679472, 0.143671153, 0.153703083, 0.163677...</msg>
<status status="PASS" starttime="20201112 10:15:51.527" endtime="20201112 10:15:51.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.556" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.555" endtime="20201112 10:15:51.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.558" level="INFO">VALUE: 0.023637069</msg>
<status status="PASS" starttime="20201112 10:15:51.557" endtime="20201112 10:15:51.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.552" endtime="20201112 10:15:51.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.563" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.562" endtime="20201112 10:15:51.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.565" level="INFO">VALUE: [0.033711931, 0.043686083, 0.053677847, 0.063709639, 0.073683875, 0.083675611, 0.093707417, 0.103681681, 0.113673444, 0.123705292, 0.133679472, 0.143671153, 0.153703083, 0.163677264, 0.173669056, 0.183700861, 0.193675111, 0.203666833, 0.21369875, 0.223672833, 0.233664792, 0.243696528, 0.253670736, 0.263662514, 0.273724889, 0.283668597, 0.293660264, 0.303704875, 0.313701583, 0.323675792, 0.333667569, 0.343699333, 0.353673639, 0.363665375, 0.373697111, 0.383671417, 0.393663208, 0.403695097, 0.413669208, 0.423661014, 0.433692903, 0.443667181, 0.453658792, 0.46369075, 0.473664944, 0.483656625, 0.493670778, 0.503698056, 0.513672278, 0.523663986, 0.533695667, 0.54367, 0.553661722, 0.563693667, 0.573667847, 0.583659542, 0.593673736, 0.603700972, 0.613675014, 0.623636333, 0.633680972, 0.643708042, 0.653651778, 0.663643625, 0.673706, 0.683649639, 0.693641444, 0.703703806, 0.7136475, 0.723639278, 0.733701611, 0.743645306, 0.753637097, 0.763699403, 0.773673611, 0.783634875, 0.793697264, 0.803671458, 0.813632694, 0.823695042, 0.83366925, 0.843630542, 0.853692861, 0.863667028, 0.873628347, 0.883690764, 0.893664958, 0.903626181, 0.9136885, 0.923662681, 0.933623944, 0.943686278, 0.953660556, 0.963621778, 0.973666431, 0.983693611, 0.993637347, 1.003629097, 1.013691444, 1.023665569] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:51.564" endtime="20201112 10:15:51.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.559" endtime="20201112 10:15:51.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.568" endtime="20201112 10:15:51.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.572" endtime="20201112 10:15:51.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.570" endtime="20201112 10:15:51.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.567" endtime="20201112 10:15:51.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.061" endtime="20201112 10:15:51.593"></status>
</kw>
<msg timestamp="20201112 10:15:51.593" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.601" endtime="20201112 10:15:53.727"></status>
</kw>
<msg timestamp="20201112 10:15:53.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36229827, 'wakeups': [36239898, 36249877, 36259857, 36269897, 36279876...</msg>
<status status="PASS" starttime="20201112 10:15:51.599" endtime="20201112 10:15:53.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36229827, 'wakeups': [36239898, 36249877, 36259857, 36269897, 36279876...</msg>
<status status="PASS" starttime="20201112 10:15:53.729" endtime="20201112 10:15:53.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.732" endtime="20201112 10:15:53.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.597" endtime="20201112 10:15:53.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.595" endtime="20201112 10:15:53.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.737" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [36239898, 36249877, 36259857, 36269897, 36279876, 36289855, 36299896, 36309875, 36319854, 36329895, 36339874, 36349853, 36359893, 36369873, 36379852, 36389892, 36399871,...</msg>
<status status="PASS" starttime="20201112 10:15:53.735" endtime="20201112 10:15:53.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.746" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:53.740" endtime="20201112 10:15:53.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.748" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:53.747" endtime="20201112 10:15:53.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.738" endtime="20201112 10:15:53.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.754" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:53.753" endtime="20201112 10:15:53.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.757" level="INFO">VALUE: 36229827</msg>
<status status="PASS" starttime="20201112 10:15:53.756" endtime="20201112 10:15:53.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.749" endtime="20201112 10:15:53.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.762" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:53.761" endtime="20201112 10:15:53.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.764" level="INFO">VALUE: [36239898, 36249877, 36259857, 36269897, 36279876, 36289855, 36299896, 36309875, 36319854, 36329895, 36339874, 36349853, 36359893, 36369873, 36379852, 36389892, 36399871, 36409851, 36419891, 36429870, 36439849, 36449890, 36459869, 36469848, 36479888, 36489868, 36499847, 36509918, 36519866, 36529846, 36539916, 36549865, 36559844, 36569915, 36579864, 36589843, 36599914, 36609863, 36619842, 36629913, 36639862, 36649841, 36659912, 36669860, 36679840, 36689910, 36699859, 36709838, 36719909, 36729858, 36739837, 36749908, 36759887, 36769836, 36779907, 36789886, 36799835, 36809906, 36819885, 36829833, 36839874, 36849914, 36859863, 36869842, 36879913, 36889862, 36899841, 36909912, 36919860, 36929840, 36939910, 36949859, 36959838, 36969909, 36979858, 36989837, 36999908, 37009887, 37019836, 37029907, 37039886, 37049835, 37059906, 37069885, 37079833, 37089904, 37099884, 37109832, 37119903, 37129882, 37139831, 37149902, 37159881, 37169830, 37179901, 37189880, 37199829, 37209899, 37219879, 37229827]</msg>
<status status="PASS" starttime="20201112 10:15:53.763" endtime="20201112 10:15:53.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.758" endtime="20201112 10:15:53.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.771" endtime="20201112 10:15:54.063"></status>
</kw>
<msg timestamp="20201112 10:15:54.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033479764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.770" endtime="20201112 10:15:54.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023396681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033479764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.067" endtime="20201112 10:15:54.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.074" endtime="20201112 10:15:54.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.767" endtime="20201112 10:15:54.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.765" endtime="20201112 10:15:54.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.101" level="INFO">${RESULT} = {'time': [0.023396681, 0.033479764, 0.043453889, 0.053445556, 0.063477403, 0.073451597, 0.083443347, 0.093475236, 0.103449472, 0.113441208, 0.123473056, 0.133447236, 0.143438972, 0.153470889, 0.163445...</msg>
<status status="PASS" starttime="20201112 10:15:54.078" endtime="20201112 10:15:54.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.111" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:54.110" endtime="20201112 10:15:54.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.113" level="INFO">VALUE: 0.023396681</msg>
<status status="PASS" starttime="20201112 10:15:54.112" endtime="20201112 10:15:54.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.107" endtime="20201112 10:15:54.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.119" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:54.118" endtime="20201112 10:15:54.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.121" level="INFO">VALUE: [0.033479764, 0.043453889, 0.053445556, 0.063477403, 0.073451597, 0.083443347, 0.093475236, 0.103449472, 0.113441208, 0.123473056, 0.133447236, 0.143438972, 0.153470889, 0.163445014, 0.173436806, 0.183468736, 0.193442931, 0.203434639, 0.213466431, 0.223440667, 0.233432514, 0.243464264, 0.2534385, 0.263430264, 0.273462167, 0.283436375, 0.293428083, 0.303490375, 0.313434181, 0.323425944, 0.33348825, 0.343431986, 0.353423736, 0.363486125, 0.373429792, 0.383421556, 0.393483944, 0.403427611, 0.413419431, 0.423481806, 0.433425486, 0.443417208, 0.453479444, 0.463423306, 0.473415, 0.483477361, 0.493421069, 0.503412861, 0.513475181, 0.523418847, 0.533410639, 0.543472972, 0.55344725, 0.563408542, 0.573470806, 0.583445083, 0.593406361, 0.603468569, 0.613442931, 0.623404083, 0.633448764, 0.643475889, 0.653419625, 0.663411417, 0.67347375, 0.683417458, 0.693409208, 0.703471625, 0.713415194, 0.723407083, 0.733469389, 0.743413069, 0.753404792, 0.763467208, 0.773410861, 0.783402736, 0.793465042, 0.80343925, 0.8134005, 0.823462875, 0.833437056, 0.843398306, 0.853460708, 0.863434931, 0.873396139, 0.883458486, 0.893432736, 0.903393944, 0.913456361, 0.923430556, 0.933391806, 0.943454194, 0.953428361, 0.963389597, 0.973451972, 0.983426208, 0.993387458, 1.003449792, 1.013424, 1.023385264] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:54.120" endtime="20201112 10:15:54.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.114" endtime="20201112 10:15:54.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.124" endtime="20201112 10:15:54.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.128" endtime="20201112 10:15:54.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.127" endtime="20201112 10:15:54.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.123" endtime="20201112 10:15:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.593" endtime="20201112 10:15:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.509" endtime="20201112 10:15:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.508" endtime="20201112 10:15:54.149"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:54.152" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.160" endtime="20201112 10:15:56.284"></status>
</kw>
<msg timestamp="20201112 10:15:56.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38787414, 'wakeups': [38797515, 38807495, 38817504, 38827453, 38837432...</msg>
<status status="PASS" starttime="20201112 10:15:54.158" endtime="20201112 10:15:56.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.288" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38787414, 'wakeups': [38797515, 38807495, 38817504, 38827453, 38837432...</msg>
<status status="PASS" starttime="20201112 10:15:56.286" endtime="20201112 10:15:56.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.289" endtime="20201112 10:15:56.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.156" endtime="20201112 10:15:56.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.154" endtime="20201112 10:15:56.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.294" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [38797515, 38807495, 38817504, 38827453, 38837432, 38847534, 38857482, 38867492, 38877471, 38887420, 38897521, 38907501, 38917480, 38927459, 38937438, 38947509, 38957489,...</msg>
<status status="PASS" starttime="20201112 10:15:56.292" endtime="20201112 10:15:56.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.298" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:56.297" endtime="20201112 10:15:56.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.301" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:56.300" endtime="20201112 10:15:56.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.295" endtime="20201112 10:15:56.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.306" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.305" endtime="20201112 10:15:56.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.308" level="INFO">VALUE: 38787414</msg>
<status status="PASS" starttime="20201112 10:15:56.307" endtime="20201112 10:15:56.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.302" endtime="20201112 10:15:56.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.313" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.312" endtime="20201112 10:15:56.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.315" level="INFO">VALUE: [38797515, 38807495, 38817504, 38827453, 38837432, 38847534, 38857482, 38867492, 38877471, 38887420, 38897521, 38907501, 38917480, 38927459, 38937438, 38947509, 38957489, 38967498, 38977447, 38987426, 38997528, 39007476, 39017486, 39027465, 39037475, 39047485, 39057464, 39067443, 39077514, 39087493, 39097503, 39107452, 39117431, 39127532, 39137481, 39147491, 39157470, 39167419, 39177520, 39187500, 39197479, 39207458, 39217437, 39227508, 39237487, 39247497, 39257446, 39267425, 39277526, 39287506, 39297485, 39307495, 39317474, 39327423, 39337524, 39347503, 39357482, 39367462, 39377441, 39387512, 39397491, 39407501, 39417449, 39427429, 39437530, 39447479, 39457489, 39467468, 39477416, 39487518, 39497497, 39507476, 39517456, 39527435, 39537475, 39547454, 39557434, 39567535, 39577484, 39587493, 39597473, 39607421, 39617523, 39627502, 39637481, 39647460, 39657440, 39667510, 39677490, 39687500, 39697448, 39707427, 39717529, 39727478, 39737487, 39747467, 39757415, 39767517, 39777496, 39787445]</msg>
<status status="PASS" starttime="20201112 10:15:56.314" endtime="20201112 10:15:56.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.309" endtime="20201112 10:15:56.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.324" endtime="20201112 10:15:56.616"></status>
</kw>
<msg timestamp="20201112 10:15:56.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.322" endtime="20201112 10:15:56.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034454958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.620" endtime="20201112 10:15:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.628" endtime="20201112 10:15:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.318" endtime="20201112 10:15:56.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.317" endtime="20201112 10:15:56.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.654" level="INFO">${RESULT} = {'time': [0.024350528, 0.034454958, 0.044445819, 0.054437083, 0.064397792, 0.074388958, 0.084471375, 0.094431903, 0.104423319, 0.114414556, 0.124375111, 0.134457569, 0.144448708, 0.154409306, 0.164400...</msg>
<status status="PASS" starttime="20201112 10:15:56.631" endtime="20201112 10:15:56.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.659" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.658" endtime="20201112 10:15:56.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.661" level="INFO">VALUE: 0.024350528</msg>
<status status="PASS" starttime="20201112 10:15:56.660" endtime="20201112 10:15:56.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.655" endtime="20201112 10:15:56.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.666" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.665" endtime="20201112 10:15:56.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.668" level="INFO">VALUE: [0.034454958, 0.044445819, 0.054437083, 0.064397792, 0.074388958, 0.084471375, 0.094431903, 0.104423319, 0.114414556, 0.124375111, 0.134457569, 0.144448708, 0.154409306, 0.164400722, 0.174391833, 0.184443819, 0.194434944, 0.204426069, 0.214386903, 0.224378042, 0.2344605, 0.244421125, 0.254412361, 0.264403653, 0.274419125, 0.284410111, 0.294401458, 0.304392611, 0.314444556, 0.324435639, 0.334426917, 0.344387611, 0.35437875, 0.364461236, 0.374421833, 0.384413042, 0.394404333, 0.404364944, 0.414447444, 0.424438611, 0.434399306, 0.444390528, 0.454381708, 0.464433681, 0.474424708, 0.484416069, 0.49437675, 0.504367903, 0.514449569, 0.524429403, 0.534420375, 0.544411625, 0.554402875, 0.564363528, 0.574445986, 0.584437139, 0.594397694, 0.604389083, 0.614380222, 0.624432208, 0.634423292, 0.644414514, 0.654375292, 0.664366431, 0.674448819, 0.684409431, 0.694400764, 0.704392014, 0.714352569, 0.724435069, 0.734426097, 0.744386931, 0.754378111, 0.764369292, 0.774384917, 0.784376056, 0.794367083, 0.804449639, 0.814410264, 0.824401333, 0.834392722, 0.844353389, 0.854435833, 0.864426889, 0.874387569, 0.884378875, 0.894370111, 0.904422014, 0.914413167, 0.924404375, 0.934365125, 0.944356264, 0.954438722, 0.964399347, 0.974390542, 0.984381889, 0.994342514, 1.004424903, 1.014415792, 1.024358819] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:56.667" endtime="20201112 10:15:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.662" endtime="20201112 10:15:56.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.672" endtime="20201112 10:15:56.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.676" endtime="20201112 10:15:56.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.674" endtime="20201112 10:15:56.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.670" endtime="20201112 10:15:56.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.152" endtime="20201112 10:15:56.696"></status>
</kw>
<msg timestamp="20201112 10:15:56.697" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.706" endtime="20201112 10:15:58.834"></status>
</kw>
<msg timestamp="20201112 10:15:58.835" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41334960, 'wakeups': [41345062, 41355041, 41365051, 41375000, 41384979...</msg>
<status status="PASS" starttime="20201112 10:15:56.705" endtime="20201112 10:15:58.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.839" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41334960, 'wakeups': [41345062, 41355041, 41365051, 41375000, 41384979...</msg>
<status status="PASS" starttime="20201112 10:15:58.837" endtime="20201112 10:15:58.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.840" endtime="20201112 10:15:58.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.701" endtime="20201112 10:15:58.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.699" endtime="20201112 10:15:58.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.845" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [41345062, 41355041, 41365051, 41375000, 41384979, 41395080, 41405029, 41415039, 41425018, 41434967, 41445068, 41455047, 41465026, 41475006, 41484985, 41495056, 41505035,...</msg>
<status status="PASS" starttime="20201112 10:15:58.843" endtime="20201112 10:15:58.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.849" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:58.848" endtime="20201112 10:15:58.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.851" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:58.850" endtime="20201112 10:15:58.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.846" endtime="20201112 10:15:58.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.856" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:58.855" endtime="20201112 10:15:58.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.858" level="INFO">VALUE: 41334960</msg>
<status status="PASS" starttime="20201112 10:15:58.857" endtime="20201112 10:15:58.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.853" endtime="20201112 10:15:58.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.863" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:58.862" endtime="20201112 10:15:58.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.866" level="INFO">VALUE: [41345062, 41355041, 41365051, 41375000, 41384979, 41395080, 41405029, 41415039, 41425018, 41434967, 41445068, 41455047, 41465026, 41475006, 41484985, 41495056, 41505035, 41515045, 41524993, 41534973, 41545074, 41555023, 41565032, 41575012, 41584960, 41595062, 41605041, 41615051, 41625000, 41634979, 41645080, 41655029, 41665039, 41675018, 41684967, 41695068, 41705047, 41715026, 41725006, 41734985, 41745056, 41755035, 41765045, 41774993, 41784973, 41795074, 41805023, 41815032, 41825012, 41834960, 41845062, 41855041, 41865051, 41875000, 41884979, 41895080, 41905029, 41915039, 41925018, 41934967, 41945068, 41955047, 41965026, 41975006, 41984985, 41995056, 42005035, 42015045, 42024993, 42034973, 42045074, 42055023, 42065032, 42075012, 42084960, 42095062, 42105041, 42115051, 42125000, 42134979, 42145080, 42155029, 42165039, 42175018, 42184967, 42195068, 42205047, 42215026, 42225006, 42234985, 42245056, 42255035, 42265045, 42274993, 42284973, 42295074, 42305023, 42315032, 42325012, 42334960]</msg>
<status status="PASS" starttime="20201112 10:15:58.864" endtime="20201112 10:15:58.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.860" endtime="20201112 10:15:58.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.874" endtime="20201112 10:15:59.164"></status>
</kw>
<msg timestamp="20201112 10:15:59.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023994319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034098361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.872" endtime="20201112 10:15:59.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023994319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034098361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.168" endtime="20201112 10:15:59.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.175" endtime="20201112 10:15:59.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.869" endtime="20201112 10:15:59.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.867" endtime="20201112 10:15:59.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.202" level="INFO">${RESULT} = {'time': [0.023994319, 0.034098361, 0.044089222, 0.054080389, 0.064041139, 0.074032333, 0.08411475, 0.094075347, 0.104066583, 0.114057875, 0.124018431, 0.134100944, 0.144092028, 0.154052792, 0.1640440...</msg>
<status status="PASS" starttime="20201112 10:15:59.179" endtime="20201112 10:15:59.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.207" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:59.206" endtime="20201112 10:15:59.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.209" level="INFO">VALUE: 0.023994319</msg>
<status status="PASS" starttime="20201112 10:15:59.208" endtime="20201112 10:15:59.209"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.203" endtime="20201112 10:15:59.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.214" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:59.213" endtime="20201112 10:15:59.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.217" level="INFO">VALUE: [0.034098361, 0.044089222, 0.054080389, 0.064041139, 0.074032333, 0.08411475, 0.094075347, 0.104066583, 0.114057875, 0.124018431, 0.134100944, 0.144092028, 0.154052792, 0.164044056, 0.174035167, 0.184087167, 0.19407825, 0.204069514, 0.214030194, 0.224021389, 0.234103778, 0.244064444, 0.254055597, 0.264046944, 0.274007625, 0.28409, 0.294081069, 0.304072417, 0.314033111, 0.324024319, 0.334106722, 0.344067347, 0.354058625, 0.364049861, 0.374010417, 0.384092875, 0.394083972, 0.404044778, 0.414036042, 0.424027181, 0.434079083, 0.44407025, 0.454061431, 0.464022306, 0.474013444, 0.484095833, 0.494056458, 0.504047694, 0.514038917, 0.523999639, 0.534082028, 0.544073125, 0.554064403, 0.564025153, 0.574016278, 0.584098806, 0.594059347, 0.604050625, 0.614041889, 0.624002542, 0.634084944, 0.644076125, 0.654036792, 0.664028028, 0.674019208, 0.684071125, 0.69406225, 0.704053569, 0.714014208, 0.724005347, 0.734087861, 0.744048486, 0.754039597, 0.764030931, 0.773991597, 0.784074056, 0.794065222, 0.804056333, 0.814017111, 0.824008417, 0.834090694, 0.844051403, 0.854042653, 0.864033875, 0.873994472, 0.884076861, 0.894068056, 0.904028722, 0.914020083, 0.924011208, 0.934063167, 0.944054264, 0.954045542, 0.964006236, 0.973997444, 0.984079806, 0.994040431, 1.004031653, 1.014022917, 1.023983611] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:59.216" endtime="20201112 10:15:59.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.210" endtime="20201112 10:15:59.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.220" endtime="20201112 10:15:59.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.223" endtime="20201112 10:15:59.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.222" endtime="20201112 10:15:59.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.218" endtime="20201112 10:15:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.697" endtime="20201112 10:15:59.244"></status>
</kw>
<msg timestamp="20201112 10:15:59.244" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.252" endtime="20201112 10:16:01.384"></status>
</kw>
<msg timestamp="20201112 10:16:01.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43882476, 'wakeups': [43892578, 43902557, 43912567, 43922515, 43932495...</msg>
<status status="PASS" starttime="20201112 10:15:59.251" endtime="20201112 10:16:01.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43882476, 'wakeups': [43892578, 43902557, 43912567, 43922515, 43932495...</msg>
<status status="PASS" starttime="20201112 10:16:01.388" endtime="20201112 10:16:01.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.393" endtime="20201112 10:16:01.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.248" endtime="20201112 10:16:01.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.246" endtime="20201112 10:16:01.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.398" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [43892578, 43902557, 43912567, 43922515, 43932495, 43942596, 43952545, 43962554, 43972534, 43982482, 43992584, 44002563, 44012542, 44022521, 44032501, 44042572, 44052551,...</msg>
<status status="PASS" starttime="20201112 10:16:01.396" endtime="20201112 10:16:01.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.402" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:01.401" endtime="20201112 10:16:01.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.404" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:01.403" endtime="20201112 10:16:01.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.399" endtime="20201112 10:16:01.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.409" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:01.408" endtime="20201112 10:16:01.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.413" level="INFO">VALUE: 43882476</msg>
<status status="PASS" starttime="20201112 10:16:01.411" endtime="20201112 10:16:01.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.406" endtime="20201112 10:16:01.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.418" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:01.416" endtime="20201112 10:16:01.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.420" level="INFO">VALUE: [43892578, 43902557, 43912567, 43922515, 43932495, 43942596, 43952545, 43962554, 43972534, 43982482, 43992584, 44002563, 44012542, 44022521, 44032501, 44042572, 44052551, 44062561, 44072509, 44082489, 44092590, 44102539, 44112548, 44122528, 44132476, 44142578, 44152557, 44162567, 44172515, 44182495, 44192596, 44202545, 44212554, 44222534, 44232482, 44242584, 44252563, 44262542, 44272521, 44282501, 44292572, 44302551, 44312561, 44322509, 44332489, 44342590, 44352539, 44362548, 44372528, 44382476, 44392578, 44402557, 44412567, 44422515, 44432495, 44442596, 44452545, 44462554, 44472534, 44482482, 44492584, 44502563, 44512542, 44522521, 44532501, 44542572, 44552551, 44562561, 44572509, 44582489, 44592590, 44602539, 44612548, 44622528, 44632476, 44642578, 44652557, 44662567, 44672515, 44682495, 44692596, 44702545, 44712554, 44722534, 44732482, 44742584, 44752563, 44762542, 44772521, 44782501, 44792572, 44802551, 44812561, 44822509, 44832489, 44842590, 44852539, 44862548, 44872528, 44882476]</msg>
<status status="PASS" starttime="20201112 10:16:01.419" endtime="20201112 10:16:01.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.414" endtime="20201112 10:16:01.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.427" endtime="20201112 10:16:01.719"></status>
</kw>
<msg timestamp="20201112 10:16:01.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033619931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.426" endtime="20201112 10:16:01.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033619931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.723" endtime="20201112 10:16:01.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.730" endtime="20201112 10:16:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.423" endtime="20201112 10:16:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.421" endtime="20201112 10:16:01.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.757" level="INFO">${RESULT} = {'time': [0.023526597, 0.033619931, 0.043610597, 0.053601806, 0.063562542, 0.073553667, 0.08363625, 0.093596764, 0.103587986, 0.11357925, 0.123539847, 0.133622306, 0.143613472, 0.153574181, 0.16356547...</msg>
<status status="PASS" starttime="20201112 10:16:01.734" endtime="20201112 10:16:01.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.762" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:01.761" endtime="20201112 10:16:01.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.764" level="INFO">VALUE: 0.023526597</msg>
<status status="PASS" starttime="20201112 10:16:01.763" endtime="20201112 10:16:01.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.758" endtime="20201112 10:16:01.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.769" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:01.768" endtime="20201112 10:16:01.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.772" level="INFO">VALUE: [0.033619931, 0.043610597, 0.053601806, 0.063562542, 0.073553667, 0.08363625, 0.093596764, 0.103587986, 0.11357925, 0.123539847, 0.133622306, 0.143613472, 0.153574181, 0.163565472, 0.173556597, 0.1836085, 0.193599667, 0.203590819, 0.213551583, 0.22354275, 0.233625111, 0.243585833, 0.253577097, 0.263568403, 0.273528958, 0.283611431, 0.293602611, 0.303593736, 0.3135545, 0.323545625, 0.333628097, 0.343588778, 0.35358, 0.363571167, 0.373531847, 0.383614222, 0.393605444, 0.403566125, 0.413557417, 0.423548556, 0.4336005, 0.443591597, 0.453582861, 0.463543611, 0.473534764, 0.483617111, 0.493577819, 0.503568972, 0.51356025, 0.523520958, 0.533603444, 0.543594597, 0.553585792, 0.563546417, 0.573537667, 0.583620097, 0.593580806, 0.603571972, 0.613563208, 0.623523847, 0.633606319, 0.643597458, 0.653558167, 0.663549361, 0.673540528, 0.683592569, 0.693583639, 0.703574764, 0.713535597, 0.723526736, 0.73360925, 0.743569903, 0.753560931, 0.763552361, 0.773512958, 0.783595444, 0.793586542, 0.803577764, 0.8135385, 0.823529653, 0.833612125, 0.843572722, 0.853564, 0.863555208, 0.873515917, 0.883598333, 0.893589486, 0.903550125, 0.913541417, 0.923532583, 0.933584569, 0.943575569, 0.953566889, 0.963527556, 0.97351875, 0.983601278, 0.993561806, 1.003553097, 1.013544333, 1.023504972] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:01.771" endtime="20201112 10:16:01.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.765" endtime="20201112 10:16:01.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.775" endtime="20201112 10:16:01.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.779" endtime="20201112 10:16:01.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.777" endtime="20201112 10:16:01.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.773" endtime="20201112 10:16:01.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.245" endtime="20201112 10:16:01.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.150" endtime="20201112 10:16:01.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.150" endtime="20201112 10:16:01.800"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:01.802" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.811" endtime="20201112 10:16:03.938"></status>
</kw>
<msg timestamp="20201112 10:16:03.940" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46440093, 'wakeups': [46450195, 46460205, 46470214, 46480194, 46490203...</msg>
<status status="PASS" starttime="20201112 10:16:01.809" endtime="20201112 10:16:03.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46440093, 'wakeups': [46450195, 46460205, 46470214, 46480194, 46490203...</msg>
<status status="PASS" starttime="20201112 10:16:03.942" endtime="20201112 10:16:03.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.947" endtime="20201112 10:16:03.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.806" endtime="20201112 10:16:03.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.804" endtime="20201112 10:16:03.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:03.953" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [46450195, 46460205, 46470214, 46480194, 46490203, 46500213, 46510192, 46520202, 46530212, 46540191, 46550201, 46560211, 46570190, 46580200, 46590209, 46600189, 46610198,...</msg>
<status status="PASS" starttime="20201112 10:16:03.951" endtime="20201112 10:16:03.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.957" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:03.956" endtime="20201112 10:16:03.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.959" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:03.958" endtime="20201112 10:16:03.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.954" endtime="20201112 10:16:03.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.964" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:03.963" endtime="20201112 10:16:03.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.966" level="INFO">VALUE: 46440093</msg>
<status status="PASS" starttime="20201112 10:16:03.965" endtime="20201112 10:16:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.961" endtime="20201112 10:16:03.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.971" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:03.970" endtime="20201112 10:16:03.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.973" level="INFO">VALUE: [46450195, 46460205, 46470214, 46480194, 46490203, 46500213, 46510192, 46520202, 46530212, 46540191, 46550201, 46560211, 46570190, 46580200, 46590209, 46600189, 46610198, 46620208, 46630187, 46640197, 46650207, 46660186, 46670196, 46680206, 46690185, 46700195, 46710205, 46720214, 46730194, 46740203, 46750213, 46760192, 46770202, 46780212, 46790191, 46800201, 46810211, 46820190, 46830200, 46840209, 46850189, 46860198, 46870208, 46880187, 46890197, 46900207, 46910186, 46920196, 46930206, 46940185, 46950195, 46960205, 46970214, 46980194, 46990203, 47000213, 47010192, 47020202, 47030212, 47040191, 47050201, 47060211, 47070190, 47080200, 47090209, 47100189, 47110198, 47120208, 47130187, 47140197, 47150207, 47160186, 47170196, 47180206, 47190185, 47200195, 47210205, 47220214, 47230194, 47240203, 47250213, 47260192, 47270202, 47280212, 47290191, 47300201, 47310211, 47320190, 47330200, 47340209, 47350189, 47360198, 47370208, 47380187, 47390197, 47400207, 47410186, 47420196, 47430206, 47440185]</msg>
<status status="PASS" starttime="20201112 10:16:03.972" endtime="20201112 10:16:03.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.968" endtime="20201112 10:16:03.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.982" endtime="20201112 10:16:04.276"></status>
</kw>
<msg timestamp="20201112 10:16:04.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025383556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035511694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.979" endtime="20201112 10:16:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025383556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035511694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.279" endtime="20201112 10:16:04.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.287" endtime="20201112 10:16:04.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.977" endtime="20201112 10:16:04.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.975" endtime="20201112 10:16:04.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.313" level="INFO">${RESULT} = {'time': [0.025383556, 0.035511694, 0.04552075, 0.055530194, 0.065509069, 0.075518597, 0.085528, 0.095506944, 0.105516347, 0.115525819, 0.125504708, 0.135514278, 0.145523736, 0.155502556, 0.165512125,...</msg>
<status status="PASS" starttime="20201112 10:16:04.290" endtime="20201112 10:16:04.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.318" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.317" endtime="20201112 10:16:04.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.320" level="INFO">VALUE: 0.025383556</msg>
<status status="PASS" starttime="20201112 10:16:04.319" endtime="20201112 10:16:04.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.314" endtime="20201112 10:16:04.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.325" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.324" endtime="20201112 10:16:04.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.328" level="INFO">VALUE: [0.035511694, 0.04552075, 0.055530194, 0.065509069, 0.075518597, 0.085528, 0.095506944, 0.105516347, 0.115525819, 0.125504708, 0.135514278, 0.145523736, 0.155502556, 0.165512125, 0.175521542, 0.185500375, 0.195509819, 0.205519306, 0.215498194, 0.225507722, 0.235517181, 0.245496208, 0.255505528, 0.265514889, 0.275493847, 0.285503431, 0.295512806, 0.305522236, 0.315501236, 0.325510625, 0.335520028, 0.345499042, 0.355508472, 0.365517972, 0.375496861, 0.385506319, 0.395515736, 0.405494722, 0.415504139, 0.425513639, 0.435492542, 0.445501917, 0.455511319, 0.465490264, 0.475499792, 0.485509264, 0.495487986, 0.505497486, 0.515507083, 0.525485861, 0.535495431, 0.545504861, 0.555514306, 0.565493236, 0.575502653, 0.585511986, 0.595490917, 0.605500375, 0.615509903, 0.625488778, 0.635498319, 0.645507806, 0.655486653, 0.665496125, 0.675505583, 0.685484611, 0.695493972, 0.705503375, 0.715482208, 0.725491764, 0.735501167, 0.745480181, 0.7554895, 0.765499014, 0.775477944, 0.785487403, 0.795496875, 0.805506194, 0.815485222, 0.825494639, 0.835504056, 0.845483069, 0.855492417, 0.865501903, 0.875480792, 0.885490347, 0.895499778, 0.905478736, 0.915488167, 0.925497569, 0.935476583, 0.945485917, 0.955495431, 0.965474389, 0.975483833, 0.985493222, 0.995472167, 1.005481444, 1.015491, 1.025469917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:04.327" endtime="20201112 10:16:04.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.321" endtime="20201112 10:16:04.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.331" endtime="20201112 10:16:04.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.334" endtime="20201112 10:16:04.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.333" endtime="20201112 10:16:04.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.329" endtime="20201112 10:16:04.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.803" endtime="20201112 10:16:04.355"></status>
</kw>
<msg timestamp="20201112 10:16:04.356" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.365" endtime="20201112 10:16:06.490"></status>
</kw>
<msg timestamp="20201112 10:16:06.491" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48992645, 'wakeups': [49002777, 49012756, 49022735, 49032745, 49042724...</msg>
<status status="PASS" starttime="20201112 10:16:04.363" endtime="20201112 10:16:06.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48992645, 'wakeups': [49002777, 49012756, 49022735, 49032745, 49042724...</msg>
<status status="PASS" starttime="20201112 10:16:06.494" endtime="20201112 10:16:06.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.500" endtime="20201112 10:16:06.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.359" endtime="20201112 10:16:06.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.358" endtime="20201112 10:16:06.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.506" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [49002777, 49012756, 49022735, 49032745, 49042724, 49052764, 49062713, 49072753, 49082733, 49092742, 49102722, 49112762, 49122711, 49132751, 49142730, 49152740, 49162719,...</msg>
<status status="PASS" starttime="20201112 10:16:06.504" endtime="20201112 10:16:06.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.510" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:06.509" endtime="20201112 10:16:06.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.512" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:06.511" endtime="20201112 10:16:06.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.507" endtime="20201112 10:16:06.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.517" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:06.516" endtime="20201112 10:16:06.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.519" level="INFO">VALUE: 48992645</msg>
<status status="PASS" starttime="20201112 10:16:06.518" endtime="20201112 10:16:06.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.514" endtime="20201112 10:16:06.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.524" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:06.523" endtime="20201112 10:16:06.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.533" level="INFO">VALUE: [49002777, 49012756, 49022735, 49032745, 49042724, 49052764, 49062713, 49072753, 49082733, 49092742, 49102722, 49112762, 49122711, 49132751, 49142730, 49152740, 49162719, 49172760, 49182708, 49192749, 49202728, 49212738, 49222717, 49232757, 49242736, 49252716, 49262756, 49272735, 49282745, 49292724, 49302764, 49312713, 49322753, 49332733, 49342742, 49352722, 49362762, 49372711, 49382751, 49392730, 49402740, 49412719, 49422760, 49432708, 49442749, 49452728, 49462738, 49472717, 49482757, 49492736, 49502716, 49512756, 49522735, 49532745, 49542724, 49552764, 49562713, 49572753, 49582733, 49592742, 49602722, 49612762, 49622711, 49632751, 49642730, 49652740, 49662719, 49672760, 49682708, 49692749, 49702728, 49712738, 49722717, 49732757, 49742736, 49752716, 49762756, 49772735, 49782745, 49792724, 49802764, 49812713, 49822753, 49832733, 49842742, 49852722, 49862762, 49872711, 49882751, 49892730, 49902740, 49912719, 49922760, 49932708, 49942749, 49952728, 49962738, 49972717, 49982757, 49992736]</msg>
<status status="PASS" starttime="20201112 10:16:06.531" endtime="20201112 10:16:06.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.521" endtime="20201112 10:16:06.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.540" endtime="20201112 10:16:06.833"></status>
</kw>
<msg timestamp="20201112 10:16:06.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031867972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.539" endtime="20201112 10:16:06.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031867972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.837" endtime="20201112 10:16:06.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.844" endtime="20201112 10:16:06.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.536" endtime="20201112 10:16:06.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.534" endtime="20201112 10:16:06.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.871" level="INFO">${RESULT} = {'time': [0.021746597, 0.031867972, 0.041848181, 0.051838764, 0.061836583, 0.071827083, 0.081855569, 0.091815528, 0.101843958, 0.111834333, 0.121832347, 0.131822667, 0.141851181, 0.151810931, 0.161839...</msg>
<status status="PASS" starttime="20201112 10:16:06.847" endtime="20201112 10:16:06.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.876" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:06.875" endtime="20201112 10:16:06.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.878" level="INFO">VALUE: 0.021746597</msg>
<status status="PASS" starttime="20201112 10:16:06.877" endtime="20201112 10:16:06.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.872" endtime="20201112 10:16:06.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.883" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:06.882" endtime="20201112 10:16:06.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.885" level="INFO">VALUE: [0.031867972, 0.041848181, 0.051838764, 0.061836583, 0.071827083, 0.081855569, 0.091815528, 0.101843958, 0.111834333, 0.121832347, 0.131822667, 0.141851181, 0.151810931, 0.161839444, 0.17183, 0.181827833, 0.191818375, 0.201846847, 0.211806736, 0.22183525, 0.231825694, 0.241823597, 0.251814014, 0.261841625, 0.271821472, 0.281811819, 0.29184025, 0.301830722, 0.311828653, 0.321819125, 0.331847472, 0.341807486, 0.351835889, 0.361826292, 0.371824333, 0.381814625, 0.391843194, 0.401803097, 0.411831583, 0.421821944, 0.431819889, 0.441810389, 0.451838819, 0.461798792, 0.471827139, 0.481817722, 0.491815667, 0.501806083, 0.511833694, 0.521813417, 0.531803778, 0.541832208, 0.551822778, 0.561820569, 0.571811056, 0.5818395, 0.591799375, 0.601827833, 0.611818222, 0.621816347, 0.631806681, 0.641835153, 0.651795111, 0.661823569, 0.671814014, 0.681811847, 0.691802403, 0.701830833, 0.711790694, 0.721819222, 0.731809625, 0.741807611, 0.751798056, 0.761825722, 0.771805486, 0.781795819, 0.791824181, 0.801814694, 0.811812708, 0.821803139, 0.831831611, 0.8417915, 0.851819972, 0.861810389, 0.871808292, 0.88179875, 0.891827194, 0.901787083, 0.911815625, 0.921806069, 0.931804014, 0.941794417, 0.951822847, 0.961782722, 0.971811306, 0.981801639, 0.991799597, 1.001790083, 1.011817611, 1.021797583] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:06.884" endtime="20201112 10:16:06.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.879" endtime="20201112 10:16:06.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.888" endtime="20201112 10:16:06.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:06.892" endtime="20201112 10:16:06.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.890" endtime="20201112 10:16:06.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.887" endtime="20201112 10:16:06.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.356" endtime="20201112 10:16:06.913"></status>
</kw>
<msg timestamp="20201112 10:16:06.913" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.921" endtime="20201112 10:16:09.048"></status>
</kw>
<msg timestamp="20201112 10:16:09.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51550231, 'wakeups': [51560333, 51570343, 51580352, 51590332, 51600341...</msg>
<status status="PASS" starttime="20201112 10:16:06.920" endtime="20201112 10:16:09.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.055" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51550231, 'wakeups': [51560333, 51570343, 51580352, 51590332, 51600341...</msg>
<status status="PASS" starttime="20201112 10:16:09.052" endtime="20201112 10:16:09.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.057" endtime="20201112 10:16:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.917" endtime="20201112 10:16:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.915" endtime="20201112 10:16:09.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.063" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [51560333, 51570343, 51580352, 51590332, 51600341, 51610351, 51620330, 51630340, 51640350, 51650329, 51660339, 51670349, 51680328, 51690338, 51700347, 51710327, 51720336,...</msg>
<status status="PASS" starttime="20201112 10:16:09.061" endtime="20201112 10:16:09.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.067" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:09.066" endtime="20201112 10:16:09.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.069" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:09.068" endtime="20201112 10:16:09.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.064" endtime="20201112 10:16:09.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.075" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.074" endtime="20201112 10:16:09.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.077" level="INFO">VALUE: 51550231</msg>
<status status="PASS" starttime="20201112 10:16:09.076" endtime="20201112 10:16:09.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.072" endtime="20201112 10:16:09.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.082" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.081" endtime="20201112 10:16:09.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.084" level="INFO">VALUE: [51560333, 51570343, 51580352, 51590332, 51600341, 51610351, 51620330, 51630340, 51640350, 51650329, 51660339, 51670349, 51680328, 51690338, 51700347, 51710327, 51720336, 51730346, 51740325, 51750335, 51760345, 51770324, 51780334, 51790344, 51800323, 51810333, 51820343, 51830352, 51840332, 51850341, 51860351, 51870330, 51880340, 51890350, 51900329, 51910339, 51920349, 51930328, 51940338, 51950347, 51960327, 51970336, 51980346, 51990325, 52000335, 52010345, 52020324, 52030334, 52040344, 52050323, 52060333, 52070343, 52080352, 52090332, 52100341, 52110351, 52120330, 52130340, 52140350, 52150329, 52160339, 52170349, 52180328, 52190338, 52200347, 52210327, 52220336, 52230346, 52240325, 52250335, 52260345, 52270324, 52280334, 52290344, 52300323, 52310333, 52320343, 52330352, 52340332, 52350341, 52360351, 52370330, 52380340, 52390350, 52400329, 52410339, 52420349, 52430328, 52440338, 52450347, 52460327, 52470336, 52480346, 52490325, 52500335, 52510345, 52520324, 52530334, 52540344, 52550323]</msg>
<status status="PASS" starttime="20201112 10:16:09.083" endtime="20201112 10:16:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.079" endtime="20201112 10:16:09.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.092" endtime="20201112 10:16:09.385"></status>
</kw>
<msg timestamp="20201112 10:16:09.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031774764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.090" endtime="20201112 10:16:09.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031774764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.390" endtime="20201112 10:16:09.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.397" endtime="20201112 10:16:09.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.088" endtime="20201112 10:16:09.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.086" endtime="20201112 10:16:09.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.424" level="INFO">${RESULT} = {'time': [0.021654708, 0.031774764, 0.041783778, 0.051793181, 0.061772153, 0.071781514, 0.081791028, 0.091769931, 0.101779417, 0.111788847, 0.12176775, 0.131777306, 0.141786681, 0.151765569, 0.1617750...</msg>
<status status="PASS" starttime="20201112 10:16:09.400" endtime="20201112 10:16:09.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.429" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.428" endtime="20201112 10:16:09.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.431" level="INFO">VALUE: 0.021654708</msg>
<status status="PASS" starttime="20201112 10:16:09.430" endtime="20201112 10:16:09.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.425" endtime="20201112 10:16:09.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.436" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.435" endtime="20201112 10:16:09.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.438" level="INFO">VALUE: [0.031774764, 0.041783778, 0.051793181, 0.061772153, 0.071781514, 0.081791028, 0.091769931, 0.101779417, 0.111788847, 0.12176775, 0.131777306, 0.141786681, 0.151765569, 0.161775028, 0.171784486, 0.181763444, 0.191773028, 0.201782375, 0.211761222, 0.221770583, 0.231780097, 0.241759042, 0.251768486, 0.261777958, 0.271756917, 0.281766319, 0.291775806, 0.301785208, 0.311764181, 0.321773667, 0.331782972, 0.341761847, 0.351771458, 0.361780875, 0.37175975, 0.381769236, 0.391778681, 0.401757556, 0.411767, 0.421776597, 0.431755486, 0.441764972, 0.451774278, 0.461753278, 0.471762694, 0.481772111, 0.491751069, 0.5017605, 0.51177, 0.521748889, 0.531758319, 0.541767708, 0.551777222, 0.561756153, 0.571765528, 0.581775014, 0.591753931, 0.601763528, 0.611772847, 0.621751764, 0.631761278, 0.641770653, 0.651749597, 0.661759042, 0.6717685, 0.681747403, 0.691756764, 0.701766278, 0.711745194, 0.721754556, 0.731764153, 0.741743111, 0.751752542, 0.761761847, 0.771740917, 0.781750319, 0.791759708, 0.801769125, 0.811748167, 0.821757486, 0.831767014, 0.841746, 0.851755472, 0.861764944, 0.871743792, 0.881753222, 0.891762681, 0.901741597, 0.911751042, 0.921760472, 0.931739403, 0.941748903, 0.951758139, 0.961737278, 0.971746625, 0.981756139, 0.991735139, 1.001744528, 1.011753958, 1.021732958] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:09.437" endtime="20201112 10:16:09.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.432" endtime="20201112 10:16:09.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.441" endtime="20201112 10:16:09.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.445" endtime="20201112 10:16:09.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.443" endtime="20201112 10:16:09.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.440" endtime="20201112 10:16:09.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.914" endtime="20201112 10:16:09.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.801" endtime="20201112 10:16:09.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.800" endtime="20201112 10:16:09.466"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:09.469" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.477" endtime="20201112 10:16:11.601"></status>
</kw>
<msg timestamp="20201112 10:16:11.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54107818, 'wakeups': [54117950, 54127960, 54137969, 54147949, 54157958...</msg>
<status status="PASS" starttime="20201112 10:16:09.475" endtime="20201112 10:16:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54107818, 'wakeups': [54117950, 54127960, 54137969, 54147949, 54157958...</msg>
<status status="PASS" starttime="20201112 10:16:11.605" endtime="20201112 10:16:11.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.617" endtime="20201112 10:16:11.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.473" endtime="20201112 10:16:11.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.471" endtime="20201112 10:16:11.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.628" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [54117950, 54127960, 54137969, 54147949, 54157958, 54167968, 54177947, 54187957, 54197967, 54207946, 54217956, 54227966, 54237945, 54247955, 54257965, 54267944, 54277954,...</msg>
<status status="PASS" starttime="20201112 10:16:11.625" endtime="20201112 10:16:11.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.632" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:11.631" endtime="20201112 10:16:11.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.635" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:11.633" endtime="20201112 10:16:11.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.629" endtime="20201112 10:16:11.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.640" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:11.639" endtime="20201112 10:16:11.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.642" level="INFO">VALUE: 54107818</msg>
<status status="PASS" starttime="20201112 10:16:11.641" endtime="20201112 10:16:11.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.636" endtime="20201112 10:16:11.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.647" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:11.646" endtime="20201112 10:16:11.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.649" level="INFO">VALUE: [54117950, 54127960, 54137969, 54147949, 54157958, 54167968, 54177947, 54187957, 54197967, 54207946, 54217956, 54227966, 54237945, 54247955, 54257965, 54267944, 54277954, 54287963, 54297943, 54307952, 54317962, 54327941, 54337951, 54347961, 54357940, 54367950, 54377960, 54387969, 54397949, 54407958, 54417968, 54427947, 54437957, 54447967, 54457946, 54467956, 54477966, 54487945, 54497955, 54507965, 54517944, 54527954, 54537963, 54547943, 54557952, 54567962, 54577941, 54587951, 54597961, 54607879, 54617858, 54627838, 54637939, 54647888, 54657867, 54667846, 54677917, 54687896, 54697875, 54707824, 54717926, 54727905, 54737854, 54747833, 54757934, 54767883, 54777862, 54787841, 54797912, 54807891, 54817871, 54827819, 54837921, 54847900, 54857818, 54867919, 54877899, 54887878, 54897827, 54907928, 54917907, 54927856, 54937835, 54947937, 54957885, 54967864, 54977844, 54987915, 54997894, 55007873, 55017822, 55027923, 55037902, 55047851, 55057830, 55067932, 55077880, 55087860, 55097839, 55107879]</msg>
<status status="PASS" starttime="20201112 10:16:11.648" endtime="20201112 10:16:11.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.643" endtime="20201112 10:16:11.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.657" endtime="20201112 10:16:11.947"></status>
</kw>
<msg timestamp="20201112 10:16:11.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025788792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035926736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.656" endtime="20201112 10:16:11.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025788792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035926736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.951" endtime="20201112 10:16:11.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.958" endtime="20201112 10:16:11.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.653" endtime="20201112 10:16:11.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.650" endtime="20201112 10:16:11.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.984" level="INFO">${RESULT} = {'time': [0.025788792, 0.035926736, 0.045935319, 0.05594475, 0.065923708, 0.075933222, 0.085942542, 0.095921514, 0.105931014, 0.115940458, 0.125919403, 0.135928792, 0.145938319, 0.155917333, 0.1659266...</msg>
<status status="PASS" starttime="20201112 10:16:11.962" endtime="20201112 10:16:11.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.989" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:11.988" endtime="20201112 10:16:11.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.991" level="INFO">VALUE: 0.025788792</msg>
<status status="PASS" starttime="20201112 10:16:11.990" endtime="20201112 10:16:11.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.986" endtime="20201112 10:16:11.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.997" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:11.996" endtime="20201112 10:16:11.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.999" level="INFO">VALUE: [0.035926736, 0.045935319, 0.05594475, 0.065923708, 0.075933222, 0.085942542, 0.095921514, 0.105931014, 0.115940458, 0.125919403, 0.135928792, 0.145938319, 0.155917333, 0.165926639, 0.175936125, 0.185914986, 0.195924403, 0.205933861, 0.215912833, 0.225922319, 0.23593175, 0.245910597, 0.25592025, 0.265928986, 0.275908569, 0.285917917, 0.295927431, 0.305936903, 0.315915736, 0.325925167, 0.335934639, 0.345913569, 0.355923083, 0.365932431, 0.375911319, 0.385920875, 0.395930292, 0.405909194, 0.415918653, 0.425928069, 0.435907028, 0.445916458, 0.455925917, 0.465904847, 0.475914306, 0.485923653, 0.495902722, 0.505912111, 0.515921, 0.525822847, 0.535812819, 0.545802639, 0.555890403, 0.565830181, 0.575820014, 0.585809917, 0.595867292, 0.605837403, 0.615827333, 0.625786667, 0.635874514, 0.645844611, 0.655804111, 0.665793944, 0.675881708, 0.685821417, 0.695811403, 0.705801194, 0.715858403, 0.725828639, 0.735818639, 0.745777931, 0.755865694, 0.765836083, 0.775775944, 0.785863681, 0.795833653, 0.805823708, 0.815783014, 0.825870792, 0.835840931, 0.845800431, 0.855790306, 0.865878181, 0.875817694, 0.885807722, 0.895797583, 0.905854708, 0.915825, 0.925815014, 0.935774278, 0.945862097, 0.95583225, 0.965791736, 0.975781569, 0.985869306, 0.995809, 1.005798931, 1.015788875, 1.025806861] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:11.998" endtime="20201112 10:16:11.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.993" endtime="20201112 10:16:12.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.002" endtime="20201112 10:16:12.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.006" endtime="20201112 10:16:12.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.004" endtime="20201112 10:16:12.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.001" endtime="20201112 10:16:12.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.469" endtime="20201112 10:16:12.027"></status>
</kw>
<msg timestamp="20201112 10:16:12.027" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.035" endtime="20201112 10:16:14.162"></status>
</kw>
<msg timestamp="20201112 10:16:14.163" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56665405, 'wakeups': [56675537, 56685546, 56695556, 56705535, 56715545...</msg>
<status status="PASS" starttime="20201112 10:16:12.034" endtime="20201112 10:16:14.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.169" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56665405, 'wakeups': [56675537, 56685546, 56695556, 56705535, 56715545...</msg>
<status status="PASS" starttime="20201112 10:16:14.166" endtime="20201112 10:16:14.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.171" endtime="20201112 10:16:14.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.031" endtime="20201112 10:16:14.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.029" endtime="20201112 10:16:14.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.179" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [56675537, 56685546, 56695556, 56705535, 56715545, 56725555, 56735534, 56745544, 56755554, 56765533, 56775543, 56785552, 56795532, 56805541, 56815551, 56825531, 56835540,...</msg>
<status status="PASS" starttime="20201112 10:16:14.177" endtime="20201112 10:16:14.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.183" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:14.182" endtime="20201112 10:16:14.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.185" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:14.184" endtime="20201112 10:16:14.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.180" endtime="20201112 10:16:14.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.191" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.190" endtime="20201112 10:16:14.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.193" level="INFO">VALUE: 56665405</msg>
<status status="PASS" starttime="20201112 10:16:14.192" endtime="20201112 10:16:14.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.187" endtime="20201112 10:16:14.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.198" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.197" endtime="20201112 10:16:14.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.200" level="INFO">VALUE: [56675537, 56685546, 56695556, 56705535, 56715545, 56725555, 56735534, 56745544, 56755554, 56765533, 56775543, 56785552, 56795532, 56805541, 56815551, 56825531, 56835540, 56845550, 56855529, 56865539, 56875549, 56885528, 56895538, 56905548, 56915466, 56925445, 56935424, 56945526, 56955474, 56965454, 56975433, 56985504, 56995483, 57005462, 57015411, 57025512, 57035491, 57045440, 57055419, 57065521, 57075469, 57085449, 57095428, 57105499, 57115478, 57125457, 57135406, 57145507, 57155487, 57165405, 57175506, 57185485, 57195465, 57205413, 57215515, 57225494, 57235443, 57245422, 57255523, 57265472, 57275451, 57285430, 57295501, 57305480, 57315460, 57325408, 57335510, 57345489, 57355438, 57365417, 57375518, 57385467, 57395446, 57405426, 57415466, 57425537, 57435485, 57445556, 57455474, 57465545, 57475494, 57485534, 57495483, 57505554, 57515472, 57525543, 57535491, 57545532, 57555480, 57565551, 57575469, 57585540, 57595489, 57605529, 57615478, 57625549, 57635467, 57645538, 57655487, 57665496]</msg>
<status status="PASS" starttime="20201112 10:16:14.199" endtime="20201112 10:16:14.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.194" endtime="20201112 10:16:14.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.207" endtime="20201112 10:16:14.500"></status>
</kw>
<msg timestamp="20201112 10:16:14.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031753431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.206" endtime="20201112 10:16:14.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031753431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.503" endtime="20201112 10:16:14.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.511" endtime="20201112 10:16:14.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.203" endtime="20201112 10:16:14.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.201" endtime="20201112 10:16:14.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.538" level="INFO">${RESULT} = {'time': [0.021610181, 0.031753431, 0.041762306, 0.051771722, 0.061750764, 0.071760042, 0.081769611, 0.091748514, 0.101757889, 0.111767444, 0.121746333, 0.131755833, 0.141765306, 0.151744222, 0.161753...</msg>
<status status="PASS" starttime="20201112 10:16:14.514" endtime="20201112 10:16:14.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.542" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.541" endtime="20201112 10:16:14.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.544" level="INFO">VALUE: 0.021610181</msg>
<status status="PASS" starttime="20201112 10:16:14.543" endtime="20201112 10:16:14.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.539" endtime="20201112 10:16:14.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.550" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.549" endtime="20201112 10:16:14.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.552" level="INFO">VALUE: [0.031753431, 0.041762306, 0.051771722, 0.061750764, 0.071760042, 0.081769611, 0.091748514, 0.101757889, 0.111767444, 0.121746333, 0.131755833, 0.141765306, 0.151744222, 0.161753681, 0.171763056, 0.181742042, 0.1917515, 0.201760986, 0.211739847, 0.221749319, 0.231758736, 0.241737542, 0.251747111, 0.261755972, 0.271657736, 0.281647778, 0.291637653, 0.301725361, 0.311665069, 0.321655, 0.331644847, 0.341702167, 0.351672361, 0.361662292, 0.371621667, 0.381709403, 0.391679611, 0.401639042, 0.411628917, 0.421716694, 0.431656361, 0.441646306, 0.451636194, 0.461693458, 0.471663583, 0.481653569, 0.491612889, 0.501700708, 0.511671083, 0.521610903, 0.531698514, 0.541668708, 0.551658708, 0.561617986, 0.571705792, 0.581675972, 0.591635347, 0.601625222, 0.611713, 0.621652806, 0.631642667, 0.641632556, 0.651689736, 0.661659861, 0.671649889, 0.681609264, 0.691697069, 0.701667194, 0.711626694, 0.721616528, 0.731704236, 0.741644069, 0.751633972, 0.761623792, 0.77166125, 0.781709597, 0.791680278, 0.801728444, 0.811668597, 0.821716861, 0.831687472, 0.841705361, 0.851675792, 0.861724181, 0.871664208, 0.881712472, 0.891683111, 0.901700875, 0.911671347, 0.92171975, 0.931659833, 0.941708222, 0.951678681, 0.961696472, 0.971667111, 0.981715403, 0.991655431, 1.001703875, 1.011674056, 1.021673181] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:14.551" endtime="20201112 10:16:14.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.546" endtime="20201112 10:16:14.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.555" endtime="20201112 10:16:14.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.559" endtime="20201112 10:16:14.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.557" endtime="20201112 10:16:14.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.554" endtime="20201112 10:16:14.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.028" endtime="20201112 10:16:14.579"></status>
</kw>
<msg timestamp="20201112 10:16:14.580" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.588" endtime="20201112 10:16:16.706"></status>
</kw>
<msg timestamp="20201112 10:16:16.707" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59217956, 'wakeups': [59228118, 59238098, 59248107, 59258087, 59268096...</msg>
<status status="PASS" starttime="20201112 10:16:14.586" endtime="20201112 10:16:16.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59217956, 'wakeups': [59228118, 59238098, 59248107, 59258087, 59268096...</msg>
<status status="PASS" starttime="20201112 10:16:16.708" endtime="20201112 10:16:16.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.711" endtime="20201112 10:16:16.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.583" endtime="20201112 10:16:16.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.582" endtime="20201112 10:16:16.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:16.716" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [59228118, 59238098, 59248107, 59258087, 59268096, 59278106, 59288085, 59298095, 59308105, 59318084, 59328094, 59338104, 59348083, 59358093, 59368103, 59378082, 59388092,...</msg>
<status status="PASS" starttime="20201112 10:16:16.714" endtime="20201112 10:16:16.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.720" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:16.719" endtime="20201112 10:16:16.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.722" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:16.721" endtime="20201112 10:16:16.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.717" endtime="20201112 10:16:16.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.727" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:16.726" endtime="20201112 10:16:16.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.729" level="INFO">VALUE: 59217956</msg>
<status status="PASS" starttime="20201112 10:16:16.728" endtime="20201112 10:16:16.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.723" endtime="20201112 10:16:16.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.734" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:16.733" endtime="20201112 10:16:16.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.736" level="INFO">VALUE: [59228118, 59238098, 59248107, 59258087, 59268096, 59278106, 59288085, 59298095, 59308105, 59318084, 59328094, 59338104, 59348083, 59358093, 59368103, 59378082, 59388092, 59398101, 59408081, 59418090, 59428100, 59438079, 59448089, 59458099, 59468017, 59477996, 59487976, 59498077, 59508026, 59518005, 59527984, 59538055, 59548034, 59558013, 59567962, 59578063, 59588043, 59597991, 59607971, 59618072, 59628021, 59638000, 59647979, 59658050, 59668029, 59678009, 59687957, 59698059, 59708038, 59717956, 59728057, 59738037, 59748016, 59757965, 59768066, 59778045, 59787994, 59797973, 59808074, 59818023, 59828002, 59837982, 59848052, 59858032, 59868011, 59877960, 59888061, 59898040, 59907989, 59917968, 59928070, 59938018, 59947998, 59957977, 59968017, 59977996, 59987976, 59998077, 60008026, 60018005, 60027984, 60038055, 60048034, 60058013, 60067962, 60078063, 60088043, 60097991, 60107971, 60118072, 60128021, 60138000, 60147979, 60158050, 60168029, 60178009, 60187957, 60198059, 60208038, 60217956]</msg>
<status status="PASS" starttime="20201112 10:16:16.735" endtime="20201112 10:16:16.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.730" endtime="20201112 10:16:16.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.747" endtime="20201112 10:16:17.039"></status>
</kw>
<msg timestamp="20201112 10:16:17.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031548667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.746" endtime="20201112 10:16:17.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031548667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.043" endtime="20201112 10:16:17.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.050" endtime="20201112 10:16:17.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.743" endtime="20201112 10:16:17.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.737" endtime="20201112 10:16:17.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.077" level="INFO">${RESULT} = {'time': [0.021387778, 0.031548667, 0.041527278, 0.051536722, 0.061515736, 0.071525014, 0.081534611, 0.091513458, 0.101522875, 0.111532514, 0.121511347, 0.131520833, 0.141530278, 0.151509208, 0.161518...</msg>
<status status="PASS" starttime="20201112 10:16:17.053" endtime="20201112 10:16:17.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.081" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:16:17.080" endtime="20201112 10:16:17.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.083" level="INFO">VALUE: 0.021387778</msg>
<status status="PASS" starttime="20201112 10:16:17.082" endtime="20201112 10:16:17.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.078" endtime="20201112 10:16:17.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.089" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:17.088" endtime="20201112 10:16:17.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.091" level="INFO">VALUE: [0.031548667, 0.041527278, 0.051536722, 0.061515736, 0.071525014, 0.081534611, 0.091513458, 0.101522875, 0.111532514, 0.121511347, 0.131520833, 0.141530278, 0.151509208, 0.161518611, 0.171528028, 0.181507042, 0.191516486, 0.201525917, 0.211504681, 0.221514375, 0.231523708, 0.241502625, 0.251512194, 0.261520917, 0.271422833, 0.281412778, 0.291402625, 0.301490431, 0.311430083, 0.321419972, 0.331409931, 0.341467167, 0.351437333, 0.361427347, 0.371386653, 0.381474444, 0.391444625, 0.401404069, 0.411393917, 0.421481708, 0.431421347, 0.441411403, 0.451401222, 0.461458472, 0.471428639, 0.481418597, 0.491377931, 0.501465764, 0.511436083, 0.521375819, 0.531463486, 0.541433736, 0.551423681, 0.561383042, 0.571470833, 0.581441028, 0.591400375, 0.601390292, 0.611478, 0.621417806, 0.631407625, 0.641397556, 0.651454708, 0.661425014, 0.671414986, 0.681374347, 0.691461944, 0.701432167, 0.711391681, 0.721381528, 0.731469347, 0.741408944, 0.751399, 0.761388861, 0.771406972, 0.781396819, 0.791386653, 0.801474417, 0.811414111, 0.821404042, 0.831393917, 0.841451153, 0.851421236, 0.861411278, 0.871370597, 0.881458486, 0.891428611, 0.901388056, 0.911377917, 0.921465722, 0.931405292, 0.941395389, 0.951385208, 0.961442458, 0.971412514, 0.981402625, 0.991361889, 1.001449736, 1.011420042, 1.021359847] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:17.090" endtime="20201112 10:16:17.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.085" endtime="20201112 10:16:17.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.094" endtime="20201112 10:16:17.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.097" endtime="20201112 10:16:17.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.096" endtime="20201112 10:16:17.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.092" endtime="20201112 10:16:17.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.580" endtime="20201112 10:16:17.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.467" endtime="20201112 10:16:17.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.466" endtime="20201112 10:16:17.118"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:17.121" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.129" endtime="20201112 10:16:19.256"></status>
</kw>
<msg timestamp="20201112 10:16:19.257" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61760498, 'wakeups': [61770660, 61780609, 61790588, 61800537, 61810516...</msg>
<status status="PASS" starttime="20201112 10:16:17.127" endtime="20201112 10:16:19.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61760498, 'wakeups': [61770660, 61780609, 61790588, 61800537, 61810516...</msg>
<status status="PASS" starttime="20201112 10:16:19.258" endtime="20201112 10:16:19.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.261" endtime="20201112 10:16:19.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.125" endtime="20201112 10:16:19.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.123" endtime="20201112 10:16:19.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.266" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [61770660, 61780609, 61790588, 61800537, 61810516, 61820648, 61830566, 61840637, 61850677, 61860595, 61870574, 61880554, 61890502, 61900634, 61910583, 61920623, 61930664,...</msg>
<status status="PASS" starttime="20201112 10:16:19.264" endtime="20201112 10:16:19.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.270" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:19.269" endtime="20201112 10:16:19.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.272" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:19.271" endtime="20201112 10:16:19.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.267" endtime="20201112 10:16:19.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.278" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:19.276" endtime="20201112 10:16:19.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.280" level="INFO">VALUE: 61760498</msg>
<status status="PASS" starttime="20201112 10:16:19.279" endtime="20201112 10:16:19.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.274" endtime="20201112 10:16:19.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.285" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:19.284" endtime="20201112 10:16:19.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.287" level="INFO">VALUE: [61770660, 61780609, 61790588, 61800537, 61810516, 61820648, 61830566, 61840637, 61850677, 61860595, 61870574, 61880554, 61890502, 61900634, 61910583, 61920623, 61930664, 61940612, 61950561, 61960540, 61970520, 61980621, 61990570, 62000640, 62010681, 62020599, 62030578, 62040557, 62050506, 62060638, 62070587, 62080627, 62090667, 62100616, 62110565, 62120544, 62130523, 62140625, 62150573, 62160644, 62170654, 62180603, 62190582, 62200531, 62210510, 62220642, 62230560, 62240631, 62250671, 62260620, 62270568, 62280548, 62290527, 62300628, 62310577, 62320648, 62330657, 62340606, 62350585, 62360534, 62370513, 62380645, 62390563, 62400634, 62410675, 62420593, 62430572, 62440551, 62450500, 62460632, 62470581, 62480621, 62490661, 62500610, 62510589, 62520538, 62530517, 62540649, 62550567, 62560638, 62570678, 62580596, 62590576, 62600555, 62610504, 62620635, 62630584, 62640625, 62650665, 62660614, 62670562, 62680541, 62690521, 62700622, 62710571, 62720642, 62730651, 62740600, 62750579, 62760559]</msg>
<status status="PASS" starttime="20201112 10:16:19.286" endtime="20201112 10:16:19.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.282" endtime="20201112 10:16:19.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.295" endtime="20201112 10:16:19.586"></status>
</kw>
<msg timestamp="20201112 10:16:19.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035307903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.293" endtime="20201112 10:16:19.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035307903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.590" endtime="20201112 10:16:19.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.597" endtime="20201112 10:16:19.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.291" endtime="20201112 10:16:19.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.289" endtime="20201112 10:16:19.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.624" level="INFO">${RESULT} = {'time': [0.025130833, 0.035307903, 0.045256486, 0.055225319, 0.065184111, 0.075173375, 0.085283417, 0.095222208, 0.105291639, 0.115321764, 0.125240389, 0.135209347, 0.145198667, 0.155157417, 0.165267...</msg>
<status status="PASS" starttime="20201112 10:16:19.601" endtime="20201112 10:16:19.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.629" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:19.628" endtime="20201112 10:16:19.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.631" level="INFO">VALUE: 0.025130833</msg>
<status status="PASS" starttime="20201112 10:16:19.630" endtime="20201112 10:16:19.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.625" endtime="20201112 10:16:19.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.636" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:19.635" endtime="20201112 10:16:19.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.639" level="INFO">VALUE: [0.035307903, 0.045256486, 0.055225319, 0.065184111, 0.075173375, 0.085283417, 0.095222208, 0.105291639, 0.115321764, 0.125240389, 0.135209347, 0.145198667, 0.155157417, 0.165267444, 0.175236556, 0.185275653, 0.195305611, 0.205254889, 0.215193278, 0.225182667, 0.235171889, 0.245251514, 0.255220694, 0.265290139, 0.275320222, 0.285238917, 0.295207917, 0.305197153, 0.315155931, 0.325265889, 0.335235236, 0.345274111, 0.355304319, 0.365253458, 0.375192014, 0.385181292, 0.3951705, 0.405250042, 0.415219264, 0.425288708, 0.435288264, 0.445237583, 0.455206417, 0.465165278, 0.475154458, 0.485264528, 0.49520325, 0.505272708, 0.515302792, 0.525252014, 0.535190458, 0.545179792, 0.555169028, 0.565248583, 0.575217861, 0.585287292, 0.595286833, 0.605235903, 0.615204944, 0.625163708, 0.635153042, 0.645263042, 0.655201792, 0.665271306, 0.67530125, 0.685220097, 0.695188986, 0.705178333, 0.715137083, 0.725247153, 0.735216431, 0.745255347, 0.755285403, 0.765234583, 0.775203528, 0.785162375, 0.795151597, 0.805261653, 0.815200444, 0.825269986, 0.835299903, 0.845218597, 0.855187542, 0.865176875, 0.875135667, 0.885245667, 0.895214903, 0.905253931, 0.915283972, 0.925233153, 0.935171542, 0.945160917, 0.955150111, 0.965229597, 0.975198972, 0.985268417, 0.995267847, 1.005217042, 1.015186042, 1.025175306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:19.638" endtime="20201112 10:16:19.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.632" endtime="20201112 10:16:19.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.642" endtime="20201112 10:16:19.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:19.645" endtime="20201112 10:16:19.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.644" endtime="20201112 10:16:19.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.640" endtime="20201112 10:16:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.121" endtime="20201112 10:16:19.666"></status>
</kw>
<msg timestamp="20201112 10:16:19.666" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.674" endtime="20201112 10:16:21.783"></status>
</kw>
<msg timestamp="20201112 10:16:21.784" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64303009, 'wakeups': [64313171, 64323120, 64333099, 64343048, 64353027...</msg>
<status status="PASS" starttime="20201112 10:16:19.673" endtime="20201112 10:16:21.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.787" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64303009, 'wakeups': [64313171, 64323120, 64333099, 64343048, 64353027...</msg>
<status status="PASS" starttime="20201112 10:16:21.785" endtime="20201112 10:16:21.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.788" endtime="20201112 10:16:21.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.670" endtime="20201112 10:16:21.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.668" endtime="20201112 10:16:21.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:21.793" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [64313171, 64323120, 64333099, 64343048, 64353027, 64363159, 64373077, 64383148, 64393188, 64403106, 64413085, 64423065, 64433013, 64443145, 64453094, 64463134, 64473175,...</msg>
<status status="PASS" starttime="20201112 10:16:21.791" endtime="20201112 10:16:21.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.801" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:21.800" endtime="20201112 10:16:21.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.803" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:21.802" endtime="20201112 10:16:21.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.798" endtime="20201112 10:16:21.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.808" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:21.807" endtime="20201112 10:16:21.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.810" level="INFO">VALUE: 64303009</msg>
<status status="PASS" starttime="20201112 10:16:21.809" endtime="20201112 10:16:21.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.805" endtime="20201112 10:16:21.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.815" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:21.814" endtime="20201112 10:16:21.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.817" level="INFO">VALUE: [64313171, 64323120, 64333099, 64343048, 64353027, 64363159, 64373077, 64383148, 64393188, 64403106, 64413085, 64423065, 64433013, 64443145, 64453094, 64463134, 64473175, 64483123, 64493072, 64503051, 64513031, 64523132, 64533081, 64543151, 64553192, 64563110, 64573089, 64583068, 64593017, 64603149, 64613098, 64623138, 64633178, 64643127, 64653076, 64663055, 64673034, 64683135, 64693084, 64703155, 64713165, 64723114, 64733093, 64743041, 64753021, 64763153, 64773071, 64783142, 64793182, 64803131, 64813079, 64823059, 64833038, 64843139, 64853088, 64863159, 64873168, 64883117, 64893096, 64903045, 64913024, 64923156, 64933074, 64943145, 64953186, 64963104, 64973083, 64983062, 64993011, 65003143, 65013092, 65023132, 65033172, 65043121, 65053100, 65063049, 65073028, 65083160, 65093078, 65103149, 65113189, 65123107, 65133087, 65143066, 65153015, 65163146, 65173095, 65183135, 65193176, 65203125, 65213073, 65223052, 65233032, 65243133, 65253082, 65263153, 65273162, 65283111, 65293090, 65303070]</msg>
<status status="PASS" starttime="20201112 10:16:21.816" endtime="20201112 10:16:21.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.812" endtime="20201112 10:16:21.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.825" endtime="20201112 10:16:22.116"></status>
</kw>
<msg timestamp="20201112 10:16:22.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019040222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029214167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.823" endtime="20201112 10:16:22.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019040222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029214167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.120" endtime="20201112 10:16:22.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.128" endtime="20201112 10:16:22.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.821" endtime="20201112 10:16:22.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.819" endtime="20201112 10:16:22.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.153" level="INFO">${RESULT} = {'time': [0.019040222, 0.029214167, 0.039162486, 0.049131389, 0.059090292, 0.069079528, 0.079189583, 0.08912825, 0.09919775, 0.109227833, 0.119146375, 0.129115458, 0.139104778, 0.149063528, 0.15917359...</msg>
<status status="PASS" starttime="20201112 10:16:22.131" endtime="20201112 10:16:22.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.158" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.157" endtime="20201112 10:16:22.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.160" level="INFO">VALUE: 0.019040222</msg>
<status status="PASS" starttime="20201112 10:16:22.159" endtime="20201112 10:16:22.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.154" endtime="20201112 10:16:22.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.165" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.164" endtime="20201112 10:16:22.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.168" level="INFO">VALUE: [0.029214167, 0.039162486, 0.049131389, 0.059090292, 0.069079528, 0.079189583, 0.08912825, 0.09919775, 0.109227833, 0.119146375, 0.129115458, 0.139104778, 0.149063528, 0.159173597, 0.169142847, 0.179181861, 0.189211847, 0.199161097, 0.209099528, 0.219088833, 0.229078069, 0.239157583, 0.249126944, 0.259196375, 0.269226347, 0.279145056, 0.289113986, 0.299103361, 0.309062042, 0.319172167, 0.329141333, 0.339180361, 0.349210389, 0.359159625, 0.369098028, 0.379087403, 0.389076611, 0.399156167, 0.409125389, 0.419195028, 0.429194361, 0.439143556, 0.449112556, 0.459071417, 0.469060653, 0.479170653, 0.489109431, 0.499178917, 0.509208986, 0.519158167, 0.529096653, 0.539085847, 0.549075139, 0.559154722, 0.569123903, 0.579193431, 0.589192875, 0.599142139, 0.609111111, 0.619069931, 0.629059153, 0.639169208, 0.649107972, 0.659177431, 0.669207472, 0.679126208, 0.689095153, 0.699084444, 0.709043125, 0.719153194, 0.729122514, 0.739161361, 0.749191472, 0.759140694, 0.769109611, 0.779068472, 0.789057694, 0.799167792, 0.809106528, 0.819175972, 0.829206083, 0.839124736, 0.849093667, 0.859083, 0.869041722, 0.879151778, 0.889121, 0.899159847, 0.909189875, 0.919139319, 0.929077611, 0.939067028, 0.949056208, 0.959135681, 0.969105042, 0.979174444, 0.989173903, 0.999123292, 1.009092194, 1.019081542] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:22.167" endtime="20201112 10:16:22.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.161" endtime="20201112 10:16:22.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.171" endtime="20201112 10:16:22.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:22.175" endtime="20201112 10:16:22.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.173" endtime="20201112 10:16:22.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.169" endtime="20201112 10:16:22.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.667" endtime="20201112 10:16:22.195"></status>
</kw>
<msg timestamp="20201112 10:16:22.196" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.204" endtime="20201112 10:16:24.323"></status>
</kw>
<msg timestamp="20201112 10:16:24.324" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66835449, 'wakeups': [66845642, 66855560, 66865539, 66875488, 66885467...</msg>
<status status="PASS" starttime="20201112 10:16:22.202" endtime="20201112 10:16:24.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.326" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66835449, 'wakeups': [66845642, 66855560, 66865539, 66875488, 66885467...</msg>
<status status="PASS" starttime="20201112 10:16:24.325" endtime="20201112 10:16:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.327" endtime="20201112 10:16:24.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.199" endtime="20201112 10:16:24.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.198" endtime="20201112 10:16:24.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:24.333" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [66845642, 66855560, 66865539, 66875488, 66885467, 66895599, 66905517, 66915588, 66925628, 66935546, 66945526, 66955505, 66965454, 66975585, 66985534, 66995574, 67005615,...</msg>
<status status="PASS" starttime="20201112 10:16:24.331" endtime="20201112 10:16:24.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.337" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:24.336" endtime="20201112 10:16:24.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.339" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:24.338" endtime="20201112 10:16:24.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.334" endtime="20201112 10:16:24.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.344" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:24.343" endtime="20201112 10:16:24.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.346" level="INFO">VALUE: 66835449</msg>
<status status="PASS" starttime="20201112 10:16:24.345" endtime="20201112 10:16:24.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.340" endtime="20201112 10:16:24.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.351" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:24.350" endtime="20201112 10:16:24.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.353" level="INFO">VALUE: [66845642, 66855560, 66865539, 66875488, 66885467, 66895599, 66905517, 66915588, 66925628, 66935546, 66945526, 66955505, 66965454, 66975585, 66985534, 66995574, 67005615, 67015563, 67025512, 67035491, 67045471, 67055572, 67065521, 67075592, 67085571, 67095520, 67105590, 67115631, 67125549, 67135528, 67145507, 67155456, 67165588, 67175537, 67185577, 67195617, 67205566, 67215515, 67225494, 67235473, 67245574, 67255523, 67265594, 67275604, 67285552, 67295532, 67305480, 67315460, 67325592, 67335449, 67345581, 67355529, 67365600, 67375610, 67385559, 67395538, 67405487, 67415466, 67425598, 67435516, 67445587, 67455627, 67465545, 67475524, 67485504, 67495452, 67505584, 67515533, 67525573, 67535614, 67545562, 67555511, 67565490, 67575469, 67585601, 67595550, 67605529, 67615509, 67625457, 67635589, 67645538, 67655578, 67665618, 67675567, 67685516, 67695495, 67705474, 67715576, 67725524, 67735595, 67745605, 67755554, 67765533, 67775482, 67785461, 67795593, 67805511, 67815582, 67825622, 67835571]</msg>
<status status="PASS" starttime="20201112 10:16:24.352" endtime="20201112 10:16:24.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.347" endtime="20201112 10:16:24.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.361" endtime="20201112 10:16:24.652"></status>
</kw>
<msg timestamp="20201112 10:16:24.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032125139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:24.359" endtime="20201112 10:16:24.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032125139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:24.656" endtime="20201112 10:16:24.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.663" endtime="20201112 10:16:24.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.357" endtime="20201112 10:16:24.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.355" endtime="20201112 10:16:24.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:24.691" level="INFO">${RESULT} = {'time': [0.021943681, 0.032125139, 0.042043278, 0.052012111, 0.061970958, 0.071960153, 0.082070222, 0.092009028, 0.102078417, 0.112108472, 0.122027222, 0.131996125, 0.141985569, 0.151944139, 0.162054...</msg>
<status status="PASS" starttime="20201112 10:16:24.666" endtime="20201112 10:16:24.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.695" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:24.694" endtime="20201112 10:16:24.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.697" level="INFO">VALUE: 0.021943681</msg>
<status status="PASS" starttime="20201112 10:16:24.696" endtime="20201112 10:16:24.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.691" endtime="20201112 10:16:24.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.702" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:24.701" endtime="20201112 10:16:24.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.704" level="INFO">VALUE: [0.032125139, 0.042043278, 0.052012111, 0.061970958, 0.071960153, 0.082070222, 0.092009028, 0.102078417, 0.112108472, 0.122027222, 0.131996125, 0.141985569, 0.151944139, 0.162054153, 0.172023542, 0.182062375, 0.192092472, 0.202041764, 0.211980167, 0.221969528, 0.231958694, 0.242038319, 0.252007542, 0.262074917, 0.272036472, 0.282005319, 0.292074861, 0.30210475, 0.312023458, 0.321992486, 0.331981889, 0.341940542, 0.352050542, 0.362019833, 0.372058847, 0.382088792, 0.392038056, 0.401976417, 0.411965903, 0.421955111, 0.432034708, 0.442004028, 0.452073375, 0.462072778, 0.472022111, 0.481991097, 0.491949931, 0.501939153, 0.512048444, 0.521927667, 0.532037514, 0.542006736, 0.55207625, 0.562075819, 0.572024889, 0.581993986, 0.591952847, 0.601942028, 0.612052083, 0.621990889, 0.632060403, 0.642090389, 0.652008903, 0.661977972, 0.671967306, 0.681926, 0.692036056, 0.702005264, 0.712044375, 0.722074375, 0.732023569, 0.741962, 0.75195125, 0.761940542, 0.772060778, 0.782009764, 0.791978681, 0.801968056, 0.811926681, 0.822036792, 0.832006056, 0.842045125, 0.852075, 0.862024236, 0.871962639, 0.881952069, 0.891941319, 0.902020792, 0.911990139, 0.922059556, 0.932059083, 0.942008319, 0.95197725, 0.961936069, 0.971925361, 0.982035375, 0.991974014, 1.002043514, 1.012071403, 1.022032375] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:24.703" endtime="20201112 10:16:24.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.698" endtime="20201112 10:16:24.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.708" endtime="20201112 10:16:24.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:24.711" endtime="20201112 10:16:24.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.709" endtime="20201112 10:16:24.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.706" endtime="20201112 10:16:24.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.196" endtime="20201112 10:16:24.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.119" endtime="20201112 10:16:24.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.119" endtime="20201112 10:16:24.732"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:24.735" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.743" endtime="20201112 10:16:26.867"></status>
</kw>
<msg timestamp="20201112 10:16:26.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69373077, 'wakeups': [69383270, 69393218, 69403259, 69413208, 694231...</msg>
<status status="PASS" starttime="20201112 10:16:24.741" endtime="20201112 10:16:26.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69373077, 'wakeups': [69383270, 69393218, 69403259, 69413208, 694231...</msg>
<status status="PASS" starttime="20201112 10:16:26.871" endtime="20201112 10:16:26.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.873" endtime="20201112 10:16:26.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.739" endtime="20201112 10:16:26.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.737" endtime="20201112 10:16:26.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:26.879" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [69383270, 69393218, 69403259, 69413208, 69423156, 69433258, 69443206, 69453155, 69463256, 69473266, 69483215, 69493255, 69503265, 69513214, 69523254, 69533264, 69543212...</msg>
<status status="PASS" starttime="20201112 10:16:26.877" endtime="20201112 10:16:26.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.883" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:26.882" endtime="20201112 10:16:26.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.885" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:26.884" endtime="20201112 10:16:26.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.880" endtime="20201112 10:16:26.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.891" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:26.890" endtime="20201112 10:16:26.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.893" level="INFO">VALUE: 69373077</msg>
<status status="PASS" starttime="20201112 10:16:26.892" endtime="20201112 10:16:26.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.886" endtime="20201112 10:16:26.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.898" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:26.897" endtime="20201112 10:16:26.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.900" level="INFO">VALUE: [69383270, 69393218, 69403259, 69413208, 69423156, 69433258, 69443206, 69453155, 69463256, 69473266, 69483215, 69493255, 69503265, 69513214, 69523254, 69533264, 69543212, 69553253, 69563262, 69573211, 69583251, 69593261, 69603210, 69613250, 69623260, 69633209, 69643249, 69653289, 69663208, 69673248, 69683288, 69693206, 69703247, 69713287, 69723205, 69733245, 69743286, 69753204, 69763244, 69773284, 69783203, 69793243, 69803283, 69813201, 69823242, 69833282, 69843200, 69853240, 69863281, 69873138, 69883117, 69893096, 69903259, 69913269, 69923217, 69933258, 69943267, 69953216, 69963256, 69973266, 69983215, 69993255, 70003265, 70013214, 70023254, 70033264, 70043212, 70053253, 70063201, 70073150, 70083251, 70093261, 70103210, 70113250, 70123260, 70133209, 70143249, 70153289, 70163208, 70173248, 70183288, 70193206, 70203247, 70213287, 70223205, 70233245, 70243286, 70253204, 70263244, 70273284, 70283203, 70293243, 70303283, 70313201, 70323242, 70333282, 70343200, 70353240, 70363281, 70373138]</msg>
<status status="PASS" starttime="20201112 10:16:26.899" endtime="20201112 10:16:26.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.894" endtime="20201112 10:16:26.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.908" endtime="20201112 10:16:27.200"></status>
</kw>
<msg timestamp="20201112 10:16:27.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.906" endtime="20201112 10:16:27.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.203" endtime="20201112 10:16:27.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.211" endtime="20201112 10:16:27.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.903" endtime="20201112 10:16:27.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.901" endtime="20201112 10:16:27.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.237" level="INFO">${RESULT} = {'time': [0.022508708, 0.032713208, 0.042678486, 0.052708583, 0.062646389, 0.072614417, 0.082706389, 0.092644278, 0.102612236, 0.112704333, 0.122703819, 0.132671875, 0.142702208, 0.15270175, 0.1626698...</msg>
<status status="PASS" starttime="20201112 10:16:27.214" endtime="20201112 10:16:27.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.242" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.241" endtime="20201112 10:16:27.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.244" level="INFO">VALUE: 0.022508708</msg>
<status status="PASS" starttime="20201112 10:16:27.243" endtime="20201112 10:16:27.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.238" endtime="20201112 10:16:27.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.250" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.249" endtime="20201112 10:16:27.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.252" level="INFO">VALUE: [0.032713208, 0.042678486, 0.052708583, 0.062646389, 0.072614417, 0.082706389, 0.092644278, 0.102612236, 0.112704333, 0.122703819, 0.132671875, 0.142702208, 0.15270175, 0.162669819, 0.172699917, 0.182699556, 0.192667611, 0.202697792, 0.212697361, 0.222665528, 0.232695694, 0.242695153, 0.252663264, 0.262693583, 0.272693222, 0.282661042, 0.292691208, 0.302721222, 0.312658833, 0.322689069, 0.332719125, 0.342656653, 0.352686833, 0.362717014, 0.372654486, 0.382684694, 0.392714806, 0.402652472, 0.412682528, 0.422712611, 0.432650292, 0.442680403, 0.452710403, 0.462648097, 0.472678264, 0.48270825, 0.492645875, 0.502675986, 0.512706722, 0.522561042, 0.532549542, 0.542538083, 0.552692681, 0.562692153, 0.572660306, 0.582690444, 0.592690069, 0.60265825, 0.612688375, 0.622687958, 0.632656153, 0.642686194, 0.652685736, 0.662653861, 0.672683903, 0.682683514, 0.692651597, 0.702681708, 0.712619444, 0.722587472, 0.732679556, 0.742679028, 0.752647222, 0.762677444, 0.772677236, 0.782645014, 0.792675208, 0.802705292, 0.812642833, 0.822673014, 0.832703, 0.842640681, 0.852670917, 0.862700903, 0.872638514, 0.882668667, 0.89269875, 0.902636347, 0.912666528, 0.922696556, 0.932634125, 0.942664375, 0.952694403, 0.962632069, 0.972662125, 0.982692264, 0.992629875, 1.002659917, 1.012690736, 1.022545083] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:27.251" endtime="20201112 10:16:27.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.245" endtime="20201112 10:16:27.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.255" endtime="20201112 10:16:27.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.258" endtime="20201112 10:16:27.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.257" endtime="20201112 10:16:27.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.253" endtime="20201112 10:16:27.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.736" endtime="20201112 10:16:27.279"></status>
</kw>
<msg timestamp="20201112 10:16:27.279" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.287" endtime="20201112 10:16:29.402"></status>
</kw>
<msg timestamp="20201112 10:16:29.402" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71920593, 'wakeups': [71930786, 71940734, 71950775, 71960784, 719707...</msg>
<status status="PASS" starttime="20201112 10:16:27.286" endtime="20201112 10:16:29.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71920593, 'wakeups': [71930786, 71940734, 71950775, 71960784, 719707...</msg>
<status status="PASS" starttime="20201112 10:16:29.404" endtime="20201112 10:16:29.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.407" endtime="20201112 10:16:29.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.283" endtime="20201112 10:16:29.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.281" endtime="20201112 10:16:29.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.412" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [71930786, 71940734, 71950775, 71960784, 71970733, 71980773, 71990783, 72000732, 72010772, 72020782, 72030731, 72040771, 72050781, 72060729, 72070770, 72080780, 72090728...</msg>
<status status="PASS" starttime="20201112 10:16:29.410" endtime="20201112 10:16:29.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.416" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:29.415" endtime="20201112 10:16:29.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.418" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:29.417" endtime="20201112 10:16:29.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.413" endtime="20201112 10:16:29.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.423" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:29.422" endtime="20201112 10:16:29.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.425" level="INFO">VALUE: 71920593</msg>
<status status="PASS" starttime="20201112 10:16:29.424" endtime="20201112 10:16:29.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.419" endtime="20201112 10:16:29.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.430" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:29.429" endtime="20201112 10:16:29.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.432" level="INFO">VALUE: [71930786, 71940734, 71950775, 71960784, 71970733, 71980773, 71990783, 72000732, 72010772, 72020782, 72030731, 72040771, 72050781, 72060729, 72070770, 72080780, 72090728, 72100769, 72110778, 72120727, 72130767, 72140777, 72150726, 72160766, 72170776, 72180725, 72190765, 72200805, 72210723, 72220764, 72230804, 72240722, 72250762, 72260803, 72270721, 72280761, 72290802, 72300720, 72310760, 72320739, 72330657, 72340759, 72350799, 72360717, 72370758, 72380798, 72390716, 72400756, 72410797, 72420654, 72430633, 72440612, 72450775, 72460784, 72470733, 72480773, 72490783, 72500732, 72510772, 72520782, 72530731, 72540771, 72550720, 72560668, 72570770, 72580780, 72590728, 72600769, 72610778, 72620727, 72630767, 72640716, 72650665, 72660766, 72670776, 72680725, 72690765, 72700805, 72710723, 72720764, 72730804, 72740722, 72750762, 72760803, 72770721, 72780761, 72790802, 72800720, 72810760, 72820800, 72830718, 72840759, 72850799, 72860717, 72870758, 72880798, 72890716, 72900756, 72910797, 72920654]</msg>
<status status="PASS" starttime="20201112 10:16:29.431" endtime="20201112 10:16:29.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.426" endtime="20201112 10:16:29.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.441" endtime="20201112 10:16:29.734"></status>
</kw>
<msg timestamp="20201112 10:16:29.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032753875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.438" endtime="20201112 10:16:29.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032753875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.738" endtime="20201112 10:16:29.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.746" endtime="20201112 10:16:29.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.435" endtime="20201112 10:16:29.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.433" endtime="20201112 10:16:29.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.772" level="INFO">${RESULT} = {'time': [0.022562819, 0.032753875, 0.042718569, 0.052748847, 0.062748292, 0.072716486, 0.082746667, 0.092746208, 0.102714319, 0.112744389, 0.122743875, 0.132712083, 0.142742306, 0.152741875, 0.162709...</msg>
<status status="PASS" starttime="20201112 10:16:29.749" endtime="20201112 10:16:29.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.777" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:29.776" endtime="20201112 10:16:29.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.779" level="INFO">VALUE: 0.022562819</msg>
<status status="PASS" starttime="20201112 10:16:29.778" endtime="20201112 10:16:29.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.774" endtime="20201112 10:16:29.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.785" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:29.783" endtime="20201112 10:16:29.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.787" level="INFO">VALUE: [0.032753875, 0.042718569, 0.052748847, 0.062748292, 0.072716486, 0.082746667, 0.092746208, 0.102714319, 0.112744389, 0.122743875, 0.132712083, 0.142742306, 0.152741875, 0.162709819, 0.172740083, 0.182739681, 0.192707778, 0.202737917, 0.212737389, 0.222705653, 0.232735694, 0.242735208, 0.252703278, 0.262733611, 0.272733319, 0.282701264, 0.292731556, 0.302761458, 0.312699097, 0.32272925, 0.332759306, 0.342696917, 0.352727028, 0.362757111, 0.372694722, 0.382724792, 0.392754889, 0.402692542, 0.412722625, 0.422690875, 0.432628375, 0.442720431, 0.452750389, 0.462688222, 0.472718347, 0.482748333, 0.492685944, 0.502716194, 0.512746917, 0.52260125, 0.532589653, 0.542578236, 0.552732764, 0.562732236, 0.5727005, 0.582730639, 0.592730139, 0.602698264, 0.6127285, 0.622727931, 0.632696056, 0.642726139, 0.652664028, 0.662632014, 0.672724111, 0.682723611, 0.692691653, 0.702721958, 0.712721472, 0.722689556, 0.732719625, 0.742657361, 0.752625514, 0.762717528, 0.772717431, 0.782685167, 0.792715417, 0.802745361, 0.812683083, 0.822713208, 0.83274325, 0.842680847, 0.852711056, 0.862741097, 0.872678694, 0.882708833, 0.892738819, 0.902676569, 0.912706681, 0.922736681, 0.932674306, 0.942704625, 0.952734542, 0.962672222, 0.972702417, 0.982732403, 0.992669986, 1.002700181, 1.012730958, 1.022585278] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:29.786" endtime="20201112 10:16:29.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.781" endtime="20201112 10:16:29.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.790" endtime="20201112 10:16:29.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:29.793" endtime="20201112 10:16:29.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.792" endtime="20201112 10:16:29.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.788" endtime="20201112 10:16:29.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.280" endtime="20201112 10:16:29.814"></status>
</kw>
<msg timestamp="20201112 10:16:29.814" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.823" endtime="20201112 10:16:31.942"></status>
</kw>
<msg timestamp="20201112 10:16:31.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74453063, 'wakeups': [74463256, 74473205, 74483245, 74493255, 745032...</msg>
<status status="PASS" starttime="20201112 10:16:29.821" endtime="20201112 10:16:31.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74453063, 'wakeups': [74463256, 74473205, 74483245, 74493255, 745032...</msg>
<status status="PASS" starttime="20201112 10:16:31.944" endtime="20201112 10:16:31.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.947" endtime="20201112 10:16:31.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.818" endtime="20201112 10:16:31.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.816" endtime="20201112 10:16:31.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:31.952" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [74463256, 74473205, 74483245, 74493255, 74503204, 74513244, 74523254, 74533203, 74543243, 74553253, 74563201, 74573242, 74583251, 74593200, 74603240, 74613250, 74623199...</msg>
<status status="PASS" starttime="20201112 10:16:31.950" endtime="20201112 10:16:31.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.956" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:31.955" endtime="20201112 10:16:31.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.958" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:31.957" endtime="20201112 10:16:31.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.953" endtime="20201112 10:16:31.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.969" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:31.968" endtime="20201112 10:16:31.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.971" level="INFO">VALUE: 74453063</msg>
<status status="PASS" starttime="20201112 10:16:31.970" endtime="20201112 10:16:31.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.965" endtime="20201112 10:16:31.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.976" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:31.975" endtime="20201112 10:16:31.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:31.978" level="INFO">VALUE: [74463256, 74473205, 74483245, 74493255, 74503204, 74513244, 74523254, 74533203, 74543243, 74553253, 74563201, 74573242, 74583251, 74593200, 74603240, 74613250, 74623199, 74633239, 74643249, 74653198, 74663238, 74673248, 74683197, 74693237, 74703247, 74713195, 74723236, 74733276, 74743194, 74753234, 74763275, 74773193, 74783233, 74793273, 74803192, 74813232, 74823272, 74833190, 74843231, 74853271, 74863189, 74873229, 74883270, 74893188, 74903228, 74913269, 74923187, 74933227, 74943267, 74953186, 74963226, 74973266, 74983215, 74993225, 75003265, 75013214, 75023223, 75033264, 75043212, 75053222, 75063262, 75073211, 75083221, 75093261, 75103210, 75113220, 75123260, 75133209, 75143218, 75153259, 75163208, 75173217, 75183258, 75193206, 75203216, 75213256, 75223205, 75233245, 75243255, 75253204, 75263244, 75273254, 75283203, 75293243, 75303253, 75313201, 75323242, 75333251, 75343200, 75353240, 75363250, 75373199, 75383239, 75393249, 75403198, 75413238, 75423248, 75433197, 75443237, 75453186]</msg>
<status status="PASS" starttime="20201112 10:16:31.977" endtime="20201112 10:16:31.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.972" endtime="20201112 10:16:31.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:31.985" endtime="20201112 10:16:32.277"></status>
</kw>
<msg timestamp="20201112 10:16:32.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030140681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:31.984" endtime="20201112 10:16:32.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030140681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.280" endtime="20201112 10:16:32.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.288" endtime="20201112 10:16:32.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.981" endtime="20201112 10:16:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:31.979" endtime="20201112 10:16:32.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.314" level="INFO">${RESULT} = {'time': [0.019947319, 0.030140681, 0.040105806, 0.050135931, 0.060135486, 0.070103653, 0.080133875, 0.09013325, 0.1001015, 0.110131542, 0.120131111, 0.130099236, 0.140129514, 0.150128972, 0.160097153...</msg>
<status status="PASS" starttime="20201112 10:16:32.291" endtime="20201112 10:16:32.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.319" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.318" endtime="20201112 10:16:32.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.321" level="INFO">VALUE: 0.019947319</msg>
<status status="PASS" starttime="20201112 10:16:32.320" endtime="20201112 10:16:32.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.315" endtime="20201112 10:16:32.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.326" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.325" endtime="20201112 10:16:32.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.328" level="INFO">VALUE: [0.030140681, 0.040105806, 0.050135931, 0.060135486, 0.070103653, 0.080133875, 0.09013325, 0.1001015, 0.110131542, 0.120131111, 0.130099236, 0.140129514, 0.150128972, 0.160097153, 0.170127333, 0.180126889, 0.190094903, 0.200125069, 0.210124653, 0.220092806, 0.230122889, 0.240122458, 0.250090597, 0.260120819, 0.270120292, 0.280088514, 0.290118611, 0.300148625, 0.310086208, 0.320116431, 0.330146431, 0.340083875, 0.350114111, 0.360144097, 0.370081806, 0.380112014, 0.390141958, 0.400079639, 0.410109764, 0.420139875, 0.430077375, 0.440107653, 0.450137583, 0.460075375, 0.4701055, 0.480135528, 0.490073097, 0.500103361, 0.510133458, 0.520071014, 0.530101111, 0.54013125, 0.550099375, 0.560098986, 0.570128958, 0.580096986, 0.59009675, 0.600126875, 0.610094944, 0.620094569, 0.630124681, 0.640092708, 0.650092389, 0.660122486, 0.670090556, 0.680090208, 0.690120264, 0.700088417, 0.710088, 0.720118069, 0.730086194, 0.740085875, 0.750115931, 0.760084042, 0.77008375, 0.780113653, 0.790081736, 0.800111958, 0.810111472, 0.820079653, 0.830109819, 0.840109333, 0.850077333, 0.860107708, 0.870107167, 0.880075319, 0.890105375, 0.900104875, 0.910073125, 0.920103319, 0.930102708, 0.940070847, 0.950101194, 0.960100542, 0.970068722, 0.980098944, 0.990098458, 1.000066458, 1.010096569, 1.020034417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:32.327" endtime="20201112 10:16:32.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.322" endtime="20201112 10:16:32.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.332" endtime="20201112 10:16:32.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.335" endtime="20201112 10:16:32.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.334" endtime="20201112 10:16:32.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.330" endtime="20201112 10:16:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.815" endtime="20201112 10:16:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.734" endtime="20201112 10:16:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.733" endtime="20201112 10:16:32.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.852" endtime="20201112 10:16:32.357"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:15.771" endtime="20201112 10:16:32.358" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:15:14.230" endtime="20201112 10:16:32.361"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:28.638" endtime="20201112 10:16:32.376"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
