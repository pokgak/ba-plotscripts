<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:42:36.655" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:37.217" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:37.225" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:38.335" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:37.215" endtime="20201112 09:42:38.336"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.338" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:38.337" endtime="20201112 09:42:38.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.214" endtime="20201112 09:42:38.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.341" endtime="20201112 09:42:38.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.340" endtime="20201112 09:42:38.526"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.539" endtime="20201112 09:42:38.563"></status>
</kw>
<msg timestamp="20201112 09:42:38.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-...</msg>
<status status="PASS" starttime="20201112 09:42:38.538" endtime="20201112 09:42:38.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-...</msg>
<status status="PASS" starttime="20201112 09:42:38.564" endtime="20201112 09:42:38.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.569" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.567" endtime="20201112 09:42:38.570"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.535" endtime="20201112 09:42:38.570"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.532" endtime="20201112 09:42:38.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.531" endtime="20201112 09:42:38.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.575" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.574" endtime="20201112 09:42:38.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.572" endtime="20201112 09:42:38.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.530" endtime="20201112 09:42:38.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.529" endtime="20201112 09:42:38.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.577" endtime="20201112 09:42:38.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.528" endtime="20201112 09:42:38.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.580" endtime="20201112 09:42:38.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.527" endtime="20201112 09:42:38.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.212" endtime="20201112 09:42:38.582"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.588" endtime="20201112 09:42:38.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.587" endtime="20201112 09:42:38.608"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.623" endtime="20201112 09:42:38.645"></status>
</kw>
<msg timestamp="20201112 09:42:38.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.622" endtime="20201112 09:42:38.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.647" endtime="20201112 09:42:38.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.649" endtime="20201112 09:42:38.652"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.619" endtime="20201112 09:42:38.652"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.617" endtime="20201112 09:42:38.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.615" endtime="20201112 09:42:38.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.657" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.656" endtime="20201112 09:42:38.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.654" endtime="20201112 09:42:38.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.614" endtime="20201112 09:42:38.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.612" endtime="20201112 09:42:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.659" endtime="20201112 09:42:38.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.611" endtime="20201112 09:42:38.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.609" endtime="20201112 09:42:38.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.585" endtime="20201112 09:42:38.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.669" endtime="20201112 09:42:38.682"></status>
</kw>
<msg timestamp="20201112 09:42:38.682" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.667" endtime="20201112 09:42:38.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.685" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.683" endtime="20201112 09:42:38.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.686" endtime="20201112 09:42:38.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.664" endtime="20201112 09:42:38.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.662" endtime="20201112 09:42:38.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.693" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:38.692" endtime="20201112 09:42:38.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.695" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:38.694" endtime="20201112 09:42:38.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.689" endtime="20201112 09:42:38.696"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:38.582" endtime="20201112 09:42:38.696" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:36.768" endtime="20201112 09:42:38.699"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.751" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:38.759" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:39.929" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:38.750" endtime="20201112 09:42:39.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.936" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:39.933" endtime="20201112 09:42:39.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.748" endtime="20201112 09:42:39.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:39.940" endtime="20201112 09:42:40.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.938" endtime="20201112 09:42:40.160"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.173" endtime="20201112 09:42:40.196"></status>
</kw>
<msg timestamp="20201112 09:42:40.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-d...</msg>
<status status="PASS" starttime="20201112 09:42:40.171" endtime="20201112 09:42:40.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-d...</msg>
<status status="PASS" starttime="20201112 09:42:40.198" endtime="20201112 09:42:40.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:40.201" endtime="20201112 09:42:40.204"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.169" endtime="20201112 09:42:40.204"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.167" endtime="20201112 09:42:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.165" endtime="20201112 09:42:40.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:40.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:40.208" endtime="20201112 09:42:40.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.206" endtime="20201112 09:42:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.165" endtime="20201112 09:42:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.164" endtime="20201112 09:42:40.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.211" endtime="20201112 09:42:40.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.163" endtime="20201112 09:42:40.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.213" endtime="20201112 09:42:40.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.161" endtime="20201112 09:42:40.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.747" endtime="20201112 09:42:40.216"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.222" endtime="20201112 09:42:40.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.220" endtime="20201112 09:42:40.242"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.256" endtime="20201112 09:42:40.278"></status>
</kw>
<msg timestamp="20201112 09:42:40.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.253" endtime="20201112 09:42:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.279" endtime="20201112 09:42:40.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.284" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:40.282" endtime="20201112 09:42:40.284"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.251" endtime="20201112 09:42:40.285"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.248" endtime="20201112 09:42:40.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.247" endtime="20201112 09:42:40.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:40.290" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:40.289" endtime="20201112 09:42:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.287" endtime="20201112 09:42:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.246" endtime="20201112 09:42:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.246" endtime="20201112 09:42:40.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.292" endtime="20201112 09:42:40.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.244" endtime="20201112 09:42:40.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.242" endtime="20201112 09:42:40.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.219" endtime="20201112 09:42:40.295"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:40.297" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.305" endtime="20201112 09:42:40.321"></status>
</kw>
<msg timestamp="20201112 09:42:40.321" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.303" endtime="20201112 09:42:40.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.322" endtime="20201112 09:42:40.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.325" endtime="20201112 09:42:40.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.301" endtime="20201112 09:42:40.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.299" endtime="20201112 09:42:40.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.334" endtime="20201112 09:42:40.619"></status>
</kw>
<msg timestamp="20201112 09:42:40.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0746005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074600972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:40.332" endtime="20201112 09:42:40.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0746005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074600972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:40.623" endtime="20201112 09:42:40.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.631" endtime="20201112 09:42:40.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.330" endtime="20201112 09:42:40.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.328" endtime="20201112 09:42:40.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.638" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:40.637" endtime="20201112 09:42:40.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.643" level="INFO">VALUE: [{'time': 0.0746005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074600972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074609958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.074610444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597999999996551e-06, 'source_diff': 6.597999999996551e-06}, {'time': 0.074617514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074624222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000008041e-06, 'source_diff': 6.708000000008041e-06}, {'time': 0.074624694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074630556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861999999995371e-06, 'source_diff': 5.861999999995371e-06}, {'time': 0.074631042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074636278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2360000000056806e-06, 'source_diff': 5.2360000000056806e-06}, {'time': 0.07463675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074646681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000004686e-06, 'source_diff': 9.931000000004686e-06}, {'time': 0.074647153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074655833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000010901e-06, 'source_diff': 8.680000000010901e-06}, {'time': 0.074656306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074660306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999901226e-06, 'source_diff': 3.9999999999901226e-06}, {'time': 0.074660778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074671125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000007767e-05, 'source_diff': 1.0347000000007767e-05}, {'time': 0.074671597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074679458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.074679931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074688292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.074688764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074698583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999994249e-06, 'source_diff': 9.818999999994249e-06}, {'time': 0.074699069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074704292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.074704778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074711153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.074711625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074721639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.074722111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074731514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.074731986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074736292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.074736764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074742194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.074742667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902000000006073e-06, 'source_diff': 9.902000000006073e-06}, {'time': 0.074753056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.074759944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8879999999965635e-06, 'source_diff': 6.8879999999965635e-06}, {'time': 0.074760417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074768389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000008861e-06, 'source_diff': 7.972000000008861e-06}, {'time': 0.074768861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074772847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.074773319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074781681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361999999997871e-06, 'source_diff': 8.361999999997871e-06}, {'time': 0.074782167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.07479, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.074790486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074795111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.624999999994217e-06, 'source_diff': 4.624999999994217e-06}, {'time': 0.074795583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074799569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.074800056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.07480675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.074807236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.07481425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.074814722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074825181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000004326e-05, 'source_diff': 1.0459000000004326e-05}, {'time': 0.074825653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074834361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.074834833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074839514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999992497e-06, 'source_diff': 4.680999999992497e-06}, {'time': 0.07484, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074849722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.721999999989794e-06, 'source_diff': 9.721999999989794e-06}, {'time': 0.074850194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074854292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.098000000007929e-06, 'source_diff': 4.098000000007929e-06}, {'time': 0.074854764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0748645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.074864972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074873861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.074874333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074884361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999995263e-05, 'source_diff': 1.0027999999995263e-05}, {'time': 0.074884833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074890694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.074891167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074900792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.074901264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074906292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.074906778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074915694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000011581e-06, 'source_diff': 8.916000000011581e-06}, {'time': 0.074916167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074922625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.074923111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074928875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.76400000000532e-06, 'source_diff': 5.76400000000532e-06}, {'time': 0.074929347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.0749375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000010735e-06, 'source_diff': 8.153000000010735e-06}, {'time': 0.074937986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074948097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000007087e-05, 'source_diff': 1.0111000000007087e-05}, {'time': 0.074948583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074958083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999995623e-06, 'source_diff': 9.499999999995623e-06}, {'time': 0.074958556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074966389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.074966861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074973222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000010275e-06, 'source_diff': 6.361000000010275e-06}, {'time': 0.074973708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074980403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.074980875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.082999999991069e-06, 'source_diff': 7.082999999991069e-06}, {'time': 0.074988444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:40.639" endtime="20201112 09:42:40.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.634" endtime="20201112 09:42:40.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:40.669" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.986000000002492e-06, 4.859999999939912e-07, 6.597999999996551e-06, 4.720000000013602e-07, 6.708000000008041e-06, 4.720000000013602e-07, 5.861999999995371e-06, 4.8...</msg>
<status status="PASS" starttime="20201112 09:42:40.646" endtime="20201112 09:42:40.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.673" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:40.672" endtime="20201112 09:42:40.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.677" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.986000000002492e-06, 4.859999999939912e-07, 6.597999999996551e-06, 4.720000000013602e-07, 6.708000000008041e-06, 4.720000000013602e-07, 5.861999999995371e-06, 4.859999999939912e-07, 5.2360000000056806e-06, 4.720000000013602e-07, 9.931000000004686e-06, 4.7199999998748243e-07, 8.680000000010901e-06, 4.7300000000083386e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 1.0347000000007767e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.818999999994249e-06, 4.86000000007869e-07, 5.222999999998645e-06, 4.859999999939912e-07, 6.375000000002906e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.7199999998748243e-07, 9.403000000005046e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 5.430000000000712e-06, 4.7300000000083386e-07, 9.902000000006073e-06, 4.869999999934649e-07, 6.8879999999965635e-06, 4.7300000000083386e-07, 7.972000000008861e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.859999999939912e-07, 7.832999999998758e-06, 4.86000000007869e-07, 4.624999999994217e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.870000000073427e-07, 6.694000000001532e-06, 4.859999999939912e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0459000000004326e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 4.680999999992497e-06, 4.86000000007869e-07, 9.721999999989794e-06, 4.720000000013602e-07, 4.098000000007929e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 5.860999999995897e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.859999999939912e-07, 8.916000000011581e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.859999999939912e-07, 5.76400000000532e-06, 4.7199999998748243e-07, 8.153000000010735e-06, 4.859999999939912e-07, 1.0111000000007087e-05, 4.859999999939912e-07, 9.499999999995623e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 6.361000000010275e-06, 4.859999999939912e-07, 6.695000000001006e-06, 4.720000000013602e-07, 7.082999999991069e-06, 4.86000000007869e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.0746005, 0.074600972, 0.074609958, 0.074610444, 0.074617042, 0.074617514, 0.074624222, 0.074624694, 0.074630556, 0.074631042, 0.074636278, 0.07463675, 0.074646681, 0.074647153, 0.074655833, 0.074656306, 0.074660306, 0.074660778, 0.074671125, 0.074671597, 0.074679458, 0.074679931, 0.074688292, 0.074688764, 0.074698583, 0.074699069, 0.074704292, 0.074704778, 0.074711153, 0.074711625, 0.074721639, 0.074722111, 0.074731514, 0.074731986, 0.074736292, 0.074736764, 0.074742194, 0.074742667, 0.074752569, 0.074753056, 0.074759944, 0.074760417, 0.074768389, 0.074768861, 0.074772847, 0.074773319, 0.074781681, 0.074782167, 0.07479, 0.074790486, 0.074795111, 0.074795583, 0.074799569, 0.074800056, 0.07480675, 0.074807236, 0.07481425, 0.074814722, 0.074825181, 0.074825653, 0.074834361, 0.074834833, 0.074839514, 0.07484, 0.074849722, 0.074850194, 0.074854292, 0.074854764, 0.0748645, 0.074864972, 0.074873861, 0.074874333, 0.074884361, 0.074884833, 0.074890694, 0.074891167, 0.074900792, 0.074901264, 0.074906292, 0.074906778, 0.074915694, 0.074916167, 0.074922625, 0.074923111, 0.074928875, 0.074929347, 0.0749375, 0.074937986, 0.074948097, 0.074948583, 0.074958083, 0.074958556, 0.074966389, 0.074966861, 0.074973222, 0.074973708, 0.074980403, 0.074980875, 0.074987958, 0.074988444], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.986000000002492e-06, 4.859999999939912e-07, 6.597999999996551e-06, 4.720000000013602e-07, 6.708000000008041e-06, 4.720000000013602e-07, 5.861999999995371e-06, 4.859999999939912e-07, 5.2360000000056806e-06, 4.720000000013602e-07, 9.931000000004686e-06, 4.7199999998748243e-07, 8.680000000010901e-06, 4.7300000000083386e-07, 3.9999999999901226e-06, 4.720000000013602e-07, 1.0347000000007767e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.818999999994249e-06, 4.86000000007869e-07, 5.222999999998645e-06, 4.859999999939912e-07, 6.375000000002906e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.7199999998748243e-07, 9.403000000005046e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 5.430000000000712e-06, 4.7300000000083386e-07, 9.902000000006073e-06, 4.869999999934649e-07, 6.8879999999965635e-06, 4.7300000000083386e-07, 7.972000000008861e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.859999999939912e-07, 7.832999999998758e-06, 4.86000000007869e-07, 4.624999999994217e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.870000000073427e-07, 6.694000000001532e-06, 4.859999999939912e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0459000000004326e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 4.680999999992497e-06, 4.86000000007869e-07, 9.721999999989794e-06, 4.720000000013602e-07, 4.098000000007929e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 5.860999999995897e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.02800000000414e-06, 4.859999999939912e-07, 8.916000000011581e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.859999999939912e-07, 5.76400000000532e-06, 4.7199999998748243e-07, 8.153000000010735e-06, 4.859999999939912e-07, 1.0111000000007087e-05, 4.859999999939912e-07, 9.499999999995623e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 6.361000000010275e-06, 4.859999999939912e-07, 6.695000000001006e-06, 4.720000000013602e-07, 7.082999999991069e-06, 4.86000000007869e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:40.674" endtime="20201112 09:42:40.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.670" endtime="20201112 09:42:40.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:40.683" level="INFO">${RESULT} = [{'time': 0.074600972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074610444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:40.680" endtime="20201112 09:42:40.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:40.696" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201112 09:42:40.684" endtime="20201112 09:42:40.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.701" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:40.699" endtime="20201112 09:42:40.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.703" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07]</msg>
<status status="PASS" starttime="20201112 09:42:40.702" endtime="20201112 09:42:40.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.697" endtime="20201112 09:42:40.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.706" endtime="20201112 09:42:40.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.710" endtime="20201112 09:42:40.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.708" endtime="20201112 09:42:40.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.705" endtime="20201112 09:42:40.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.298" endtime="20201112 09:42:40.730"></status>
</kw>
<msg timestamp="20201112 09:42:40.731" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.739" endtime="20201112 09:42:40.752"></status>
</kw>
<msg timestamp="20201112 09:42:40.752" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.737" endtime="20201112 09:42:40.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.754" endtime="20201112 09:42:40.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.756" endtime="20201112 09:42:40.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.734" endtime="20201112 09:42:40.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.733" endtime="20201112 09:42:40.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.767" endtime="20201112 09:42:41.057"></status>
</kw>
<msg timestamp="20201112 09:42:41.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018722903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018723375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.766" endtime="20201112 09:42:41.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018722903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018723375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.061" endtime="20201112 09:42:41.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.070" endtime="20201112 09:42:41.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.761" endtime="20201112 09:42:41.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.759" endtime="20201112 09:42:41.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.076" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.075" endtime="20201112 09:42:41.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.081" level="INFO">VALUE: [{'time': 0.018722903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018723375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018732069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018732542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.018742611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018746708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018747194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018756278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.08400000000295e-06, 'source_diff': 9.08400000000295e-06}, {'time': 0.01875675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018762028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.0187625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018766472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.018766944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018774125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018778542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018779014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018785083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018785569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018795806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0237000000003216e-05, 'source_diff': 1.0237000000003216e-05}, {'time': 0.018796278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018801319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018801792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018809431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018809903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018818681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.018819167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018828875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.707999999997163e-06, 'source_diff': 9.707999999997163e-06}, {'time': 0.018829361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018838444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.018838931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018844069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.018844542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018853222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018853694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018859931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236999999999215e-06, 'source_diff': 6.236999999999215e-06}, {'time': 0.018860403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018865708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.018866181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018873819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.638000000000783e-06, 'source_diff': 7.638000000000783e-06}, {'time': 0.018874292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018883278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018883764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018888181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018888653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018898153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.018898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01890275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018903222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018913681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.018914153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018922917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.018923389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018927486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018927958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.018932958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018943292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.018943778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018948083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.018948556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018954417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.018954889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018964278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.01896475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018972278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.01897275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018977111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018986181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.018986653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018991375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018991847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019000306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.019000778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019011097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.019011569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019021611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.019022083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019030236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019030708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019037194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019037681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019042083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.019042569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019050931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.019051403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019059458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019059931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019068722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.019069194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019073708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019074181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019084222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.019084694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019089306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.019089792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019099708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.019100194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.077" endtime="20201112 09:42:41.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.073" endtime="20201112 09:42:41.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.107" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.859999999974607e-07, 9.08400000000295e-06, 4....</msg>
<status status="PASS" starttime="20201112 09:42:41.084" endtime="20201112 09:42:41.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.111" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.110" endtime="20201112 09:42:41.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.115" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.859999999974607e-07, 9.08400000000295e-06, 4.7199999999789077e-07, 5.278000000000921e-06, 4.720000000013602e-07, 3.971999999997922e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 6.069000000000907e-06, 4.859999999974607e-07, 1.0237000000003216e-05, 4.7199999999789077e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 8.778000000000952e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.870000000004038e-07, 5.138000000001752e-06, 4.729999999973644e-07, 8.680000000000493e-06, 4.720000000013602e-07, 6.236999999999215e-06, 4.720000000013602e-07, 5.304999999997118e-06, 4.7300000000083386e-07, 7.638000000000783e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 4.111000000001086e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.729999999973644e-07, 5.861000000002836e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 3.875000000000406e-06, 4.860000000009301e-07, 9.069999999999911e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.859999999974607e-07, 8.36200000000134e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 8.791000000001048e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.729999999973644e-07, 1.0041000000002298e-05, 4.7199999999789077e-07, 4.61200000000106e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.860000000009301e-07], 'eventtime': [0.018722903, 0.018723375, 0.018732069, 0.018732542, 0.018742139, 0.018742611, 0.018746708, 0.018747194, 0.018756278, 0.01875675, 0.018762028, 0.0187625, 0.018766472, 0.018766944, 0.018773653, 0.018774125, 0.018778542, 0.018779014, 0.018785083, 0.018785569, 0.018795806, 0.018796278, 0.018801319, 0.018801792, 0.018809431, 0.018809903, 0.018818681, 0.018819167, 0.018828875, 0.018829361, 0.018838444, 0.018838931, 0.018844069, 0.018844542, 0.018853222, 0.018853694, 0.018859931, 0.018860403, 0.018865708, 0.018866181, 0.018873819, 0.018874292, 0.018883278, 0.018883764, 0.018888181, 0.018888653, 0.018898153, 0.018898639, 0.01890275, 0.018903222, 0.018913681, 0.018914153, 0.018922917, 0.018923389, 0.018927486, 0.018927958, 0.018932486, 0.018932958, 0.018943292, 0.018943778, 0.018948083, 0.018948556, 0.018954417, 0.018954889, 0.018964278, 0.01896475, 0.018972278, 0.01897275, 0.018976625, 0.018977111, 0.018986181, 0.018986653, 0.018991375, 0.018991847, 0.019000306, 0.019000778, 0.019011097, 0.019011569, 0.019021611, 0.019022083, 0.019030236, 0.019030708, 0.019037194, 0.019037681, 0.019042083, 0.019042569, 0.019050931, 0.019051403, 0.019059458, 0.019059931, 0.019068722, 0.019069194, 0.019073708, 0.019074181, 0.019084222, 0.019084694, 0.019089306, 0.019089792, 0.019099708, 0.019100194], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.859999999974607e-07, 9.08400000000295e-06, 4.7199999999789077e-07, 5.278000000000921e-06, 4.720000000013602e-07, 3.971999999997922e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 4.416999999999616e-06, 4.720000000013602e-07, 6.069000000000907e-06, 4.859999999974607e-07, 1.0237000000003216e-05, 4.7199999999789077e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 8.778000000000952e-06, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.870000000004038e-07, 5.138000000001752e-06, 4.729999999973644e-07, 8.680000000000493e-06, 4.720000000013602e-07, 6.236999999999215e-06, 4.720000000013602e-07, 5.304999999997118e-06, 4.7300000000083386e-07, 7.638000000000783e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 4.416999999999616e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.859999999974607e-07, 4.111000000001086e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 4.7199999999789077e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.860000000009301e-07, 4.304999999999587e-06, 4.729999999973644e-07, 5.861000000002836e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 3.875000000000406e-06, 4.860000000009301e-07, 9.069999999999911e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.859999999974607e-07, 8.36200000000134e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 8.791000000001048e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.729999999973644e-07, 1.0041000000002298e-05, 4.7199999999789077e-07, 4.61200000000106e-06, 4.860000000009301e-07, 9.915999999998704e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:41.112" endtime="20201112 09:42:41.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.108" endtime="20201112 09:42:41.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.120" level="INFO">${RESULT} = [{'time': 0.018723375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018732542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:41.117" endtime="20201112 09:42:41.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.133" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:41.121" endtime="20201112 09:42:41.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.138" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.137" endtime="20201112 09:42:41.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.140" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:41.139" endtime="20201112 09:42:41.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.134" endtime="20201112 09:42:41.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.143" endtime="20201112 09:42:41.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.147" endtime="20201112 09:42:41.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.145" endtime="20201112 09:42:41.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.142" endtime="20201112 09:42:41.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.731" endtime="20201112 09:42:41.168"></status>
</kw>
<msg timestamp="20201112 09:42:41.168" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.176" endtime="20201112 09:42:41.190"></status>
</kw>
<msg timestamp="20201112 09:42:41.190" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.174" endtime="20201112 09:42:41.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.191" endtime="20201112 09:42:41.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.194" endtime="20201112 09:42:41.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.172" endtime="20201112 09:42:41.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.170" endtime="20201112 09:42:41.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.203" endtime="20201112 09:42:41.501"></status>
</kw>
<msg timestamp="20201112 09:42:41.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.201" endtime="20201112 09:42:41.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.505" endtime="20201112 09:42:41.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.513" endtime="20201112 09:42:41.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.199" endtime="20201112 09:42:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.197" endtime="20201112 09:42:41.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.520" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.519" endtime="20201112 09:42:41.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.525" level="INFO">VALUE: [{'time': 0.018067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018076361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018076833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018083542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018084014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018091111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.018091583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018099417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.018099889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018108958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.018109431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018115194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.763000000002377e-06, 'source_diff': 5.763000000002377e-06}, {'time': 0.018115667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018124639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.018125111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018129, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018129472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018139806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.018140292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018145431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018145903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018152611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.018153083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018162694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018163167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018170097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.018170569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018175903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018176389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018185389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.018185861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018191097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018191569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018199931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361999999997871e-06, 'source_diff': 8.361999999997871e-06}, {'time': 0.018200403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018205042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018205514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018214, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018214472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018223139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.018223611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018231792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.018232264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018239458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018239944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018248625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018249097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018258486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.018258958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018268986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.018269458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018276861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018277347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01828725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.018287722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.018294472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018302333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018302806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018308944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.137999999999283e-06, 'source_diff': 6.137999999999283e-06}, {'time': 0.018309417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018319236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.018319708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018327361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018327833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.0183325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018336514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018336986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018342736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.018343222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018350958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018351444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018361792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347999999996832e-05, 'source_diff': 1.0347999999996832e-05}, {'time': 0.018362264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018371625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018378431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018378903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018386639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.018387111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018395069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.018395542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.018402931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018412653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.018413125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018420236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018420708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018425972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.018426444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018432194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.018432681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018437097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018437569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.01844825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018454944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.018455417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.521" endtime="20201112 09:42:41.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.517" endtime="20201112 09:42:41.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.551" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4....</msg>
<status status="PASS" starttime="20201112 09:42:41.528" endtime="20201112 09:42:41.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.554" endtime="20201112 09:42:41.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.559" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.729999999973644e-07, 5.763000000002377e-06, 4.729999999973644e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 5.139000000001226e-06, 4.720000000013602e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.929999999998743e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.402999999999577e-06, 4.860000000009301e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.859999999974607e-07, 7.861000000001367e-06, 4.7300000000083386e-07, 6.137999999999283e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.7199999999789077e-07, 5.749999999998812e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.860000000009301e-07, 1.0347999999996832e-05, 4.720000000013602e-07, 8.875000000001937e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.870000000004038e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.870000000004038e-07, 4.416000000000142e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 6.694000000001532e-06, 4.729999999973644e-07], 'eventtime': [0.018067542, 0.018068014, 0.018076361, 0.018076833, 0.018083542, 0.018084014, 0.018091111, 0.018091583, 0.018099417, 0.018099889, 0.018108958, 0.018109431, 0.018115194, 0.018115667, 0.018124639, 0.018125111, 0.018129, 0.018129472, 0.018139806, 0.018140292, 0.018145431, 0.018145903, 0.018152611, 0.018153083, 0.018162694, 0.018163167, 0.018170097, 0.018170569, 0.018175903, 0.018176389, 0.018185389, 0.018185861, 0.018191097, 0.018191569, 0.018199931, 0.018200403, 0.018205042, 0.018205514, 0.018214, 0.018214472, 0.018223139, 0.018223611, 0.018231792, 0.018232264, 0.018239458, 0.018239944, 0.018248625, 0.018249097, 0.018258486, 0.018258958, 0.018268986, 0.018269458, 0.018276861, 0.018277347, 0.01828725, 0.018287722, 0.018293986, 0.018294472, 0.018302333, 0.018302806, 0.018308944, 0.018309417, 0.018319236, 0.018319708, 0.018327361, 0.018327833, 0.018332028, 0.0183325, 0.018336514, 0.018336986, 0.018342736, 0.018343222, 0.018350958, 0.018351444, 0.018361792, 0.018362264, 0.018371139, 0.018371625, 0.018378431, 0.018378903, 0.018386639, 0.018387111, 0.018395069, 0.018395542, 0.018402444, 0.018402931, 0.018412653, 0.018413125, 0.018420236, 0.018420708, 0.018425972, 0.018426444, 0.018432194, 0.018432681, 0.018437097, 0.018437569, 0.018447778, 0.01844825, 0.018454944, 0.018455417], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 7.097000000001047e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.729999999973644e-07, 5.763000000002377e-06, 4.729999999973644e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 5.139000000001226e-06, 4.720000000013602e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 6.929999999998743e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 7.402999999999577e-06, 4.860000000009301e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 6.264000000002351e-06, 4.859999999974607e-07, 7.861000000001367e-06, 4.7300000000083386e-07, 6.137999999999283e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 4.1949999999985055e-06, 4.720000000013602e-07, 4.014000000000101e-06, 4.7199999999789077e-07, 5.749999999998812e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.860000000009301e-07, 1.0347999999996832e-05, 4.720000000013602e-07, 8.875000000001937e-06, 4.859999999974607e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.7300000000083386e-07, 6.901999999999603e-06, 4.870000000004038e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.749999999998812e-06, 4.870000000004038e-07, 4.416000000000142e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 6.694000000001532e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:41.556" endtime="20201112 09:42:41.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.552" endtime="20201112 09:42:41.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.565" level="INFO">${RESULT} = [{'time': 0.018068014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018076833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:41.561" endtime="20201112 09:42:41.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.578" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.72...</msg>
<status status="PASS" starttime="20201112 09:42:41.566" endtime="20201112 09:42:41.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.581" endtime="20201112 09:42:41.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.585" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 09:42:41.583" endtime="20201112 09:42:41.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.579" endtime="20201112 09:42:41.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.588" endtime="20201112 09:42:41.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.591" endtime="20201112 09:42:41.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.590" endtime="20201112 09:42:41.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.586" endtime="20201112 09:42:41.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.169" endtime="20201112 09:42:41.612"></status>
</kw>
<msg timestamp="20201112 09:42:41.612" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.620" endtime="20201112 09:42:41.638"></status>
</kw>
<msg timestamp="20201112 09:42:41.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.618" endtime="20201112 09:42:41.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.640" endtime="20201112 09:42:41.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.642" endtime="20201112 09:42:41.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.616" endtime="20201112 09:42:41.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.614" endtime="20201112 09:42:41.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.651" endtime="20201112 09:42:41.941"></status>
</kw>
<msg timestamp="20201112 09:42:41.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.650" endtime="20201112 09:42:41.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.945" endtime="20201112 09:42:41.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.954" endtime="20201112 09:42:41.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.647" endtime="20201112 09:42:41.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.645" endtime="20201112 09:42:41.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.960" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.959" endtime="20201112 09:42:41.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.966" level="INFO">VALUE: [{'time': 0.021357042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021364736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2219999999977025e-06, 'source_diff': 7.2219999999977025e-06}, {'time': 0.021365222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021370611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.021371083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021381278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.021381764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021387528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.021388, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021397194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.021397681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021407611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021408083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021415194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.021415681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021426028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.0214265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021431847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.021432319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021439653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.021440125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02144475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.021445222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021455667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.021456139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021464, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.021464472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021469194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.021469667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021478028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.021478514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021483333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021483819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021492722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.021493194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021503514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.021504, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.021512569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021517569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.021518042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021527986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.021528458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021536708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.021537181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021547028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.0215475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021556361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.021556847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021563764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.021564236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02156875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.021569222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021573319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.021573806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021580403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.021580875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021586944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.021587431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021593278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.021593764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021603931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.021604403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021612486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.021612972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021616958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.021617431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021622458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.021622931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021628056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.021628542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021637931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.021638403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021648222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.021648694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021655792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.021656278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021661042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.021661514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021669944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430000000000243e-06, 'source_diff': 8.430000000000243e-06}, {'time': 0.021670431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021678181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.021678653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021687847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.021688319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021693264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.021693736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021700528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.021701014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021710306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.021710792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021715597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.021716083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021725167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.021725639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02173325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.021733736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021737944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.021738417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.962" endtime="20201112 09:42:41.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.957" endtime="20201112 09:42:41.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.991" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 7.2219999999977025e-06, 4.860000000009301e-07, 5.389000000001476e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.860000000009301e-07, 5.7639999999983815e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:41.968" endtime="20201112 09:42:41.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.995" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.994" endtime="20201112 09:42:41.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.999" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 7.2219999999977025e-06, 4.860000000009301e-07, 5.389000000001476e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.870000000004038e-07, 9.929999999998274e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.870000000004038e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 8.097000000002047e-06, 4.7199999999789077e-07, 5.000000000001531e-06, 4.7300000000083386e-07, 9.943999999997843e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.870000000004038e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.870000000004038e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.7300000000083386e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 8.430000000000243e-06, 4.870000000004038e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.860000000009301e-07, 4.805000000000087e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.7300000000083386e-07], 'eventtime': [0.021357042, 0.021357514, 0.021364736, 0.021365222, 0.021370611, 0.021371083, 0.021381278, 0.021381764, 0.021387528, 0.021388, 0.021397194, 0.021397681, 0.021407611, 0.021408083, 0.021415194, 0.021415681, 0.021426028, 0.0214265, 0.021431847, 0.021432319, 0.021439653, 0.021440125, 0.02144475, 0.021445222, 0.021455667, 0.021456139, 0.021464, 0.021464472, 0.021469194, 0.021469667, 0.021478028, 0.021478514, 0.021483333, 0.021483819, 0.021492722, 0.021493194, 0.021503514, 0.021504, 0.021512097, 0.021512569, 0.021517569, 0.021518042, 0.021527986, 0.021528458, 0.021536708, 0.021537181, 0.021547028, 0.0215475, 0.021556361, 0.021556847, 0.021563764, 0.021564236, 0.02156875, 0.021569222, 0.021573319, 0.021573806, 0.021580403, 0.021580875, 0.021586944, 0.021587431, 0.021593278, 0.021593764, 0.021603931, 0.021604403, 0.021612486, 0.021612972, 0.021616958, 0.021617431, 0.021622458, 0.021622931, 0.021628056, 0.021628542, 0.021637931, 0.021638403, 0.021648222, 0.021648694, 0.021655792, 0.021656278, 0.021661042, 0.021661514, 0.021669944, 0.021670431, 0.021678181, 0.021678653, 0.021687847, 0.021688319, 0.021693264, 0.021693736, 0.021700528, 0.021701014, 0.021710306, 0.021710792, 0.021715597, 0.021716083, 0.021725167, 0.021725639, 0.02173325, 0.021733736, 0.021737944, 0.021738417], 'sourcesource_diff': [0, 4.720000000013602e-07, 7.2219999999977025e-06, 4.860000000009301e-07, 5.389000000001476e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.860000000009301e-07, 5.7639999999983815e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.870000000004038e-07, 9.929999999998274e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.870000000004038e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 4.6249999999976865e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 8.097000000002047e-06, 4.7199999999789077e-07, 5.000000000001531e-06, 4.7300000000083386e-07, 9.943999999997843e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.860000000009301e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 4.097000000001516e-06, 4.870000000004038e-07, 6.597000000000547e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.870000000004038e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.860000000009301e-07, 3.9859999999974915e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.7300000000083386e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 8.430000000000243e-06, 4.870000000004038e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 9.291999999997552e-06, 4.860000000009301e-07, 4.805000000000087e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 4.207999999998602e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:41.996" endtime="20201112 09:42:42.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.992" endtime="20201112 09:42:42.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.005" level="INFO">${RESULT} = [{'time': 0.021357514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021365222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.001" endtime="20201112 09:42:42.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.018" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720...</msg>
<status status="PASS" starttime="20201112 09:42:42.006" endtime="20201112 09:42:42.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.022" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.021" endtime="20201112 09:42:42.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.025" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.023" endtime="20201112 09:42:42.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.019" endtime="20201112 09:42:42.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.028" endtime="20201112 09:42:42.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.031" endtime="20201112 09:42:42.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.030" endtime="20201112 09:42:42.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.026" endtime="20201112 09:42:42.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.613" endtime="20201112 09:42:42.052"></status>
</kw>
<msg timestamp="20201112 09:42:42.052" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.061" endtime="20201112 09:42:42.074"></status>
</kw>
<msg timestamp="20201112 09:42:42.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.059" endtime="20201112 09:42:42.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.076" endtime="20201112 09:42:42.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.078" endtime="20201112 09:42:42.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.056" endtime="20201112 09:42:42.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.054" endtime="20201112 09:42:42.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.087" endtime="20201112 09:42:42.377"></status>
</kw>
<msg timestamp="20201112 09:42:42.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.085" endtime="20201112 09:42:42.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.381" endtime="20201112 09:42:42.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.389" endtime="20201112 09:42:42.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.083" endtime="20201112 09:42:42.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.081" endtime="20201112 09:42:42.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.396" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.395" endtime="20201112 09:42:42.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.401" level="INFO">VALUE: [{'time': 0.018600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018606778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.01860725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018613944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.018614431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018622736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018623208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018629972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.764000000002851e-06, 'source_diff': 6.764000000002851e-06}, {'time': 0.018630444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018640389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.018640861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018648889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027999999996732e-06, 'source_diff': 8.027999999996732e-06}, {'time': 0.018649375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018654444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.018654917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018658875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.018659361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018668444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.018668931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018673458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018673931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018682903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018683389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018691778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.01869225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018701111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018701583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018708347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018714528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018720875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.018721347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018729194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018729667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018737111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.018737583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018747, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.018747472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.018752972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018761444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018761917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018767278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.01876775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018774417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018780069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018780542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018784944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.018785431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018794514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.018795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018802111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018802583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0188095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.018809972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018819069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018819542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018824889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018825361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018834903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.018835375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018842681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018843153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.554999999997368e-06, 'source_diff': 5.554999999997368e-06}, {'time': 0.018849194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018857139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.018857611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018867125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018867597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018877944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018878417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018884306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018884778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018892722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.018893194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018897583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018898069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018903014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.018903486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018909069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01891575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.018916236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018925736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.018926208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.01893275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018942333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.582999999997038e-06, 'source_diff': 9.582999999997038e-06}, {'time': 0.018942806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018950944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.018951431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018955833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.401999999997103e-06, 'source_diff': 4.401999999997103e-06}, {'time': 0.018956319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018963639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018964111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018971861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.018972333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:42.397" endtime="20201112 09:42:42.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.392" endtime="20201112 09:42:42.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.427" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.870000000004038e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 6.764000000002851e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:42.403" endtime="20201112 09:42:42.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.431" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.430" endtime="20201112 09:42:42.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.435" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.870000000004038e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 6.764000000002851e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 5.068999999999907e-06, 4.7300000000083386e-07, 3.957999999998352e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.870000000004038e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 7.444000000002282e-06, 4.7199999999789077e-07, 9.417000000001147e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.869999999969343e-07, 9.083000000000008e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 5.554999999997368e-06, 4.860000000009301e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.943999999999313e-06, 4.7199999999789077e-07, 4.389000000000476e-06, 4.860000000009301e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 6.680999999997966e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.582999999997038e-06, 4.7300000000083386e-07, 8.138000000001283e-06, 4.870000000004038e-07, 4.401999999997103e-06, 4.860000000009301e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07], 'eventtime': [0.018600736, 0.018601222, 0.018606778, 0.01860725, 0.018613944, 0.018614431, 0.018622736, 0.018623208, 0.018629972, 0.018630444, 0.018640389, 0.018640861, 0.018648889, 0.018649375, 0.018654444, 0.018654917, 0.018658875, 0.018659361, 0.018668444, 0.018668931, 0.018673458, 0.018673931, 0.018682903, 0.018683389, 0.018691778, 0.01869225, 0.018701111, 0.018701583, 0.018707875, 0.018708347, 0.018714528, 0.018715, 0.018720875, 0.018721347, 0.018729194, 0.018729667, 0.018737111, 0.018737583, 0.018747, 0.018747472, 0.0187525, 0.018752972, 0.018761444, 0.018761917, 0.018767278, 0.01876775, 0.018773944, 0.018774417, 0.018780069, 0.018780542, 0.018784944, 0.018785431, 0.018794514, 0.018795, 0.018802111, 0.018802583, 0.0188095, 0.018809972, 0.018819069, 0.018819542, 0.018824889, 0.018825361, 0.018834903, 0.018835375, 0.018842681, 0.018843153, 0.018848708, 0.018849194, 0.018857139, 0.018857611, 0.018867125, 0.018867597, 0.018877944, 0.018878417, 0.018884306, 0.018884778, 0.018892722, 0.018893194, 0.018897583, 0.018898069, 0.018903014, 0.018903486, 0.018908597, 0.018909069, 0.01891575, 0.018916236, 0.018925736, 0.018926208, 0.018932278, 0.01893275, 0.018942333, 0.018942806, 0.018950944, 0.018951431, 0.018955833, 0.018956319, 0.018963639, 0.018964111, 0.018971861, 0.018972333], 'sourcesource_diff': [0, 4.860000000009301e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.870000000004038e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 6.764000000002851e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 5.068999999999907e-06, 4.7300000000083386e-07, 3.957999999998352e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.870000000004038e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.860000000009301e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 6.181000000000936e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.729999999973644e-07, 7.444000000002282e-06, 4.7199999999789077e-07, 9.417000000001147e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.869999999969343e-07, 9.083000000000008e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 5.554999999997368e-06, 4.860000000009301e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.943999999999313e-06, 4.7199999999789077e-07, 4.389000000000476e-06, 4.860000000009301e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.110999999998617e-06, 4.720000000013602e-07, 6.680999999997966e-06, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.582999999997038e-06, 4.7300000000083386e-07, 8.138000000001283e-06, 4.870000000004038e-07, 4.401999999997103e-06, 4.860000000009301e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:42.432" endtime="20201112 09:42:42.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.428" endtime="20201112 09:42:42.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.441" level="INFO">${RESULT} = [{'time': 0.018601222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01860725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:42.438" endtime="20201112 09:42:42.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.454" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:42.442" endtime="20201112 09:42:42.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.459" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.458" endtime="20201112 09:42:42.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.461" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.460" endtime="20201112 09:42:42.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.455" endtime="20201112 09:42:42.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.464" endtime="20201112 09:42:42.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.467" endtime="20201112 09:42:42.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.466" endtime="20201112 09:42:42.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.462" endtime="20201112 09:42:42.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.053" endtime="20201112 09:42:42.488"></status>
</kw>
<msg timestamp="20201112 09:42:42.488" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.496" endtime="20201112 09:42:42.510"></status>
</kw>
<msg timestamp="20201112 09:42:42.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.495" endtime="20201112 09:42:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.512" endtime="20201112 09:42:42.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.515" endtime="20201112 09:42:42.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.492" endtime="20201112 09:42:42.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.490" endtime="20201112 09:42:42.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.524" endtime="20201112 09:42:42.811"></status>
</kw>
<msg timestamp="20201112 09:42:42.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.522" endtime="20201112 09:42:42.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.815" endtime="20201112 09:42:42.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.824" endtime="20201112 09:42:42.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.519" endtime="20201112 09:42:42.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.518" endtime="20201112 09:42:42.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.831" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.830" endtime="20201112 09:42:42.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.837" level="INFO">VALUE: [{'time': 0.019341903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019347153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.019347625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019353347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019353819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019361569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.019362042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019366667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.019367139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019375153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019375625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019380542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.019381014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019385167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019385653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019390458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.019390944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019398056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1120000000000905e-06, 'source_diff': 7.1120000000000905e-06}, {'time': 0.019398528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019406681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.019407153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019411431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.019411903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019418792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019419278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019427736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019428208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019436653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.445000000002756e-06, 'source_diff': 8.445000000002756e-06}, {'time': 0.019437125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019444847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.019445333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019451917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.019452403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019461403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.019461875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019471583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019472056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019477819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.019478292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019484056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019484542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019494056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.019494528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019504444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.019504931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.019515319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019525667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.019526139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019533319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019538042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.019538514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019545528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019546014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019554903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.019555375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019559472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019559944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019568736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019569208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019576042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.019576514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019585236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.019585708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019595847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019596319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019601833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019602319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019607653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.019608125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019615083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.019625472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019633014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.019633486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01963925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019639722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019649431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.019649903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019654056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019654528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019660458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.929999999997743e-06, 'source_diff': 5.929999999997743e-06}, {'time': 0.019660931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019668097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999999423e-06, 'source_diff': 7.165999999999423e-06}, {'time': 0.019668569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019672722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019673208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019677819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.019678306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019685736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.019686208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019694069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.019694542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019699042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019699528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019704972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.019705444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:42.832" endtime="20201112 09:42:42.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.828" endtime="20201112 09:42:42.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.862" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:42.839" endtime="20201112 09:42:42.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.866" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.865" endtime="20201112 09:42:42.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.870" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.860000000009301e-07, 4.805000000000087e-06, 4.860000000009301e-07, 7.1120000000000905e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 4.277999999999921e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.7199999999789077e-07, 8.445000000002756e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.859999999974607e-07, 6.584000000000451e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.513999999998662e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.722999999998145e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 8.721999999999203e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.720000000013602e-07, 5.929999999997743e-06, 4.7300000000083386e-07, 7.165999999999423e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 4.500000000001031e-06, 4.860000000009301e-07, 5.444000000000282e-06, 4.7199999999789077e-07], 'eventtime': [0.019341903, 0.019342389, 0.019347153, 0.019347625, 0.019353347, 0.019353819, 0.019361569, 0.019362042, 0.019366667, 0.019367139, 0.019375153, 0.019375625, 0.019380542, 0.019381014, 0.019385167, 0.019385653, 0.019390458, 0.019390944, 0.019398056, 0.019398528, 0.019406681, 0.019407153, 0.019411431, 0.019411903, 0.019418792, 0.019419278, 0.019427736, 0.019428208, 0.019436653, 0.019437125, 0.019444847, 0.019445333, 0.019451917, 0.019452403, 0.019461403, 0.019461875, 0.019471583, 0.019472056, 0.019477819, 0.019478292, 0.019484056, 0.019484542, 0.019494056, 0.019494528, 0.019504444, 0.019504931, 0.019514847, 0.019515319, 0.019525667, 0.019526139, 0.019532847, 0.019533319, 0.019538042, 0.019538514, 0.019545528, 0.019546014, 0.019554903, 0.019555375, 0.019559472, 0.019559944, 0.019568736, 0.019569208, 0.019576042, 0.019576514, 0.019585236, 0.019585708, 0.019595847, 0.019596319, 0.019601833, 0.019602319, 0.019607653, 0.019608125, 0.019614611, 0.019615083, 0.019624986, 0.019625472, 0.019633014, 0.019633486, 0.01963925, 0.019639722, 0.019649431, 0.019649903, 0.019654056, 0.019654528, 0.019660458, 0.019660931, 0.019668097, 0.019668569, 0.019672722, 0.019673208, 0.019677819, 0.019678306, 0.019685736, 0.019686208, 0.019694069, 0.019694542, 0.019699042, 0.019699528, 0.019704972, 0.019705444], 'sourcesource_diff': [0, 4.860000000009301e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 4.917000000000116e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.860000000009301e-07, 4.805000000000087e-06, 4.860000000009301e-07, 7.1120000000000905e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 4.277999999999921e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.860000000009301e-07, 8.457999999999383e-06, 4.7199999999789077e-07, 8.445000000002756e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.859999999974607e-07, 6.584000000000451e-06, 4.860000000009301e-07, 8.999999999998592e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 5.762999999998908e-06, 4.7300000000083386e-07, 5.7639999999983815e-06, 4.860000000009301e-07, 9.513999999998662e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 4.722999999998145e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 8.792000000000522e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 8.721999999999203e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 5.3339999999992005e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.720000000013602e-07, 5.929999999997743e-06, 4.7300000000083386e-07, 7.165999999999423e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.860000000009301e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.429999999999243e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 4.500000000001031e-06, 4.860000000009301e-07, 5.444000000000282e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:42.867" endtime="20201112 09:42:42.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.863" endtime="20201112 09:42:42.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.876" level="INFO">${RESULT} = [{'time': 0.019342389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019347625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.873" endtime="20201112 09:42:42.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.890" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.8...</msg>
<status status="PASS" starttime="20201112 09:42:42.877" endtime="20201112 09:42:42.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.894" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.893" endtime="20201112 09:42:42.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.896" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.895" endtime="20201112 09:42:42.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.890" endtime="20201112 09:42:42.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.899" endtime="20201112 09:42:42.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.903" endtime="20201112 09:42:42.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.901" endtime="20201112 09:42:42.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.898" endtime="20201112 09:42:42.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.489" endtime="20201112 09:42:42.924"></status>
</kw>
<msg timestamp="20201112 09:42:42.924" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.932" endtime="20201112 09:42:42.948"></status>
</kw>
<msg timestamp="20201112 09:42:42.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.931" endtime="20201112 09:42:42.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.950" endtime="20201112 09:42:42.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.952" endtime="20201112 09:42:42.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.927" endtime="20201112 09:42:42.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.926" endtime="20201112 09:42:42.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.961" endtime="20201112 09:42:43.246"></status>
</kw>
<msg timestamp="20201112 09:42:43.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.960" endtime="20201112 09:42:43.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.250" endtime="20201112 09:42:43.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.259" endtime="20201112 09:42:43.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.957" endtime="20201112 09:42:43.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.956" endtime="20201112 09:42:43.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.266" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.265" endtime="20201112 09:42:43.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.271" level="INFO">VALUE: [{'time': 0.021108639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021119569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.021120042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021126736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.021127208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.021133569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021142125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.021142611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021146708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.021147181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021155861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.021156333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021163861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.021164347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021172819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.021173292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021180931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.021181403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021187264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.02118775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021191861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.021192333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021197569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.021198042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021204333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.021204806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021211944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.021212417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021220028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.021220514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021225014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.021225486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02123425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021234722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021243611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.021244083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021249514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.021249986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021260319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.021260792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021270597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.021271069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021278889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.021279361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021288764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.021289236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021296875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.021297347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0213055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.021305986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021315903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.021316389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021323389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.021323875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021331403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.021331889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021336708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021337194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02134425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.021344722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021352014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.021352486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021361361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.021361833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021365931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.021366417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021370306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021370778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021378333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.021378806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021385083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.021385556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021392042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.021392514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021399111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.021399597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.021408639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021415764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.021416236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021424764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.021425236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021432292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.021432778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02144, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.021440472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021448181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.021448653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021452694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.021453167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021460389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.021460861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021470986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021471472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021478903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.021479375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021488361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.021488833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:43.267" endtime="20201112 09:42:43.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.262" endtime="20201112 09:42:43.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.296" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.0458000000001383e-05, 4.729999999973644e-07, 6.694000000001532e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:43.273" endtime="20201112 09:42:43.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.300" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.299" endtime="20201112 09:42:43.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.304" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0458000000001383e-05, 4.729999999973644e-07, 6.694000000001532e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.431000000000186e-06, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 9.804999999998149e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 7.055999999998341e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.860000000009301e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.720000000013602e-07, 4.040999999999767e-06, 4.729999999973644e-07, 7.222000000001172e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07], 'eventtime': [0.021108639, 0.021109111, 0.021119569, 0.021120042, 0.021126736, 0.021127208, 0.021133097, 0.021133569, 0.021142125, 0.021142611, 0.021146708, 0.021147181, 0.021155861, 0.021156333, 0.021163861, 0.021164347, 0.021172819, 0.021173292, 0.021180931, 0.021181403, 0.021187264, 0.02118775, 0.021191861, 0.021192333, 0.021197569, 0.021198042, 0.021204333, 0.021204806, 0.021211944, 0.021212417, 0.021220028, 0.021220514, 0.021225014, 0.021225486, 0.02123425, 0.021234722, 0.021243611, 0.021244083, 0.021249514, 0.021249986, 0.021260319, 0.021260792, 0.021270597, 0.021271069, 0.021278889, 0.021279361, 0.021288764, 0.021289236, 0.021296875, 0.021297347, 0.0213055, 0.021305986, 0.021315903, 0.021316389, 0.021323389, 0.021323875, 0.021331403, 0.021331889, 0.021336708, 0.021337194, 0.02134425, 0.021344722, 0.021352014, 0.021352486, 0.021361361, 0.021361833, 0.021365931, 0.021366417, 0.021370306, 0.021370778, 0.021378333, 0.021378806, 0.021385083, 0.021385556, 0.021392042, 0.021392514, 0.021399111, 0.021399597, 0.021408167, 0.021408639, 0.021415764, 0.021416236, 0.021424764, 0.021425236, 0.021432292, 0.021432778, 0.02144, 0.021440472, 0.021448181, 0.021448653, 0.021452694, 0.021453167, 0.021460389, 0.021460861, 0.021470986, 0.021471472, 0.021478903, 0.021479375, 0.021488361, 0.021488833], 'sourcesource_diff': [0, 4.720000000013602e-07, 1.0458000000001383e-05, 4.729999999973644e-07, 6.694000000001532e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 7.639000000000257e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.860000000009301e-07, 4.1109999999976166e-06, 4.720000000013602e-07, 5.235999999998742e-06, 4.7300000000083386e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 7.138000000000283e-06, 4.7300000000083386e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 8.764000000001382e-06, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 5.431000000000186e-06, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 9.804999999998149e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 7.000000000000062e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.860000000009301e-07, 4.818999999999657e-06, 4.860000000009301e-07, 7.055999999998341e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 4.09800000000099e-06, 4.859999999974607e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 6.276999999998978e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.860000000009301e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.125000000000187e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.860000000009301e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.720000000013602e-07, 4.040999999999767e-06, 4.729999999973644e-07, 7.222000000001172e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:43.301" endtime="20201112 09:42:43.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.297" endtime="20201112 09:42:43.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.310" level="INFO">${RESULT} = [{'time': 0.021109111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021120042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:43.306" endtime="20201112 09:42:43.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.323" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.73...</msg>
<status status="PASS" starttime="20201112 09:42:43.311" endtime="20201112 09:42:43.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.328" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.327" endtime="20201112 09:42:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.330" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:43.329" endtime="20201112 09:42:43.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.324" endtime="20201112 09:42:43.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.333" endtime="20201112 09:42:43.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.337" endtime="20201112 09:42:43.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.335" endtime="20201112 09:42:43.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.332" endtime="20201112 09:42:43.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.924" endtime="20201112 09:42:43.358"></status>
</kw>
<msg timestamp="20201112 09:42:43.358" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.365" endtime="20201112 09:42:43.381"></status>
</kw>
<msg timestamp="20201112 09:42:43.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.364" endtime="20201112 09:42:43.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.382" endtime="20201112 09:42:43.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.385" endtime="20201112 09:42:43.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.361" endtime="20201112 09:42:43.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.360" endtime="20201112 09:42:43.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.394" endtime="20201112 09:42:43.676"></status>
</kw>
<msg timestamp="20201112 09:42:43.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019178319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.392" endtime="20201112 09:42:43.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019178319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.680" endtime="20201112 09:42:43.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.695" endtime="20201112 09:42:43.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.390" endtime="20201112 09:42:43.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.388" endtime="20201112 09:42:43.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.702" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.701" endtime="20201112 09:42:43.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.707" level="INFO">VALUE: [{'time': 0.019177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019178319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019184764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.019185236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019192194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9579999999978825e-06, 'source_diff': 6.9579999999978825e-06}, {'time': 0.019192681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019203125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000001813e-05, 'source_diff': 1.0444000000001813e-05}, {'time': 0.019203597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019209889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019210361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01921675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.019217222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019221431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.019221903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019229861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.019230333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019240569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019241042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019249514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019249986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019257, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019257486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019266167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019266639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019272597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019273083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019283403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.019283875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019289, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.019289486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.019294458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019299194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019299667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019304681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.019305153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019310597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.019311069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.019317403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019324097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019324569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.019334986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019339167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.019339639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01934625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.019346722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019356431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.019356917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019365389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019365861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019374736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019375222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019381208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019381681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.019386347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019396486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.019396958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019406903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.019407375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019415097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.019415583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01942125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019421722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019426708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.019427181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019431958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.019432431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019440653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019450361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019450847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019455569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019456042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019465028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.019465514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019475431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.019475917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019485208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.019485694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019493431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736999999997246e-06, 'source_diff': 7.736999999997246e-06}, {'time': 0.019493917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019502486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019502958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019508319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019508792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019516014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.019516486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019526583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.019527069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019533542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.019534014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019542153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019542639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019546931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019547417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019557417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.019557903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:43.703" endtime="20201112 09:42:43.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.699" endtime="20201112 09:42:43.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.733" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 6.445000000000756e-06, 4.720000000013602e-07, 6.9579999999978825e-06, 4.870000000004038e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 6.292000000001491e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:43.710" endtime="20201112 09:42:43.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.737" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.736" endtime="20201112 09:42:43.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.741" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 6.445000000000756e-06, 4.720000000013602e-07, 6.9579999999978825e-06, 4.870000000004038e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.958000000000352e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 5.125000000001656e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 5.014000000001101e-06, 4.7199999999789077e-07, 5.444000000000282e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.7199999999789077e-07, 6.611000000000117e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 4.986000000001961e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 9.291000000001548e-06, 4.860000000009301e-07, 7.736999999997246e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7300000000083386e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.860000000009301e-07, 6.4729999999998955e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07], 'eventtime': [0.019177847, 0.019178319, 0.019184764, 0.019185236, 0.019192194, 0.019192681, 0.019203125, 0.019203597, 0.019209889, 0.019210361, 0.01921675, 0.019217222, 0.019221431, 0.019221903, 0.019229861, 0.019230333, 0.019240569, 0.019241042, 0.019249514, 0.019249986, 0.019257, 0.019257486, 0.019266167, 0.019266639, 0.019272597, 0.019273083, 0.019283403, 0.019283875, 0.019289, 0.019289486, 0.019293986, 0.019294458, 0.019299194, 0.019299667, 0.019304681, 0.019305153, 0.019310597, 0.019311069, 0.019316931, 0.019317403, 0.019324097, 0.019324569, 0.019334514, 0.019334986, 0.019339167, 0.019339639, 0.01934625, 0.019346722, 0.019356431, 0.019356917, 0.019365389, 0.019365861, 0.019374736, 0.019375222, 0.019381208, 0.019381681, 0.019385875, 0.019386347, 0.019396486, 0.019396958, 0.019406903, 0.019407375, 0.019415097, 0.019415583, 0.01942125, 0.019421722, 0.019426708, 0.019427181, 0.019431958, 0.019432431, 0.019440181, 0.019440653, 0.019450361, 0.019450847, 0.019455569, 0.019456042, 0.019465028, 0.019465514, 0.019475431, 0.019475917, 0.019485208, 0.019485694, 0.019493431, 0.019493917, 0.019502486, 0.019502958, 0.019508319, 0.019508792, 0.019516014, 0.019516486, 0.019526583, 0.019527069, 0.019533542, 0.019534014, 0.019542153, 0.019542639, 0.019546931, 0.019547417, 0.019557417, 0.019557903], 'sourcesource_diff': [0, 4.7199999999789077e-07, 6.445000000000756e-06, 4.720000000013602e-07, 6.9579999999978825e-06, 4.870000000004038e-07, 1.0444000000001813e-05, 4.7199999999789077e-07, 6.292000000001491e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.958000000000352e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 5.125000000001656e-06, 4.860000000009301e-07, 4.4999999999975615e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 5.014000000001101e-06, 4.7199999999789077e-07, 5.444000000000282e-06, 4.720000000013602e-07, 5.86199999999884e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.7199999999789077e-07, 6.611000000000117e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.860000000009301e-07, 8.471999999998953e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.945000000000787e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 4.986000000001961e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.7300000000083386e-07, 7.750000000000812e-06, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 4.721999999998672e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.860000000009301e-07, 9.917000000001647e-06, 4.859999999974607e-07, 9.291000000001548e-06, 4.860000000009301e-07, 7.736999999997246e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7300000000083386e-07, 7.222000000001172e-06, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.860000000009301e-07, 6.4729999999998955e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.291999999999491e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:43.738" endtime="20201112 09:42:43.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.734" endtime="20201112 09:42:43.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.747" level="INFO">${RESULT} = [{'time': 0.019178319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019185236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:43.744" endtime="20201112 09:42:43.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.760" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, ...</msg>
<status status="PASS" starttime="20201112 09:42:43.748" endtime="20201112 09:42:43.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.764" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.763" endtime="20201112 09:42:43.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.767" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:43.765" endtime="20201112 09:42:43.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.761" endtime="20201112 09:42:43.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.770" endtime="20201112 09:42:43.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.773" endtime="20201112 09:42:43.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.772" endtime="20201112 09:42:43.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.768" endtime="20201112 09:42:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.358" endtime="20201112 09:42:43.794"></status>
</kw>
<msg timestamp="20201112 09:42:43.794" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.802" endtime="20201112 09:42:43.816"></status>
</kw>
<msg timestamp="20201112 09:42:43.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.800" endtime="20201112 09:42:43.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.818" endtime="20201112 09:42:43.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.820" endtime="20201112 09:42:43.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.798" endtime="20201112 09:42:43.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.796" endtime="20201112 09:42:43.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.830" endtime="20201112 09:42:44.120"></status>
</kw>
<msg timestamp="20201112 09:42:44.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.829" endtime="20201112 09:42:44.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.124" endtime="20201112 09:42:44.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.133" endtime="20201112 09:42:44.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.826" endtime="20201112 09:42:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.824" endtime="20201112 09:42:44.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.139" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.138" endtime="20201112 09:42:44.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.144" level="INFO">VALUE: [{'time': 0.019588889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019593208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.019593681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019604125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.019604597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019610139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.019610611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019619292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019619764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019627264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.01962775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0196345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.019634972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019644389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.019644875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019654889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019655361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.019665333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019670056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.019670528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019675667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019676153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019683361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.019683847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019688778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.01968925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019698028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.019698514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019704375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019704861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01971375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.019714222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019723097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019723583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019727569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019728056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.019736694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019745208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019745681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019750458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.019750944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019755667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.019756139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019760972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.019761444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019767778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.01976825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019774694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.443999999997813e-06, 'source_diff': 6.443999999997813e-06}, {'time': 0.019775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019780736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.019781208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019785097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019785583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019794792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.019795264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019799764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.01980025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019810167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.019810653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019819958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.019820431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019830861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430000000002243e-05, 'source_diff': 1.0430000000002243e-05}, {'time': 0.019831347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01984075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.019841222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019851361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0139000000002757e-05, 'source_diff': 1.0139000000002757e-05}, {'time': 0.019851833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019856528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019857014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019861514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019861986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019869722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.019870194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019874694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.019875181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019879583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.019880056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019885292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.019885764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019892903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019893375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019902931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999997372e-06, 'source_diff': 9.555999999997372e-06}, {'time': 0.019903403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019909792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019910264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019915472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019922528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.019923, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019928819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.019929306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019937458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.019937931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.01994525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019945736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019951597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.019952083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:44.140" endtime="20201112 09:42:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.136" endtime="20201112 09:42:44.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.170" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 3.847000000001266e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 8.680999999999967e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:44.147" endtime="20201112 09:42:44.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.174" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.173" endtime="20201112 09:42:44.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.178" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 3.847000000001266e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.499999999997092e-06, 4.860000000009301e-07, 6.749999999999812e-06, 4.720000000013602e-07, 9.417000000001147e-06, 4.859999999974607e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 8.778000000000952e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.870000000004038e-07, 8.152000000000853e-06, 4.859999999974607e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 6.334000000000201e-06, 4.720000000013602e-07, 6.443999999997813e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 1.0430000000002243e-05, 4.859999999974607e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 4.6949999999990055e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 4.4999999999975615e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.720000000013602e-07, 9.555999999997372e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 7.055999999998341e-06, 4.720000000013602e-07, 5.819000000000657e-06, 4.870000000004038e-07, 8.152000000000853e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.859999999974607e-07, 5.861000000002836e-06, 4.859999999974607e-07], 'eventtime': [0.019588889, 0.019589361, 0.019593208, 0.019593681, 0.019604125, 0.019604597, 0.019610139, 0.019610611, 0.019619292, 0.019619764, 0.019627264, 0.01962775, 0.0196345, 0.019634972, 0.019644389, 0.019644875, 0.019654889, 0.019655361, 0.019664847, 0.019665333, 0.019670056, 0.019670528, 0.019675667, 0.019676153, 0.019683361, 0.019683847, 0.019688778, 0.01968925, 0.019698028, 0.019698514, 0.019704375, 0.019704861, 0.01971375, 0.019714222, 0.019723097, 0.019723583, 0.019727569, 0.019728056, 0.019736208, 0.019736694, 0.019745208, 0.019745681, 0.019750458, 0.019750944, 0.019755667, 0.019756139, 0.019760972, 0.019761444, 0.019767778, 0.01976825, 0.019774694, 0.019775181, 0.019780736, 0.019781208, 0.019785097, 0.019785583, 0.019794792, 0.019795264, 0.019799764, 0.01980025, 0.019810167, 0.019810653, 0.019819958, 0.019820431, 0.019830861, 0.019831347, 0.01984075, 0.019841222, 0.019851361, 0.019851833, 0.019856528, 0.019857014, 0.019861514, 0.019861986, 0.019869722, 0.019870194, 0.019874694, 0.019875181, 0.019879583, 0.019880056, 0.019885292, 0.019885764, 0.019892903, 0.019893375, 0.019902931, 0.019903403, 0.019909792, 0.019910264, 0.019914986, 0.019915472, 0.019922528, 0.019923, 0.019928819, 0.019929306, 0.019937458, 0.019937931, 0.01994525, 0.019945736, 0.019951597, 0.019952083], 'sourcesource_diff': [0, 4.7199999999789077e-07, 3.847000000001266e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.499999999997092e-06, 4.860000000009301e-07, 6.749999999999812e-06, 4.720000000013602e-07, 9.417000000001147e-06, 4.859999999974607e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.859999999974607e-07, 7.208000000001602e-06, 4.860000000009301e-07, 4.930999999999686e-06, 4.7199999999789077e-07, 8.778000000000952e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.860000000009301e-07, 3.986000000000961e-06, 4.870000000004038e-07, 8.152000000000853e-06, 4.859999999974607e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.860000000009301e-07, 4.723000000001615e-06, 4.7199999999789077e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 6.334000000000201e-06, 4.720000000013602e-07, 6.443999999997813e-06, 4.870000000004038e-07, 5.555000000000837e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.917000000001647e-06, 4.860000000009301e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 1.0430000000002243e-05, 4.859999999974607e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.7199999999789077e-07, 4.6949999999990055e-06, 4.860000000009301e-07, 4.500000000001031e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 4.4999999999975615e-06, 4.870000000004038e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 5.235999999998742e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.720000000013602e-07, 9.555999999997372e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 4.721999999998672e-06, 4.860000000009301e-07, 7.055999999998341e-06, 4.720000000013602e-07, 5.819000000000657e-06, 4.870000000004038e-07, 8.152000000000853e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.859999999974607e-07, 5.861000000002836e-06, 4.859999999974607e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:44.175" endtime="20201112 09:42:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.171" endtime="20201112 09:42:44.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.184" level="INFO">${RESULT} = [{'time': 0.019589361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019593681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:44.180" endtime="20201112 09:42:44.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.197" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.72...</msg>
<status status="PASS" starttime="20201112 09:42:44.185" endtime="20201112 09:42:44.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.200" endtime="20201112 09:42:44.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.204" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 09:42:44.202" endtime="20201112 09:42:44.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.198" endtime="20201112 09:42:44.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.207" endtime="20201112 09:42:44.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.210" endtime="20201112 09:42:44.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.209" endtime="20201112 09:42:44.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.205" endtime="20201112 09:42:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.795" endtime="20201112 09:42:44.231"></status>
</kw>
<msg timestamp="20201112 09:42:44.231" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.239" endtime="20201112 09:42:44.254"></status>
</kw>
<msg timestamp="20201112 09:42:44.255" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.237" endtime="20201112 09:42:44.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.256" endtime="20201112 09:42:44.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.258" endtime="20201112 09:42:44.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.235" endtime="20201112 09:42:44.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.233" endtime="20201112 09:42:44.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.267" endtime="20201112 09:42:44.553"></status>
</kw>
<msg timestamp="20201112 09:42:44.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.265" endtime="20201112 09:42:44.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.557" endtime="20201112 09:42:44.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.566" endtime="20201112 09:42:44.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.263" endtime="20201112 09:42:44.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.261" endtime="20201112 09:42:44.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.572" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.571" endtime="20201112 09:42:44.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.577" level="INFO">VALUE: [{'time': 0.019823319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019828625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019829111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019835694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019836181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019842361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019842833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019849639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.019850111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019854792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.019855264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019863681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019870028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.0198705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019877819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019878292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019885833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.019886306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019896764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.019897236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019901736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019902222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019909889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019910361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019914944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.019915431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01992275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.019923222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019927111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019927597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.019933944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019939292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.019939764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01994625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019946722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019953861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019954333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019963097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.019963583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019973292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.019973764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019978083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.019978556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019987847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.019988333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019996292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}, {'time': 0.019996764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020005847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.020006319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020011153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.020011625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.020017556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.020023181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020027375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.020027847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020034444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.020034917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020044944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.020045431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020051083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.020051556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020056806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.020057278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020065764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.020066236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020075208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.020075694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020081528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.020082, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020088111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.020088583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0200945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.020094972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020105167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.020105639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020114958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.318999999997218e-06, 'source_diff': 9.318999999997218e-06}, {'time': 0.020115431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020123681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.020124153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020128042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020128528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020132417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.020132889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02014125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.020141736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020151347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.020151819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020161236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.020161708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020169778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.02017025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020175472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.020175944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020183486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.020183958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:44.573" endtime="20201112 09:42:44.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.569" endtime="20201112 09:42:44.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.603" level="INFO">${debug-compressed} = {'diff': [0, 4.870000000004038e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.583000000000977e-06, 4.870000000004038e-07, 6.179999999997993e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:44.580" endtime="20201112 09:42:44.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.607" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.607" endtime="20201112 09:42:44.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.612" level="INFO">VALUE: {'diff': [0, 4.870000000004038e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.583000000000977e-06, 4.870000000004038e-07, 6.179999999997993e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 1.0458000000001383e-05, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 7.666999999999397e-06, 4.720000000013602e-07, 4.582999999998977e-06, 4.870000000004038e-07, 7.318999999998688e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 5.861000000002836e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.720000000013602e-07, 8.763999999997912e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 7.958999999998356e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.729999999973644e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.870000000004038e-07, 5.652000000001822e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.860000000009301e-07, 5.8339999999997005e-06, 4.7199999999789077e-07, 6.110999999999617e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 9.318999999997218e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07], 'eventtime': [0.019823319, 0.019823806, 0.019828625, 0.019829111, 0.019835694, 0.019836181, 0.019842361, 0.019842833, 0.019849639, 0.019850111, 0.019854792, 0.019855264, 0.019863681, 0.019864153, 0.019870028, 0.0198705, 0.019877819, 0.019878292, 0.019885833, 0.019886306, 0.019896764, 0.019897236, 0.019901736, 0.019902222, 0.019909889, 0.019910361, 0.019914944, 0.019915431, 0.01992275, 0.019923222, 0.019927111, 0.019927597, 0.019933458, 0.019933944, 0.019939292, 0.019939764, 0.01994625, 0.019946722, 0.019953861, 0.019954333, 0.019963097, 0.019963583, 0.019973292, 0.019973764, 0.019978083, 0.019978556, 0.019987847, 0.019988333, 0.019996292, 0.019996764, 0.020005847, 0.020006319, 0.020011153, 0.020011625, 0.020017083, 0.020017556, 0.020022708, 0.020023181, 0.020027375, 0.020027847, 0.020034444, 0.020034917, 0.020044944, 0.020045431, 0.020051083, 0.020051556, 0.020056806, 0.020057278, 0.020065764, 0.020066236, 0.020075208, 0.020075694, 0.020081528, 0.020082, 0.020088111, 0.020088583, 0.0200945, 0.020094972, 0.020105167, 0.020105639, 0.020114958, 0.020115431, 0.020123681, 0.020124153, 0.020128042, 0.020128528, 0.020132417, 0.020132889, 0.02014125, 0.020141736, 0.020151347, 0.020151819, 0.020161236, 0.020161708, 0.020169778, 0.02017025, 0.020175472, 0.020175944, 0.020183486, 0.020183958], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.870000000004038e-07, 4.818999999999657e-06, 4.860000000009301e-07, 6.583000000000977e-06, 4.870000000004038e-07, 6.179999999997993e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.319000000002157e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 1.0458000000001383e-05, 4.7199999999789077e-07, 4.500000000001031e-06, 4.860000000009301e-07, 7.666999999999397e-06, 4.720000000013602e-07, 4.582999999998977e-06, 4.870000000004038e-07, 7.318999999998688e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 5.861000000002836e-06, 4.859999999974607e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.720000000013602e-07, 7.138999999999757e-06, 4.720000000013602e-07, 8.763999999997912e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 7.958999999998356e-06, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 4.8339999999987004e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.729999999973644e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 4.193999999999032e-06, 4.720000000013602e-07, 6.5969999999970774e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.870000000004038e-07, 5.652000000001822e-06, 4.7300000000083386e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 8.971999999999453e-06, 4.860000000009301e-07, 5.8339999999997005e-06, 4.7199999999789077e-07, 6.110999999999617e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 9.318999999997218e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:44.609" endtime="20201112 09:42:44.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.604" endtime="20201112 09:42:44.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.617" level="INFO">${RESULT} = [{'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019829111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:44.614" endtime="20201112 09:42:44.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.630" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.72...</msg>
<status status="PASS" starttime="20201112 09:42:44.618" endtime="20201112 09:42:44.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.635" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.634" endtime="20201112 09:42:44.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.637" level="INFO">VALUE: [4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:44.636" endtime="20201112 09:42:44.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.631" endtime="20201112 09:42:44.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.640" endtime="20201112 09:42:44.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.643" endtime="20201112 09:42:44.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.642" endtime="20201112 09:42:44.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.639" endtime="20201112 09:42:44.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.232" endtime="20201112 09:42:44.664"></status>
</kw>
<msg timestamp="20201112 09:42:44.664" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.672" endtime="20201112 09:42:44.685"></status>
</kw>
<msg timestamp="20201112 09:42:44.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.670" endtime="20201112 09:42:44.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.687" endtime="20201112 09:42:44.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.689" endtime="20201112 09:42:44.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.668" endtime="20201112 09:42:44.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.666" endtime="20201112 09:42:44.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.699" endtime="20201112 09:42:44.989"></status>
</kw>
<msg timestamp="20201112 09:42:44.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018722139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.698" endtime="20201112 09:42:44.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018722139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.993" endtime="20201112 09:42:45.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.002" endtime="20201112 09:42:45.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.695" endtime="20201112 09:42:45.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.693" endtime="20201112 09:42:45.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.009" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.008" endtime="20201112 09:42:45.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.014" level="INFO">VALUE: [{'time': 0.018721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018722139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018731681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.018732153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018740181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018740653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018745792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018746264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018751194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018751681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018757958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.018758444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018764514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018764986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018774597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018775083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018784792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018785278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01879, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018790472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018796444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018796917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018804444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.018804931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018811736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018812208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018818181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018818653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018822861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018823333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018828056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.018828542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018834403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018834889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018843667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.018844139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018853347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018853819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018863028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.0188635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018868625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018869097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018874972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018875444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0188805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018880972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018886931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018887403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018895375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.018895847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018902222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.018902694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018912333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018912806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018917403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018917875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018928319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.018928806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018938903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018945167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.018945653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018952042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018952514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018961611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018962083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018966083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018966556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018972528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018973, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018979389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018979875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018983764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018984236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018993375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.018993847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019002278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.01900275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0190075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.019007972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019016847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019017319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019026611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.019027083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019035153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.019035625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019039819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.019040292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019048347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019048819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019057097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277999999996982e-06, 'source_diff': 8.277999999996982e-06}, {'time': 0.019057569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019067694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.019068167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019075014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019075486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019081722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.019082208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019089111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019089597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.010" endtime="20201112 09:42:45.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.005" endtime="20201112 09:42:45.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.039" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 9.542000000001272e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 4.930000000000212e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:45.016" endtime="20201112 09:42:45.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.043" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.042" endtime="20201112 09:42:45.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.047" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 9.542000000001272e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.870000000004038e-07, 6.277000000002447e-06, 4.859999999974607e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.870000000004038e-07, 6.804999999998618e-06, 4.720000000013602e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.720000000013602e-07, 4.722999999998145e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 9.208000000000133e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.7199999999789077e-07, 5.125000000001656e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.720000000013602e-07, 7.971999999998453e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 4.596999999998547e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.870000000004038e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.291999999997552e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 4.193999999999032e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.860000000009301e-07], 'eventtime': [0.018721667, 0.018722139, 0.018731681, 0.018732153, 0.018740181, 0.018740653, 0.018745792, 0.018746264, 0.018751194, 0.018751681, 0.018757958, 0.018758444, 0.018764514, 0.018764986, 0.018774597, 0.018775083, 0.018784792, 0.018785278, 0.01879, 0.018790472, 0.018796444, 0.018796917, 0.018804444, 0.018804931, 0.018811736, 0.018812208, 0.018818181, 0.018818653, 0.018822861, 0.018823333, 0.018828056, 0.018828542, 0.018834403, 0.018834889, 0.018843667, 0.018844139, 0.018853347, 0.018853819, 0.018863028, 0.0188635, 0.018868625, 0.018869097, 0.018874972, 0.018875444, 0.0188805, 0.018880972, 0.018886931, 0.018887403, 0.018895375, 0.018895847, 0.018902222, 0.018902694, 0.018912333, 0.018912806, 0.018917403, 0.018917875, 0.018928319, 0.018928806, 0.018938431, 0.018938903, 0.018945167, 0.018945653, 0.018952042, 0.018952514, 0.018961611, 0.018962083, 0.018966083, 0.018966556, 0.018972528, 0.018973, 0.018979389, 0.018979875, 0.018983764, 0.018984236, 0.018993375, 0.018993847, 0.019002278, 0.01900275, 0.0190075, 0.019007972, 0.019016847, 0.019017319, 0.019026611, 0.019027083, 0.019035153, 0.019035625, 0.019039819, 0.019040292, 0.019048347, 0.019048819, 0.019057097, 0.019057569, 0.019067694, 0.019068167, 0.019075014, 0.019075486, 0.019081722, 0.019082208, 0.019089111, 0.019089597], 'sourcesource_diff': [0, 4.7199999999789077e-07, 9.542000000001272e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.870000000004038e-07, 6.277000000002447e-06, 4.859999999974607e-07, 6.070000000000381e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.709000000000106e-06, 4.859999999974607e-07, 4.722000000002141e-06, 4.7199999999789077e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.870000000004038e-07, 6.804999999998618e-06, 4.720000000013602e-07, 5.9729999999993955e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.720000000013602e-07, 4.722999999998145e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.860000000009301e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 9.208000000000133e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.7199999999789077e-07, 5.125000000001656e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.7199999999789077e-07, 5.9589999999998255e-06, 4.720000000013602e-07, 7.971999999998453e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 4.596999999998547e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.870000000004038e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 4.860000000009301e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 5.971999999999922e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.860000000009301e-07, 3.888999999999976e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.430999999999716e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.291999999997552e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 4.193999999999032e-06, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 6.847000000000797e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.860000000009301e-07, 6.9029999999990765e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:45.044" endtime="20201112 09:42:45.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.040" endtime="20201112 09:42:45.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.053" level="INFO">${RESULT} = [{'time': 0.018722139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018732153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:45.049" endtime="20201112 09:42:45.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.067" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.8...</msg>
<status status="PASS" starttime="20201112 09:42:45.054" endtime="20201112 09:42:45.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.071" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.070" endtime="20201112 09:42:45.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.073" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.072" endtime="20201112 09:42:45.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.068" endtime="20201112 09:42:45.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.077" endtime="20201112 09:42:45.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.080" endtime="20201112 09:42:45.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.078" endtime="20201112 09:42:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.075" endtime="20201112 09:42:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.665" endtime="20201112 09:42:45.101"></status>
</kw>
<msg timestamp="20201112 09:42:45.101" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.109" endtime="20201112 09:42:45.124"></status>
</kw>
<msg timestamp="20201112 09:42:45.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.107" endtime="20201112 09:42:45.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.125" endtime="20201112 09:42:45.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.128" endtime="20201112 09:42:45.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.104" endtime="20201112 09:42:45.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.103" endtime="20201112 09:42:45.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.137" endtime="20201112 09:42:45.422"></status>
</kw>
<msg timestamp="20201112 09:42:45.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019285417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.135" endtime="20201112 09:42:45.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019285417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.427" endtime="20201112 09:42:45.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.435" endtime="20201112 09:42:45.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.133" endtime="20201112 09:42:45.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.131" endtime="20201112 09:42:45.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.442" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.441" endtime="20201112 09:42:45.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.447" level="INFO">VALUE: [{'time': 0.019285417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019285889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019294139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019294611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019302958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019303431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019312194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.019312667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.01932125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.019321722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019327583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019328056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019338528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.019339, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019346014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.014000000003101e-06, 'source_diff': 7.014000000003101e-06}, {'time': 0.019346486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019352236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019352722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019361611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.019362083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019369667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019377236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.019377708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019383347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.019383819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019394056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236999999999746e-05, 'source_diff': 1.0236999999999746e-05}, {'time': 0.019394542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019404569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019405042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019414347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.019414819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019420694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019421167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019427972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.019428444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019432972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019433444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019438083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.019438556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019445056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019445528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019455597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.019456069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019460958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.019461431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019469583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.019470069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019475944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.019476417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019482139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019482611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019490292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.019490764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019498917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019499389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019504722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019505208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019512583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019519597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019520069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019526431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.019526903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.019533028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019537736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.019538222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019543972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019544444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019552903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.019553375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01956175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.019562222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019569694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.019570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019576292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.019576778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019586597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019587069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019594083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.014000000003101e-06, 'source_diff': 7.014000000003101e-06}, {'time': 0.019594556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019600958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.019601431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019608542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.019609014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019614681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.019615153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019625514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019625986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019636208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.019636694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019642764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.01964325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019651625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.019652097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019656083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019656556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019661403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.019661875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.443" endtime="20201112 09:42:45.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.438" endtime="20201112 09:42:45.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.473" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.763000000001908e-06, 4.729999999973644e-07, 8.583000000002977e-06, 4....</msg>
<status status="PASS" starttime="20201112 09:42:45.449" endtime="20201112 09:42:45.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.477" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.476" endtime="20201112 09:42:45.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.481" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.763000000001908e-06, 4.729999999973644e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 7.014000000003101e-06, 4.7199999999789077e-07, 5.749999999998812e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.6389999999972564e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 4.889000000000976e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.721999999999672e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.36199999999934e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.4719999999979525e-06, 4.7300000000083386e-07, 6.124999999999187e-06, 4.860000000009301e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.014000000003101e-06, 4.729999999973644e-07, 6.402000000002572e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 6.070000000000381e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 4.847000000002266e-06, 4.7199999999789077e-07], 'eventtime': [0.019285417, 0.019285889, 0.019294139, 0.019294611, 0.019302958, 0.019303431, 0.019312194, 0.019312667, 0.01932125, 0.019321722, 0.019327583, 0.019328056, 0.019338528, 0.019339, 0.019346014, 0.019346486, 0.019352236, 0.019352722, 0.019361611, 0.019362083, 0.019369194, 0.019369667, 0.019377236, 0.019377708, 0.019383347, 0.019383819, 0.019394056, 0.019394542, 0.019404569, 0.019405042, 0.019414347, 0.019414819, 0.019420694, 0.019421167, 0.019427972, 0.019428444, 0.019432972, 0.019433444, 0.019438083, 0.019438556, 0.019445056, 0.019445528, 0.019455597, 0.019456069, 0.019460958, 0.019461431, 0.019469583, 0.019470069, 0.019475944, 0.019476417, 0.019482139, 0.019482611, 0.019490292, 0.019490764, 0.019498917, 0.019499389, 0.019504722, 0.019505208, 0.019512097, 0.019512583, 0.019519597, 0.019520069, 0.019526431, 0.019526903, 0.019532556, 0.019533028, 0.019537736, 0.019538222, 0.019543972, 0.019544444, 0.019552903, 0.019553375, 0.01956175, 0.019562222, 0.019569694, 0.019570167, 0.019576292, 0.019576778, 0.019586597, 0.019587069, 0.019594083, 0.019594556, 0.019600958, 0.019601431, 0.019608542, 0.019609014, 0.019614681, 0.019615153, 0.019625514, 0.019625986, 0.019636208, 0.019636694, 0.019642764, 0.01964325, 0.019651625, 0.019652097, 0.019656083, 0.019656556, 0.019661403, 0.019661875], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.763000000001908e-06, 4.729999999973644e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 7.014000000003101e-06, 4.7199999999789077e-07, 5.749999999998812e-06, 4.860000000009301e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 7.111000000000617e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 5.6389999999982565e-06, 4.720000000013602e-07, 1.0236999999999746e-05, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 6.805000000002087e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.6389999999972564e-06, 4.7300000000083386e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999789077e-07, 4.889000000000976e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.860000000009301e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.721999999999672e-06, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 5.332999999999727e-06, 4.860000000009301e-07, 6.888999999999507e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.720000000013602e-07, 6.36199999999934e-06, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.860000000009301e-07, 5.749999999998812e-06, 4.720000000013602e-07, 8.458999999998856e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 7.4719999999979525e-06, 4.7300000000083386e-07, 6.124999999999187e-06, 4.860000000009301e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 7.014000000003101e-06, 4.729999999973644e-07, 6.402000000002572e-06, 4.729999999973644e-07, 7.111000000000617e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0221999999997233e-05, 4.860000000009301e-07, 6.070000000000381e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 3.986000000000961e-06, 4.729999999973644e-07, 4.847000000002266e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:45.478" endtime="20201112 09:42:45.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.474" endtime="20201112 09:42:45.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.487" level="INFO">${RESULT} = [{'time': 0.019285889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019294611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.483" endtime="20201112 09:42:45.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.500" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201112 09:42:45.488" endtime="20201112 09:42:45.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.503" endtime="20201112 09:42:45.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.507" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.505" endtime="20201112 09:42:45.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.501" endtime="20201112 09:42:45.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.510" endtime="20201112 09:42:45.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.513" endtime="20201112 09:42:45.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.512" endtime="20201112 09:42:45.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.508" endtime="20201112 09:42:45.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.101" endtime="20201112 09:42:45.534"></status>
</kw>
<msg timestamp="20201112 09:42:45.534" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.542" endtime="20201112 09:42:45.555"></status>
</kw>
<msg timestamp="20201112 09:42:45.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.540" endtime="20201112 09:42:45.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.556" endtime="20201112 09:42:45.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.559" endtime="20201112 09:42:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.538" endtime="20201112 09:42:45.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.536" endtime="20201112 09:42:45.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.569" endtime="20201112 09:42:45.850"></status>
</kw>
<msg timestamp="20201112 09:42:45.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.567" endtime="20201112 09:42:45.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.854" endtime="20201112 09:42:45.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.863" endtime="20201112 09:42:45.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.565" endtime="20201112 09:42:45.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.563" endtime="20201112 09:42:45.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.869" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.868" endtime="20201112 09:42:45.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.875" level="INFO">VALUE: [{'time': 0.018208972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018214069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018214556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018221889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.018222361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018227181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.018227667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018234986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.018235458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0182455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.018245972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018252153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018252625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018257153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018257625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018262917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018269389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018269875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018277486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.018277972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018288292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018288764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018296181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.018296653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018301167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018301639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018309889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.018310361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018319236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018319708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018326722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018327194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.018337597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018346069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018346556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018354389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.018354875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018360639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018361111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018368236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018368708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018374792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018375264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018382889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018383375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018390306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.018390778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018394833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018395306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018402931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.018403403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018408333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018408806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018413833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.018414306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018421125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.018421597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018426611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.018427083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018435111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018435597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018442389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018442875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018448903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018458944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.018459417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018468514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018468986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018475903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.018476375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018486222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018486694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018494208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018494681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0185035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018503972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018513917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.018514389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018520625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018521097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018530917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018531403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018536236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018536708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018545194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018545667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.018555111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018559833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018560319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018568875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.018569347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018579167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018579639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018586, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018586486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.871" endtime="20201112 09:42:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.866" endtime="20201112 09:42:45.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.901" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.319000000002157e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:45.878" endtime="20201112 09:42:45.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.905" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.904" endtime="20201112 09:42:45.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.909" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 4.805999999999561e-06, 4.860000000009301e-07, 6.472000000000422e-06, 4.860000000009301e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.930999999998216e-06, 4.720000000013602e-07, 4.054999999999337e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 1.0041000000002298e-05, 4.729999999973644e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.729999999973644e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.859999999974607e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.859999999974607e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.860000000009301e-07], 'eventtime': [0.018208972, 0.018209458, 0.018214069, 0.018214556, 0.018221889, 0.018222361, 0.018227181, 0.018227667, 0.018234986, 0.018235458, 0.0182455, 0.018245972, 0.018252153, 0.018252625, 0.018257153, 0.018257625, 0.018262431, 0.018262917, 0.018269389, 0.018269875, 0.018277486, 0.018277972, 0.018288292, 0.018288764, 0.018296181, 0.018296653, 0.018301167, 0.018301639, 0.018309889, 0.018310361, 0.018319236, 0.018319708, 0.018326722, 0.018327194, 0.018337125, 0.018337597, 0.018346069, 0.018346556, 0.018354389, 0.018354875, 0.018360639, 0.018361111, 0.018368236, 0.018368708, 0.018374792, 0.018375264, 0.018382889, 0.018383375, 0.018390306, 0.018390778, 0.018394833, 0.018395306, 0.018402931, 0.018403403, 0.018408333, 0.018408806, 0.018413833, 0.018414306, 0.018421125, 0.018421597, 0.018426611, 0.018427083, 0.018435111, 0.018435597, 0.018442389, 0.018442875, 0.018448431, 0.018448903, 0.018458944, 0.018459417, 0.018468514, 0.018468986, 0.018475903, 0.018476375, 0.018486222, 0.018486694, 0.018494208, 0.018494681, 0.0185035, 0.018503972, 0.018513917, 0.018514389, 0.018520625, 0.018521097, 0.018530917, 0.018531403, 0.018536236, 0.018536708, 0.018545194, 0.018545667, 0.018554639, 0.018555111, 0.018559833, 0.018560319, 0.018568875, 0.018569347, 0.018579167, 0.018579639, 0.018586, 0.018586486], 'sourcesource_diff': [0, 4.860000000009301e-07, 4.610999999998117e-06, 4.870000000004038e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 4.805999999999561e-06, 4.860000000009301e-07, 6.472000000000422e-06, 4.860000000009301e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.860000000009301e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 6.0839999999999506e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 6.930999999998216e-06, 4.720000000013602e-07, 4.054999999999337e-06, 4.7300000000083386e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 6.819000000001657e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 5.556000000000311e-06, 4.7199999999789077e-07, 1.0041000000002298e-05, 4.729999999973644e-07, 9.096999999999578e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.729999999973644e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.859999999974607e-07, 4.833000000002696e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 4.722000000002141e-06, 4.859999999974607e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:45.906" endtime="20201112 09:42:45.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.902" endtime="20201112 09:42:45.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.915" level="INFO">${RESULT} = [{'time': 0.018209458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018214556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.912" endtime="20201112 09:42:45.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.929" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:45.916" endtime="20201112 09:42:45.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.933" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.932" endtime="20201112 09:42:45.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.935" level="INFO">VALUE: [4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.934" endtime="20201112 09:42:45.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.929" endtime="20201112 09:42:45.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.938" endtime="20201112 09:42:45.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.942" endtime="20201112 09:42:45.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.940" endtime="20201112 09:42:45.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.937" endtime="20201112 09:42:45.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.535" endtime="20201112 09:42:45.962"></status>
</kw>
<msg timestamp="20201112 09:42:45.963" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.970" endtime="20201112 09:42:45.987"></status>
</kw>
<msg timestamp="20201112 09:42:45.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.969" endtime="20201112 09:42:45.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.989" endtime="20201112 09:42:45.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.992" endtime="20201112 09:42:45.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.966" endtime="20201112 09:42:45.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.965" endtime="20201112 09:42:45.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.001" endtime="20201112 09:42:46.284"></status>
</kw>
<msg timestamp="20201112 09:42:46.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.999" endtime="20201112 09:42:46.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.288" endtime="20201112 09:42:46.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.297" endtime="20201112 09:42:46.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.997" endtime="20201112 09:42:46.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.995" endtime="20201112 09:42:46.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.303" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.302" endtime="20201112 09:42:46.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.308" level="INFO">VALUE: [{'time': 0.021686181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021695542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.021696014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021702556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.021703028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021710722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.021711194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02171675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.021717222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021727458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.021727944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.021736681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021745347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.021745819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.02175075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.021751236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021756903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.021757375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021766375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.021766847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021772486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.021772972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021777111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.138999999996756e-06, 'source_diff': 4.138999999996756e-06}, {'time': 0.021777583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021787569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.021788056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.021793389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.021793875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021804333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.021804806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.021815708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021824181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.021824653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021831472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.021831944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021842292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.021842764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021852375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.021852847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021859125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.021859597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021864528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.021865014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021870667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.021871139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021875028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.021875514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021881903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.021882375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021886389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.021886861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021894903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.021895375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021903111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.021903583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021911847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.021912319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021922139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.021922625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021929833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.021930319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021936236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.021936708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0219445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.021944986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021954694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.021955167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021961347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.021961819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021970514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.021970986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021978819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.021979292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021988403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.021988875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021995458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.021995944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022004028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.0220045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022013764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.022014236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.022025069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022031556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.022032028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022038486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.022038958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02204925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999998552e-05, 'source_diff': 1.0291999999998552e-05}, {'time': 0.022049722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022058903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022059375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022064931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.022065417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022072319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.022072792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022082417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.022082889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.304" endtime="20201112 09:42:46.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.300" endtime="20201112 09:42:46.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.335" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 7.693999999999063e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:46.311" endtime="20201112 09:42:46.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.338" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.337" endtime="20201112 09:42:46.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.342" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 7.693999999999063e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 8.666000000000923e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.860000000009301e-07, 4.138999999996756e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.870000000004038e-07, 5.332999999999727e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 1.0429999999998774e-05, 4.720000000013602e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 7.791999999999522e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 8.083999999998481e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 6.458000000000852e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07], 'eventtime': [0.021686181, 0.021686653, 0.021695542, 0.021696014, 0.021702556, 0.021703028, 0.021710722, 0.021711194, 0.02171675, 0.021717222, 0.021727458, 0.021727944, 0.021736208, 0.021736681, 0.021745347, 0.021745819, 0.02175075, 0.021751236, 0.021756903, 0.021757375, 0.021766375, 0.021766847, 0.021772486, 0.021772972, 0.021777111, 0.021777583, 0.021787569, 0.021788056, 0.021793389, 0.021793875, 0.021804333, 0.021804806, 0.021815236, 0.021815708, 0.021824181, 0.021824653, 0.021831472, 0.021831944, 0.021842292, 0.021842764, 0.021852375, 0.021852847, 0.021859125, 0.021859597, 0.021864528, 0.021865014, 0.021870667, 0.021871139, 0.021875028, 0.021875514, 0.021881903, 0.021882375, 0.021886389, 0.021886861, 0.021894903, 0.021895375, 0.021903111, 0.021903583, 0.021911847, 0.021912319, 0.021922139, 0.021922625, 0.021929833, 0.021930319, 0.021936236, 0.021936708, 0.0219445, 0.021944986, 0.021954694, 0.021955167, 0.021961347, 0.021961819, 0.021970514, 0.021970986, 0.021978819, 0.021979292, 0.021988403, 0.021988875, 0.021995458, 0.021995944, 0.022004028, 0.0220045, 0.022013764, 0.022014236, 0.022024597, 0.022025069, 0.022031556, 0.022032028, 0.022038486, 0.022038958, 0.02204925, 0.022049722, 0.022058903, 0.022059375, 0.022064931, 0.022065417, 0.022072319, 0.022072792, 0.022082417, 0.022082889], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 7.693999999999063e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 1.0236000000000273e-05, 4.859999999974607e-07, 8.264000000000882e-06, 4.7300000000083386e-07, 8.666000000000923e-06, 4.7199999999789077e-07, 4.930999999999686e-06, 4.860000000009301e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 5.639000000001726e-06, 4.860000000009301e-07, 4.138999999996756e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.870000000004038e-07, 5.332999999999727e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 1.0429999999998774e-05, 4.720000000013602e-07, 8.473000000001896e-06, 4.7199999999789077e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 9.610999999999648e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.859999999974607e-07, 5.653000000001296e-06, 4.720000000013602e-07, 3.888999999999976e-06, 4.859999999974607e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 4.014000000000101e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.860000000009301e-07, 7.2079999999981326e-06, 4.860000000009301e-07, 5.917000000001116e-06, 4.7199999999789077e-07, 7.791999999999522e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.720000000013602e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 6.5829999999975075e-06, 4.860000000009301e-07, 8.083999999998481e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 6.458000000000852e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 5.556000000000311e-06, 4.860000000009301e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:46.339" endtime="20201112 09:42:46.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.335" endtime="20201112 09:42:46.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.348" level="INFO">${RESULT} = [{'time': 0.021686653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021696014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.345" endtime="20201112 09:42:46.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.361" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:46.349" endtime="20201112 09:42:46.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.366" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.365" endtime="20201112 09:42:46.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.368" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.367" endtime="20201112 09:42:46.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.362" endtime="20201112 09:42:46.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.371" endtime="20201112 09:42:46.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.375" endtime="20201112 09:42:46.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.373" endtime="20201112 09:42:46.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.370" endtime="20201112 09:42:46.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.963" endtime="20201112 09:42:46.396"></status>
</kw>
<msg timestamp="20201112 09:42:46.396" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.403" endtime="20201112 09:42:46.419"></status>
</kw>
<msg timestamp="20201112 09:42:46.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.402" endtime="20201112 09:42:46.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.421" endtime="20201112 09:42:46.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.423" endtime="20201112 09:42:46.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.399" endtime="20201112 09:42:46.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.398" endtime="20201112 09:42:46.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.433" endtime="20201112 09:42:46.718"></status>
</kw>
<msg timestamp="20201112 09:42:46.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.431" endtime="20201112 09:42:46.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.722" endtime="20201112 09:42:46.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.731" endtime="20201112 09:42:46.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.429" endtime="20201112 09:42:46.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.427" endtime="20201112 09:42:46.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.738" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.737" endtime="20201112 09:42:46.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.743" level="INFO">VALUE: [{'time': 0.020672833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.020679403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020687375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.020687847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020694319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.020694792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.020699889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020704819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.020705292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020711472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.020711958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020719278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.02071975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020730097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.020730569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020735708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.020736181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020746417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.020746903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020754736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.020755222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020762958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.020763431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020770861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.020771333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020779181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.020779653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020786347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.020786833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020794222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020794694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020804236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.020804722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020813306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.020813778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020821611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.020822083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020832, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.020832486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020839083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.020839556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020844069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.020844542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020854986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.020855472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020859972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.020860458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020870042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.020870528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020877625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.020878097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020882611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.020883083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020887694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.020888167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020897458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.020897931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020903986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.020904458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020912806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.020913292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020923014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.020923486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.020934097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020943806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.020944278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.02094875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020954819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.020955306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.02096325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.020963722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020970014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.020970486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.020978597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020987792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.020988278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020998111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.020998583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021008708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.021009181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021014625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.021015111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021020472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.021020944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021028792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.021029264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021037319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.021037792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021041889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.021042361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021049583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.021050056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021058958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.901999999998134e-06, 'source_diff': 8.901999999998134e-06}, {'time': 0.021059431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.739" endtime="20201112 09:42:46.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.734" endtime="20201112 09:42:46.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.768" level="INFO">${debug-compressed} = {'diff': [0, 4.729999999973644e-07, 5.611000000002586e-06, 4.859999999974607e-07, 7.972000000001922e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:46.745" endtime="20201112 09:42:46.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.772" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.771" endtime="20201112 09:42:46.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.776" level="INFO">VALUE: {'diff': [0, 4.729999999973644e-07, 5.611000000002586e-06, 4.859999999974607e-07, 7.972000000001922e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.859999999974607e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.729999999973644e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.860000000009301e-07, 7.389000000000007e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.860000000009301e-07, 8.583999999998981e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.860000000009301e-07, 6.597000000000547e-06, 4.729999999973644e-07, 4.513000000001127e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.860000000009301e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.583999999999981e-06, 4.860000000009301e-07, 7.097000000001047e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.870000000004038e-07, 7.943999999999313e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 9.833000000000758e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 5.444000000000282e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07], 'eventtime': [0.020672833, 0.020673306, 0.020678917, 0.020679403, 0.020687375, 0.020687847, 0.020694319, 0.020694792, 0.020699417, 0.020699889, 0.020704819, 0.020705292, 0.020711472, 0.020711958, 0.020719278, 0.02071975, 0.020730097, 0.020730569, 0.020735708, 0.020736181, 0.020746417, 0.020746903, 0.020754736, 0.020755222, 0.020762958, 0.020763431, 0.020770861, 0.020771333, 0.020779181, 0.020779653, 0.020786347, 0.020786833, 0.020794222, 0.020794694, 0.020804236, 0.020804722, 0.020813306, 0.020813778, 0.020821611, 0.020822083, 0.020832, 0.020832486, 0.020839083, 0.020839556, 0.020844069, 0.020844542, 0.020854986, 0.020855472, 0.020859972, 0.020860458, 0.020870042, 0.020870528, 0.020877625, 0.020878097, 0.020882611, 0.020883083, 0.020887694, 0.020888167, 0.020897458, 0.020897931, 0.020903986, 0.020904458, 0.020912806, 0.020913292, 0.020923014, 0.020923486, 0.020933625, 0.020934097, 0.020943806, 0.020944278, 0.020948278, 0.02094875, 0.020954819, 0.020955306, 0.02096325, 0.020963722, 0.020970014, 0.020970486, 0.020978125, 0.020978597, 0.020987792, 0.020988278, 0.020998111, 0.020998583, 0.021008708, 0.021009181, 0.021014625, 0.021015111, 0.021020472, 0.021020944, 0.021028792, 0.021029264, 0.021037319, 0.021037792, 0.021041889, 0.021042361, 0.021049583, 0.021050056, 0.021058958, 0.021059431], 'sourcesource_diff': [0, 4.729999999973644e-07, 5.611000000002586e-06, 4.859999999974607e-07, 7.972000000001922e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 4.625000000001156e-06, 4.7199999999789077e-07, 4.930000000000212e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.859999999974607e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 5.1389999999977565e-06, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 7.832999999998758e-06, 4.860000000009301e-07, 7.736000000001242e-06, 4.729999999973644e-07, 7.430000000002712e-06, 4.7199999999789077e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.860000000009301e-07, 7.389000000000007e-06, 4.7199999999789077e-07, 9.542000000001272e-06, 4.860000000009301e-07, 8.583999999998981e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.860000000009301e-07, 6.597000000000547e-06, 4.729999999973644e-07, 4.513000000001127e-06, 4.7300000000083386e-07, 1.0443999999998343e-05, 4.860000000009301e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.583999999999981e-06, 4.860000000009301e-07, 7.097000000001047e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 4.610999999998117e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 6.069000000000907e-06, 4.870000000004038e-07, 7.943999999999313e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 9.833000000000758e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.729999999973644e-07, 5.444000000000282e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 7.84800000000127e-06, 4.7199999999789077e-07, 8.054999999999868e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.222000000001172e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:46.773" endtime="20201112 09:42:46.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.769" endtime="20201112 09:42:46.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.782" level="INFO">${RESULT} = [{'time': 0.020673306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020679403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.778" endtime="20201112 09:42:46.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.795" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201112 09:42:46.783" endtime="20201112 09:42:46.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.800" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.799" endtime="20201112 09:42:46.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.802" level="INFO">VALUE: [4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.801" endtime="20201112 09:42:46.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.796" endtime="20201112 09:42:46.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.805" endtime="20201112 09:42:46.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.809" endtime="20201112 09:42:46.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.807" endtime="20201112 09:42:46.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.804" endtime="20201112 09:42:46.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.396" endtime="20201112 09:42:46.829"></status>
</kw>
<msg timestamp="20201112 09:42:46.830" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.837" endtime="20201112 09:42:46.852"></status>
</kw>
<msg timestamp="20201112 09:42:46.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.836" endtime="20201112 09:42:46.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.853" endtime="20201112 09:42:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.856" endtime="20201112 09:42:46.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.833" endtime="20201112 09:42:46.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.831" endtime="20201112 09:42:46.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.865" endtime="20201112 09:42:47.149"></status>
</kw>
<msg timestamp="20201112 09:42:47.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018904431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.863" endtime="20201112 09:42:47.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018904431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.154" endtime="20201112 09:42:47.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.162" endtime="20201112 09:42:47.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.861" endtime="20201112 09:42:47.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.859" endtime="20201112 09:42:47.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.169" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.168" endtime="20201112 09:42:47.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.174" level="INFO">VALUE: [{'time': 0.018903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018904431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018908694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.018909167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018916486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018916972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018926278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.01892675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018935722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018936194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018942875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.018943347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018951597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.018952069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018959403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.018959875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018967889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018968361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0189785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018978972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018984972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018992417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.018992889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018997597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.018998083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019003639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019004111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019011139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.019011611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019016431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019016903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019020903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.019021375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019026931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019027417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019033389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019033861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.019040569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019046903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.019047389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.019054667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019060319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.019060806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019071153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019071625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019075514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019075986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019084, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019093917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.019094389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019102444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019102931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019111903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.019112375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019119069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019119542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019125403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019125875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019130375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.019130861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019140764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.019141236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019147, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019147472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019155514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019155986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0191635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019163972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019171083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.019171556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019178167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.019178639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019187208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019187681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019196042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019196528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019202806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.019203278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019209944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019216653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.019217125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01922225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.019222736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.019233236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0192415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.019241972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019251597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.019252069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019258653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.019259139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019265208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.019265694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019274208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019274681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:47.170" endtime="20201112 09:42:47.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.165" endtime="20201112 09:42:47.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.200" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 4.263000000000877e-06, 4.7300000000083386e-07, 7.318999999998688e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.971999999999453e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:47.176" endtime="20201112 09:42:47.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.204" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.203" endtime="20201112 09:42:47.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.208" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 4.263000000000877e-06, 4.7300000000083386e-07, 7.318999999998688e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.971999999999453e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.445000000001756e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.720000000013602e-07, 6.334000000000201e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.870000000004038e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.870000000004038e-07, 8.971999999999453e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.860000000009301e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.729999999973644e-07], 'eventtime': [0.018903958, 0.018904431, 0.018908694, 0.018909167, 0.018916486, 0.018916972, 0.018926278, 0.01892675, 0.018935722, 0.018936194, 0.018942875, 0.018943347, 0.018951597, 0.018952069, 0.018959403, 0.018959875, 0.018967889, 0.018968361, 0.0189785, 0.018978972, 0.0189845, 0.018984972, 0.018992417, 0.018992889, 0.018997597, 0.018998083, 0.019003639, 0.019004111, 0.019011139, 0.019011611, 0.019016431, 0.019016903, 0.019020903, 0.019021375, 0.019026931, 0.019027417, 0.019033389, 0.019033861, 0.019040097, 0.019040569, 0.019046903, 0.019047389, 0.019054181, 0.019054667, 0.019060319, 0.019060806, 0.019071153, 0.019071625, 0.019075514, 0.019075986, 0.019083514, 0.019084, 0.019093917, 0.019094389, 0.019102444, 0.019102931, 0.019111903, 0.019112375, 0.019119069, 0.019119542, 0.019125403, 0.019125875, 0.019130375, 0.019130861, 0.019140764, 0.019141236, 0.019147, 0.019147472, 0.019155514, 0.019155986, 0.0191635, 0.019163972, 0.019171083, 0.019171556, 0.019178167, 0.019178639, 0.019187208, 0.019187681, 0.019196042, 0.019196528, 0.019202806, 0.019203278, 0.019209458, 0.019209944, 0.019216653, 0.019217125, 0.01922225, 0.019222736, 0.019232764, 0.019233236, 0.0192415, 0.019241972, 0.019251597, 0.019252069, 0.019258653, 0.019259139, 0.019265208, 0.019265694, 0.019274208, 0.019274681], 'sourcesource_diff': [0, 4.7300000000083386e-07, 4.263000000000877e-06, 4.7300000000083386e-07, 7.318999999998688e-06, 4.860000000009301e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.971999999999453e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.445000000001756e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.859999999974607e-07, 5.556000000000311e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 3.9999999999970615e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.860000000009301e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 6.235999999999742e-06, 4.720000000013602e-07, 6.334000000000201e-06, 4.860000000009301e-07, 6.7919999999985214e-06, 4.860000000009301e-07, 5.651999999998353e-06, 4.870000000004038e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 3.888999999999976e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.870000000004038e-07, 8.971999999999453e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.859999999974607e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 5.764000000001851e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 7.110999999997147e-06, 4.7300000000083386e-07, 6.611000000000117e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.860000000009301e-07, 6.2779999999984515e-06, 4.720000000013602e-07, 6.179999999997993e-06, 4.860000000009301e-07, 6.709000000000576e-06, 4.720000000013602e-07, 5.1249999999981866e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 9.624999999999218e-06, 4.720000000013602e-07, 6.584000000000451e-06, 4.860000000009301e-07, 6.0689999999974376e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:47.205" endtime="20201112 09:42:47.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.201" endtime="20201112 09:42:47.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.214" level="INFO">${RESULT} = [{'time': 0.018904431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018909167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:47.211" endtime="20201112 09:42:47.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.227" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201112 09:42:47.215" endtime="20201112 09:42:47.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.231" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.230" endtime="20201112 09:42:47.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.234" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 09:42:47.233" endtime="20201112 09:42:47.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.228" endtime="20201112 09:42:47.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.237" endtime="20201112 09:42:47.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.240" endtime="20201112 09:42:47.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.239" endtime="20201112 09:42:47.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.235" endtime="20201112 09:42:47.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.830" endtime="20201112 09:42:47.261"></status>
</kw>
<msg timestamp="20201112 09:42:47.261" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.269" endtime="20201112 09:42:47.283"></status>
</kw>
<msg timestamp="20201112 09:42:47.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.267" endtime="20201112 09:42:47.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.285" endtime="20201112 09:42:47.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.288" endtime="20201112 09:42:47.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.265" endtime="20201112 09:42:47.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.263" endtime="20201112 09:42:47.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.297" endtime="20201112 09:42:47.578"></status>
</kw>
<msg timestamp="20201112 09:42:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.295" endtime="20201112 09:42:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.583" endtime="20201112 09:42:47.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.591" endtime="20201112 09:42:47.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.292" endtime="20201112 09:42:47.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.291" endtime="20201112 09:42:47.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.598" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.597" endtime="20201112 09:42:47.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.603" level="INFO">VALUE: [{'time': 0.019174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019181375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.019181861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019192097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019192569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019199681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1120000000000905e-06, 'source_diff': 7.1120000000000905e-06}, {'time': 0.019200167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019207069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.019207542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019216458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.019216931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019221944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.019222417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019230778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019231264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019237444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019237917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019242431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019242903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0192495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.019249972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019259375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.019259861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019267903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019268389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019275014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.019275486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019281861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019282333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019289292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019299222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930000000001743e-06, 'source_diff': 9.930000000001743e-06}, {'time': 0.019299694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0193065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.019306972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019317194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.019317681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019325208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.019325681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019333944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.262999999997939e-06, 'source_diff': 8.262999999997939e-06}, {'time': 0.019334417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019344042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.019344514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019349333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019349806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.019356361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019366181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019366653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019372319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.019372792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019376889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019377375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019385528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019386, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019394153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019394625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019401764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019402236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019410069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.019410542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019416514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019416986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019425667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019426139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019432014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.019432486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.019437167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019445417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}, {'time': 0.019445903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019454569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.019455056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019463333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277000000000978e-06, 'source_diff': 8.277000000000978e-06}, {'time': 0.019463806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019471417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.019471903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019478375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.019478847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019483889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019484361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019488542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.019489028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019498, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.019498472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019506194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.019506667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019512208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.019512681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019518653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019519125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019523931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.80600000000303e-06, 'source_diff': 4.80600000000303e-06}, {'time': 0.019524417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019534528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.019535014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019543583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.019544056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019548986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.019549458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:47.599" endtime="20201112 09:42:47.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.595" endtime="20201112 09:42:47.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.629" level="INFO">${debug-compressed} = {'diff': [0, 4.859999999974607e-07, 6.792000000001991e-06, 4.860000000009301e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.1120000000000905e-06, 4.860000000009301e-07, 6.901999999999603e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:47.606" endtime="20201112 09:42:47.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.633" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.632" endtime="20201112 09:42:47.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.637" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 6.792000000001991e-06, 4.860000000009301e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.1120000000000905e-06, 4.860000000009301e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 5.013000000001627e-06, 4.729999999973644e-07, 8.361000000001867e-06, 4.860000000009301e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.624999999999687e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.7300000000083386e-07, 6.083000000000477e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 7.138999999999757e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.666000000000923e-06, 4.869999999969343e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 7.611000000001117e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.859999999974607e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.729999999973644e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 4.80600000000303e-06, 4.859999999974607e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 4.930000000000212e-06, 4.7199999999789077e-07], 'eventtime': [0.019174097, 0.019174583, 0.019181375, 0.019181861, 0.019192097, 0.019192569, 0.019199681, 0.019200167, 0.019207069, 0.019207542, 0.019216458, 0.019216931, 0.019221944, 0.019222417, 0.019230778, 0.019231264, 0.019237444, 0.019237917, 0.019242431, 0.019242903, 0.0192495, 0.019249972, 0.019259375, 0.019259861, 0.019267903, 0.019268389, 0.019275014, 0.019275486, 0.019281861, 0.019282333, 0.019288819, 0.019289292, 0.019299222, 0.019299694, 0.0193065, 0.019306972, 0.019317194, 0.019317681, 0.019325208, 0.019325681, 0.019333944, 0.019334417, 0.019344042, 0.019344514, 0.019349333, 0.019349806, 0.019355889, 0.019356361, 0.019366181, 0.019366653, 0.019372319, 0.019372792, 0.019376889, 0.019377375, 0.019385528, 0.019386, 0.019394153, 0.019394625, 0.019401764, 0.019402236, 0.019410069, 0.019410542, 0.019416514, 0.019416986, 0.019425667, 0.019426139, 0.019432014, 0.019432486, 0.019436681, 0.019437167, 0.019445417, 0.019445903, 0.019454569, 0.019455056, 0.019463333, 0.019463806, 0.019471417, 0.019471903, 0.019478375, 0.019478847, 0.019483889, 0.019484361, 0.019488542, 0.019489028, 0.019498, 0.019498472, 0.019506194, 0.019506667, 0.019512208, 0.019512681, 0.019518653, 0.019519125, 0.019523931, 0.019524417, 0.019534528, 0.019535014, 0.019543583, 0.019544056, 0.019548986, 0.019549458], 'sourcesource_diff': [0, 4.859999999974607e-07, 6.792000000001991e-06, 4.860000000009301e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.1120000000000905e-06, 4.860000000009301e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 5.013000000001627e-06, 4.729999999973644e-07, 8.361000000001867e-06, 4.860000000009301e-07, 6.179999999997993e-06, 4.7300000000083386e-07, 4.514000000000601e-06, 4.7199999999789077e-07, 6.597000000000547e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.860000000009301e-07, 6.624999999999687e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 6.806000000001561e-06, 4.7199999999789077e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.818999999999657e-06, 4.7300000000083386e-07, 6.083000000000477e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 5.665999999997923e-06, 4.7300000000083386e-07, 4.097000000001516e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 7.138999999999757e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 4.195000000001975e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.860000000009301e-07, 8.666000000000923e-06, 4.869999999969343e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 7.611000000001117e-06, 4.859999999974607e-07, 6.472000000000422e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.859999999974607e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.729999999973644e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 4.80600000000303e-06, 4.859999999974607e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 4.930000000000212e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:47.634" endtime="20201112 09:42:47.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.630" endtime="20201112 09:42:47.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.642" level="INFO">${RESULT} = [{'time': 0.019174583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019181861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:47.639" endtime="20201112 09:42:47.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.656" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:47.643" endtime="20201112 09:42:47.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.660" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.659" endtime="20201112 09:42:47.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.663" level="INFO">VALUE: [4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:47.661" endtime="20201112 09:42:47.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.657" endtime="20201112 09:42:47.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.666" endtime="20201112 09:42:47.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.669" endtime="20201112 09:42:47.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.668" endtime="20201112 09:42:47.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.664" endtime="20201112 09:42:47.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.262" endtime="20201112 09:42:47.690"></status>
</kw>
<msg timestamp="20201112 09:42:47.690" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.698" endtime="20201112 09:42:47.715"></status>
</kw>
<msg timestamp="20201112 09:42:47.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.696" endtime="20201112 09:42:47.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.716" endtime="20201112 09:42:47.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.719" endtime="20201112 09:42:47.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.694" endtime="20201112 09:42:47.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.692" endtime="20201112 09:42:47.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.728" endtime="20201112 09:42:48.017"></status>
</kw>
<msg timestamp="20201112 09:42:48.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.726" endtime="20201112 09:42:48.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.021" endtime="20201112 09:42:48.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.030" endtime="20201112 09:42:48.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.724" endtime="20201112 09:42:48.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.722" endtime="20201112 09:42:48.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.038" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.036" endtime="20201112 09:42:48.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.043" level="INFO">VALUE: [{'time': 0.022444625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022451403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.022451875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022459292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.022459764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022469167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.022469639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022476431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.022476917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022486861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.022487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022494389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.022494861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022502069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.022502542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022507569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.022508042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022514833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.791000000002517e-06, 'source_diff': 6.791000000002517e-06}, {'time': 0.022515319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022523347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.022523819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022529167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.022529639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02253675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022537222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022544556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.022545028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022550472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4439999999968125e-06, 'source_diff': 5.4439999999968125e-06}, {'time': 0.022550958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022558792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8340000000017e-06, 'source_diff': 7.8340000000017e-06}, {'time': 0.022559278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022563583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.022564056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.022571556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022580903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.022581375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022590319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.022590792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.022599264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.022599736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022606861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022607333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022616847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.022617319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022624347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.022624819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.022630847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022637028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.0226375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022642847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022643319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022651903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.58400000000245e-06, 'source_diff': 8.58400000000245e-06}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022658764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.022659236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022664278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.02266475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.02266875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022669222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022677917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.022678389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022685597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.022686069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022695389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.022695861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022704528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.022705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022712125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022712597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022716819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.022717292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022724347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.022735278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022740889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.022741361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022745514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.022745986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022749875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022750361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022756944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.022757431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.022766, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.022766472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022774014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.022774486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022778486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.022778958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022783181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.022783653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022792944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.022793417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02279825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022798722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022807736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.022808208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.039" endtime="20201112 09:42:48.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.034" endtime="20201112 09:42:48.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.071" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 6.306000000001061e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.792000000001991e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.046" endtime="20201112 09:42:48.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.075" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.074" endtime="20201112 09:42:48.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.079" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 6.306000000001061e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 9.944000000001313e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 6.791000000002517e-06, 4.859999999974607e-07, 8.028000000000202e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 5.4439999999968125e-06, 4.860000000009301e-07, 7.8340000000017e-06, 4.859999999974607e-07, 4.305000000003056e-06, 4.729999999973644e-07, 7.013000000000158e-06, 4.870000000004038e-07, 9.346999999999828e-06, 4.720000000013602e-07, 8.944000000000313e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 8.58400000000245e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.7300000000083386e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.860000000009301e-07, 5.610999999999117e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 6.583000000000977e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 4.223000000001115e-06, 4.720000000013602e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07], 'eventtime': [0.022444625, 0.022445097, 0.022451403, 0.022451875, 0.022459292, 0.022459764, 0.022469167, 0.022469639, 0.022476431, 0.022476917, 0.022486861, 0.022487333, 0.022494389, 0.022494861, 0.022502069, 0.022502542, 0.022507569, 0.022508042, 0.022514833, 0.022515319, 0.022523347, 0.022523819, 0.022529167, 0.022529639, 0.02253675, 0.022537222, 0.022544556, 0.022545028, 0.022550472, 0.022550958, 0.022558792, 0.022559278, 0.022563583, 0.022564056, 0.022571069, 0.022571556, 0.022580903, 0.022581375, 0.022590319, 0.022590792, 0.022599264, 0.022599736, 0.022606861, 0.022607333, 0.022616847, 0.022617319, 0.022624347, 0.022624819, 0.022630361, 0.022630847, 0.022637028, 0.0226375, 0.022642847, 0.022643319, 0.022651903, 0.022652375, 0.022658764, 0.022659236, 0.022664278, 0.02266475, 0.02266875, 0.022669222, 0.022677917, 0.022678389, 0.022685597, 0.022686069, 0.022695389, 0.022695861, 0.022704528, 0.022705, 0.022712125, 0.022712597, 0.022716819, 0.022717292, 0.022723875, 0.022724347, 0.022734792, 0.022735278, 0.022740889, 0.022741361, 0.022745514, 0.022745986, 0.022749875, 0.022750361, 0.022756944, 0.022757431, 0.022766, 0.022766472, 0.022774014, 0.022774486, 0.022778486, 0.022778958, 0.022783181, 0.022783653, 0.022792944, 0.022793417, 0.02279825, 0.022798722, 0.022807736, 0.022808208], 'sourcesource_diff': [0, 4.720000000013602e-07, 6.306000000001061e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 6.792000000001991e-06, 4.859999999974607e-07, 9.944000000001313e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.7300000000083386e-07, 5.027000000001197e-06, 4.729999999973644e-07, 6.791000000002517e-06, 4.859999999974607e-07, 8.028000000000202e-06, 4.720000000013602e-07, 5.34799999999877e-06, 4.720000000013602e-07, 7.111000000000617e-06, 4.7199999999789077e-07, 7.334000000001201e-06, 4.720000000013602e-07, 5.4439999999968125e-06, 4.860000000009301e-07, 7.8340000000017e-06, 4.859999999974607e-07, 4.305000000003056e-06, 4.729999999973644e-07, 7.013000000000158e-06, 4.870000000004038e-07, 9.346999999999828e-06, 4.720000000013602e-07, 8.944000000000313e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.542000000000741e-06, 4.859999999974607e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 8.58400000000245e-06, 4.7199999999789077e-07, 6.389000000002476e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 8.694999999999536e-06, 4.720000000013602e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.125000000000187e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.7300000000083386e-07, 6.583000000000977e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.860000000009301e-07, 5.610999999999117e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 3.888999999999976e-06, 4.860000000009301e-07, 6.583000000000977e-06, 4.870000000004038e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7199999999789077e-07, 4.223000000001115e-06, 4.720000000013602e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 4.832999999999227e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:48.076" endtime="20201112 09:42:48.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.072" endtime="20201112 09:42:48.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.085" level="INFO">${RESULT} = [{'time': 0.022445097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022451875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.081" endtime="20201112 09:42:48.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.098" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:48.086" endtime="20201112 09:42:48.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.102" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.101" endtime="20201112 09:42:48.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.104" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.103" endtime="20201112 09:42:48.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.099" endtime="20201112 09:42:48.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.108" endtime="20201112 09:42:48.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.111" endtime="20201112 09:42:48.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.109" endtime="20201112 09:42:48.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.106" endtime="20201112 09:42:48.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.691" endtime="20201112 09:42:48.132"></status>
</kw>
<msg timestamp="20201112 09:42:48.132" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.140" endtime="20201112 09:42:48.158"></status>
</kw>
<msg timestamp="20201112 09:42:48.158" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.138" endtime="20201112 09:42:48.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.159" endtime="20201112 09:42:48.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.162" endtime="20201112 09:42:48.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.136" endtime="20201112 09:42:48.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.134" endtime="20201112 09:42:48.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.172" endtime="20201112 09:42:48.455"></status>
</kw>
<msg timestamp="20201112 09:42:48.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.170" endtime="20201112 09:42:48.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.460" endtime="20201112 09:42:48.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.468" endtime="20201112 09:42:48.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.167" endtime="20201112 09:42:48.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.166" endtime="20201112 09:42:48.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.475" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.474" endtime="20201112 09:42:48.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.480" level="INFO">VALUE: [{'time': 0.022870222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022880861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.022881347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022889833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.022890306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022900736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430000000002243e-05, 'source_diff': 1.0430000000002243e-05}, {'time': 0.022901222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022908653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.022909125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022916139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022916611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022926958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.022927431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022934972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.022935444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022940889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.022941375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022945472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.022945944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022952958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022953444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.022961139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022966653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.022974806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022975278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.022984569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.022985042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.022989542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.022990028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.022998181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022998653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023005125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.023005597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023015292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.023015778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023026097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.023026569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023037014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.023037486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023047819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.023048292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023057639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.023058111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.023065361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023072181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.023072653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023082153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.023082625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023091639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.023092111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023100569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.023101042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023110569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.023111042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023118389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.023118861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023125014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.023125486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023131403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.023131875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023140222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.023140694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023147792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.023148278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023155597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.023156083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023159958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.023160444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023164528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.023165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023169306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.023169778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023174819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.023175292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023185194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.023185667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023191833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.023192306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.023196292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.023196778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023206264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.023206736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023214361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.023214833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.023218833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.023219306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.023223194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.023223681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0232335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.023233972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.023243375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.023243861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.023250972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.023251458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.023257903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.023258375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.476" endtime="20201112 09:42:48.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.472" endtime="20201112 09:42:48.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.505" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.0430000000002243e-05, 4.859999999974607e-07, 7.431000000002186e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.482" endtime="20201112 09:42:48.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.509" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.508" endtime="20201112 09:42:48.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.513" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.0430000000002243e-05, 4.859999999974607e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.860000000009301e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 4.500000000001031e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 6.763999999999382e-06, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.7199999999789077e-07, 9.014000000001632e-06, 4.7199999999789077e-07, 8.458000000002852e-06, 4.729999999973644e-07, 9.527000000002228e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.916999999997646e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.859999999974607e-07, 4.08400000000142e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.7199999999789077e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 3.888000000000502e-06, 4.870000000004038e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.859999999974607e-07, 6.445000000000756e-06, 4.720000000013602e-07], 'eventtime': [0.022870222, 0.022870694, 0.022880861, 0.022881347, 0.022889833, 0.022890306, 0.022900736, 0.022901222, 0.022908653, 0.022909125, 0.022916139, 0.022916611, 0.022926958, 0.022927431, 0.022934972, 0.022935444, 0.022940889, 0.022941375, 0.022945472, 0.022945944, 0.022952958, 0.022953444, 0.022960667, 0.022961139, 0.022966167, 0.022966653, 0.022974806, 0.022975278, 0.022984569, 0.022985042, 0.022989542, 0.022990028, 0.022998181, 0.022998653, 0.023005125, 0.023005597, 0.023015292, 0.023015778, 0.023026097, 0.023026569, 0.023037014, 0.023037486, 0.023047819, 0.023048292, 0.023057639, 0.023058111, 0.023064875, 0.023065361, 0.023072181, 0.023072653, 0.023082153, 0.023082625, 0.023091639, 0.023092111, 0.023100569, 0.023101042, 0.023110569, 0.023111042, 0.023118389, 0.023118861, 0.023125014, 0.023125486, 0.023131403, 0.023131875, 0.023140222, 0.023140694, 0.023147792, 0.023148278, 0.023155597, 0.023156083, 0.023159958, 0.023160444, 0.023164528, 0.023165, 0.023169306, 0.023169778, 0.023174819, 0.023175292, 0.023185194, 0.023185667, 0.023191833, 0.023192306, 0.023196292, 0.023196778, 0.023206264, 0.023206736, 0.023214361, 0.023214833, 0.023218833, 0.023219306, 0.023223194, 0.023223681, 0.0232335, 0.023233972, 0.023243375, 0.023243861, 0.023250972, 0.023251458, 0.023257903, 0.023258375], 'sourcesource_diff': [0, 4.720000000013602e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.0430000000002243e-05, 4.859999999974607e-07, 7.431000000002186e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 5.444999999999756e-06, 4.860000000009301e-07, 4.097000000001516e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.860000000009301e-07, 7.2230000000006456e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 4.500000000001031e-06, 4.859999999974607e-07, 8.153000000000327e-06, 4.720000000013602e-07, 6.472000000000422e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 1.0333000000001258e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999789077e-07, 6.763999999999382e-06, 4.860000000009301e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.7199999999789077e-07, 9.014000000001632e-06, 4.7199999999789077e-07, 8.458000000002852e-06, 4.729999999973644e-07, 9.527000000002228e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 5.916999999997646e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 7.0980000000005206e-06, 4.860000000009301e-07, 7.318999999998688e-06, 4.860000000009301e-07, 3.875000000000406e-06, 4.859999999974607e-07, 4.08400000000142e-06, 4.720000000013602e-07, 4.305999999999061e-06, 4.7199999999789077e-07, 5.041000000000767e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 6.165999999998423e-06, 4.7300000000083386e-07, 3.986000000000961e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.729999999973644e-07, 3.888000000000502e-06, 4.870000000004038e-07, 9.819000000001188e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.860000000009301e-07, 7.111000000000617e-06, 4.859999999974607e-07, 6.445000000000756e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:48.510" endtime="20201112 09:42:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.506" endtime="20201112 09:42:48.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.519" level="INFO">${RESULT} = [{'time': 0.022870694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022881347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.516" endtime="20201112 09:42:48.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.533" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:48.520" endtime="20201112 09:42:48.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.538" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.537" endtime="20201112 09:42:48.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.540" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.539" endtime="20201112 09:42:48.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.534" endtime="20201112 09:42:48.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.543" endtime="20201112 09:42:48.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.547" endtime="20201112 09:42:48.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.545" endtime="20201112 09:42:48.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.541" endtime="20201112 09:42:48.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.132" endtime="20201112 09:42:48.567"></status>
</kw>
<msg timestamp="20201112 09:42:48.568" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.575" endtime="20201112 09:42:48.589"></status>
</kw>
<msg timestamp="20201112 09:42:48.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.574" endtime="20201112 09:42:48.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.592" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.591" endtime="20201112 09:42:48.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.593" endtime="20201112 09:42:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.571" endtime="20201112 09:42:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.569" endtime="20201112 09:42:48.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.602" endtime="20201112 09:42:48.885"></status>
</kw>
<msg timestamp="20201112 09:42:48.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019214403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019214875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.601" endtime="20201112 09:42:48.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019214403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019214875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.890" endtime="20201112 09:42:48.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.902" endtime="20201112 09:42:48.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.598" endtime="20201112 09:42:48.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.596" endtime="20201112 09:42:48.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.909" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.908" endtime="20201112 09:42:48.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.914" level="INFO">VALUE: [{'time': 0.019214403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019214875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019222917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019223389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019233111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019233583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019242069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.019242542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019249653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.019250125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019255681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019256153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019266069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.019266556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019276792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.019277264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0192825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.019282986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019287083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019287556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019292597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.019293069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019303, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019303472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019309222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.019309708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019318917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.209000000003076e-06, 'source_diff': 9.209000000003076e-06}, {'time': 0.019319389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019326083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019326556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4439999999968125e-06, 'source_diff': 5.4439999999968125e-06}, {'time': 0.019332472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019337528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.019338, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019341986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.019342458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019348944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.019349431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019356458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.019356931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019362903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019363375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019373694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.019374181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019378069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.019378542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019386597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019387069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019391069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019391542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019401264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.019401736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019406194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.019406667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019415319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652000000001353e-06, 'source_diff': 8.652000000001353e-06}, {'time': 0.019415792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019421125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019421597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019425806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.019426278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019436208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.019436681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019441083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.019441569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019448611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.019449083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019457208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.019457681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019462097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019462569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019467, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.019467472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019476764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.019477236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.019482028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019489861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.019490347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019500181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833999999996762e-06, 'source_diff': 9.833999999996762e-06}, {'time': 0.019500653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019506306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019506778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019514194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.019514681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019521597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.019522069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019528139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019528611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019535264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019542181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.019542653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019549042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019549514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019558542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019559014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019565375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019565847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019571514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019571986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.910" endtime="20201112 09:42:48.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.906" endtime="20201112 09:42:48.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.941" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7300000000083386e-07, 7.110999999997147e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.917" endtime="20201112 09:42:48.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.945" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.944" endtime="20201112 09:42:48.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.949" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7300000000083386e-07, 7.110999999997147e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.870000000004038e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 5.236000000002211e-06, 4.859999999974607e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.859999999974607e-07, 9.209000000003076e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 5.4439999999968125e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.870000000004038e-07, 3.888000000000502e-06, 4.729999999973644e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.458000000002321e-06, 4.729999999973644e-07, 8.652000000001353e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.859999999974607e-07, 7.042000000002241e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999789077e-07, 4.431000000002655e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 4.30600000000253e-06, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 9.833999999996762e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.415999999999673e-06, 4.870000000004038e-07, 6.916000000002642e-06, 4.7199999999789077e-07, 6.070000000000381e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07], 'eventtime': [0.019214403, 0.019214875, 0.019222917, 0.019223389, 0.019233111, 0.019233583, 0.019242069, 0.019242542, 0.019249653, 0.019250125, 0.019255681, 0.019256153, 0.019266069, 0.019266556, 0.019276792, 0.019277264, 0.0192825, 0.019282986, 0.019287083, 0.019287556, 0.019292597, 0.019293069, 0.019303, 0.019303472, 0.019309222, 0.019309708, 0.019318917, 0.019319389, 0.019326083, 0.019326556, 0.019332, 0.019332472, 0.019337528, 0.019338, 0.019341986, 0.019342458, 0.019348944, 0.019349431, 0.019356458, 0.019356931, 0.019362903, 0.019363375, 0.019373694, 0.019374181, 0.019378069, 0.019378542, 0.019386597, 0.019387069, 0.019391069, 0.019391542, 0.019401264, 0.019401736, 0.019406194, 0.019406667, 0.019415319, 0.019415792, 0.019421125, 0.019421597, 0.019425806, 0.019426278, 0.019436208, 0.019436681, 0.019441083, 0.019441569, 0.019448611, 0.019449083, 0.019457208, 0.019457681, 0.019462097, 0.019462569, 0.019467, 0.019467472, 0.019476764, 0.019477236, 0.019481542, 0.019482028, 0.019489861, 0.019490347, 0.019500181, 0.019500653, 0.019506306, 0.019506778, 0.019514194, 0.019514681, 0.019521597, 0.019522069, 0.019528139, 0.019528611, 0.019534792, 0.019535264, 0.019542181, 0.019542653, 0.019549042, 0.019549514, 0.019558542, 0.019559014, 0.019565375, 0.019565847, 0.019571514, 0.019571986], 'sourcesource_diff': [0, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7300000000083386e-07, 7.110999999997147e-06, 4.720000000013602e-07, 5.556000000000311e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.870000000004038e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 5.236000000002211e-06, 4.859999999974607e-07, 4.097000000001516e-06, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 5.750000000002281e-06, 4.859999999974607e-07, 9.209000000003076e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 5.4439999999968125e-06, 4.720000000013602e-07, 5.055999999999811e-06, 4.720000000013602e-07, 3.9859999999974915e-06, 4.720000000013602e-07, 6.485999999999992e-06, 4.870000000004038e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.7199999999789077e-07, 1.0319000000001688e-05, 4.870000000004038e-07, 3.888000000000502e-06, 4.729999999973644e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.000000000000531e-06, 4.7300000000083386e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 4.458000000002321e-06, 4.729999999973644e-07, 8.652000000001353e-06, 4.7300000000083386e-07, 5.332999999999727e-06, 4.7199999999789077e-07, 4.209000000001545e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.859999999974607e-07, 7.042000000002241e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7199999999789077e-07, 4.431000000002655e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.7199999999789077e-07, 4.30600000000253e-06, 4.859999999974607e-07, 7.833000000002227e-06, 4.860000000009301e-07, 9.833999999996762e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.415999999999673e-06, 4.870000000004038e-07, 6.916000000002642e-06, 4.7199999999789077e-07, 6.070000000000381e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 6.9169999999986465e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:42:48.946" endtime="20201112 09:42:48.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.942" endtime="20201112 09:42:48.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.955" level="INFO">${RESULT} = [{'time': 0.019214875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019223389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:48.951" endtime="20201112 09:42:48.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.968" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:48.956" endtime="20201112 09:42:48.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.972" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.971" endtime="20201112 09:42:48.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.975" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.973" endtime="20201112 09:42:48.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.969" endtime="20201112 09:42:48.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.978" endtime="20201112 09:42:48.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.981" endtime="20201112 09:42:49.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.980" endtime="20201112 09:42:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.976" endtime="20201112 09:42:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.568" endtime="20201112 09:42:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.296" endtime="20201112 09:42:49.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.007" endtime="20201112 09:42:49.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.005" endtime="20201112 09:42:49.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.004" endtime="20201112 09:42:49.027"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:40.216" endtime="20201112 09:42:49.028" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.035" endtime="20201112 09:42:49.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.033" endtime="20201112 09:42:49.055"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.069" endtime="20201112 09:42:49.094"></status>
</kw>
<msg timestamp="20201112 09:42:49.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.067" endtime="20201112 09:42:49.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.095" endtime="20201112 09:42:49.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.100" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:49.098" endtime="20201112 09:42:49.101"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.065" endtime="20201112 09:42:49.101"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.062" endtime="20201112 09:42:49.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.061" endtime="20201112 09:42:49.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:49.106" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:49.105" endtime="20201112 09:42:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.103" endtime="20201112 09:42:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.059" endtime="20201112 09:42:49.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.059" endtime="20201112 09:42:49.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.107" endtime="20201112 09:42:49.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.058" endtime="20201112 09:42:49.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.056" endtime="20201112 09:42:49.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.032" endtime="20201112 09:42:49.110"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:49.112" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.120" endtime="20201112 09:42:49.138"></status>
</kw>
<msg timestamp="20201112 09:42:49.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.119" endtime="20201112 09:42:49.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.140" endtime="20201112 09:42:49.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.142" endtime="20201112 09:42:49.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.116" endtime="20201112 09:42:49.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.114" endtime="20201112 09:42:49.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.152" endtime="20201112 09:42:49.438"></status>
</kw>
<msg timestamp="20201112 09:42:49.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078840333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07884475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:49.150" endtime="20201112 09:42:49.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078840333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07884475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:49.442" endtime="20201112 09:42:49.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.450" endtime="20201112 09:42:49.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.147" endtime="20201112 09:42:49.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.145" endtime="20201112 09:42:49.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.457" level="INFO">${RESULT} = [{'time': 0.07884475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4170000000065546e-06, 'source_diff': 4.4170000000065546e-06}, {'time': 0.078853528, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:42:49.454" endtime="20201112 09:42:49.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.471" level="INFO">${OVERHEAD} = {'diff': [4.4170000000065546e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.417...</msg>
<status status="PASS" starttime="20201112 09:42:49.458" endtime="20201112 09:42:49.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.476" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.475" endtime="20201112 09:42:49.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.478" level="INFO">VALUE: [4.4170000000065546e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.388000000007941e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.360999999994397e-06, 4.429999999999712e-06, 4.389000000007415e-06, 4.374999999987028e-06, 4.415999999993203e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.416000000007081e-06, 4.444000000006221e-06, 4.403000000000046e-06, 4.416000000007081e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.4170000000065546e-06, 4.4170000000065546e-06, 4.402000000000572e-06, 4.389000000007415e-06, 4.388999999993537e-06, 4.444000000006221e-06, 4.403000000000046e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.431000000013063e-06, 4.458999999998325e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.485999999997992e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.416999999992677e-06, 4.4170000000065546e-06, 4.402000000000572e-06, 4.388999999993537e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416000000007081e-06, 4.4170000000065546e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.477" endtime="20201112 09:42:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.472" endtime="20201112 09:42:49.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.481" endtime="20201112 09:42:49.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.485" endtime="20201112 09:42:49.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.483" endtime="20201112 09:42:49.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.480" endtime="20201112 09:42:49.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.113" endtime="20201112 09:42:49.506"></status>
</kw>
<msg timestamp="20201112 09:42:49.506" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.513" endtime="20201112 09:42:49.529"></status>
</kw>
<msg timestamp="20201112 09:42:49.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.512" endtime="20201112 09:42:49.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.532" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.531" endtime="20201112 09:42:49.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.533" endtime="20201112 09:42:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.509" endtime="20201112 09:42:49.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.508" endtime="20201112 09:42:49.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.542" endtime="20201112 09:42:49.830"></status>
</kw>
<msg timestamp="20201112 09:42:49.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021087667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.541" endtime="20201112 09:42:49.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021087667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.834" endtime="20201112 09:42:49.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.843" endtime="20201112 09:42:49.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.538" endtime="20201112 09:42:49.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.537" endtime="20201112 09:42:49.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.849" level="INFO">${RESULT} = [{'time': 0.021092069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.021105431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.846" endtime="20201112 09:42:49.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.863" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.472...</msg>
<status status="PASS" starttime="20201112 09:42:49.851" endtime="20201112 09:42:49.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.867" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.866" endtime="20201112 09:42:49.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.869" level="INFO">VALUE: [4.402000000000572e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.472000000001891e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.430000000003181e-06, 4.4449999999987555e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.868" endtime="20201112 09:42:49.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.864" endtime="20201112 09:42:49.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.873" endtime="20201112 09:42:49.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.876" endtime="20201112 09:42:49.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.875" endtime="20201112 09:42:49.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.871" endtime="20201112 09:42:49.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.506" endtime="20201112 09:42:49.897"></status>
</kw>
<msg timestamp="20201112 09:42:49.897" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.905" endtime="20201112 09:42:49.922"></status>
</kw>
<msg timestamp="20201112 09:42:49.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.903" endtime="20201112 09:42:49.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.925" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.924" endtime="20201112 09:42:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.926" endtime="20201112 09:42:49.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.901" endtime="20201112 09:42:49.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.899" endtime="20201112 09:42:49.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.936" endtime="20201112 09:42:50.222"></status>
</kw>
<msg timestamp="20201112 09:42:50.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.934" endtime="20201112 09:42:50.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.226" endtime="20201112 09:42:50.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.234" endtime="20201112 09:42:50.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.932" endtime="20201112 09:42:50.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.930" endtime="20201112 09:42:50.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.242" level="INFO">${RESULT} = [{'time': 0.021584861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.021599542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:50.238" endtime="20201112 09:42:50.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.255" level="INFO">${OVERHEAD} = {'diff': [4.389000000000476e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.4309...</msg>
<status status="PASS" starttime="20201112 09:42:50.243" endtime="20201112 09:42:50.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.258" endtime="20201112 09:42:50.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.261" level="INFO">VALUE: [4.389000000000476e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.401999999997103e-06, 4.430000000003181e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.514000000000601e-06, 4.416000000000142e-06, 4.485999999997992e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.260" endtime="20201112 09:42:50.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.256" endtime="20201112 09:42:50.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.265" endtime="20201112 09:42:50.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.268" endtime="20201112 09:42:50.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.267" endtime="20201112 09:42:50.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.263" endtime="20201112 09:42:50.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.898" endtime="20201112 09:42:50.289"></status>
</kw>
<msg timestamp="20201112 09:42:50.289" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.297" endtime="20201112 09:42:50.314"></status>
</kw>
<msg timestamp="20201112 09:42:50.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.295" endtime="20201112 09:42:50.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.317" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.315" endtime="20201112 09:42:50.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.318" endtime="20201112 09:42:50.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.293" endtime="20201112 09:42:50.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.291" endtime="20201112 09:42:50.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.327" endtime="20201112 09:42:50.613"></status>
</kw>
<msg timestamp="20201112 09:42:50.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.325" endtime="20201112 09:42:50.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021520139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.617" endtime="20201112 09:42:50.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.626" endtime="20201112 09:42:50.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.323" endtime="20201112 09:42:50.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.321" endtime="20201112 09:42:50.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.632" level="INFO">${RESULT} = [{'time': 0.021520139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.021528597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:50.629" endtime="20201112 09:42:50.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.645" level="INFO">${OVERHEAD} = {'diff': [4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.416...</msg>
<status status="PASS" starttime="20201112 09:42:50.633" endtime="20201112 09:42:50.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.650" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.649" endtime="20201112 09:42:50.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.652" level="INFO">VALUE: [4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.430000000003181e-06, 4.430999999999186e-06, 4.445000000002225e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.458000000002321e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.458000000002321e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.651" endtime="20201112 09:42:50.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.646" endtime="20201112 09:42:50.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.655" endtime="20201112 09:42:50.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.659" endtime="20201112 09:42:50.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.657" endtime="20201112 09:42:50.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.654" endtime="20201112 09:42:50.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.290" endtime="20201112 09:42:50.679"></status>
</kw>
<msg timestamp="20201112 09:42:50.680" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.687" endtime="20201112 09:42:50.705"></status>
</kw>
<msg timestamp="20201112 09:42:50.706" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.686" endtime="20201112 09:42:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.707" endtime="20201112 09:42:50.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.709" endtime="20201112 09:42:50.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.683" endtime="20201112 09:42:50.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.681" endtime="20201112 09:42:50.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.718" endtime="20201112 09:42:51.013"></status>
</kw>
<msg timestamp="20201112 09:42:51.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.717" endtime="20201112 09:42:51.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.018" endtime="20201112 09:42:51.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.026" endtime="20201112 09:42:51.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.714" endtime="20201112 09:42:51.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.712" endtime="20201112 09:42:51.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.033" level="INFO">${RESULT} = [{'time': 0.022798819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.022809472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.030" endtime="20201112 09:42:51.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.047" level="INFO">${OVERHEAD} = {'diff': [4.388000000001002e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.41...</msg>
<status status="PASS" starttime="20201112 09:42:51.034" endtime="20201112 09:42:51.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.051" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.050" endtime="20201112 09:42:51.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.054" level="INFO">VALUE: [4.388000000001002e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.415999999996673e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.4999999999975615e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.052" endtime="20201112 09:42:51.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.048" endtime="20201112 09:42:51.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.057" endtime="20201112 09:42:51.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.060" endtime="20201112 09:42:51.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.059" endtime="20201112 09:42:51.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.055" endtime="20201112 09:42:51.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.680" endtime="20201112 09:42:51.081"></status>
</kw>
<msg timestamp="20201112 09:42:51.081" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.089" endtime="20201112 09:42:51.108"></status>
</kw>
<msg timestamp="20201112 09:42:51.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.087" endtime="20201112 09:42:51.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.109" endtime="20201112 09:42:51.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.112" endtime="20201112 09:42:51.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.085" endtime="20201112 09:42:51.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.083" endtime="20201112 09:42:51.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.121" endtime="20201112 09:42:51.409"></status>
</kw>
<msg timestamp="20201112 09:42:51.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.119" endtime="20201112 09:42:51.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.414" endtime="20201112 09:42:51.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.422" endtime="20201112 09:42:51.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.117" endtime="20201112 09:42:51.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.115" endtime="20201112 09:42:51.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.429" level="INFO">${RESULT} = [{'time': 0.023005361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023019028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.425" endtime="20201112 09:42:51.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.442" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 4.430999999999186e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.4170...</msg>
<status status="PASS" starttime="20201112 09:42:51.430" endtime="20201112 09:42:51.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.446" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.445" endtime="20201112 09:42:51.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.449" level="INFO">VALUE: [4.403000000000046e-06, 4.430999999999186e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.417000000003085e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.430000000003181e-06, 4.443999999999282e-06, 4.430000000003181e-06, 4.429999999999712e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.447" endtime="20201112 09:42:51.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.443" endtime="20201112 09:42:51.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.452" endtime="20201112 09:42:51.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.455" endtime="20201112 09:42:51.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.454" endtime="20201112 09:42:51.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.450" endtime="20201112 09:42:51.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.082" endtime="20201112 09:42:51.476"></status>
</kw>
<msg timestamp="20201112 09:42:51.476" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.484" endtime="20201112 09:42:51.500"></status>
</kw>
<msg timestamp="20201112 09:42:51.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.482" endtime="20201112 09:42:51.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.502" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.501" endtime="20201112 09:42:51.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.504" endtime="20201112 09:42:51.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.480" endtime="20201112 09:42:51.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.478" endtime="20201112 09:42:51.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.513" endtime="20201112 09:42:51.798"></status>
</kw>
<msg timestamp="20201112 09:42:51.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.511" endtime="20201112 09:42:51.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.802" endtime="20201112 09:42:51.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.810" endtime="20201112 09:42:51.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.509" endtime="20201112 09:42:51.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.507" endtime="20201112 09:42:51.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.817" level="INFO">${RESULT} = [{'time': 0.020050083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.020058667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.813" endtime="20201112 09:42:51.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.830" level="INFO">${OVERHEAD} = {'diff': [4.416000000000142e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.403...</msg>
<status status="PASS" starttime="20201112 09:42:51.818" endtime="20201112 09:42:51.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.833" endtime="20201112 09:42:51.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.836" level="INFO">VALUE: [4.416000000000142e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.403000000000046e-06, 4.415999999996673e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.430999999999186e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.835" endtime="20201112 09:42:51.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.831" endtime="20201112 09:42:51.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.839" endtime="20201112 09:42:51.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.843" endtime="20201112 09:42:51.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.841" endtime="20201112 09:42:51.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.838" endtime="20201112 09:42:51.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.477" endtime="20201112 09:42:51.864"></status>
</kw>
<msg timestamp="20201112 09:42:51.864" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.872" endtime="20201112 09:42:51.886"></status>
</kw>
<msg timestamp="20201112 09:42:51.887" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.870" endtime="20201112 09:42:51.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.888" endtime="20201112 09:42:51.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.891" endtime="20201112 09:42:51.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.868" endtime="20201112 09:42:51.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.866" endtime="20201112 09:42:51.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.900" endtime="20201112 09:42:52.184"></status>
</kw>
<msg timestamp="20201112 09:42:52.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.898" endtime="20201112 09:42:52.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.189" endtime="20201112 09:42:52.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.197" endtime="20201112 09:42:52.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.896" endtime="20201112 09:42:52.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.894" endtime="20201112 09:42:52.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.204" level="INFO">${RESULT} = [{'time': 0.019109569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019118431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:52.200" endtime="20201112 09:42:52.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.217" level="INFO">${OVERHEAD} = {'diff': [4.416000000000142e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.3890...</msg>
<status status="PASS" starttime="20201112 09:42:52.205" endtime="20201112 09:42:52.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.220" endtime="20201112 09:42:52.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.223" level="INFO">VALUE: [4.416000000000142e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.3749999999974365e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.401999999997103e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.473000000001365e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.222" endtime="20201112 09:42:52.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.218" endtime="20201112 09:42:52.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.227" endtime="20201112 09:42:52.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.230" endtime="20201112 09:42:52.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.228" endtime="20201112 09:42:52.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.225" endtime="20201112 09:42:52.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.865" endtime="20201112 09:42:52.251"></status>
</kw>
<msg timestamp="20201112 09:42:52.251" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.258" endtime="20201112 09:42:52.272"></status>
</kw>
<msg timestamp="20201112 09:42:52.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.257" endtime="20201112 09:42:52.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.274" endtime="20201112 09:42:52.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.277" endtime="20201112 09:42:52.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.254" endtime="20201112 09:42:52.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.253" endtime="20201112 09:42:52.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.286" endtime="20201112 09:42:52.568"></status>
</kw>
<msg timestamp="20201112 09:42:52.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019027153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.284" endtime="20201112 09:42:52.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019027153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.573" endtime="20201112 09:42:52.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.581" endtime="20201112 09:42:52.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.281" endtime="20201112 09:42:52.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.280" endtime="20201112 09:42:52.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.588" level="INFO">${RESULT} = [{'time': 0.019027153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.019037347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:52.584" endtime="20201112 09:42:52.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.602" level="INFO">${OVERHEAD} = {'diff': [4.445000000002225e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458999999998325e-06, 4.4299...</msg>
<status status="PASS" starttime="20201112 09:42:52.589" endtime="20201112 09:42:52.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.605" endtime="20201112 09:42:52.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.609" level="INFO">VALUE: [4.445000000002225e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458999999998325e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.471999999998422e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.388999999997006e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.444000000002751e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.607" endtime="20201112 09:42:52.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.603" endtime="20201112 09:42:52.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.612" endtime="20201112 09:42:52.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.615" endtime="20201112 09:42:52.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.614" endtime="20201112 09:42:52.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.610" endtime="20201112 09:42:52.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.251" endtime="20201112 09:42:52.636"></status>
</kw>
<msg timestamp="20201112 09:42:52.636" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.644" endtime="20201112 09:42:52.663"></status>
</kw>
<msg timestamp="20201112 09:42:52.663" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.643" endtime="20201112 09:42:52.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.664" endtime="20201112 09:42:52.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.667" endtime="20201112 09:42:52.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.640" endtime="20201112 09:42:52.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.638" endtime="20201112 09:42:52.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.675" endtime="20201112 09:42:52.964"></status>
</kw>
<msg timestamp="20201112 09:42:52.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.674" endtime="20201112 09:42:52.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.968" endtime="20201112 09:42:52.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.977" endtime="20201112 09:42:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.671" endtime="20201112 09:42:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.670" endtime="20201112 09:42:52.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.984" level="INFO">${RESULT} = [{'time': 0.020430264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.020439458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:52.980" endtime="20201112 09:42:52.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.998" level="INFO">${OVERHEAD} = {'diff': [4.416999999999616e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.388999999997006e-06, 4.431...</msg>
<status status="PASS" starttime="20201112 09:42:52.985" endtime="20201112 09:42:52.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.001" endtime="20201112 09:42:53.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.004" level="INFO">VALUE: [4.416999999999616e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.388999999997006e-06, 4.431000000002655e-06, 4.36199999999734e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.401999999997103e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.459000000001795e-06, 4.444000000002751e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.444000000002751e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.003" endtime="20201112 09:42:53.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.999" endtime="20201112 09:42:53.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.007" endtime="20201112 09:42:53.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.011" endtime="20201112 09:42:53.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.009" endtime="20201112 09:42:53.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.006" endtime="20201112 09:42:53.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.637" endtime="20201112 09:42:53.032"></status>
</kw>
<msg timestamp="20201112 09:42:53.032" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.040" endtime="20201112 09:42:53.057"></status>
</kw>
<msg timestamp="20201112 09:42:53.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.038" endtime="20201112 09:42:53.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.058" endtime="20201112 09:42:53.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.061" endtime="20201112 09:42:53.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.036" endtime="20201112 09:42:53.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.034" endtime="20201112 09:42:53.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.070" endtime="20201112 09:42:53.357"></status>
</kw>
<msg timestamp="20201112 09:42:53.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021466778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.068" endtime="20201112 09:42:53.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021466778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.362" endtime="20201112 09:42:53.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.370" endtime="20201112 09:42:53.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.066" endtime="20201112 09:42:53.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.064" endtime="20201112 09:42:53.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.376" level="INFO">${RESULT} = [{'time': 0.021466778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.021477417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:53.373" endtime="20201112 09:42:53.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.390" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.4309...</msg>
<status status="PASS" starttime="20201112 09:42:53.377" endtime="20201112 09:42:53.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.394" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.393" endtime="20201112 09:42:53.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.396" level="INFO">VALUE: [4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.332999999998727e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.444000000002751e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.395" endtime="20201112 09:42:53.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.391" endtime="20201112 09:42:53.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.400" endtime="20201112 09:42:53.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.403" endtime="20201112 09:42:53.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.402" endtime="20201112 09:42:53.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.398" endtime="20201112 09:42:53.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.033" endtime="20201112 09:42:53.424"></status>
</kw>
<msg timestamp="20201112 09:42:53.424" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.432" endtime="20201112 09:42:53.448"></status>
</kw>
<msg timestamp="20201112 09:42:53.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.431" endtime="20201112 09:42:53.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.450" endtime="20201112 09:42:53.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.452" endtime="20201112 09:42:53.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.428" endtime="20201112 09:42:53.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.426" endtime="20201112 09:42:53.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.461" endtime="20201112 09:42:53.750"></status>
</kw>
<msg timestamp="20201112 09:42:53.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021195736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.460" endtime="20201112 09:42:53.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021195736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.754" endtime="20201112 09:42:53.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.762" endtime="20201112 09:42:53.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.457" endtime="20201112 09:42:53.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.456" endtime="20201112 09:42:53.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.769" level="INFO">${RESULT} = [{'time': 0.021195736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.021208889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:53.766" endtime="20201112 09:42:53.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.782" level="INFO">${OVERHEAD} = {'diff': [4.443999999999282e-06, 4.458000000002321e-06, 4.388999999997006e-06, 4.486000000001461e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.3890...</msg>
<status status="PASS" starttime="20201112 09:42:53.770" endtime="20201112 09:42:53.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.785" endtime="20201112 09:42:53.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.789" level="INFO">VALUE: [4.443999999999282e-06, 4.458000000002321e-06, 4.388999999997006e-06, 4.486000000001461e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.36200000000081e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.415999999996673e-06, 4.429999999999712e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.401999999997103e-06, 4.471999999998422e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.4449999999987555e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.471999999998422e-06, 4.430000000003181e-06, 4.429999999999712e-06, 4.431000000002655e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.402999999996576e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.788" endtime="20201112 09:42:53.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.783" endtime="20201112 09:42:53.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.793" endtime="20201112 09:42:53.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.796" endtime="20201112 09:42:53.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.795" endtime="20201112 09:42:53.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.791" endtime="20201112 09:42:53.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.425" endtime="20201112 09:42:53.817"></status>
</kw>
<msg timestamp="20201112 09:42:53.817" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.825" endtime="20201112 09:42:53.845"></status>
</kw>
<msg timestamp="20201112 09:42:53.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.823" endtime="20201112 09:42:53.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.848" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.846" endtime="20201112 09:42:53.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.849" endtime="20201112 09:42:53.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.821" endtime="20201112 09:42:53.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.819" endtime="20201112 09:42:53.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.858" endtime="20201112 09:42:54.148"></status>
</kw>
<msg timestamp="20201112 09:42:54.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.856" endtime="20201112 09:42:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.152" endtime="20201112 09:42:54.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.160" endtime="20201112 09:42:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.854" endtime="20201112 09:42:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.852" endtime="20201112 09:42:54.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.167" level="INFO">${RESULT} = [{'time': 0.020291708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.020301167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.164" endtime="20201112 09:42:54.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.182" level="INFO">${OVERHEAD} = {'diff': [4.416000000000142e-06, 4.485999999997992e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.4299...</msg>
<status status="PASS" starttime="20201112 09:42:54.168" endtime="20201112 09:42:54.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.186" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.185" endtime="20201112 09:42:54.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.188" level="INFO">VALUE: [4.416000000000142e-06, 4.485999999997992e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.4999999999975615e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.431000000002655e-06, 4.33400000000167e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.485999999997992e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.401999999997103e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.486000000001461e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.417000000003085e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.3199999999986305e-06, 4.375000000000906e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.187" endtime="20201112 09:42:54.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.183" endtime="20201112 09:42:54.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.192" endtime="20201112 09:42:54.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.196" endtime="20201112 09:42:54.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.194" endtime="20201112 09:42:54.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.190" endtime="20201112 09:42:54.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.818" endtime="20201112 09:42:54.216"></status>
</kw>
<msg timestamp="20201112 09:42:54.217" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.224" endtime="20201112 09:42:54.243"></status>
</kw>
<msg timestamp="20201112 09:42:54.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.223" endtime="20201112 09:42:54.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.246" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.244" endtime="20201112 09:42:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.247" endtime="20201112 09:42:54.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.220" endtime="20201112 09:42:54.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.218" endtime="20201112 09:42:54.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.256" endtime="20201112 09:42:54.540"></status>
</kw>
<msg timestamp="20201112 09:42:54.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.254" endtime="20201112 09:42:54.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.544" endtime="20201112 09:42:54.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.552" endtime="20201112 09:42:54.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.252" endtime="20201112 09:42:54.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.250" endtime="20201112 09:42:54.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.559" level="INFO">${RESULT} = [{'time': 0.022688347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.022696778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.556" endtime="20201112 09:42:54.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.572" level="INFO">${OVERHEAD} = {'diff': [4.458000000002321e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416...</msg>
<status status="PASS" starttime="20201112 09:42:54.560" endtime="20201112 09:42:54.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.577" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.575" endtime="20201112 09:42:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.579" level="INFO">VALUE: [4.458000000002321e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.4449999999987555e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.430000000003181e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.34800000000124e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.430000000003181e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.578" endtime="20201112 09:42:54.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.573" endtime="20201112 09:42:54.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.583" endtime="20201112 09:42:54.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.586" endtime="20201112 09:42:54.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.584" endtime="20201112 09:42:54.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.581" endtime="20201112 09:42:54.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.217" endtime="20201112 09:42:54.607"></status>
</kw>
<msg timestamp="20201112 09:42:54.607" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.615" endtime="20201112 09:42:54.629"></status>
</kw>
<msg timestamp="20201112 09:42:54.630" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.613" endtime="20201112 09:42:54.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.631" endtime="20201112 09:42:54.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.633" endtime="20201112 09:42:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.610" endtime="20201112 09:42:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.609" endtime="20201112 09:42:54.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.642" endtime="20201112 09:42:54.927"></status>
</kw>
<msg timestamp="20201112 09:42:54.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019177125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.641" endtime="20201112 09:42:54.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019177125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.932" endtime="20201112 09:42:54.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.940" endtime="20201112 09:42:54.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.638" endtime="20201112 09:42:54.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.636" endtime="20201112 09:42:54.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.947" level="INFO">${RESULT} = [{'time': 0.019181556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.019194792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.943" endtime="20201112 09:42:54.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.960" level="INFO">${OVERHEAD} = {'diff': [4.430999999999186e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.4299...</msg>
<status status="PASS" starttime="20201112 09:42:54.948" endtime="20201112 09:42:54.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.964" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.963" endtime="20201112 09:42:54.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.967" level="INFO">VALUE: [4.430999999999186e-06, 4.388999999997006e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.458999999998325e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.415999999996673e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.473000000001365e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.403000000000046e-06, 4.444000000002751e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.431000000002655e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.965" endtime="20201112 09:42:54.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.961" endtime="20201112 09:42:54.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.970" endtime="20201112 09:42:54.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.974" endtime="20201112 09:42:54.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.972" endtime="20201112 09:42:54.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.969" endtime="20201112 09:42:54.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.607" endtime="20201112 09:42:54.994"></status>
</kw>
<msg timestamp="20201112 09:42:54.995" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.002" endtime="20201112 09:42:55.021"></status>
</kw>
<msg timestamp="20201112 09:42:55.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.001" endtime="20201112 09:42:55.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.022" endtime="20201112 09:42:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.025" endtime="20201112 09:42:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.998" endtime="20201112 09:42:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.997" endtime="20201112 09:42:55.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.034" endtime="20201112 09:42:55.319"></status>
</kw>
<msg timestamp="20201112 09:42:55.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.032" endtime="20201112 09:42:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.323" endtime="20201112 09:42:55.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.331" endtime="20201112 09:42:55.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.030" endtime="20201112 09:42:55.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.028" endtime="20201112 09:42:55.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.338" level="INFO">${RESULT} = [{'time': 0.023449569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.023460639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.335" endtime="20201112 09:42:55.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.351" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.486000000001461e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.4020...</msg>
<status status="PASS" starttime="20201112 09:42:55.339" endtime="20201112 09:42:55.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.355" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.354" endtime="20201112 09:42:55.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.358" level="INFO">VALUE: [4.402000000000572e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.486000000001461e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.4999999999975615e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.444000000002751e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.443999999999282e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.356" endtime="20201112 09:42:55.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.352" endtime="20201112 09:42:55.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.361" endtime="20201112 09:42:55.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.365" endtime="20201112 09:42:55.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.363" endtime="20201112 09:42:55.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.360" endtime="20201112 09:42:55.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.995" endtime="20201112 09:42:55.386"></status>
</kw>
<msg timestamp="20201112 09:42:55.386" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.393" endtime="20201112 09:42:55.408"></status>
</kw>
<msg timestamp="20201112 09:42:55.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.392" endtime="20201112 09:42:55.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.411" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.410" endtime="20201112 09:42:55.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.412" endtime="20201112 09:42:55.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.389" endtime="20201112 09:42:55.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.388" endtime="20201112 09:42:55.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.421" endtime="20201112 09:42:55.708"></status>
</kw>
<msg timestamp="20201112 09:42:55.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019207792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.420" endtime="20201112 09:42:55.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019207792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019212181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.712" endtime="20201112 09:42:55.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.720" endtime="20201112 09:42:55.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.417" endtime="20201112 09:42:55.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.415" endtime="20201112 09:42:55.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.727" level="INFO">${RESULT} = [{'time': 0.019212181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.019221597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.724" endtime="20201112 09:42:55.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.741" level="INFO">${OVERHEAD} = {'diff': [4.388999999997006e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.4030...</msg>
<status status="PASS" starttime="20201112 09:42:55.728" endtime="20201112 09:42:55.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.746" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.745" endtime="20201112 09:42:55.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.748" level="INFO">VALUE: [4.388999999997006e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.459000000001795e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.514000000000601e-06, 4.416000000000142e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.747" endtime="20201112 09:42:55.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.742" endtime="20201112 09:42:55.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.752" endtime="20201112 09:42:55.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.755" endtime="20201112 09:42:55.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.754" endtime="20201112 09:42:55.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.750" endtime="20201112 09:42:55.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.386" endtime="20201112 09:42:55.776"></status>
</kw>
<msg timestamp="20201112 09:42:55.776" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.784" endtime="20201112 09:42:55.800"></status>
</kw>
<msg timestamp="20201112 09:42:55.801" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.782" endtime="20201112 09:42:55.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.803" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.802" endtime="20201112 09:42:55.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.804" endtime="20201112 09:42:55.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.780" endtime="20201112 09:42:55.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.778" endtime="20201112 09:42:55.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.813" endtime="20201112 09:42:56.101"></status>
</kw>
<msg timestamp="20201112 09:42:56.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.811" endtime="20201112 09:42:56.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.105" endtime="20201112 09:42:56.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.113" endtime="20201112 09:42:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.809" endtime="20201112 09:42:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.807" endtime="20201112 09:42:56.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.120" level="INFO">${RESULT} = [{'time': 0.020527097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.020538028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.117" endtime="20201112 09:42:56.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.133" level="INFO">${OVERHEAD} = {'diff': [4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.3890...</msg>
<status status="PASS" starttime="20201112 09:42:56.121" endtime="20201112 09:42:56.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.137" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.136" endtime="20201112 09:42:56.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.140" level="INFO">VALUE: [4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.445000000002225e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.459000000001795e-06, 4.417000000003085e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.431000000002655e-06, 4.485999999997992e-06, 4.430999999999186e-06, 4.471999999998422e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.138" endtime="20201112 09:42:56.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.134" endtime="20201112 09:42:56.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.143" endtime="20201112 09:42:56.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.147" endtime="20201112 09:42:56.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.145" endtime="20201112 09:42:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.142" endtime="20201112 09:42:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.777" endtime="20201112 09:42:56.168"></status>
</kw>
<msg timestamp="20201112 09:42:56.168" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.175" endtime="20201112 09:42:56.192"></status>
</kw>
<msg timestamp="20201112 09:42:56.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.174" endtime="20201112 09:42:56.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.194" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.193" endtime="20201112 09:42:56.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.196" endtime="20201112 09:42:56.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.171" endtime="20201112 09:42:56.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.170" endtime="20201112 09:42:56.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.205" endtime="20201112 09:42:56.488"></status>
</kw>
<msg timestamp="20201112 09:42:56.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020888306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.203" endtime="20201112 09:42:56.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020888306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.493" endtime="20201112 09:42:56.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.501" endtime="20201112 09:42:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.200" endtime="20201112 09:42:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.199" endtime="20201112 09:42:56.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.507" level="INFO">${RESULT} = [{'time': 0.020892736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.020904097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.504" endtime="20201112 09:42:56.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.521" level="INFO">${OVERHEAD} = {'diff': [4.429999999999712e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.4160...</msg>
<status status="PASS" starttime="20201112 09:42:56.508" endtime="20201112 09:42:56.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.525" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.524" endtime="20201112 09:42:56.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.527" level="INFO">VALUE: [4.429999999999712e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.486000000001461e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.387999999997533e-06, 4.416000000000142e-06, 4.333000000002196e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.3749999999974365e-06, 4.444000000002751e-06, 4.360999999997867e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.401999999997103e-06, 4.431000000002655e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.526" endtime="20201112 09:42:56.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.522" endtime="20201112 09:42:56.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.531" endtime="20201112 09:42:56.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.534" endtime="20201112 09:42:56.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.533" endtime="20201112 09:42:56.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.529" endtime="20201112 09:42:56.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.168" endtime="20201112 09:42:56.555"></status>
</kw>
<msg timestamp="20201112 09:42:56.555" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.563" endtime="20201112 09:42:56.578"></status>
</kw>
<msg timestamp="20201112 09:42:56.578" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.561" endtime="20201112 09:42:56.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.580" endtime="20201112 09:42:56.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.582" endtime="20201112 09:42:56.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.559" endtime="20201112 09:42:56.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.557" endtime="20201112 09:42:56.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.591" endtime="20201112 09:42:56.877"></status>
</kw>
<msg timestamp="20201112 09:42:56.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.590" endtime="20201112 09:42:56.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.882" endtime="20201112 09:42:56.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.890" endtime="20201112 09:42:56.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.587" endtime="20201112 09:42:56.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.585" endtime="20201112 09:42:56.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.896" level="INFO">${RESULT} = [{'time': 0.020156931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020169111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.893" endtime="20201112 09:42:56.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.910" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.4720...</msg>
<status status="PASS" starttime="20201112 09:42:56.897" endtime="20201112 09:42:56.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.913" endtime="20201112 09:42:56.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.916" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.346999999998297e-06, 4.431000000002655e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.346999999998297e-06, 4.36200000000081e-06, 4.417000000003085e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.500000000001031e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.444000000002751e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.915" endtime="20201112 09:42:56.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.911" endtime="20201112 09:42:56.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.920" endtime="20201112 09:42:56.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.923" endtime="20201112 09:42:56.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.922" endtime="20201112 09:42:56.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.918" endtime="20201112 09:42:56.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.556" endtime="20201112 09:42:56.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.111" endtime="20201112 09:42:56.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.949" endtime="20201112 09:42:56.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.947" endtime="20201112 09:42:56.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.946" endtime="20201112 09:42:56.969"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:49.030" endtime="20201112 09:42:56.970" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.977" endtime="20201112 09:42:56.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.975" endtime="20201112 09:42:56.997"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.010" endtime="20201112 09:42:57.037"></status>
</kw>
<msg timestamp="20201112 09:42:57.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.009" endtime="20201112 09:42:57.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.039" endtime="20201112 09:42:57.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.044" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.041" endtime="20201112 09:42:57.044"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.006" endtime="20201112 09:42:57.045"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.004" endtime="20201112 09:42:57.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.003" endtime="20201112 09:42:57.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.050" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.049" endtime="20201112 09:42:57.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.047" endtime="20201112 09:42:57.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.002" endtime="20201112 09:42:57.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.001" endtime="20201112 09:42:57.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.051" endtime="20201112 09:42:57.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.000" endtime="20201112 09:42:57.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.998" endtime="20201112 09:42:57.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.974" endtime="20201112 09:42:57.054"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.063" endtime="20201112 09:42:57.091"></status>
</kw>
<msg timestamp="20201112 09:42:57.091" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.061" endtime="20201112 09:42:57.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.094" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.092" endtime="20201112 09:42:57.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.095" endtime="20201112 09:42:57.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.059" endtime="20201112 09:42:57.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.057" endtime="20201112 09:42:57.098"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.100" endtime="20201112 09:42:57.101"></status>
</kw>
<msg timestamp="20201112 09:42:57.102" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:57.099" endtime="20201112 09:42:57.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.106" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:57.105" endtime="20201112 09:42:57.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.108" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:57.107" endtime="20201112 09:42:57.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.103" endtime="20201112 09:42:57.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.113" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:57.112" endtime="20201112 09:42:57.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.115" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:57.114" endtime="20201112 09:42:57.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.109" endtime="20201112 09:42:57.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.122" endtime="20201112 09:42:57.410"></status>
</kw>
<msg timestamp="20201112 09:42:57.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080526181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080534083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.121" endtime="20201112 09:42:57.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080526181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080534083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.414" endtime="20201112 09:42:57.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.422" endtime="20201112 09:42:57.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.118" endtime="20201112 09:42:57.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.116" endtime="20201112 09:42:57.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.429" level="INFO">${RESULT} = [{'time': 0.080534083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902000000004072e-06, 'source_diff': 7.902000000004072e-06}, {'time': 0.080551806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:57.426" endtime="20201112 09:42:57.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.442" level="INFO">${OVERHEAD} = {'diff': [7.902000000004072e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.152999999996857e-06, 8.083000000005947e-06, 8.041999999999772e-06, 8.01400...</msg>
<status status="PASS" starttime="20201112 09:42:57.430" endtime="20201112 09:42:57.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.447" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:57.446" endtime="20201112 09:42:57.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.450" level="INFO">VALUE: [7.902000000004072e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.05600000000628e-06, 8.152999999996857e-06, 8.083000000005947e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.055999999992403e-06, 8.055000000006807e-06, 8.026999999993789e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.069999999998911e-06, 8.027000000007667e-06, 8.014000000000632e-06, 8.083999999991542e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.069000000013316e-06, 8.05600000000628e-06, 8.08400000000542e-06, 8.041000000000298e-06, 8.041999999999772e-06, 8.082999999992069e-06, 8.083999999991542e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.05600000000628e-06, 8.082999999992069e-06, 8.027999999993263e-06, 8.041999999999772e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.069000000013316e-06, 8.054999999992929e-06, 8.05600000000628e-06, 8.069999999998911e-06, 8.014000000000632e-06, 8.07000000001279e-06, 8.027999999993263e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.068999999999438e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.041000000000298e-06, 8.124999999997717e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.448" endtime="20201112 09:42:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.443" endtime="20201112 09:42:57.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.453" endtime="20201112 09:42:57.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.456" endtime="20201112 09:42:57.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.455" endtime="20201112 09:42:57.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.451" endtime="20201112 09:42:57.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.055" endtime="20201112 09:42:57.477"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:56.971" endtime="20201112 09:42:57.478" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.485" endtime="20201112 09:42:57.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.483" endtime="20201112 09:42:57.505"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.519" endtime="20201112 09:42:57.544"></status>
</kw>
<msg timestamp="20201112 09:42:57.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.517" endtime="20201112 09:42:57.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.546" endtime="20201112 09:42:57.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.548" endtime="20201112 09:42:57.551"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.514" endtime="20201112 09:42:57.551"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.511" endtime="20201112 09:42:57.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.510" endtime="20201112 09:42:57.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.556" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.555" endtime="20201112 09:42:57.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.553" endtime="20201112 09:42:57.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.509" endtime="20201112 09:42:57.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.509" endtime="20201112 09:42:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.557" endtime="20201112 09:42:57.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.507" endtime="20201112 09:42:57.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.506" endtime="20201112 09:42:57.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.482" endtime="20201112 09:42:57.560"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.570" endtime="20201112 09:42:57.651"></status>
</kw>
<msg timestamp="20201112 09:42:57.652" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.568" endtime="20201112 09:42:57.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.654" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.653" endtime="20201112 09:42:57.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.656" endtime="20201112 09:42:57.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.565" endtime="20201112 09:42:57.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.563" endtime="20201112 09:42:57.658"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.660" endtime="20201112 09:42:57.662"></status>
</kw>
<msg timestamp="20201112 09:42:57.662" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:57.659" endtime="20201112 09:42:57.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.666" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:57.665" endtime="20201112 09:42:57.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.668" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:57.667" endtime="20201112 09:42:57.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.663" endtime="20201112 09:42:57.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.673" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:57.672" endtime="20201112 09:42:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.675" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:57.674" endtime="20201112 09:42:57.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.670" endtime="20201112 09:42:57.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.682" endtime="20201112 09:42:57.976"></status>
</kw>
<msg timestamp="20201112 09:42:57.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076397736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076439306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.681" endtime="20201112 09:42:57.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076397736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076439306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.980" endtime="20201112 09:42:57.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.988" endtime="20201112 09:42:57.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.678" endtime="20201112 09:42:57.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.676" endtime="20201112 09:42:57.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.995" level="INFO">${RESULT} = [{'time': 0.076439306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.157000000000466e-05, 'source_diff': 4.157000000000466e-05}, {'time': 0.077681014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:57.991" endtime="20201112 09:42:57.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.008" level="INFO">${OVERHEAD} = {'diff': [4.157000000000466e-05, 4.1417000000001924e-05, 4.1417000000001924e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.145799999999422e-05, 4.147200000000073e-05, 4.147200000000073e-05, 4.14...</msg>
<status status="PASS" starttime="20201112 09:42:57.996" endtime="20201112 09:42:58.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.013" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:58.012" endtime="20201112 09:42:58.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.016" level="INFO">VALUE: [4.157000000000466e-05, 4.1417000000001924e-05, 4.1417000000001924e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.145799999999422e-05, 4.147200000000073e-05, 4.147200000000073e-05, 4.148599999999336e-05, 4.144399999998771e-05, 4.142999999999508e-05, 4.144400000000159e-05, 4.1375000000010154e-05, 4.149999999999987e-05, 4.1445000000001064e-05, 4.145799999999422e-05, 4.1458999999993695e-05, 4.1430999999994556e-05, 4.1554999999998676e-05, 4.14580000000081e-05, 4.14580000000081e-05, 4.143100000000843e-05, 4.149999999999987e-05, 4.147200000000073e-05, 4.138899999998891e-05, 4.148599999999336e-05, 4.1417000000001924e-05, 4.148600000000724e-05, 4.1445000000001064e-05, 4.147200000000073e-05, 4.1402999999995416e-05, 4.147200000000073e-05, 4.141600000000245e-05, 4.142999999999508e-05, 4.147200000000073e-05, 4.1430999999994556e-05, 4.1389000000002785e-05, 4.1417000000001924e-05, 4.1458999999993695e-05, 4.1430999999994556e-05, 4.1445000000001064e-05, 4.143000000000896e-05, 4.1458999999993695e-05, 4.143100000000843e-05, 4.1472999999986326e-05, 4.1485999999979484e-05, 4.143100000000843e-05, 4.1458999999993695e-05, 4.1389000000002785e-05, 4.138800000000331e-05]</msg>
<status status="PASS" starttime="20201112 09:42:58.014" endtime="20201112 09:42:58.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.009" endtime="20201112 09:42:58.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.019" endtime="20201112 09:42:58.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.022" endtime="20201112 09:42:58.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.021" endtime="20201112 09:42:58.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.017" endtime="20201112 09:42:58.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.561" endtime="20201112 09:42:58.043"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:57.479" endtime="20201112 09:42:58.043" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.051" endtime="20201112 09:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.049" endtime="20201112 09:42:58.071"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.085" endtime="20201112 09:42:58.107"></status>
</kw>
<msg timestamp="20201112 09:42:58.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.083" endtime="20201112 09:42:58.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.108" endtime="20201112 09:42:58.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.112" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:58.111" endtime="20201112 09:42:58.113"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.080" endtime="20201112 09:42:58.113"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.078" endtime="20201112 09:42:58.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.077" endtime="20201112 09:42:58.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.118" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.117" endtime="20201112 09:42:58.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.115" endtime="20201112 09:42:58.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.076" endtime="20201112 09:42:58.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.075" endtime="20201112 09:42:58.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.120" endtime="20201112 09:42:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.074" endtime="20201112 09:42:58.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.072" endtime="20201112 09:42:58.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.048" endtime="20201112 09:42:58.123"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.132" endtime="20201112 09:42:58.368"></status>
</kw>
<msg timestamp="20201112 09:42:58.368" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.130" endtime="20201112 09:42:58.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.371" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.369" endtime="20201112 09:42:58.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.372" endtime="20201112 09:42:58.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.128" endtime="20201112 09:42:58.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.125" endtime="20201112 09:42:58.374"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.377" endtime="20201112 09:42:58.378"></status>
</kw>
<msg timestamp="20201112 09:42:58.379" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.375" endtime="20201112 09:42:58.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.383" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.382" endtime="20201112 09:42:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.385" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.384" endtime="20201112 09:42:58.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.379" endtime="20201112 09:42:58.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.389" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.388" endtime="20201112 09:42:58.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.391" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.390" endtime="20201112 09:42:58.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.386" endtime="20201112 09:42:58.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.399" endtime="20201112 09:42:58.702"></status>
</kw>
<msg timestamp="20201112 09:42:58.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075656778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.397" endtime="20201112 09:42:58.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075656778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.706" endtime="20201112 09:42:58.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.714" endtime="20201112 09:42:58.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.394" endtime="20201112 09:42:58.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.393" endtime="20201112 09:42:58.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.721" level="INFO">${RESULT} = [{'time': 0.075733653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.687500000000402e-05, 'source_diff': 7.687500000000402e-05}, {'time': 0.080042236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.718" endtime="20201112 09:42:58.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.735" level="INFO">${OVERHEAD} = {'diff': [7.687500000000402e-05, 7.636099999999701e-05, 7.630599999999821e-05, 7.636099999999701e-05, 7.616700000000198e-05, 7.636099999999701e-05, 7.633299999999787e-05, 7.619499999998725e-05, 7.6332...</msg>
<status status="PASS" starttime="20201112 09:42:58.722" endtime="20201112 09:42:58.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.739" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:42:58.738" endtime="20201112 09:42:58.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.741" level="INFO">VALUE: [7.687500000000402e-05, 7.636099999999701e-05, 7.630599999999821e-05, 7.636099999999701e-05, 7.616700000000198e-05, 7.636099999999701e-05, 7.633299999999787e-05, 7.619499999998725e-05, 7.633299999999787e-05, 7.636099999999701e-05, 7.630599999999821e-05, 7.634700000000438e-05, 7.63750000000174e-05, 7.608300000000456e-05, 7.638900000001003e-05, 7.636099999999701e-05, 7.637499999998965e-05, 7.637499999998965e-05, 7.634800000000386e-05, 7.633399999998347e-05, 7.638900000001003e-05, 7.638899999998228e-05, 7.643000000001621e-05, 7.601399999998537e-05, 7.636099999999701e-05, 7.622199999998691e-05, 7.638899999998228e-05, 7.624999999999993e-05, 7.630599999999821e-05, 7.633300000001175e-05, 7.611100000001758e-05, 7.626399999999256e-05, 7.630599999999821e-05, 7.629199999997782e-05, 7.611100000001758e-05, 7.627700000001347e-05, 7.633300000001175e-05, 7.636100000002477e-05, 7.629200000000558e-05, 7.638900000001003e-05, 7.636099999999701e-05, 7.634699999997663e-05, 7.636099999996926e-05, 7.630600000002596e-05, 7.634699999997663e-05, 7.634800000000386e-05, 7.615299999996772e-05, 7.638900000001003e-05, 7.633400000001123e-05, 7.643000000001621e-05]</msg>
<status status="PASS" starttime="20201112 09:42:58.740" endtime="20201112 09:42:58.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.735" endtime="20201112 09:42:58.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.745" endtime="20201112 09:42:58.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.748" endtime="20201112 09:42:58.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.747" endtime="20201112 09:42:58.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.743" endtime="20201112 09:42:58.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.124" endtime="20201112 09:42:58.769"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:58.045" endtime="20201112 09:42:58.769" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.777" endtime="20201112 09:42:58.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.775" endtime="20201112 09:42:58.797"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.811" endtime="20201112 09:42:58.839"></status>
</kw>
<msg timestamp="20201112 09:42:58.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.809" endtime="20201112 09:42:58.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.840" endtime="20201112 09:42:58.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.845" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:58.843" endtime="20201112 09:42:58.845"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.806" endtime="20201112 09:42:58.846"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.804" endtime="20201112 09:42:58.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.802" endtime="20201112 09:42:58.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.850" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.850" endtime="20201112 09:42:58.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.848" endtime="20201112 09:42:58.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.801" endtime="20201112 09:42:58.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.801" endtime="20201112 09:42:58.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.853" endtime="20201112 09:42:58.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.799" endtime="20201112 09:42:58.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.798" endtime="20201112 09:42:58.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.774" endtime="20201112 09:42:58.855"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.864" endtime="20201112 09:42:58.886"></status>
</kw>
<msg timestamp="20201112 09:42:58.886" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.863" endtime="20201112 09:42:58.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.889" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.887" endtime="20201112 09:42:58.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.890" endtime="20201112 09:42:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.860" endtime="20201112 09:42:58.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.858" endtime="20201112 09:42:58.892"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.895" endtime="20201112 09:42:58.896"></status>
</kw>
<msg timestamp="20201112 09:42:58.897" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.893" endtime="20201112 09:42:58.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.901" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.900" endtime="20201112 09:42:58.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.903" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.902" endtime="20201112 09:42:58.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.897" endtime="20201112 09:42:58.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.908" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.907" endtime="20201112 09:42:58.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.909" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.909" endtime="20201112 09:42:58.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.904" endtime="20201112 09:42:58.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.920" endtime="20201112 09:42:59.205"></status>
</kw>
<msg timestamp="20201112 09:42:59.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.915" endtime="20201112 09:42:59.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079683806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079685278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.209" endtime="20201112 09:42:59.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.218" endtime="20201112 09:42:59.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.913" endtime="20201112 09:42:59.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.911" endtime="20201112 09:42:59.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.225" level="INFO">${RESULT} = [{'time': 0.079685278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.079700042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.222" endtime="20201112 09:42:59.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.238" level="INFO">${OVERHEAD} = {'diff': [1.4720000000023603e-06, 1.473000000001834e-06, 1.5139999999941312e-06, 1.4859999999949913e-06, 1.4589999999953251e-06, 1.4870000000083428e-06, 1.4859999999949913e-06, 1.4860000000088691e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:59.226" endtime="20201112 09:42:59.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.243" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:59.242" endtime="20201112 09:42:59.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.245" level="INFO">VALUE: [1.4720000000023603e-06, 1.473000000001834e-06, 1.5139999999941312e-06, 1.4859999999949913e-06, 1.4589999999953251e-06, 1.4870000000083428e-06, 1.4859999999949913e-06, 1.4860000000088691e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4579999999958515e-06, 1.514000000008009e-06, 1.4720000000023603e-06, 1.4579999999958515e-06, 1.4859999999949913e-06, 1.4450000000026941e-06, 1.4720000000023603e-06, 1.4859999999949913e-06, 1.4859999999949913e-06, 1.4860000000088691e-06, 1.4579999999958515e-06, 1.4859999999949913e-06, 1.4170000000035543e-06, 1.4860000000088691e-06, 1.4720000000023603e-06, 1.4860000000088691e-06, 1.4859999999949913e-06, 1.5139999999941312e-06, 1.4859999999949913e-06, 1.4160000000040807e-06, 1.541999999993271e-06, 1.473000000001834e-06, 1.4860000000088691e-06, 1.473000000001834e-06, 1.541999999993271e-06, 1.4170000000035543e-06, 1.4870000000083428e-06, 1.4719999999884825e-06, 1.3889999999905367e-06, 1.5000000000015001e-06, 1.4860000000088691e-06, 1.473000000001834e-06, 1.4860000000088691e-06, 1.4720000000023603e-06, 1.4860000000088691e-06, 1.4719999999884825e-06, 1.4860000000088691e-06, 1.4579999999958515e-06, 1.4860000000088691e-06, 1.4720000000023603e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.244" endtime="20201112 09:42:59.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.239" endtime="20201112 09:42:59.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.248" endtime="20201112 09:42:59.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.252" endtime="20201112 09:42:59.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.250" endtime="20201112 09:42:59.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.247" endtime="20201112 09:42:59.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.856" endtime="20201112 09:42:59.272"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:58.771" endtime="20201112 09:42:59.273" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.280" endtime="20201112 09:42:59.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.279" endtime="20201112 09:42:59.300"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.315" endtime="20201112 09:42:59.338"></status>
</kw>
<msg timestamp="20201112 09:42:59.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.313" endtime="20201112 09:42:59.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.339" endtime="20201112 09:42:59.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.344" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:59.342" endtime="20201112 09:42:59.344"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.309" endtime="20201112 09:42:59.345"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.307" endtime="20201112 09:42:59.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.306" endtime="20201112 09:42:59.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:59.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:59.349" endtime="20201112 09:42:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.347" endtime="20201112 09:42:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.305" endtime="20201112 09:42:59.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.304" endtime="20201112 09:42:59.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.352" endtime="20201112 09:42:59.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.303" endtime="20201112 09:42:59.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.301" endtime="20201112 09:42:59.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.277" endtime="20201112 09:42:59.354"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.363" endtime="20201112 09:42:59.446"></status>
</kw>
<msg timestamp="20201112 09:42:59.447" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.362" endtime="20201112 09:42:59.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.449" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.448" endtime="20201112 09:42:59.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.450" endtime="20201112 09:42:59.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.359" endtime="20201112 09:42:59.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.357" endtime="20201112 09:42:59.453"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.455" endtime="20201112 09:42:59.457"></status>
</kw>
<msg timestamp="20201112 09:42:59.457" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:59.454" endtime="20201112 09:42:59.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.461" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:59.460" endtime="20201112 09:42:59.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.463" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:59.462" endtime="20201112 09:42:59.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.458" endtime="20201112 09:42:59.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.468" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:59.467" endtime="20201112 09:42:59.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.470" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:59.469" endtime="20201112 09:42:59.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.465" endtime="20201112 09:42:59.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.477" endtime="20201112 09:42:59.770"></status>
</kw>
<msg timestamp="20201112 09:42:59.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074972431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074985139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.476" endtime="20201112 09:42:59.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074972431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074985139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.775" endtime="20201112 09:42:59.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.783" endtime="20201112 09:42:59.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.473" endtime="20201112 09:42:59.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.471" endtime="20201112 09:42:59.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.790" level="INFO">${RESULT} = [{'time': 0.074985139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.076236111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.787" endtime="20201112 09:42:59.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.803" level="INFO">${OVERHEAD} = {'diff': [1.2708000000000164e-05, 1.2693999999993655e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2667000000007866e-05, 1.2722000000006672e-05, 1.2722000000006672e-05, 1.2708999999999637e-05...</msg>
<status status="PASS" starttime="20201112 09:42:59.791" endtime="20201112 09:42:59.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.808" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:59.807" endtime="20201112 09:42:59.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.810" level="INFO">VALUE: [1.2708000000000164e-05, 1.2693999999993655e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2667000000007866e-05, 1.2722000000006672e-05, 1.2722000000006672e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2680000000001024e-05, 1.2708999999999637e-05, 1.2693999999993655e-05, 1.2708000000000164e-05, 1.2693999999993655e-05, 1.2721999999992795e-05, 1.2695000000007006e-05, 1.2693999999993655e-05, 1.2721999999992795e-05, 1.2666999999993989e-05, 1.2721999999992795e-05, 1.2708000000000164e-05, 1.2723000000006146e-05, 1.2694000000007533e-05, 1.2721999999992795e-05, 1.2723000000006146e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2694999999993128e-05, 1.2653000000001358e-05, 1.2721999999992795e-05, 1.2735999999999303e-05, 1.2721999999992795e-05, 1.2722000000006672e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2681000000000497e-05, 1.2708999999999637e-05, 1.2693999999993655e-05, 1.2694999999993128e-05, 1.2708000000000164e-05, 1.2639000000008727e-05, 1.2708999999999637e-05, 1.2680000000014902e-05, 1.2666999999993989e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2695000000007006e-05, 1.2694000000007533e-05, 1.2721999999992795e-05]</msg>
<status status="PASS" starttime="20201112 09:42:59.809" endtime="20201112 09:42:59.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.804" endtime="20201112 09:42:59.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.813" endtime="20201112 09:42:59.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.817" endtime="20201112 09:42:59.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.815" endtime="20201112 09:42:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.812" endtime="20201112 09:42:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.355" endtime="20201112 09:42:59.837"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:59.275" endtime="20201112 09:42:59.838" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.845" endtime="20201112 09:42:59.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.844" endtime="20201112 09:42:59.866"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.879" endtime="20201112 09:42:59.900"></status>
</kw>
<msg timestamp="20201112 09:42:59.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.877" endtime="20201112 09:42:59.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.902" endtime="20201112 09:42:59.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.907" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:59.905" endtime="20201112 09:42:59.907"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.874" endtime="20201112 09:42:59.908"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.872" endtime="20201112 09:42:59.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.871" endtime="20201112 09:42:59.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:59.912" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:59.912" endtime="20201112 09:42:59.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.910" endtime="20201112 09:42:59.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.870" endtime="20201112 09:42:59.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.869" endtime="20201112 09:42:59.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.914" endtime="20201112 09:42:59.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.868" endtime="20201112 09:42:59.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.866" endtime="20201112 09:42:59.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.843" endtime="20201112 09:42:59.917"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.926" endtime="20201112 09:43:00.161"></status>
</kw>
<msg timestamp="20201112 09:43:00.162" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.924" endtime="20201112 09:43:00.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.164" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.163" endtime="20201112 09:43:00.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.166" endtime="20201112 09:43:00.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.922" endtime="20201112 09:43:00.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.919" endtime="20201112 09:43:00.168"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.170" endtime="20201112 09:43:00.172"></status>
</kw>
<msg timestamp="20201112 09:43:00.172" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:00.169" endtime="20201112 09:43:00.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.176" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:00.175" endtime="20201112 09:43:00.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.178" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:00.177" endtime="20201112 09:43:00.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.173" endtime="20201112 09:43:00.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.183" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:00.182" endtime="20201112 09:43:00.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.185" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:00.184" endtime="20201112 09:43:00.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.180" endtime="20201112 09:43:00.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.193" endtime="20201112 09:43:00.485"></status>
</kw>
<msg timestamp="20201112 09:43:00.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075318139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.191" endtime="20201112 09:43:00.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075293986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075318139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.489" endtime="20201112 09:43:00.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.497" endtime="20201112 09:43:00.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.188" endtime="20201112 09:43:00.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.186" endtime="20201112 09:43:00.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.503" level="INFO">${RESULT} = [{'time': 0.075318139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415300000001286e-05, 'source_diff': 2.415300000001286e-05}, {'time': 0.079656597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.500" endtime="20201112 09:43:00.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.516" level="INFO">${OVERHEAD} = {'diff': [2.415300000001286e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.4263999999996066e-05, 2.418099999999812e-05, 2.419499999999075e-05, 2.4138999999992472e-05, 2.413900000000635e-05, 2.41...</msg>
<status status="PASS" starttime="20201112 09:43:00.504" endtime="20201112 09:43:00.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.521" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:00.520" endtime="20201112 09:43:00.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.523" level="INFO">VALUE: [2.415300000001286e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.4263999999996066e-05, 2.418099999999812e-05, 2.419499999999075e-05, 2.4138999999992472e-05, 2.413900000000635e-05, 2.4165999999992138e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.4138999999978594e-05, 2.4138999999978594e-05, 2.4181000000012e-05, 2.422299999998989e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.4180000000012525e-05, 2.4180000000012525e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.413900000000635e-05, 2.4180000000012525e-05, 2.412500000001372e-05, 2.4151999999999507e-05, 2.413900000000635e-05, 2.415299999999898e-05, 2.4138999999978594e-05, 2.4180000000012525e-05, 2.415299999999898e-05, 2.4223000000045403e-05, 2.4167000000019367e-05, 2.4152999999971225e-05, 2.4151999999999507e-05, 2.4151999999999507e-05, 2.4165999999992138e-05, 2.4139000000034105e-05, 2.4165999999992138e-05, 2.4138999999978594e-05]</msg>
<status status="PASS" starttime="20201112 09:43:00.522" endtime="20201112 09:43:00.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.517" endtime="20201112 09:43:00.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.527" endtime="20201112 09:43:00.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.530" endtime="20201112 09:43:00.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.528" endtime="20201112 09:43:00.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.525" endtime="20201112 09:43:00.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.918" endtime="20201112 09:43:00.551"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:59.840" endtime="20201112 09:43:00.552" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:38.704" endtime="20201112 09:43:00.559"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.625" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:00.633" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:01.777" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:00.624" endtime="20201112 09:43:01.777"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.780" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:01.779" endtime="20201112 09:43:01.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.622" endtime="20201112 09:43:01.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.783" endtime="20201112 09:43:01.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.781" endtime="20201112 09:43:01.969"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.982" endtime="20201112 09:43:02.009"></status>
</kw>
<msg timestamp="20201112 09:43:02.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw4...</msg>
<status status="PASS" starttime="20201112 09:43:01.980" endtime="20201112 09:43:02.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.012" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw4...</msg>
<status status="PASS" starttime="20201112 09:43:02.010" endtime="20201112 09:43:02.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.015" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.013" endtime="20201112 09:43:02.015"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:01.978" endtime="20201112 09:43:02.016"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:01.975" endtime="20201112 09:43:02.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.974" endtime="20201112 09:43:02.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.022" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.020" endtime="20201112 09:43:02.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.018" endtime="20201112 09:43:02.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.973" endtime="20201112 09:43:02.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.973" endtime="20201112 09:43:02.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.024" endtime="20201112 09:43:02.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.971" endtime="20201112 09:43:02.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.027" endtime="20201112 09:43:02.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.969" endtime="20201112 09:43:02.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.621" endtime="20201112 09:43:02.029"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.035" endtime="20201112 09:43:02.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.034" endtime="20201112 09:43:02.055"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.068" endtime="20201112 09:43:02.090"></status>
</kw>
<msg timestamp="20201112 09:43:02.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.067" endtime="20201112 09:43:02.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.093" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.092" endtime="20201112 09:43:02.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.097" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.095" endtime="20201112 09:43:02.097"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.064" endtime="20201112 09:43:02.098"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.062" endtime="20201112 09:43:02.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.061" endtime="20201112 09:43:02.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.103" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.102" endtime="20201112 09:43:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.100" endtime="20201112 09:43:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.060" endtime="20201112 09:43:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.059" endtime="20201112 09:43:02.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.104" endtime="20201112 09:43:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.058" endtime="20201112 09:43:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.056" endtime="20201112 09:43:02.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.032" endtime="20201112 09:43:02.107"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.121" endtime="20201112 09:43:02.139"></status>
</kw>
<msg timestamp="20201112 09:43:02.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.119" endtime="20201112 09:43:02.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.141" endtime="20201112 09:43:02.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.143" endtime="20201112 09:43:02.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.115" endtime="20201112 09:43:02.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.112" endtime="20201112 09:43:02.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.153" endtime="20201112 09:43:02.465"></status>
</kw>
<msg timestamp="20201112 09:43:02.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07659875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076604375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:02.151" endtime="20201112 09:43:02.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07659875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076604375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:02.470" endtime="20201112 09:43:02.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.478" endtime="20201112 09:43:02.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.148" endtime="20201112 09:43:02.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.147" endtime="20201112 09:43:02.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.485" level="INFO">${RESULT} = [{'time': 0.076604375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000009095e-06, 'source_diff': 5.625000000009095e-06}, {'time': 0.076619764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.482" endtime="20201112 09:43:02.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.499" level="INFO">${ACCURACY} = {'diff': [5.625000000009095e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.598000000009429e-06, 5.6249...</msg>
<status status="PASS" starttime="20201112 09:43:02.486" endtime="20201112 09:43:02.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.504" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.503" endtime="20201112 09:43:02.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.507" level="INFO">VALUE: [5.625000000009095e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.598000000009429e-06, 5.624999999995217e-06, 5.610999999988708e-06, 5.652999999994357e-06, 5.596999999996077e-06, 5.639000000001726e-06, 5.652999999994357e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.653000000008235e-06, 5.624999999995217e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.652999999994357e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.651999999994883e-06, 5.583000000003446e-06, 5.624999999995217e-06, 5.624999999995217e-06, 5.652000000008761e-06, 5.611000000002586e-06, 5.625000000009095e-06, 5.652999999994357e-06, 5.611000000002586e-06, 5.61200000000206e-06, 5.624999999995217e-06, 5.624999999995217e-06, 5.55600000000378e-06, 5.624999999995217e-06, 5.624999999995217e-06, 5.624999999995217e-06, 5.624999999995217e-06, 5.596999999996077e-06, 5.653000000008235e-06, 5.624999999995217e-06, 5.708000000007041e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.6379999999883745e-06, 5.624999999995217e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.505" endtime="20201112 09:43:02.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.500" endtime="20201112 09:43:02.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.510" endtime="20201112 09:43:02.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.514" endtime="20201112 09:43:02.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.512" endtime="20201112 09:43:02.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.508" endtime="20201112 09:43:02.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.111" endtime="20201112 09:43:02.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.110" endtime="20201112 09:43:02.535"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.544" endtime="20201112 09:43:02.564"></status>
</kw>
<msg timestamp="20201112 09:43:02.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.542" endtime="20201112 09:43:02.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.565" endtime="20201112 09:43:02.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.568" endtime="20201112 09:43:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.539" endtime="20201112 09:43:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.537" endtime="20201112 09:43:02.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.577" endtime="20201112 09:43:02.862"></status>
</kw>
<msg timestamp="20201112 09:43:02.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.576" endtime="20201112 09:43:02.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.866" endtime="20201112 09:43:02.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.875" endtime="20201112 09:43:02.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.573" endtime="20201112 09:43:02.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.571" endtime="20201112 09:43:02.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.882" level="INFO">${RESULT} = [{'time': 0.025199708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.025214764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.878" endtime="20201112 09:43:02.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.896" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625...</msg>
<status status="PASS" starttime="20201112 09:43:02.883" endtime="20201112 09:43:02.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.901" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.900" endtime="20201112 09:43:02.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.903" level="INFO">VALUE: [5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.6939999999970625e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.554999999997368e-06, 5.667000000000866e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.610999999999117e-06, 5.540999999997798e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.6939999999970625e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.61200000000206e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.902" endtime="20201112 09:43:02.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.897" endtime="20201112 09:43:02.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.907" endtime="20201112 09:43:02.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.910" endtime="20201112 09:43:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.909" endtime="20201112 09:43:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.905" endtime="20201112 09:43:02.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.536" endtime="20201112 09:43:02.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.535" endtime="20201112 09:43:02.931"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.940" endtime="20201112 09:43:02.960"></status>
</kw>
<msg timestamp="20201112 09:43:02.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.939" endtime="20201112 09:43:02.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.962" endtime="20201112 09:43:02.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.964" endtime="20201112 09:43:02.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.936" endtime="20201112 09:43:02.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.934" endtime="20201112 09:43:02.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.975" endtime="20201112 09:43:03.260"></status>
</kw>
<msg timestamp="20201112 09:43:03.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025380486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.973" endtime="20201112 09:43:03.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025380486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.264" endtime="20201112 09:43:03.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.273" endtime="20201112 09:43:03.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.970" endtime="20201112 09:43:03.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.969" endtime="20201112 09:43:03.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.280" level="INFO">${RESULT} = [{'time': 0.025386153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.025400889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.277" endtime="20201112 09:43:03.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.294" level="INFO">${ACCURACY} = {'diff': [5.667000000000866e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.61...</msg>
<status status="PASS" starttime="20201112 09:43:03.281" endtime="20201112 09:43:03.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.299" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.298" endtime="20201112 09:43:03.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.301" level="INFO">VALUE: [5.667000000000866e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.679999999997493e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.651999999998353e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.300" endtime="20201112 09:43:03.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.295" endtime="20201112 09:43:03.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.305" endtime="20201112 09:43:03.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.308" endtime="20201112 09:43:03.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.307" endtime="20201112 09:43:03.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.303" endtime="20201112 09:43:03.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.932" endtime="20201112 09:43:03.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.932" endtime="20201112 09:43:03.329"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.339" endtime="20201112 09:43:03.360"></status>
</kw>
<msg timestamp="20201112 09:43:03.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.337" endtime="20201112 09:43:03.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.362" endtime="20201112 09:43:03.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.365" endtime="20201112 09:43:03.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.334" endtime="20201112 09:43:03.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.332" endtime="20201112 09:43:03.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.375" endtime="20201112 09:43:03.660"></status>
</kw>
<msg timestamp="20201112 09:43:03.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024280875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.374" endtime="20201112 09:43:03.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024280875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.665" endtime="20201112 09:43:03.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.674" endtime="20201112 09:43:03.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.371" endtime="20201112 09:43:03.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.369" endtime="20201112 09:43:03.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.681" level="INFO">${RESULT} = [{'time': 0.024280875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.024294458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.677" endtime="20201112 09:43:03.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.696" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6250...</msg>
<status status="PASS" starttime="20201112 09:43:03.682" endtime="20201112 09:43:03.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.701" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.699" endtime="20201112 09:43:03.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.703" level="INFO">VALUE: [5.596999999999547e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.5979999999990204e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.582999999999977e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.679999999997493e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.681000000000436e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.679999999997493e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.702" endtime="20201112 09:43:03.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.697" endtime="20201112 09:43:03.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.706" endtime="20201112 09:43:03.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.710" endtime="20201112 09:43:03.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.708" endtime="20201112 09:43:03.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.705" endtime="20201112 09:43:03.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.330" endtime="20201112 09:43:03.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.330" endtime="20201112 09:43:03.731"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.740" endtime="20201112 09:43:03.758"></status>
</kw>
<msg timestamp="20201112 09:43:03.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.739" endtime="20201112 09:43:03.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.760" endtime="20201112 09:43:03.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.762" endtime="20201112 09:43:03.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.736" endtime="20201112 09:43:03.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.734" endtime="20201112 09:43:03.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.773" endtime="20201112 09:43:04.058"></status>
</kw>
<msg timestamp="20201112 09:43:04.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.771" endtime="20201112 09:43:04.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.062" endtime="20201112 09:43:04.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.071" endtime="20201112 09:43:04.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.769" endtime="20201112 09:43:04.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.767" endtime="20201112 09:43:04.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.078" level="INFO">${RESULT} = [{'time': 0.024558028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.024569931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:04.074" endtime="20201112 09:43:04.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.092" level="INFO">${ACCURACY} = {'diff': [5.666999999997396e-06, 5.5979999999990204e-06, 5.5839999999994505e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.638000000002252e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5....</msg>
<status status="PASS" starttime="20201112 09:43:04.079" endtime="20201112 09:43:04.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.097" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.095" endtime="20201112 09:43:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.099" level="INFO">VALUE: [5.666999999997396e-06, 5.5979999999990204e-06, 5.5839999999994505e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.638000000002252e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.555000000000837e-06, 5.667000000000866e-06, 5.597000000003016e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.681000000000436e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.665999999997923e-06, 5.695000000000006e-06, 5.569999999999881e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.6529999999978264e-06, 5.555000000000837e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.098" endtime="20201112 09:43:04.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.093" endtime="20201112 09:43:04.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.102" endtime="20201112 09:43:04.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.106" endtime="20201112 09:43:04.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.104" endtime="20201112 09:43:04.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.101" endtime="20201112 09:43:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.732" endtime="20201112 09:43:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.731" endtime="20201112 09:43:04.127"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.136" endtime="20201112 09:43:04.156"></status>
</kw>
<msg timestamp="20201112 09:43:04.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.135" endtime="20201112 09:43:04.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.158" endtime="20201112 09:43:04.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.160" endtime="20201112 09:43:04.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.132" endtime="20201112 09:43:04.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.130" endtime="20201112 09:43:04.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.182" endtime="20201112 09:43:04.467"></status>
</kw>
<msg timestamp="20201112 09:43:04.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02541825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:04.180" endtime="20201112 09:43:04.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02541825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:04.471" endtime="20201112 09:43:04.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.479" endtime="20201112 09:43:04.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.178" endtime="20201112 09:43:04.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.176" endtime="20201112 09:43:04.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.486" level="INFO">${RESULT} = [{'time': 0.025423875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.025434986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:04.483" endtime="20201112 09:43:04.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.500" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610...</msg>
<status status="PASS" starttime="20201112 09:43:04.487" endtime="20201112 09:43:04.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.505" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.504" endtime="20201112 09:43:04.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.508" level="INFO">VALUE: [5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.694000000000532e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.542000000000741e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.555000000000837e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.506" endtime="20201112 09:43:04.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.501" endtime="20201112 09:43:04.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.511" endtime="20201112 09:43:04.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.515" endtime="20201112 09:43:04.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.513" endtime="20201112 09:43:04.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.509" endtime="20201112 09:43:04.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.128" endtime="20201112 09:43:04.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.127" endtime="20201112 09:43:04.536"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.545" endtime="20201112 09:43:04.567"></status>
</kw>
<msg timestamp="20201112 09:43:04.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.543" endtime="20201112 09:43:04.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.569" endtime="20201112 09:43:04.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.572" endtime="20201112 09:43:04.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.540" endtime="20201112 09:43:04.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.538" endtime="20201112 09:43:04.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.582" endtime="20201112 09:43:04.868"></status>
</kw>
<msg timestamp="20201112 09:43:04.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023807361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.580" endtime="20201112 09:43:04.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023807361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.873" endtime="20201112 09:43:04.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.881" endtime="20201112 09:43:04.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.578" endtime="20201112 09:43:04.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.576" endtime="20201112 09:43:04.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.888" level="INFO">${RESULT} = [{'time': 0.023807361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023824208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:04.885" endtime="20201112 09:43:04.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.902" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.6389999999982565e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.5...</msg>
<status status="PASS" starttime="20201112 09:43:04.889" endtime="20201112 09:43:04.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.907" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.906" endtime="20201112 09:43:04.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.910" level="INFO">VALUE: [5.596999999999547e-06, 5.6389999999982565e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.540999999997798e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.665999999997923e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.908" endtime="20201112 09:43:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.903" endtime="20201112 09:43:04.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.913" endtime="20201112 09:43:04.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.916" endtime="20201112 09:43:04.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.915" endtime="20201112 09:43:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.911" endtime="20201112 09:43:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.537" endtime="20201112 09:43:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.536" endtime="20201112 09:43:04.938"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.947" endtime="20201112 09:43:04.964"></status>
</kw>
<msg timestamp="20201112 09:43:04.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.946" endtime="20201112 09:43:04.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.966" endtime="20201112 09:43:04.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.968" endtime="20201112 09:43:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.943" endtime="20201112 09:43:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.940" endtime="20201112 09:43:04.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.979" endtime="20201112 09:43:05.267"></status>
</kw>
<msg timestamp="20201112 09:43:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023906917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.977" endtime="20201112 09:43:05.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023901278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023906917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.272" endtime="20201112 09:43:05.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.280" endtime="20201112 09:43:05.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.975" endtime="20201112 09:43:05.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.973" endtime="20201112 09:43:05.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.287" level="INFO">${RESULT} = [{'time': 0.023906917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.023919653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.284" endtime="20201112 09:43:05.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.302" level="INFO">${ACCURACY} = {'diff': [5.6389999999982565e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.610...</msg>
<status status="PASS" starttime="20201112 09:43:05.288" endtime="20201112 09:43:05.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.307" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.306" endtime="20201112 09:43:05.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.309" level="INFO">VALUE: [5.6389999999982565e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 09:43:05.308" endtime="20201112 09:43:05.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.303" endtime="20201112 09:43:05.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.313" endtime="20201112 09:43:05.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.316" endtime="20201112 09:43:05.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.315" endtime="20201112 09:43:05.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.311" endtime="20201112 09:43:05.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.938" endtime="20201112 09:43:05.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.938" endtime="20201112 09:43:05.338"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.347" endtime="20201112 09:43:05.362"></status>
</kw>
<msg timestamp="20201112 09:43:05.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.345" endtime="20201112 09:43:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.363" endtime="20201112 09:43:05.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.366" endtime="20201112 09:43:05.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.342" endtime="20201112 09:43:05.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.340" endtime="20201112 09:43:05.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.377" endtime="20201112 09:43:05.663"></status>
</kw>
<msg timestamp="20201112 09:43:05.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02055425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:05.375" endtime="20201112 09:43:05.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02055425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:05.667" endtime="20201112 09:43:05.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.676" endtime="20201112 09:43:05.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.372" endtime="20201112 09:43:05.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.370" endtime="20201112 09:43:05.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.683" level="INFO">${RESULT} = [{'time': 0.02055425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.020564514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:05.679" endtime="20201112 09:43:05.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.696" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.638...</msg>
<status status="PASS" starttime="20201112 09:43:05.684" endtime="20201112 09:43:05.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.701" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.700" endtime="20201112 09:43:05.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.704" level="INFO">VALUE: [5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.58400000000292e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 09:43:05.702" endtime="20201112 09:43:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.697" endtime="20201112 09:43:05.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.707" endtime="20201112 09:43:05.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.711" endtime="20201112 09:43:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.709" endtime="20201112 09:43:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.706" endtime="20201112 09:43:05.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.339" endtime="20201112 09:43:05.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.338" endtime="20201112 09:43:05.732"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.741" endtime="20201112 09:43:05.763"></status>
</kw>
<msg timestamp="20201112 09:43:05.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.740" endtime="20201112 09:43:05.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.765" endtime="20201112 09:43:05.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.768" endtime="20201112 09:43:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.737" endtime="20201112 09:43:05.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.735" endtime="20201112 09:43:05.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.778" endtime="20201112 09:43:06.065"></status>
</kw>
<msg timestamp="20201112 09:43:06.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.777" endtime="20201112 09:43:06.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.070" endtime="20201112 09:43:06.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.078" endtime="20201112 09:43:06.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.774" endtime="20201112 09:43:06.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.772" endtime="20201112 09:43:06.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.085" level="INFO">${RESULT} = [{'time': 0.023183125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.023194361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.082" endtime="20201112 09:43:06.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.099" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.667000000000866e-06, 5.624999999998687e-06, 5.555000000000837e-06, 5.5690...</msg>
<status status="PASS" starttime="20201112 09:43:06.086" endtime="20201112 09:43:06.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.104" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.102" endtime="20201112 09:43:06.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.106" level="INFO">VALUE: [5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.667000000000866e-06, 5.624999999998687e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.680999999996966e-06, 5.596999999999547e-06, 5.679999999997493e-06, 5.653000000001296e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.541999999997271e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.105" endtime="20201112 09:43:06.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.100" endtime="20201112 09:43:06.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.110" endtime="20201112 09:43:06.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.114" endtime="20201112 09:43:06.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.112" endtime="20201112 09:43:06.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.108" endtime="20201112 09:43:06.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.733" endtime="20201112 09:43:06.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.732" endtime="20201112 09:43:06.135"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.144" endtime="20201112 09:43:06.160"></status>
</kw>
<msg timestamp="20201112 09:43:06.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.142" endtime="20201112 09:43:06.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.162" endtime="20201112 09:43:06.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.164" endtime="20201112 09:43:06.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.139" endtime="20201112 09:43:06.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.137" endtime="20201112 09:43:06.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.176" endtime="20201112 09:43:06.461"></status>
</kw>
<msg timestamp="20201112 09:43:06.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.174" endtime="20201112 09:43:06.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.465" endtime="20201112 09:43:06.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.473" endtime="20201112 09:43:06.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.171" endtime="20201112 09:43:06.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.169" endtime="20201112 09:43:06.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.480" level="INFO">${RESULT} = [{'time': 0.022551375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.022567319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.477" endtime="20201112 09:43:06.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.494" level="INFO">${ACCURACY} = {'diff': [5.6389999999982565e-06, 5.624999999998687e-06, 5.540999999997798e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610...</msg>
<status status="PASS" starttime="20201112 09:43:06.481" endtime="20201112 09:43:06.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.499" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.498" endtime="20201112 09:43:06.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.501" level="INFO">VALUE: [5.6389999999982565e-06, 5.624999999998687e-06, 5.540999999997798e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.556000000000311e-06, 5.695000000000006e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.500" endtime="20201112 09:43:06.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.495" endtime="20201112 09:43:06.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.505" endtime="20201112 09:43:06.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.509" endtime="20201112 09:43:06.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.507" endtime="20201112 09:43:06.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.503" endtime="20201112 09:43:06.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.136" endtime="20201112 09:43:06.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.135" endtime="20201112 09:43:06.530"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.539" endtime="20201112 09:43:06.558"></status>
</kw>
<msg timestamp="20201112 09:43:06.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.537" endtime="20201112 09:43:06.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.559" endtime="20201112 09:43:06.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.562" endtime="20201112 09:43:06.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.535" endtime="20201112 09:43:06.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.532" endtime="20201112 09:43:06.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.572" endtime="20201112 09:43:06.858"></status>
</kw>
<msg timestamp="20201112 09:43:06.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024192444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.571" endtime="20201112 09:43:06.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024192444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.862" endtime="20201112 09:43:06.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.871" endtime="20201112 09:43:06.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.568" endtime="20201112 09:43:06.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.566" endtime="20201112 09:43:06.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.878" level="INFO">${RESULT} = [{'time': 0.024198111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.024212708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.874" endtime="20201112 09:43:06.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.893" level="INFO">${ACCURACY} = {'diff': [5.667000000000866e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.597000000003016e-06, 5.5979...</msg>
<status status="PASS" starttime="20201112 09:43:06.879" endtime="20201112 09:43:06.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.897" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.896" endtime="20201112 09:43:06.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.900" level="INFO">VALUE: [5.667000000000866e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.597000000003016e-06, 5.5979999999990204e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.899" endtime="20201112 09:43:06.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.894" endtime="20201112 09:43:06.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.904" endtime="20201112 09:43:06.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.907" endtime="20201112 09:43:06.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.906" endtime="20201112 09:43:06.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.902" endtime="20201112 09:43:06.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.531" endtime="20201112 09:43:06.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.530" endtime="20201112 09:43:06.929"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.938" endtime="20201112 09:43:06.955"></status>
</kw>
<msg timestamp="20201112 09:43:06.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.936" endtime="20201112 09:43:06.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.957" endtime="20201112 09:43:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.959" endtime="20201112 09:43:06.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.933" endtime="20201112 09:43:06.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.931" endtime="20201112 09:43:06.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.970" endtime="20201112 09:43:07.255"></status>
</kw>
<msg timestamp="20201112 09:43:07.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.968" endtime="20201112 09:43:07.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.260" endtime="20201112 09:43:07.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.268" endtime="20201112 09:43:07.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.966" endtime="20201112 09:43:07.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.964" endtime="20201112 09:43:07.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.275" level="INFO">${RESULT} = [{'time': 0.022551986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.022563, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:07.272" endtime="20201112 09:43:07.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.289" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.555000000000837e-06, 5.65...</msg>
<status status="PASS" starttime="20201112 09:43:07.276" endtime="20201112 09:43:07.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.294" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.293" endtime="20201112 09:43:07.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.296" level="INFO">VALUE: [5.624999999998687e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.555000000000837e-06, 5.652000000001822e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.61200000000206e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.637999999998783e-06, 5.665999999997923e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.295" endtime="20201112 09:43:07.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.290" endtime="20201112 09:43:07.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.300" endtime="20201112 09:43:07.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.304" endtime="20201112 09:43:07.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.302" endtime="20201112 09:43:07.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.298" endtime="20201112 09:43:07.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.929" endtime="20201112 09:43:07.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.929" endtime="20201112 09:43:07.325"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.334" endtime="20201112 09:43:07.351"></status>
</kw>
<msg timestamp="20201112 09:43:07.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.332" endtime="20201112 09:43:07.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.352" endtime="20201112 09:43:07.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.355" endtime="20201112 09:43:07.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.329" endtime="20201112 09:43:07.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.327" endtime="20201112 09:43:07.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.366" endtime="20201112 09:43:07.652"></status>
</kw>
<msg timestamp="20201112 09:43:07.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023227917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.364" endtime="20201112 09:43:07.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023227917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.657" endtime="20201112 09:43:07.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.665" endtime="20201112 09:43:07.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.361" endtime="20201112 09:43:07.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.359" endtime="20201112 09:43:07.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.672" level="INFO">${RESULT} = [{'time': 0.023227917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.023243153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.669" endtime="20201112 09:43:07.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.686" level="INFO">${ACCURACY} = {'diff': [5.5839999999994505e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.610...</msg>
<status status="PASS" starttime="20201112 09:43:07.673" endtime="20201112 09:43:07.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.691" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.689" endtime="20201112 09:43:07.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.693" level="INFO">VALUE: [5.5839999999994505e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.680999999996966e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.554999999997368e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.61200000000206e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.6939999999970625e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.692" endtime="20201112 09:43:07.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.687" endtime="20201112 09:43:07.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.697" endtime="20201112 09:43:07.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.701" endtime="20201112 09:43:07.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.699" endtime="20201112 09:43:07.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.695" endtime="20201112 09:43:07.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.326" endtime="20201112 09:43:07.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.325" endtime="20201112 09:43:07.722"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.731" endtime="20201112 09:43:07.747"></status>
</kw>
<msg timestamp="20201112 09:43:07.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.729" endtime="20201112 09:43:07.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.749" endtime="20201112 09:43:07.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.751" endtime="20201112 09:43:07.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.726" endtime="20201112 09:43:07.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.724" endtime="20201112 09:43:07.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.762" endtime="20201112 09:43:08.049"></status>
</kw>
<msg timestamp="20201112 09:43:08.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.761" endtime="20201112 09:43:08.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.053" endtime="20201112 09:43:08.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.061" endtime="20201112 09:43:08.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.758" endtime="20201112 09:43:08.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.756" endtime="20201112 09:43:08.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.068" level="INFO">${RESULT} = [{'time': 0.023222375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.023234431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.065" endtime="20201112 09:43:08.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.081" level="INFO">${ACCURACY} = {'diff': [5.6389999999982565e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5....</msg>
<status status="PASS" starttime="20201112 09:43:08.069" endtime="20201112 09:43:08.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.086" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.085" endtime="20201112 09:43:08.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.089" level="INFO">VALUE: [5.6389999999982565e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.665999999997923e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.651999999998353e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.61200000000206e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.638000000002252e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.087" endtime="20201112 09:43:08.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.082" endtime="20201112 09:43:08.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.092" endtime="20201112 09:43:08.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.096" endtime="20201112 09:43:08.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.094" endtime="20201112 09:43:08.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.090" endtime="20201112 09:43:08.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.723" endtime="20201112 09:43:08.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.722" endtime="20201112 09:43:08.117"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.126" endtime="20201112 09:43:08.147"></status>
</kw>
<msg timestamp="20201112 09:43:08.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.124" endtime="20201112 09:43:08.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.148" endtime="20201112 09:43:08.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.151" endtime="20201112 09:43:08.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.122" endtime="20201112 09:43:08.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.120" endtime="20201112 09:43:08.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.161" endtime="20201112 09:43:08.446"></status>
</kw>
<msg timestamp="20201112 09:43:08.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.159" endtime="20201112 09:43:08.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.450" endtime="20201112 09:43:08.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.459" endtime="20201112 09:43:08.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.157" endtime="20201112 09:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.155" endtime="20201112 09:43:08.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.465" level="INFO">${RESULT} = [{'time': 0.024635764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.024646472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.462" endtime="20201112 09:43:08.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.479" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.5410...</msg>
<status status="PASS" starttime="20201112 09:43:08.466" endtime="20201112 09:43:08.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.484" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.483" endtime="20201112 09:43:08.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.486" level="INFO">VALUE: [5.611000000002586e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.541000000001267e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.61200000000206e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.708000000000102e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.721999999999672e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.485" endtime="20201112 09:43:08.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.480" endtime="20201112 09:43:08.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.490" endtime="20201112 09:43:08.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.493" endtime="20201112 09:43:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.492" endtime="20201112 09:43:08.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.488" endtime="20201112 09:43:08.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.118" endtime="20201112 09:43:08.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.117" endtime="20201112 09:43:08.514"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.523" endtime="20201112 09:43:08.542"></status>
</kw>
<msg timestamp="20201112 09:43:08.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.521" endtime="20201112 09:43:08.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.543" endtime="20201112 09:43:08.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.546" endtime="20201112 09:43:08.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.519" endtime="20201112 09:43:08.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.517" endtime="20201112 09:43:08.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.556" endtime="20201112 09:43:08.840"></status>
</kw>
<msg timestamp="20201112 09:43:08.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02428975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:08.554" endtime="20201112 09:43:08.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02428975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:08.845" endtime="20201112 09:43:08.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.853" endtime="20201112 09:43:08.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.552" endtime="20201112 09:43:08.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.550" endtime="20201112 09:43:08.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.859" level="INFO">${RESULT} = [{'time': 0.024295375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.024308542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.856" endtime="20201112 09:43:08.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.873" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6110...</msg>
<status status="PASS" starttime="20201112 09:43:08.860" endtime="20201112 09:43:08.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.877" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.876" endtime="20201112 09:43:08.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.880" level="INFO">VALUE: [5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.638000000002252e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.555999999996841e-06, 5.680000000000962e-06, 5.708000000000102e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.878" endtime="20201112 09:43:08.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.874" endtime="20201112 09:43:08.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.883" endtime="20201112 09:43:08.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.887" endtime="20201112 09:43:08.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.885" endtime="20201112 09:43:08.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.882" endtime="20201112 09:43:08.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.515" endtime="20201112 09:43:08.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.515" endtime="20201112 09:43:08.908"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.916" endtime="20201112 09:43:08.937"></status>
</kw>
<msg timestamp="20201112 09:43:08.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.915" endtime="20201112 09:43:08.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.938" endtime="20201112 09:43:08.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.941" endtime="20201112 09:43:08.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.912" endtime="20201112 09:43:08.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.910" endtime="20201112 09:43:08.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.951" endtime="20201112 09:43:09.236"></status>
</kw>
<msg timestamp="20201112 09:43:09.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:08.949" endtime="20201112 09:43:09.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:09.241" endtime="20201112 09:43:09.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.249" endtime="20201112 09:43:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.947" endtime="20201112 09:43:09.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.945" endtime="20201112 09:43:09.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.256" level="INFO">${RESULT} = [{'time': 0.0228205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022833181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:09.252" endtime="20201112 09:43:09.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.269" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.61200000000206e-06, 5.694000000000532e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.624999...</msg>
<status status="PASS" starttime="20201112 09:43:09.257" endtime="20201112 09:43:09.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.273" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.272" endtime="20201112 09:43:09.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.276" level="INFO">VALUE: [5.639000000001726e-06, 5.61200000000206e-06, 5.694000000000532e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.274" endtime="20201112 09:43:09.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.270" endtime="20201112 09:43:09.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.284" endtime="20201112 09:43:09.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.287" endtime="20201112 09:43:09.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.286" endtime="20201112 09:43:09.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.282" endtime="20201112 09:43:09.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.908" endtime="20201112 09:43:09.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.908" endtime="20201112 09:43:09.308"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.317" endtime="20201112 09:43:09.336"></status>
</kw>
<msg timestamp="20201112 09:43:09.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.316" endtime="20201112 09:43:09.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.338" endtime="20201112 09:43:09.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.340" endtime="20201112 09:43:09.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.313" endtime="20201112 09:43:09.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.311" endtime="20201112 09:43:09.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.350" endtime="20201112 09:43:09.638"></status>
</kw>
<msg timestamp="20201112 09:43:09.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.349" endtime="20201112 09:43:09.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.642" endtime="20201112 09:43:09.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.650" endtime="20201112 09:43:09.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.346" endtime="20201112 09:43:09.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.344" endtime="20201112 09:43:09.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.657" level="INFO">${RESULT} = [{'time': 0.023895736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.023912333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.653" endtime="20201112 09:43:09.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.670" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.61200000000206e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.6529999999978264e-06, 5.6390...</msg>
<status status="PASS" starttime="20201112 09:43:09.658" endtime="20201112 09:43:09.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.674" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.673" endtime="20201112 09:43:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.677" level="INFO">VALUE: [5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.61200000000206e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.569000000000407e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.665999999997923e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.695000000000006e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.676" endtime="20201112 09:43:09.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.671" endtime="20201112 09:43:09.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.681" endtime="20201112 09:43:09.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.684" endtime="20201112 09:43:09.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.682" endtime="20201112 09:43:09.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.679" endtime="20201112 09:43:09.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.309" endtime="20201112 09:43:09.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.309" endtime="20201112 09:43:09.705"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.713" endtime="20201112 09:43:09.733"></status>
</kw>
<msg timestamp="20201112 09:43:09.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.712" endtime="20201112 09:43:09.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.734" endtime="20201112 09:43:09.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.737" endtime="20201112 09:43:09.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.709" endtime="20201112 09:43:09.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.707" endtime="20201112 09:43:09.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.747" endtime="20201112 09:43:10.031"></status>
</kw>
<msg timestamp="20201112 09:43:10.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.745" endtime="20201112 09:43:10.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.035" endtime="20201112 09:43:10.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.043" endtime="20201112 09:43:10.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.742" endtime="20201112 09:43:10.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.741" endtime="20201112 09:43:10.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.050" level="INFO">${RESULT} = [{'time': 0.024338722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.024353139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.047" endtime="20201112 09:43:10.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.064" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.556000000000311e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.666000000001392e-06, 5.6249...</msg>
<status status="PASS" starttime="20201112 09:43:10.051" endtime="20201112 09:43:10.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.069" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.068" endtime="20201112 09:43:10.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.071" level="INFO">VALUE: [5.639000000001726e-06, 5.556000000000311e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.681000000000436e-06, 5.5979999999990204e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.680999999996966e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.597000000003016e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.555000000000837e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 09:43:10.070" endtime="20201112 09:43:10.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.065" endtime="20201112 09:43:10.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.075" endtime="20201112 09:43:10.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.078" endtime="20201112 09:43:10.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.077" endtime="20201112 09:43:10.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.073" endtime="20201112 09:43:10.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.706" endtime="20201112 09:43:10.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.705" endtime="20201112 09:43:10.099"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.108" endtime="20201112 09:43:10.128"></status>
</kw>
<msg timestamp="20201112 09:43:10.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.106" endtime="20201112 09:43:10.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.130" endtime="20201112 09:43:10.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.132" endtime="20201112 09:43:10.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.104" endtime="20201112 09:43:10.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.102" endtime="20201112 09:43:10.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.142" endtime="20201112 09:43:10.427"></status>
</kw>
<msg timestamp="20201112 09:43:10.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:10.141" endtime="20201112 09:43:10.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:10.431" endtime="20201112 09:43:10.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.439" endtime="20201112 09:43:10.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.138" endtime="20201112 09:43:10.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.137" endtime="20201112 09:43:10.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.446" level="INFO">${RESULT} = [{'time': 0.021704111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.021714778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.443" endtime="20201112 09:43:10.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.459" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.61099...</msg>
<status status="PASS" starttime="20201112 09:43:10.447" endtime="20201112 09:43:10.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.464" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.463" endtime="20201112 09:43:10.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.466" level="INFO">VALUE: [5.611000000002586e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.541000000001267e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.59800000000249e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201112 09:43:10.465" endtime="20201112 09:43:10.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.460" endtime="20201112 09:43:10.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.470" endtime="20201112 09:43:10.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.473" endtime="20201112 09:43:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.472" endtime="20201112 09:43:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.468" endtime="20201112 09:43:10.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.100" endtime="20201112 09:43:10.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.100" endtime="20201112 09:43:10.494"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.503" endtime="20201112 09:43:10.521"></status>
</kw>
<msg timestamp="20201112 09:43:10.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.501" endtime="20201112 09:43:10.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.522" endtime="20201112 09:43:10.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.525" endtime="20201112 09:43:10.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.499" endtime="20201112 09:43:10.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.497" endtime="20201112 09:43:10.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.535" endtime="20201112 09:43:10.820"></status>
</kw>
<msg timestamp="20201112 09:43:10.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023714653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.533" endtime="20201112 09:43:10.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023714653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.824" endtime="20201112 09:43:10.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.832" endtime="20201112 09:43:10.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.531" endtime="20201112 09:43:10.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.529" endtime="20201112 09:43:10.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.839" level="INFO">${RESULT} = [{'time': 0.023714653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.023729875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.835" endtime="20201112 09:43:10.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.852" level="INFO">${ACCURACY} = {'diff': [5.681000000000436e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.58...</msg>
<status status="PASS" starttime="20201112 09:43:10.840" endtime="20201112 09:43:10.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.857" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.855" endtime="20201112 09:43:10.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.859" level="INFO">VALUE: [5.681000000000436e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.58400000000292e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 09:43:10.858" endtime="20201112 09:43:10.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.853" endtime="20201112 09:43:10.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.863" endtime="20201112 09:43:10.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.866" endtime="20201112 09:43:10.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.864" endtime="20201112 09:43:10.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.861" endtime="20201112 09:43:10.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.495" endtime="20201112 09:43:10.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.495" endtime="20201112 09:43:10.887"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.895" endtime="20201112 09:43:10.913"></status>
</kw>
<msg timestamp="20201112 09:43:10.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.894" endtime="20201112 09:43:10.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.915" endtime="20201112 09:43:10.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.917" endtime="20201112 09:43:10.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.891" endtime="20201112 09:43:10.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.889" endtime="20201112 09:43:10.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.927" endtime="20201112 09:43:11.215"></status>
</kw>
<msg timestamp="20201112 09:43:11.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:10.926" endtime="20201112 09:43:11.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:11.220" endtime="20201112 09:43:11.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.228" endtime="20201112 09:43:11.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.923" endtime="20201112 09:43:11.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.922" endtime="20201112 09:43:11.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.235" level="INFO">${RESULT} = [{'time': 0.02297675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.022993403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:11.231" endtime="20201112 09:43:11.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.248" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.6529999999978264e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.610...</msg>
<status status="PASS" starttime="20201112 09:43:11.236" endtime="20201112 09:43:11.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.253" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.252" endtime="20201112 09:43:11.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.256" level="INFO">VALUE: [5.625000000002156e-06, 5.6529999999978264e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.541000000001267e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.679999999997493e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.59800000000249e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.6529999999978264e-06]</msg>
<status status="PASS" starttime="20201112 09:43:11.254" endtime="20201112 09:43:11.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.249" endtime="20201112 09:43:11.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.259" endtime="20201112 09:43:11.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.263" endtime="20201112 09:43:11.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.261" endtime="20201112 09:43:11.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.258" endtime="20201112 09:43:11.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.888" endtime="20201112 09:43:11.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.887" endtime="20201112 09:43:11.284"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.293" endtime="20201112 09:43:11.310"></status>
</kw>
<msg timestamp="20201112 09:43:11.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.291" endtime="20201112 09:43:11.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.311" endtime="20201112 09:43:11.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.314" endtime="20201112 09:43:11.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.288" endtime="20201112 09:43:11.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.286" endtime="20201112 09:43:11.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.324" endtime="20201112 09:43:11.612"></status>
</kw>
<msg timestamp="20201112 09:43:11.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.323" endtime="20201112 09:43:11.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.616" endtime="20201112 09:43:11.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.624" endtime="20201112 09:43:11.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.320" endtime="20201112 09:43:11.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.318" endtime="20201112 09:43:11.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.631" level="INFO">${RESULT} = [{'time': 0.022989889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.023000292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.627" endtime="20201112 09:43:11.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.645" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.63...</msg>
<status status="PASS" starttime="20201112 09:43:11.632" endtime="20201112 09:43:11.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.649" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.648" endtime="20201112 09:43:11.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.652" level="INFO">VALUE: [5.596999999999547e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.542000000000741e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.721999999999672e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.708000000000102e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.665999999997923e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:11.651" endtime="20201112 09:43:11.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.646" endtime="20201112 09:43:11.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.656" endtime="20201112 09:43:11.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.659" endtime="20201112 09:43:11.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.657" endtime="20201112 09:43:11.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.654" endtime="20201112 09:43:11.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.285" endtime="20201112 09:43:11.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.284" endtime="20201112 09:43:11.680"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.688" endtime="20201112 09:43:11.706"></status>
</kw>
<msg timestamp="20201112 09:43:11.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.687" endtime="20201112 09:43:11.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.708" endtime="20201112 09:43:11.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.710" endtime="20201112 09:43:11.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.684" endtime="20201112 09:43:11.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.682" endtime="20201112 09:43:11.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.720" endtime="20201112 09:43:12.006"></status>
</kw>
<msg timestamp="20201112 09:43:12.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0237405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023746125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:11.719" endtime="20201112 09:43:12.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0237405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023746125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:12.010" endtime="20201112 09:43:12.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.019" endtime="20201112 09:43:12.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.716" endtime="20201112 09:43:12.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.715" endtime="20201112 09:43:12.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.025" level="INFO">${RESULT} = [{'time': 0.023746125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.023758708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.022" endtime="20201112 09:43:12.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.039" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.65...</msg>
<status status="PASS" starttime="20201112 09:43:12.026" endtime="20201112 09:43:12.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.043" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.042" endtime="20201112 09:43:12.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.045" level="INFO">VALUE: [5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.651999999998353e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.6389999999982565e-06, 5.597000000003016e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.540999999997798e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.044" endtime="20201112 09:43:12.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.039" endtime="20201112 09:43:12.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.049" endtime="20201112 09:43:12.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.052" endtime="20201112 09:43:12.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.051" endtime="20201112 09:43:12.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.047" endtime="20201112 09:43:12.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.681" endtime="20201112 09:43:12.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.680" endtime="20201112 09:43:12.073"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.082" endtime="20201112 09:43:12.099"></status>
</kw>
<msg timestamp="20201112 09:43:12.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.081" endtime="20201112 09:43:12.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.101" endtime="20201112 09:43:12.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.103" endtime="20201112 09:43:12.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.078" endtime="20201112 09:43:12.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.076" endtime="20201112 09:43:12.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.113" endtime="20201112 09:43:12.400"></status>
</kw>
<msg timestamp="20201112 09:43:12.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.112" endtime="20201112 09:43:12.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.405" endtime="20201112 09:43:12.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.413" endtime="20201112 09:43:12.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.109" endtime="20201112 09:43:12.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.107" endtime="20201112 09:43:12.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.419" level="INFO">${RESULT} = [{'time': 0.022147292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.022162889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.416" endtime="20201112 09:43:12.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.433" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.653000000001296e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.6110...</msg>
<status status="PASS" starttime="20201112 09:43:12.420" endtime="20201112 09:43:12.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.437" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.436" endtime="20201112 09:43:12.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.440" level="INFO">VALUE: [5.610999999999117e-06, 5.653000000001296e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.653000000001296e-06, 5.637999999998783e-06, 5.7079999999966324e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.438" endtime="20201112 09:43:12.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.434" endtime="20201112 09:43:12.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.443" endtime="20201112 09:43:12.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.447" endtime="20201112 09:43:12.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.445" endtime="20201112 09:43:12.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.442" endtime="20201112 09:43:12.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.074" endtime="20201112 09:43:12.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.074" endtime="20201112 09:43:12.468"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.476" endtime="20201112 09:43:12.497"></status>
</kw>
<msg timestamp="20201112 09:43:12.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.475" endtime="20201112 09:43:12.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.498" endtime="20201112 09:43:12.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.501" endtime="20201112 09:43:12.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.472" endtime="20201112 09:43:12.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.470" endtime="20201112 09:43:12.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.511" endtime="20201112 09:43:12.798"></status>
</kw>
<msg timestamp="20201112 09:43:12.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.509" endtime="20201112 09:43:12.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024763181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.802" endtime="20201112 09:43:12.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.810" endtime="20201112 09:43:12.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.507" endtime="20201112 09:43:12.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.505" endtime="20201112 09:43:12.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.817" level="INFO">${RESULT} = [{'time': 0.024763181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.024773681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:12.813" endtime="20201112 09:43:12.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.830" level="INFO">${ACCURACY} = {'diff': [5.5839999999994505e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.62...</msg>
<status status="PASS" starttime="20201112 09:43:12.818" endtime="20201112 09:43:12.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.834" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.833" endtime="20201112 09:43:12.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.837" level="INFO">VALUE: [5.5839999999994505e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.61200000000206e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.5979999999990204e-06]</msg>
<status status="PASS" starttime="20201112 09:43:12.836" endtime="20201112 09:43:12.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.831" endtime="20201112 09:43:12.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.840" endtime="20201112 09:43:12.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.844" endtime="20201112 09:43:12.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.842" endtime="20201112 09:43:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.839" endtime="20201112 09:43:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.469" endtime="20201112 09:43:12.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.468" endtime="20201112 09:43:12.865"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.873" endtime="20201112 09:43:12.892"></status>
</kw>
<msg timestamp="20201112 09:43:12.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.872" endtime="20201112 09:43:12.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.894" endtime="20201112 09:43:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.896" endtime="20201112 09:43:12.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.869" endtime="20201112 09:43:12.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.867" endtime="20201112 09:43:12.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.906" endtime="20201112 09:43:13.190"></status>
</kw>
<msg timestamp="20201112 09:43:13.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024444028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.905" endtime="20201112 09:43:13.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024444028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.194" endtime="20201112 09:43:13.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.202" endtime="20201112 09:43:13.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.902" endtime="20201112 09:43:13.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.900" endtime="20201112 09:43:13.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.209" level="INFO">${RESULT} = [{'time': 0.024449639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.024460486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.206" endtime="20201112 09:43:13.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.223" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.6389...</msg>
<status status="PASS" starttime="20201112 09:43:13.210" endtime="20201112 09:43:13.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.228" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.227" endtime="20201112 09:43:13.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.230" level="INFO">VALUE: [5.610999999999117e-06, 5.667000000000866e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.61200000000206e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.61200000000206e-06, 5.666000000001392e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.610999999999117e-06, 5.679999999997493e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201112 09:43:13.229" endtime="20201112 09:43:13.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.224" endtime="20201112 09:43:13.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.234" endtime="20201112 09:43:13.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.238" endtime="20201112 09:43:13.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.236" endtime="20201112 09:43:13.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.232" endtime="20201112 09:43:13.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.866" endtime="20201112 09:43:13.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.865" endtime="20201112 09:43:13.258"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.267" endtime="20201112 09:43:13.284"></status>
</kw>
<msg timestamp="20201112 09:43:13.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.265" endtime="20201112 09:43:13.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.286" endtime="20201112 09:43:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.288" endtime="20201112 09:43:13.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.263" endtime="20201112 09:43:13.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.261" endtime="20201112 09:43:13.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.298" endtime="20201112 09:43:13.586"></status>
</kw>
<msg timestamp="20201112 09:43:13.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:13.297" endtime="20201112 09:43:13.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:13.596" endtime="20201112 09:43:13.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.614" endtime="20201112 09:43:13.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.294" endtime="20201112 09:43:13.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.292" endtime="20201112 09:43:13.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.628" level="INFO">${RESULT} = [{'time': 0.0227645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.022776625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:13.621" endtime="20201112 09:43:13.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.658" level="INFO">${ACCURACY} = {'diff': [5.653000000001296e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.61...</msg>
<status status="PASS" starttime="20201112 09:43:13.630" endtime="20201112 09:43:13.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.667" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.665" endtime="20201112 09:43:13.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.672" level="INFO">VALUE: [5.653000000001296e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.638000000002252e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.665999999997923e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201112 09:43:13.669" endtime="20201112 09:43:13.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.660" endtime="20201112 09:43:13.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.678" endtime="20201112 09:43:13.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.681" endtime="20201112 09:43:13.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.680" endtime="20201112 09:43:13.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.676" endtime="20201112 09:43:13.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.259" endtime="20201112 09:43:13.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.259" endtime="20201112 09:43:13.702"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.711" endtime="20201112 09:43:13.728"></status>
</kw>
<msg timestamp="20201112 09:43:13.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.709" endtime="20201112 09:43:13.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.730" endtime="20201112 09:43:13.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.732" endtime="20201112 09:43:13.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.707" endtime="20201112 09:43:13.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.705" endtime="20201112 09:43:13.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.742" endtime="20201112 09:43:14.027"></status>
</kw>
<msg timestamp="20201112 09:43:14.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.741" endtime="20201112 09:43:14.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.031" endtime="20201112 09:43:14.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.039" endtime="20201112 09:43:14.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.738" endtime="20201112 09:43:14.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.737" endtime="20201112 09:43:14.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.046" level="INFO">${RESULT} = [{'time': 0.020877167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.020888264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:14.042" endtime="20201112 09:43:14.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.059" level="INFO">${ACCURACY} = {'diff': [5.6389999999982565e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.65...</msg>
<status status="PASS" starttime="20201112 09:43:14.047" endtime="20201112 09:43:14.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.064" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.063" endtime="20201112 09:43:14.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.066" level="INFO">VALUE: [5.6389999999982565e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.651999999998353e-06, 5.556000000000311e-06, 5.680000000000962e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.652000000001822e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.5979999999990204e-06, 5.680999999996966e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.637999999998783e-06]</msg>
<status status="PASS" starttime="20201112 09:43:14.065" endtime="20201112 09:43:14.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.060" endtime="20201112 09:43:14.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.070" endtime="20201112 09:43:14.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.073" endtime="20201112 09:43:14.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.072" endtime="20201112 09:43:14.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.068" endtime="20201112 09:43:14.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.703" endtime="20201112 09:43:14.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.703" endtime="20201112 09:43:14.094"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.103" endtime="20201112 09:43:14.119"></status>
</kw>
<msg timestamp="20201112 09:43:14.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.101" endtime="20201112 09:43:14.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.120" endtime="20201112 09:43:14.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.123" endtime="20201112 09:43:14.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.099" endtime="20201112 09:43:14.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.097" endtime="20201112 09:43:14.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.133" endtime="20201112 09:43:14.418"></status>
</kw>
<msg timestamp="20201112 09:43:14.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.131" endtime="20201112 09:43:14.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.422" endtime="20201112 09:43:14.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.431" endtime="20201112 09:43:14.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.129" endtime="20201112 09:43:14.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.127" endtime="20201112 09:43:14.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.437" level="INFO">${RESULT} = [{'time': 0.021140194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0485999999999708e-05, 'source_diff': 3.0485999999999708e-05}, {'time': 0.021169972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:14.434" endtime="20201112 09:43:14.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.451" level="INFO">${ACCURACY} = {'diff': [3.0485999999999708e-05, 2.281900000000031e-05, 1.998699999999909e-05, 2.093100000000181e-05, 2.191699999999977e-05, 2.5735999999998427e-05, 2.284699999999945e-05, 2.188900000000063e-05, 2.09...</msg>
<status status="PASS" starttime="20201112 09:43:14.438" endtime="20201112 09:43:14.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.455" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.454" endtime="20201112 09:43:14.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.458" level="INFO">VALUE: [3.0485999999999708e-05, 2.281900000000031e-05, 1.998699999999909e-05, 2.093100000000181e-05, 2.191699999999977e-05, 2.5735999999998427e-05, 2.284699999999945e-05, 2.188900000000063e-05, 2.091699999999877e-05, 2.095899999999748e-05, 2.4777000000000132e-05, 2.0971999999997576e-05, 2.0929999999998866e-05, 1.9999999999999185e-05, 2.288900000000163e-05, 1.9972000000000045e-05, 2.4777000000000132e-05, 2.469499999999819e-05, 2.3777999999998606e-05, 2.1916000000000296e-05, 2.5764000000001036e-05, 1.9042000000000364e-05, 2.098700000000009e-05, 2.2848000000002394e-05, 2.4763000000000562e-05, 2.4736000000000896e-05, 2.283299999999988e-05, 2.0971999999997576e-05, 2.284699999999945e-05, 2.187500000000106e-05, 1.9999999999999185e-05, 2.4791999999999176e-05, 1.8971999999999045e-05, 2.088899999999963e-05, 2.470900000000123e-05, 2.191700000000324e-05, 1.9999999999999185e-05, 2.4764000000000036e-05, 2.187500000000106e-05, 1.9013999999997755e-05, 2.188900000000063e-05, 2.5708000000002756e-05, 2.572299999999833e-05, 2.286099999999902e-05, 2.5750000000001466e-05, 2.286100000000249e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 1.9986000000003085e-05, 1.9972000000000045e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.456" endtime="20201112 09:43:14.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.452" endtime="20201112 09:43:14.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.468" endtime="20201112 09:43:14.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.471" endtime="20201112 09:43:14.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.470" endtime="20201112 09:43:14.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.466" endtime="20201112 09:43:14.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.095" endtime="20201112 09:43:14.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.094" endtime="20201112 09:43:14.492"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.501" endtime="20201112 09:43:14.523"></status>
</kw>
<msg timestamp="20201112 09:43:14.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.499" endtime="20201112 09:43:14.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.525" endtime="20201112 09:43:14.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.527" endtime="20201112 09:43:14.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.497" endtime="20201112 09:43:14.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.495" endtime="20201112 09:43:14.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.537" endtime="20201112 09:43:14.824"></status>
</kw>
<msg timestamp="20201112 09:43:14.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.536" endtime="20201112 09:43:14.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.828" endtime="20201112 09:43:14.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.837" endtime="20201112 09:43:14.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.533" endtime="20201112 09:43:14.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.532" endtime="20201112 09:43:14.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.843" level="INFO">${RESULT} = [{'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.024837361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:14.840" endtime="20201112 09:43:14.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.858" level="INFO">${ACCURACY} = {'diff': [2.3791999999998176e-05, 2.0943999999998436e-05, 2.19030000000002e-05, 2.283299999999988e-05, 2.091699999999877e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 2.2833999999999355e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:14.844" endtime="20201112 09:43:14.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.862" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.861" endtime="20201112 09:43:14.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.865" level="INFO">VALUE: [2.3791999999998176e-05, 2.0943999999998436e-05, 2.19030000000002e-05, 2.283299999999988e-05, 2.091699999999877e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 2.2833999999999355e-05, 2.0944000000001906e-05, 2.4777999999999606e-05, 1.9985999999999615e-05, 2.4750000000000466e-05, 2.0944000000001906e-05, 2.286099999999902e-05, 2.186100000000149e-05, 2.2834000000002824e-05, 2.187500000000106e-05, 2.286099999999902e-05, 2.0916000000002766e-05, 2.093099999999834e-05, 2.2834000000002824e-05, 2.281900000000031e-05, 2.281900000000031e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.4791999999999176e-05, 2.093100000000181e-05, 2.3820000000000785e-05, 2.3818999999997842e-05, 2.5693999999999717e-05, 2.093100000000181e-05, 2.093100000000181e-05, 2.188900000000063e-05, 2.3805999999997746e-05, 2.379100000000217e-05, 1.9028000000000794e-05, 1.997299999999952e-05, 2.3791999999998176e-05, 2.3820000000000785e-05, 2.4806000000002215e-05, 2.4736000000000896e-05, 2.187500000000106e-05, 2.3790999999998702e-05, 2.5708000000002756e-05, 2.3819999999997316e-05, 2.4791999999999176e-05, 2.284700000000292e-05, 2.0014000000002224e-05, 2.284699999999945e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.863" endtime="20201112 09:43:14.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.859" endtime="20201112 09:43:14.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.868" endtime="20201112 09:43:14.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.872" endtime="20201112 09:43:14.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.870" endtime="20201112 09:43:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.867" endtime="20201112 09:43:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.493" endtime="20201112 09:43:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.493" endtime="20201112 09:43:14.892"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.901" endtime="20201112 09:43:14.918"></status>
</kw>
<msg timestamp="20201112 09:43:14.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.900" endtime="20201112 09:43:14.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.920" endtime="20201112 09:43:14.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.922" endtime="20201112 09:43:14.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.897" endtime="20201112 09:43:14.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.895" endtime="20201112 09:43:14.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.932" endtime="20201112 09:43:15.218"></status>
</kw>
<msg timestamp="20201112 09:43:15.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.931" endtime="20201112 09:43:15.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.222" endtime="20201112 09:43:15.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.231" endtime="20201112 09:43:15.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.928" endtime="20201112 09:43:15.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.926" endtime="20201112 09:43:15.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.237" level="INFO">${RESULT} = [{'time': 0.021455639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.241699999999986e-05, 'source_diff': 3.241699999999986e-05}, {'time': 0.021486097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.234" endtime="20201112 09:43:15.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.251" level="INFO">${ACCURACY} = {'diff': [3.241699999999986e-05, 2.4750000000000466e-05, 2.2749999999998466e-05, 2.283299999999988e-05, 2.4764000000000036e-05, 2.5736000000001896e-05, 2.286100000000249e-05, 2.19030000000002e-05, 1.9...</msg>
<status status="PASS" starttime="20201112 09:43:15.238" endtime="20201112 09:43:15.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.255" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.254" endtime="20201112 09:43:15.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.258" level="INFO">VALUE: [3.241699999999986e-05, 2.4750000000000466e-05, 2.2749999999998466e-05, 2.283299999999988e-05, 2.4764000000000036e-05, 2.5736000000001896e-05, 2.286100000000249e-05, 2.19030000000002e-05, 1.9999999999999185e-05, 2.4777999999999606e-05, 2.188899999999716e-05, 2.187500000000106e-05, 1.994500000000038e-05, 1.9000000000001654e-05, 2.2848000000002394e-05, 2.5764000000001036e-05, 2.184699999999845e-05, 2.4764000000000036e-05, 2.3763999999999036e-05, 2.5735999999998427e-05, 2.194500000000238e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.0930000000002336e-05, 2.188900000000063e-05, 1.9972000000000045e-05, 2.284699999999945e-05, 2.3777999999998606e-05, 1.9999999999999185e-05, 1.906900000000003e-05, 2.5721999999998857e-05, 2.094500000000138e-05, 2.380500000000174e-05, 2.19030000000002e-05, 2.4791999999999176e-05, 2.286100000000249e-05, 2.0915999999999296e-05, 1.9943999999997436e-05, 2.366700000000152e-05, 2.09029999999992e-05, 2.2806000000000215e-05, 1.9042000000000364e-05, 2.4777999999999606e-05, 2.188900000000063e-05, 2.5749999999997997e-05, 2.384700000000045e-05, 1.8999999999998185e-05, 2.0944000000001906e-05, 2.4764000000000036e-05, 1.904100000000089e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.256" endtime="20201112 09:43:15.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.252" endtime="20201112 09:43:15.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.261" endtime="20201112 09:43:15.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.265" endtime="20201112 09:43:15.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.263" endtime="20201112 09:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.260" endtime="20201112 09:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.893" endtime="20201112 09:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.893" endtime="20201112 09:43:15.286"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.294" endtime="20201112 09:43:15.310"></status>
</kw>
<msg timestamp="20201112 09:43:15.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.293" endtime="20201112 09:43:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.311" endtime="20201112 09:43:15.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.314" endtime="20201112 09:43:15.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.290" endtime="20201112 09:43:15.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.288" endtime="20201112 09:43:15.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.325" endtime="20201112 09:43:15.610"></status>
</kw>
<msg timestamp="20201112 09:43:15.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.323" endtime="20201112 09:43:15.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.614" endtime="20201112 09:43:15.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.623" endtime="20201112 09:43:15.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.321" endtime="20201112 09:43:15.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.319" endtime="20201112 09:43:15.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.629" level="INFO">${RESULT} = [{'time': 0.020271931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.020302389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:15.626" endtime="20201112 09:43:15.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.643" level="INFO">${ACCURACY} = {'diff': [1.0416999999998677e-05, 2.5736000000001896e-05, 2.3791999999998176e-05, 2.093099999999834e-05, 1.9930000000001336e-05, 2.288899999999816e-05, 2.286100000000249e-05, 2.4736000000000896e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:15.630" endtime="20201112 09:43:15.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.647" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.646" endtime="20201112 09:43:15.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.650" level="INFO">VALUE: [1.0416999999998677e-05, 2.5736000000001896e-05, 2.3791999999998176e-05, 2.093099999999834e-05, 1.9930000000001336e-05, 2.288899999999816e-05, 2.286100000000249e-05, 2.4736000000000896e-05, 2.3694000000001186e-05, 2.4778000000003075e-05, 2.4750000000000466e-05, 2.095899999999748e-05, 2.0916000000002766e-05, 2.093099999999834e-05, 2.5736000000001896e-05, 2.184699999999845e-05, 1.8985999999998615e-05, 2.186100000000149e-05, 2.5693999999999717e-05, 1.8999999999998185e-05, 2.5736000000001896e-05, 2.287499999999859e-05, 2.4777999999999606e-05, 2.091700000000224e-05, 2.4778000000003075e-05, 2.4764000000000036e-05, 2.183299999999888e-05, 2.4777999999999606e-05, 1.9985999999999615e-05, 2.0929999999998866e-05, 1.9985999999999615e-05, 1.9042000000000364e-05, 2.3820000000000785e-05, 2.286099999999902e-05, 2.1848000000001394e-05, 2.19030000000002e-05, 2.3722000000000326e-05, 2.188900000000063e-05, 2.2791999999997176e-05, 2.287499999999859e-05, 2.091699999999877e-05, 2.4777999999999606e-05, 2.286100000000249e-05, 2.0999999999996716e-05, 2.566700000000005e-05, 2.4750000000000466e-05, 2.1957999999999006e-05, 2.281900000000031e-05, 1.9972000000000045e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.648" endtime="20201112 09:43:15.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.644" endtime="20201112 09:43:15.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.653" endtime="20201112 09:43:15.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.657" endtime="20201112 09:43:15.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.655" endtime="20201112 09:43:15.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.652" endtime="20201112 09:43:15.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.287" endtime="20201112 09:43:15.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.286" endtime="20201112 09:43:15.678"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.686" endtime="20201112 09:43:15.710"></status>
</kw>
<msg timestamp="20201112 09:43:15.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.685" endtime="20201112 09:43:15.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.712" endtime="20201112 09:43:15.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.714" endtime="20201112 09:43:15.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.682" endtime="20201112 09:43:15.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.680" endtime="20201112 09:43:15.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.724" endtime="20201112 09:43:16.011"></status>
</kw>
<msg timestamp="20201112 09:43:16.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025039056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.723" endtime="20201112 09:43:16.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025025833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025039056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.015" endtime="20201112 09:43:16.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.023" endtime="20201112 09:43:16.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.720" endtime="20201112 09:43:16.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.719" endtime="20201112 09:43:16.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.030" level="INFO">${RESULT} = [{'time': 0.025039056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3222999999999707e-05, 'source_diff': 1.3222999999999707e-05}, {'time': 0.025069556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:16.026" endtime="20201112 09:43:16.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.043" level="INFO">${ACCURACY} = {'diff': [1.3222999999999707e-05, 2.094500000000138e-05, 2.3776999999999132e-05, 2.280500000000074e-05, 1.9999999999999185e-05, 2.3818999999997842e-05, 2.184699999999845e-05, 2.281900000000031e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:43:16.031" endtime="20201112 09:43:16.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.048" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.047" endtime="20201112 09:43:16.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.050" level="INFO">VALUE: [1.3222999999999707e-05, 2.094500000000138e-05, 2.3776999999999132e-05, 2.280500000000074e-05, 1.9999999999999185e-05, 2.3818999999997842e-05, 2.184699999999845e-05, 2.281900000000031e-05, 1.9041999999996895e-05, 2.091700000000224e-05, 2.0986000000000615e-05, 2.3790999999998702e-05, 2.1000000000000185e-05, 2.0944000000001906e-05, 2.088899999999963e-05, 2.3776999999999132e-05, 2.286100000000249e-05, 2.4736000000000896e-05, 2.383300000000088e-05, 2.291700000000077e-05, 2.5721999999998857e-05, 1.9985999999999615e-05, 2.469499999999819e-05, 1.9930000000001336e-05, 2.4736000000000896e-05, 1.9972000000000045e-05, 2.086100000000049e-05, 2.3778000000002075e-05, 1.9014000000001224e-05, 2.2862000000001964e-05, 2.5707999999999287e-05, 1.9972000000000045e-05, 1.9042000000000364e-05, 2.4818999999998842e-05, 2.09029999999992e-05, 2.565300000000048e-05, 2.5722000000002326e-05, 2.188900000000063e-05, 2.563899999999744e-05, 2.287500000000206e-05, 2.293100000000034e-05, 2.097300000000052e-05, 2.5749999999997997e-05, 2.4736000000000896e-05, 2.3735999999999896e-05, 2.566700000000005e-05, 2.4750000000000466e-05, 2.0013999999998755e-05, 1.9957999999997006e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.049" endtime="20201112 09:43:16.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.044" endtime="20201112 09:43:16.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.054" endtime="20201112 09:43:16.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.057" endtime="20201112 09:43:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.056" endtime="20201112 09:43:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.052" endtime="20201112 09:43:16.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.679" endtime="20201112 09:43:16.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.678" endtime="20201112 09:43:16.078"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.087" endtime="20201112 09:43:16.103"></status>
</kw>
<msg timestamp="20201112 09:43:16.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.085" endtime="20201112 09:43:16.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.104" endtime="20201112 09:43:16.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.107" endtime="20201112 09:43:16.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.083" endtime="20201112 09:43:16.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.080" endtime="20201112 09:43:16.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.117" endtime="20201112 09:43:16.403"></status>
</kw>
<msg timestamp="20201112 09:43:16.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.115" endtime="20201112 09:43:16.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.407" endtime="20201112 09:43:16.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.415" endtime="20201112 09:43:16.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.113" endtime="20201112 09:43:16.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.111" endtime="20201112 09:43:16.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.422" level="INFO">${RESULT} = [{'time': 0.021564806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.472999999999426e-06, 'source_diff': 9.472999999999426e-06}, {'time': 0.021595958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.418" endtime="20201112 09:43:16.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.436" level="INFO">${ACCURACY} = {'diff': [9.472999999999426e-06, 2.3804999999998272e-05, 2.093099999999834e-05, 2.5707999999999287e-05, 2.5638000000001437e-05, 2.2819999999999785e-05, 1.9985999999999615e-05, 1.9957999999997006e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:16.423" endtime="20201112 09:43:16.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.440" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.439" endtime="20201112 09:43:16.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.443" level="INFO">VALUE: [9.472999999999426e-06, 2.3804999999998272e-05, 2.093099999999834e-05, 2.5707999999999287e-05, 2.5638000000001437e-05, 2.2819999999999785e-05, 1.9985999999999615e-05, 1.9957999999997006e-05, 2.287499999999859e-05, 2.5721999999998857e-05, 2.3776999999999132e-05, 2.465299999999948e-05, 2.091700000000224e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.3792000000001645e-05, 2.0901999999999726e-05, 2.0901999999999726e-05, 2.3777999999998606e-05, 2.286099999999902e-05, 2.187499999999759e-05, 2.188900000000063e-05, 2.290299999999773e-05, 2.0929999999998866e-05, 2.187500000000106e-05, 2.187499999999759e-05, 1.9958000000000475e-05, 2.0000000000002655e-05, 2.091699999999877e-05, 2.4750000000000466e-05, 2.29169999999973e-05, 2.2847999999998925e-05, 2.473700000000037e-05, 1.993100000000081e-05, 2.4736000000000896e-05, 2.188900000000063e-05, 2.4846999999997982e-05, 2.191699999999977e-05, 2.087500000000006e-05, 2.281900000000031e-05, 2.3778000000002075e-05, 2.1902000000000726e-05, 2.19030000000002e-05, 2.286100000000249e-05, 2.47230000000008e-05, 2.2804999999997272e-05, 2.0013999999998755e-05, 2.286099999999902e-05, 2.4791999999999176e-05, 2.5708000000002756e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.442" endtime="20201112 09:43:16.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.437" endtime="20201112 09:43:16.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.447" endtime="20201112 09:43:16.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.450" endtime="20201112 09:43:16.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.449" endtime="20201112 09:43:16.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.445" endtime="20201112 09:43:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.079" endtime="20201112 09:43:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.078" endtime="20201112 09:43:16.471"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.480" endtime="20201112 09:43:16.495"></status>
</kw>
<msg timestamp="20201112 09:43:16.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.478" endtime="20201112 09:43:16.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.496" endtime="20201112 09:43:16.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.499" endtime="20201112 09:43:16.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.475" endtime="20201112 09:43:16.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.473" endtime="20201112 09:43:16.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.509" endtime="20201112 09:43:16.794"></status>
</kw>
<msg timestamp="20201112 09:43:16.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.507" endtime="20201112 09:43:16.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.799" endtime="20201112 09:43:16.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.807" endtime="20201112 09:43:16.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.504" endtime="20201112 09:43:16.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.503" endtime="20201112 09:43:16.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.814" level="INFO">${RESULT} = [{'time': 0.020533486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.381900000000131e-05, 'source_diff': 2.381900000000131e-05}, {'time': 0.020563931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.810" endtime="20201112 09:43:16.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.827" level="INFO">${ACCURACY} = {'diff': [2.381900000000131e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.5721999999998857e-05, 2.091699999999877e-05, 1.9972000000000045e-05, 2.187500000000106e-05, 2.286099999999902e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:16.815" endtime="20201112 09:43:16.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.831" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.830" endtime="20201112 09:43:16.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.834" level="INFO">VALUE: [2.381900000000131e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.5721999999998857e-05, 2.091699999999877e-05, 1.9972000000000045e-05, 2.187500000000106e-05, 2.286099999999902e-05, 2.286099999999902e-05, 1.9999999999999185e-05, 1.997300000000299e-05, 2.0915999999999296e-05, 2.3763999999999036e-05, 2.0971999999997576e-05, 2.4764000000000036e-05, 2.091699999999877e-05, 2.2819999999999785e-05, 2.4721999999997857e-05, 2.186099999999802e-05, 2.5707999999999287e-05, 1.9944000000000905e-05, 2.0958000000001475e-05, 2.091700000000224e-05, 2.3777999999998606e-05, 2.09029999999992e-05, 2.5722000000002326e-05, 2.3805999999997746e-05, 2.286100000000249e-05, 2.4777999999999606e-05, 2.469499999999819e-05, 2.193099999999934e-05, 2.3762999999999562e-05, 2.188900000000063e-05, 1.9958000000000475e-05, 2.4707999999998287e-05, 2.0888000000000156e-05, 2.4722000000001326e-05, 2.3790999999998702e-05, 2.188900000000063e-05, 2.284699999999945e-05, 1.9014000000001224e-05, 1.9972000000000045e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.084700000000092e-05, 2.0930000000002336e-05, 2.08890000000031e-05, 2.0915999999999296e-05, 2.4736000000000896e-05, 1.9013999999997755e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.832" endtime="20201112 09:43:16.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.828" endtime="20201112 09:43:16.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.838" endtime="20201112 09:43:16.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.841" endtime="20201112 09:43:16.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.839" endtime="20201112 09:43:16.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.836" endtime="20201112 09:43:16.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.472" endtime="20201112 09:43:16.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.471" endtime="20201112 09:43:16.862"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.870" endtime="20201112 09:43:16.892"></status>
</kw>
<msg timestamp="20201112 09:43:16.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.869" endtime="20201112 09:43:16.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.894" endtime="20201112 09:43:16.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.896" endtime="20201112 09:43:16.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.866" endtime="20201112 09:43:16.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.864" endtime="20201112 09:43:16.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.906" endtime="20201112 09:43:17.191"></status>
</kw>
<msg timestamp="20201112 09:43:17.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.905" endtime="20201112 09:43:17.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.196" endtime="20201112 09:43:17.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.204" endtime="20201112 09:43:17.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.902" endtime="20201112 09:43:17.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.900" endtime="20201112 09:43:17.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.211" level="INFO">${RESULT} = [{'time': 0.021577583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0499999999999278e-05, 'source_diff': 3.0499999999999278e-05}, {'time': 0.021608653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:17.207" endtime="20201112 09:43:17.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.224" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 2.3819999999997316e-05, 2.188900000000063e-05, 1.9944000000000905e-05, 2.383300000000088e-05, 1.9985999999999615e-05, 2.093099999999834e-05, 2.0929999999998866e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:17.212" endtime="20201112 09:43:17.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.229" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.228" endtime="20201112 09:43:17.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.231" level="INFO">VALUE: [3.0499999999999278e-05, 2.3819999999997316e-05, 2.188900000000063e-05, 1.9944000000000905e-05, 2.383300000000088e-05, 1.9985999999999615e-05, 2.093099999999834e-05, 2.0929999999998866e-05, 2.4764000000000036e-05, 1.9028000000000794e-05, 2.5778000000000606e-05, 2.091699999999877e-05, 2.2861999999998495e-05, 2.0013999999998755e-05, 2.4764000000000036e-05, 2.283299999999988e-05, 1.9014000000001224e-05, 1.9958000000000475e-05, 1.9958000000000475e-05, 2.3791999999998176e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.381900000000131e-05, 1.995899999999995e-05, 2.1887999999997687e-05, 2.286099999999902e-05, 2.0013999999998755e-05, 1.9999999999999185e-05, 2.4790999999999702e-05, 1.9972000000000045e-05, 2.4777999999999606e-05, 2.3820000000000785e-05, 1.9999999999999185e-05, 2.091700000000224e-05, 2.3834000000000355e-05, 2.5736000000001896e-05, 2.093099999999834e-05, 2.3790999999998702e-05, 1.9000000000001654e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.287499999999859e-05, 2.284699999999945e-05, 1.9985999999999615e-05, 2.19030000000002e-05, 2.3777999999998606e-05, 2.3790999999998702e-05, 2.4777000000000132e-05, 2.3805999999997746e-05, 1.906900000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.230" endtime="20201112 09:43:17.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.225" endtime="20201112 09:43:17.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.235" endtime="20201112 09:43:17.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.238" endtime="20201112 09:43:17.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.237" endtime="20201112 09:43:17.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.233" endtime="20201112 09:43:17.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.863" endtime="20201112 09:43:17.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.862" endtime="20201112 09:43:17.259"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.268" endtime="20201112 09:43:17.284"></status>
</kw>
<msg timestamp="20201112 09:43:17.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.266" endtime="20201112 09:43:17.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.286" endtime="20201112 09:43:17.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.288" endtime="20201112 09:43:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.264" endtime="20201112 09:43:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.261" endtime="20201112 09:43:17.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.298" endtime="20201112 09:43:17.584"></status>
</kw>
<msg timestamp="20201112 09:43:17.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.297" endtime="20201112 09:43:17.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021174694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.589" endtime="20201112 09:43:17.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.597" endtime="20201112 09:43:17.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.294" endtime="20201112 09:43:17.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.292" endtime="20201112 09:43:17.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.603" level="INFO">${RESULT} = [{'time': 0.021187028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2333999999999262e-05, 'source_diff': 1.2333999999999262e-05}, {'time': 0.021217556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:17.600" endtime="20201112 09:43:17.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.617" level="INFO">${ACCURACY} = {'diff': [1.2333999999999262e-05, 2.2847999999998925e-05, 2.4693999999998717e-05, 2.2777999999997606e-05, 2.186100000000149e-05, 2.286099999999902e-05, 1.9098000000002113e-05, 1.991700000000124e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:17.605" endtime="20201112 09:43:17.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.621" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.620" endtime="20201112 09:43:17.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.624" level="INFO">VALUE: [1.2333999999999262e-05, 2.2847999999998925e-05, 2.4693999999998717e-05, 2.2777999999997606e-05, 2.186100000000149e-05, 2.286099999999902e-05, 1.9098000000002113e-05, 1.991700000000124e-05, 2.188900000000063e-05, 2.3763999999999036e-05, 2.4707999999998287e-05, 2.281900000000031e-05, 2.283299999999988e-05, 2.093100000000181e-05, 2.4848000000000925e-05, 2.3820000000000785e-05, 2.187500000000106e-05, 2.3820000000000785e-05, 2.094500000000138e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.188899999999716e-05, 2.4805999999998746e-05, 2.1888000000001157e-05, 1.9013999999997755e-05, 2.093099999999834e-05, 1.901300000000175e-05, 2.0000000000002655e-05, 1.9985999999999615e-05, 2.087500000000006e-05, 2.088899999999963e-05, 2.5721999999998857e-05, 2.3791999999998176e-05, 2.384700000000045e-05, 2.5721999999998857e-05, 2.093099999999834e-05, 2.3820000000000785e-05, 2.187500000000106e-05, 2.5735999999998427e-05, 1.993100000000081e-05, 2.193099999999934e-05, 2.187499999999759e-05, 1.9985999999999615e-05, 1.998699999999909e-05, 2.4763000000000562e-05, 1.9985999999999615e-05, 2.090300000000267e-05, 2.562500000000134e-05, 2.5680000000000147e-05, 2.3790999999998702e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.622" endtime="20201112 09:43:17.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.618" endtime="20201112 09:43:17.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.627" endtime="20201112 09:43:17.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.631" endtime="20201112 09:43:17.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.629" endtime="20201112 09:43:17.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.626" endtime="20201112 09:43:17.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.260" endtime="20201112 09:43:17.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.259" endtime="20201112 09:43:17.652"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.660" endtime="20201112 09:43:17.676"></status>
</kw>
<msg timestamp="20201112 09:43:17.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.659" endtime="20201112 09:43:17.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.677" endtime="20201112 09:43:17.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.680" endtime="20201112 09:43:17.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.656" endtime="20201112 09:43:17.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.654" endtime="20201112 09:43:17.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.690" endtime="20201112 09:43:17.975"></status>
</kw>
<msg timestamp="20201112 09:43:17.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.688" endtime="20201112 09:43:17.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.979" endtime="20201112 09:43:17.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.988" endtime="20201112 09:43:17.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.686" endtime="20201112 09:43:17.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.684" endtime="20201112 09:43:17.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.994" level="INFO">${RESULT} = [{'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.570899999999876e-05, 'source_diff': 2.570899999999876e-05}, {'time': 0.020552542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.991" endtime="20201112 09:43:17.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.009" level="INFO">${ACCURACY} = {'diff': [2.570899999999876e-05, 2.2847999999998925e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.094500000000138e-05, 2.291700000000077e-05, 1.9985999999999615e-05, 2.480500000000274e-05, 2.4...</msg>
<status status="PASS" starttime="20201112 09:43:17.995" endtime="20201112 09:43:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.013" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.012" endtime="20201112 09:43:18.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.016" level="INFO">VALUE: [2.570899999999876e-05, 2.2847999999998925e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.094500000000138e-05, 2.291700000000077e-05, 1.9985999999999615e-05, 2.480500000000274e-05, 2.4777000000000132e-05, 2.379100000000217e-05, 2.3777999999998606e-05, 2.4736000000000896e-05, 1.995899999999995e-05, 1.9985999999999615e-05, 2.4750000000000466e-05, 2.283299999999988e-05, 2.0957999999998006e-05, 1.9985999999999615e-05, 2.3846999999996982e-05, 2.2764000000001505e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.187499999999759e-05, 2.2834000000002824e-05, 2.286099999999902e-05, 2.280500000000074e-05, 2.090300000000267e-05, 2.1902000000000726e-05, 2.0014000000002224e-05, 2.3804999999998272e-05, 2.5735999999998427e-05, 2.187500000000106e-05, 2.4762999999997093e-05, 2.193099999999934e-05, 2.1972000000002045e-05, 1.8986000000002085e-05, 2.19030000000002e-05, 2.4749999999996997e-05, 2.3791999999998176e-05, 2.5707999999999287e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.094500000000138e-05, 1.9042000000000364e-05, 1.9958000000000475e-05, 2.5735999999998427e-05, 2.4792000000002645e-05, 2.0986000000000615e-05, 2.287500000000206e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.014" endtime="20201112 09:43:18.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.010" endtime="20201112 09:43:18.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.019" endtime="20201112 09:43:18.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.023" endtime="20201112 09:43:18.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.021" endtime="20201112 09:43:18.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.018" endtime="20201112 09:43:18.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.653" endtime="20201112 09:43:18.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.652" endtime="20201112 09:43:18.044"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.052" endtime="20201112 09:43:18.068"></status>
</kw>
<msg timestamp="20201112 09:43:18.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.051" endtime="20201112 09:43:18.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.070" endtime="20201112 09:43:18.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.072" endtime="20201112 09:43:18.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.048" endtime="20201112 09:43:18.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.046" endtime="20201112 09:43:18.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.082" endtime="20201112 09:43:18.368"></status>
</kw>
<msg timestamp="20201112 09:43:18.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.081" endtime="20201112 09:43:18.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.373" endtime="20201112 09:43:18.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.381" endtime="20201112 09:43:18.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.078" endtime="20201112 09:43:18.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.076" endtime="20201112 09:43:18.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.388" level="INFO">${RESULT} = [{'time': 0.020406111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0514000000002317e-05, 'source_diff': 3.0514000000002317e-05}, {'time': 0.020436375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:18.384" endtime="20201112 09:43:18.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.401" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 1.9972000000000045e-05, 2.283299999999988e-05, 2.5736000000001896e-05, 2.094500000000138e-05, 1.9014000000001224e-05, 2.4707999999998287e-05, 2.4750000000000466e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:18.389" endtime="20201112 09:43:18.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.406" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.405" endtime="20201112 09:43:18.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.408" level="INFO">VALUE: [3.0514000000002317e-05, 1.9972000000000045e-05, 2.283299999999988e-05, 2.5736000000001896e-05, 2.094500000000138e-05, 1.9014000000001224e-05, 2.4707999999998287e-05, 2.4750000000000466e-05, 1.997299999999952e-05, 1.8999999999998185e-05, 2.3750000000002935e-05, 1.9985999999999615e-05, 2.569499999999919e-05, 2.284699999999945e-05, 2.3749999999999466e-05, 2.1916000000000296e-05, 2.4736000000000896e-05, 1.9958000000000475e-05, 2.0915999999999296e-05, 2.094500000000138e-05, 2.5693999999999717e-05, 2.091700000000224e-05, 2.469500000000166e-05, 1.9013999999997755e-05, 2.381900000000131e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.3804999999998272e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 2.3819999999997316e-05, 2.5777999999997137e-05, 2.5735999999998427e-05, 2.4750000000000466e-05, 1.9930000000001336e-05, 2.5679999999996678e-05, 1.9985999999999615e-05, 2.5735999999998427e-05, 2.09029999999992e-05, 2.193099999999934e-05, 2.184700000000192e-05, 2.4708000000001756e-05, 1.997299999999952e-05, 2.5652000000001007e-05, 2.188900000000063e-05, 2.380500000000174e-05, 2.3791999999998176e-05, 2.3778000000002075e-05, 1.902699999999785e-05, 2.094499999999791e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.407" endtime="20201112 09:43:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.402" endtime="20201112 09:43:18.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.412" endtime="20201112 09:43:18.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.415" endtime="20201112 09:43:18.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.413" endtime="20201112 09:43:18.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.410" endtime="20201112 09:43:18.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.045" endtime="20201112 09:43:18.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.044" endtime="20201112 09:43:18.436"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.445" endtime="20201112 09:43:18.464"></status>
</kw>
<msg timestamp="20201112 09:43:18.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.443" endtime="20201112 09:43:18.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.466" endtime="20201112 09:43:18.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.468" endtime="20201112 09:43:18.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.441" endtime="20201112 09:43:18.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.438" endtime="20201112 09:43:18.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.478" endtime="20201112 09:43:18.765"></status>
</kw>
<msg timestamp="20201112 09:43:18.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.477" endtime="20201112 09:43:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.769" endtime="20201112 09:43:18.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.777" endtime="20201112 09:43:18.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.474" endtime="20201112 09:43:18.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.472" endtime="20201112 09:43:18.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.784" level="INFO">${RESULT} = [{'time': 0.024898042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0513999999998848e-05, 'source_diff': 3.0513999999998848e-05}, {'time': 0.024928222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:18.780" endtime="20201112 09:43:18.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.797" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 1.9999999999999185e-05, 2.4707999999998287e-05, 2.568099999999962e-05, 2.181900000000278e-05, 2.0986000000000615e-05, 2.4777000000000132e-05, 2.093099999999834e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:18.785" endtime="20201112 09:43:18.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.802" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.801" endtime="20201112 09:43:18.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.804" level="INFO">VALUE: [3.0513999999998848e-05, 1.9999999999999185e-05, 2.4707999999998287e-05, 2.568099999999962e-05, 2.181900000000278e-05, 2.0986000000000615e-05, 2.4777000000000132e-05, 2.093099999999834e-05, 1.9000000000001654e-05, 2.287500000000206e-05, 2.0929999999998866e-05, 2.3762999999999562e-05, 2.1819999999998785e-05, 2.0915999999999296e-05, 2.3804999999998272e-05, 1.9014000000001224e-05, 2.19030000000002e-05, 2.191699999999977e-05, 2.5708000000002756e-05, 2.093100000000181e-05, 2.381900000000131e-05, 2.184699999999845e-05, 1.993100000000081e-05, 1.9985999999999615e-05, 2.095900000000095e-05, 2.3777999999998606e-05, 2.09029999999992e-05, 2.4764000000000036e-05, 2.19030000000002e-05, 2.5707999999999287e-05, 1.991700000000124e-05, 2.4707999999998287e-05, 2.091699999999877e-05, 2.2833999999999355e-05, 2.4777999999999606e-05, 2.087500000000006e-05, 2.0985999999997146e-05, 2.286100000000249e-05, 2.4736000000000896e-05, 2.5693999999999717e-05, 2.469500000000166e-05, 2.3805999999997746e-05, 2.191699999999977e-05, 2.2819999999999785e-05, 2.4722000000001326e-05, 2.19030000000002e-05, 2.3832999999997412e-05, 2.4749999999996997e-05, 2.0013999999998755e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.803" endtime="20201112 09:43:18.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.798" endtime="20201112 09:43:18.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.808" endtime="20201112 09:43:18.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.811" endtime="20201112 09:43:18.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.810" endtime="20201112 09:43:18.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.806" endtime="20201112 09:43:18.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.437" endtime="20201112 09:43:18.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.436" endtime="20201112 09:43:18.832"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.841" endtime="20201112 09:43:18.857"></status>
</kw>
<msg timestamp="20201112 09:43:18.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.839" endtime="20201112 09:43:18.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.858" endtime="20201112 09:43:18.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.861" endtime="20201112 09:43:18.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.837" endtime="20201112 09:43:18.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.834" endtime="20201112 09:43:18.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.871" endtime="20201112 09:43:19.155"></status>
</kw>
<msg timestamp="20201112 09:43:19.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.869" endtime="20201112 09:43:19.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.159" endtime="20201112 09:43:19.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.167" endtime="20201112 09:43:19.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.867" endtime="20201112 09:43:19.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.865" endtime="20201112 09:43:19.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.174" level="INFO">${RESULT} = [{'time': 0.020784708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.020814764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:19.170" endtime="20201112 09:43:19.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.187" level="INFO">${ACCURACY} = {'diff': [1.2263999999997943e-05, 2.4764000000000036e-05, 2.3791999999998176e-05, 2.465299999999948e-05, 2.186100000000149e-05, 2.383300000000088e-05, 2.19030000000002e-05, 1.9041999999996895e-05, 2.4...</msg>
<status status="PASS" starttime="20201112 09:43:19.175" endtime="20201112 09:43:19.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.192" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.191" endtime="20201112 09:43:19.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.194" level="INFO">VALUE: [1.2263999999997943e-05, 2.4764000000000036e-05, 2.3791999999998176e-05, 2.465299999999948e-05, 2.186100000000149e-05, 2.383300000000088e-05, 2.19030000000002e-05, 1.9041999999996895e-05, 2.4777999999999606e-05, 2.084700000000092e-05, 2.380500000000174e-05, 2.380500000000174e-05, 2.3834000000000355e-05, 2.4764000000000036e-05, 2.5735999999998427e-05, 2.572299999999833e-05, 2.187499999999759e-05, 2.286099999999902e-05, 2.187500000000106e-05, 2.383300000000088e-05, 2.29030000000012e-05, 2.57230000000018e-05, 2.284699999999945e-05, 2.286099999999902e-05, 1.9014000000001224e-05, 2.188900000000063e-05, 2.566700000000005e-05, 1.9028000000000794e-05, 2.569499999999919e-05, 1.906900000000003e-05, 2.470899999999776e-05, 2.2819999999999785e-05, 2.384700000000045e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.5777999999997137e-05, 2.188900000000063e-05, 2.4665999999999577e-05, 2.091700000000224e-05, 2.0929999999998866e-05, 2.3791999999998176e-05, 2.5736000000001896e-05, 2.4750000000000466e-05, 2.5735999999998427e-05, 2.191699999999977e-05, 2.0916000000002766e-05, 2.5735999999998427e-05, 2.565300000000048e-05, 2.3764000000002505e-05, 2.4805999999998746e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.193" endtime="20201112 09:43:19.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.188" endtime="20201112 09:43:19.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.198" endtime="20201112 09:43:19.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.201" endtime="20201112 09:43:19.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.200" endtime="20201112 09:43:19.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.196" endtime="20201112 09:43:19.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.833" endtime="20201112 09:43:19.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.832" endtime="20201112 09:43:19.222"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.231" endtime="20201112 09:43:19.250"></status>
</kw>
<msg timestamp="20201112 09:43:19.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.229" endtime="20201112 09:43:19.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.252" endtime="20201112 09:43:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.254" endtime="20201112 09:43:19.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.227" endtime="20201112 09:43:19.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.225" endtime="20201112 09:43:19.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.264" endtime="20201112 09:43:19.549"></status>
</kw>
<msg timestamp="20201112 09:43:19.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.263" endtime="20201112 09:43:19.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.553" endtime="20201112 09:43:19.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.562" endtime="20201112 09:43:19.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.260" endtime="20201112 09:43:19.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.258" endtime="20201112 09:43:19.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.568" level="INFO">${RESULT} = [{'time': 0.022590931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4237000000000277e-05, 'source_diff': 1.4237000000000277e-05}, {'time': 0.022622083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:19.565" endtime="20201112 09:43:19.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.583" level="INFO">${ACCURACY} = {'diff': [1.4237000000000277e-05, 2.481900000000231e-05, 2.283299999999988e-05, 2.4736000000000896e-05, 2.19030000000002e-05, 2.286099999999902e-05, 2.093099999999834e-05, 2.283299999999988e-05, 2.286...</msg>
<status status="PASS" starttime="20201112 09:43:19.569" endtime="20201112 09:43:19.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.587" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.586" endtime="20201112 09:43:19.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.590" level="INFO">VALUE: [1.4237000000000277e-05, 2.481900000000231e-05, 2.283299999999988e-05, 2.4736000000000896e-05, 2.19030000000002e-05, 2.286099999999902e-05, 2.093099999999834e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.188900000000063e-05, 2.191700000000324e-05, 2.002700000000232e-05, 2.5763999999997567e-05, 1.9999999999999185e-05, 2.4764000000000036e-05, 1.9999999999999185e-05, 2.3777999999998606e-05, 1.998699999999909e-05, 2.19030000000002e-05, 2.284699999999945e-05, 1.995899999999995e-05, 2.3763999999999036e-05, 1.9986000000003085e-05, 1.9014000000001224e-05, 1.993100000000081e-05, 2.0915999999999296e-05, 2.190299999999673e-05, 2.4764000000000036e-05, 2.187500000000106e-05, 2.0958000000001475e-05, 2.380500000000174e-05, 2.188900000000063e-05, 2.2833999999999355e-05, 2.29030000000012e-05, 2.4749999999996997e-05, 2.380500000000174e-05, 1.9972000000000045e-05, 2.3804999999998272e-05, 2.665300000000148e-05, 1.991700000000124e-05, 2.4735999999997427e-05, 2.4750000000000466e-05, 2.3804999999998272e-05, 2.3820000000000785e-05, 2.094499999999791e-05, 2.3806000000001215e-05, 2.284700000000292e-05, 2.1943999999999436e-05, 2.4860999999997552e-05, 1.9972000000000045e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.588" endtime="20201112 09:43:19.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.584" endtime="20201112 09:43:19.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.597" endtime="20201112 09:43:19.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.601" endtime="20201112 09:43:19.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.599" endtime="20201112 09:43:19.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.595" endtime="20201112 09:43:19.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.223" endtime="20201112 09:43:19.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.222" endtime="20201112 09:43:19.621"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.630" endtime="20201112 09:43:19.645"></status>
</kw>
<msg timestamp="20201112 09:43:19.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.629" endtime="20201112 09:43:19.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.647" endtime="20201112 09:43:19.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.649" endtime="20201112 09:43:19.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.626" endtime="20201112 09:43:19.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.624" endtime="20201112 09:43:19.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.659" endtime="20201112 09:43:19.943"></status>
</kw>
<msg timestamp="20201112 09:43:19.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.658" endtime="20201112 09:43:19.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.947" endtime="20201112 09:43:19.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.955" endtime="20201112 09:43:19.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.655" endtime="20201112 09:43:19.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.653" endtime="20201112 09:43:19.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.962" level="INFO">${RESULT} = [{'time': 0.020033486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.020063944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:19.959" endtime="20201112 09:43:19.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.975" level="INFO">${ACCURACY} = {'diff': [7.5419999999992715e-06, 2.4763000000000562e-05, 1.9013999999997755e-05, 2.4790999999999702e-05, 2.3792000000001645e-05, 1.9999999999999185e-05, 2.4749999999996997e-05, 2.1901999999997257e-05...</msg>
<status status="PASS" starttime="20201112 09:43:19.963" endtime="20201112 09:43:19.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.980" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.979" endtime="20201112 09:43:19.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.982" level="INFO">VALUE: [7.5419999999992715e-06, 2.4763000000000562e-05, 1.9013999999997755e-05, 2.4790999999999702e-05, 2.3792000000001645e-05, 1.9999999999999185e-05, 2.4749999999996997e-05, 2.1901999999997257e-05, 2.3846999999996982e-05, 1.9013999999997755e-05, 2.4693999999998717e-05, 1.998699999999909e-05, 2.0943999999998436e-05, 2.091699999999877e-05, 1.9027999999997325e-05, 1.9999999999999185e-05, 1.9985999999999615e-05, 2.094499999999791e-05, 2.57230000000018e-05, 1.991700000000124e-05, 2.095900000000095e-05, 2.570899999999876e-05, 2.093099999999834e-05, 2.2848000000002394e-05, 1.9985999999999615e-05, 2.284699999999945e-05, 2.4764000000000036e-05, 2.0944000000001906e-05, 2.188900000000063e-05, 2.087500000000006e-05, 2.3805999999997746e-05, 2.093100000000181e-05, 2.187500000000106e-05, 2.4778000000003075e-05, 2.0943999999998436e-05, 2.386100000000002e-05, 2.3820000000000785e-05, 2.3805999999997746e-05, 2.384700000000045e-05, 2.193099999999934e-05, 2.5693999999999717e-05, 2.001299999999928e-05, 2.5708000000002756e-05, 2.195899999999848e-05, 2.0042000000001364e-05, 2.4764000000000036e-05, 2.3806000000001215e-05, 1.9985999999999615e-05, 1.9000000000001654e-05, 1.9985999999999615e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.981" endtime="20201112 09:43:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.976" endtime="20201112 09:43:19.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.986" endtime="20201112 09:43:19.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.990" endtime="20201112 09:43:20.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.988" endtime="20201112 09:43:20.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.984" endtime="20201112 09:43:20.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.622" endtime="20201112 09:43:20.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.622" endtime="20201112 09:43:20.011"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.019" endtime="20201112 09:43:20.040"></status>
</kw>
<msg timestamp="20201112 09:43:20.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.018" endtime="20201112 09:43:20.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.042" endtime="20201112 09:43:20.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.044" endtime="20201112 09:43:20.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.015" endtime="20201112 09:43:20.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.013" endtime="20201112 09:43:20.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.054" endtime="20201112 09:43:20.340"></status>
</kw>
<msg timestamp="20201112 09:43:20.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.053" endtime="20201112 09:43:20.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.345" endtime="20201112 09:43:20.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.353" endtime="20201112 09:43:20.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.050" endtime="20201112 09:43:20.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.048" endtime="20201112 09:43:20.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.359" level="INFO">${RESULT} = [{'time': 0.022908486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.022938944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.356" endtime="20201112 09:43:20.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.373" level="INFO">${ACCURACY} = {'diff': [6.5969999999970774e-06, 2.3818999999997842e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.4749999999996997e-05, 2.0929999999998866e-05, 2.2847999999998925e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:20.360" endtime="20201112 09:43:20.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.377" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.376" endtime="20201112 09:43:20.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.380" level="INFO">VALUE: [6.5969999999970774e-06, 2.3818999999997842e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.4749999999996997e-05, 2.0929999999998866e-05, 2.2847999999998925e-05, 2.473700000000037e-05, 2.094500000000138e-05, 2.286099999999902e-05, 2.4777999999999606e-05, 2.4749999999996997e-05, 2.0000000000002655e-05, 1.997299999999952e-05, 2.286100000000249e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 2.4735999999997427e-05, 2.284700000000292e-05, 2.093100000000181e-05, 2.4750000000000466e-05, 1.9958000000000475e-05, 2.3777999999998606e-05, 2.4790999999999702e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.0013999999998755e-05, 2.3805999999997746e-05, 2.5693999999999717e-05, 2.4777999999999606e-05, 1.9958000000000475e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 2.3764000000002505e-05, 2.3806000000001215e-05, 2.2819999999999785e-05, 2.3763000000003032e-05, 2.187500000000106e-05, 2.094500000000138e-05, 1.9986000000003085e-05, 2.3804999999998272e-05, 2.3818999999997842e-05, 2.3805999999997746e-05, 1.905500000000046e-05, 2.2833999999999355e-05, 2.094499999999791e-05, 2.5707999999999287e-05, 2.3792000000001645e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.379" endtime="20201112 09:43:20.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.374" endtime="20201112 09:43:20.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.384" endtime="20201112 09:43:20.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.388" endtime="20201112 09:43:20.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.386" endtime="20201112 09:43:20.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.382" endtime="20201112 09:43:20.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.012" endtime="20201112 09:43:20.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.011" endtime="20201112 09:43:20.409"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.418" endtime="20201112 09:43:20.434"></status>
</kw>
<msg timestamp="20201112 09:43:20.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.416" endtime="20201112 09:43:20.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.435" endtime="20201112 09:43:20.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.438" endtime="20201112 09:43:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.414" endtime="20201112 09:43:20.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.411" endtime="20201112 09:43:20.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.448" endtime="20201112 09:43:20.734"></status>
</kw>
<msg timestamp="20201112 09:43:20.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.446" endtime="20201112 09:43:20.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.739" endtime="20201112 09:43:20.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.747" endtime="20201112 09:43:20.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.444" endtime="20201112 09:43:20.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.442" endtime="20201112 09:43:20.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.754" level="INFO">${RESULT} = [{'time': 0.021388375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999999442e-05, 'source_diff': 2.7638999999999442e-05}, {'time': 0.021418236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.750" endtime="20201112 09:43:20.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.767" level="INFO">${ACCURACY} = {'diff': [2.7638999999999442e-05, 2.187500000000106e-05, 2.665300000000148e-05, 2.3806000000001215e-05, 2.3804999999998272e-05, 2.091699999999877e-05, 2.5736000000001896e-05, 1.8985999999998615e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:20.755" endtime="20201112 09:43:20.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.771" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.770" endtime="20201112 09:43:20.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.774" level="INFO">VALUE: [2.7638999999999442e-05, 2.187500000000106e-05, 2.665300000000148e-05, 2.3806000000001215e-05, 2.3804999999998272e-05, 2.091699999999877e-05, 2.5736000000001896e-05, 1.8985999999998615e-05, 2.4679999999999147e-05, 2.186100000000149e-05, 1.9985999999999615e-05, 2.4736000000000896e-05, 2.5707999999999287e-05, 2.284699999999945e-05, 2.19030000000002e-05, 2.0848000000000394e-05, 2.179100000000017e-05, 2.191700000000324e-05, 2.381900000000131e-05, 2.2847999999998925e-05, 2.568099999999962e-05, 2.4833999999997886e-05, 1.9985999999999615e-05, 2.286100000000249e-05, 2.0915999999999296e-05, 2.188900000000063e-05, 2.3791999999998176e-05, 1.9944000000000905e-05, 1.9944000000000905e-05, 2.4777999999999606e-05, 2.3763999999999036e-05, 2.091700000000224e-05, 1.994500000000038e-05, 2.3806000000001215e-05, 1.8985999999998615e-05, 2.0929999999998866e-05, 2.3764000000002505e-05, 2.4750000000000466e-05, 2.5693999999999717e-05, 2.193100000000281e-05, 2.4736000000000896e-05, 2.3777999999998606e-05, 2.280500000000074e-05, 1.9985999999999615e-05, 2.4707999999998287e-05, 2.287499999999859e-05, 2.3764000000002505e-05, 2.4832999999998412e-05, 2.0943999999998436e-05, 2.3887999999999687e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.772" endtime="20201112 09:43:20.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.768" endtime="20201112 09:43:20.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.777" endtime="20201112 09:43:20.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.781" endtime="20201112 09:43:20.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.779" endtime="20201112 09:43:20.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.776" endtime="20201112 09:43:20.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.410" endtime="20201112 09:43:20.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.409" endtime="20201112 09:43:20.802"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.810" endtime="20201112 09:43:20.825"></status>
</kw>
<msg timestamp="20201112 09:43:20.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.809" endtime="20201112 09:43:20.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.827" endtime="20201112 09:43:20.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.829" endtime="20201112 09:43:20.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.806" endtime="20201112 09:43:20.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.804" endtime="20201112 09:43:20.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.839" endtime="20201112 09:43:21.125"></status>
</kw>
<msg timestamp="20201112 09:43:21.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:20.838" endtime="20201112 09:43:21.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:21.129" endtime="20201112 09:43:21.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.137" endtime="20201112 09:43:21.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.835" endtime="20201112 09:43:21.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.833" endtime="20201112 09:43:21.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.144" level="INFO">${RESULT} = [{'time': 0.020478514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.020509417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.141" endtime="20201112 09:43:21.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.158" level="INFO">${ACCURACY} = {'diff': [7.514000000000132e-06, 2.094499999999791e-05, 1.9972000000000045e-05, 2.287499999999859e-05, 2.3792000000001645e-05, 2.094499999999791e-05, 2.091700000000224e-05, 2.4735999999997427e-05, 2.2...</msg>
<status status="PASS" starttime="20201112 09:43:21.145" endtime="20201112 09:43:21.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.163" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.162" endtime="20201112 09:43:21.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.165" level="INFO">VALUE: [7.514000000000132e-06, 2.094499999999791e-05, 1.9972000000000045e-05, 2.287499999999859e-05, 2.3792000000001645e-05, 2.094499999999791e-05, 2.091700000000224e-05, 2.4735999999997427e-05, 2.2791999999997176e-05, 2.4764000000000036e-05, 2.093099999999834e-05, 2.0000000000002655e-05, 2.0915999999999296e-05, 2.4763999999996567e-05, 2.284699999999945e-05, 2.3777999999998606e-05, 2.4832999999998412e-05, 2.2778000000001075e-05, 2.091700000000224e-05, 2.3792000000001645e-05, 2.473700000000037e-05, 2.4764000000000036e-05, 2.187499999999759e-05, 2.187500000000106e-05, 2.572299999999833e-05, 2.093100000000181e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.4749999999996997e-05, 2.4735999999997427e-05, 1.9999999999999185e-05, 2.093099999999834e-05, 1.995899999999995e-05, 2.287499999999859e-05, 2.570899999999876e-05, 2.283299999999988e-05, 2.0958000000001475e-05, 1.993100000000081e-05, 2.5693999999999717e-05, 2.287500000000206e-05, 2.288899999999816e-05, 1.9972000000000045e-05, 2.088899999999963e-05, 2.3792000000001645e-05, 1.9972000000000045e-05, 2.2791999999997176e-05, 2.5680000000000147e-05, 2.193099999999934e-05, 2.094500000000138e-05, 2.383300000000088e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.164" endtime="20201112 09:43:21.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.159" endtime="20201112 09:43:21.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.169" endtime="20201112 09:43:21.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.173" endtime="20201112 09:43:21.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.171" endtime="20201112 09:43:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.167" endtime="20201112 09:43:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.803" endtime="20201112 09:43:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.802" endtime="20201112 09:43:21.193"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.202" endtime="20201112 09:43:21.222"></status>
</kw>
<msg timestamp="20201112 09:43:21.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.200" endtime="20201112 09:43:21.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.224" endtime="20201112 09:43:21.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.226" endtime="20201112 09:43:21.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.198" endtime="20201112 09:43:21.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.196" endtime="20201112 09:43:21.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.236" endtime="20201112 09:43:21.521"></status>
</kw>
<msg timestamp="20201112 09:43:21.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.235" endtime="20201112 09:43:21.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.526" endtime="20201112 09:43:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.534" endtime="20201112 09:43:21.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.232" endtime="20201112 09:43:21.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.230" endtime="20201112 09:43:21.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.541" level="INFO">${RESULT} = [{'time': 0.020668333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1902000000000726e-05, 'source_diff': 2.1902000000000726e-05}, {'time': 0.020699042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:21.537" endtime="20201112 09:43:21.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.554" level="INFO">${ACCURACY} = {'diff': [2.1902000000000726e-05, 2.186100000000149e-05, 2.5764000000001036e-05, 2.188899999999716e-05, 2.188900000000063e-05, 2.280500000000074e-05, 2.186100000000149e-05, 2.284699999999945e-05, 2.47...</msg>
<status status="PASS" starttime="20201112 09:43:21.542" endtime="20201112 09:43:21.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.558" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.557" endtime="20201112 09:43:21.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.561" level="INFO">VALUE: [2.1902000000000726e-05, 2.186100000000149e-05, 2.5764000000001036e-05, 2.188899999999716e-05, 2.188900000000063e-05, 2.280500000000074e-05, 2.186100000000149e-05, 2.284699999999945e-05, 2.4792000000002645e-05, 2.1819999999998785e-05, 2.4791999999999176e-05, 2.4736000000000896e-05, 1.9957999999997006e-05, 2.188900000000063e-05, 2.3820000000000785e-05, 2.093099999999834e-05, 2.194499999999891e-05, 2.0958000000001475e-05, 2.286099999999902e-05, 1.995899999999995e-05, 1.9999999999999185e-05, 2.093100000000181e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 1.9972000000000045e-05, 2.0000000000002655e-05, 2.283299999999988e-05, 1.994500000000038e-05, 2.0944000000001906e-05, 2.186100000000149e-05, 2.286100000000249e-05, 2.287499999999859e-05, 2.3791999999998176e-05, 2.086100000000049e-05, 2.4792000000002645e-05, 2.284700000000292e-05, 1.9042000000000364e-05, 2.3832999999997412e-05, 2.181899999999931e-05, 2.3791999999998176e-05, 2.2778000000001075e-05, 2.091700000000224e-05, 2.5764000000001036e-05, 2.4750000000000466e-05, 2.380500000000174e-05, 1.994500000000038e-05, 1.991700000000124e-05, 2.193099999999934e-05, 2.4764000000000036e-05, 2.4777999999999606e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.559" endtime="20201112 09:43:21.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.555" endtime="20201112 09:43:21.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.564" endtime="20201112 09:43:21.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.568" endtime="20201112 09:43:21.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.566" endtime="20201112 09:43:21.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.563" endtime="20201112 09:43:21.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.194" endtime="20201112 09:43:21.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.194" endtime="20201112 09:43:21.589"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.597" endtime="20201112 09:43:21.615"></status>
</kw>
<msg timestamp="20201112 09:43:21.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.596" endtime="20201112 09:43:21.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.616" endtime="20201112 09:43:21.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.619" endtime="20201112 09:43:21.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.593" endtime="20201112 09:43:21.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.591" endtime="20201112 09:43:21.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.629" endtime="20201112 09:43:21.916"></status>
</kw>
<msg timestamp="20201112 09:43:21.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:21.627" endtime="20201112 09:43:21.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:21.920" endtime="20201112 09:43:21.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.928" endtime="20201112 09:43:21.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.625" endtime="20201112 09:43:21.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.623" endtime="20201112 09:43:21.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.935" level="INFO">${RESULT} = [{'time': 0.022169611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.022200181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.931" endtime="20201112 09:43:21.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.948" level="INFO">${ACCURACY} = {'diff': [6.611000000000117e-06, 1.9999999999999185e-05, 2.191699999999977e-05, 2.4735999999997427e-05, 2.29169999999973e-05, 2.3792000000001645e-05, 2.281900000000031e-05, 2.5735999999998427e-05, 1.9...</msg>
<status status="PASS" starttime="20201112 09:43:21.936" endtime="20201112 09:43:21.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.952" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.951" endtime="20201112 09:43:21.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.955" level="INFO">VALUE: [6.611000000000117e-06, 1.9999999999999185e-05, 2.191699999999977e-05, 2.4735999999997427e-05, 2.29169999999973e-05, 2.3792000000001645e-05, 2.281900000000031e-05, 2.5735999999998427e-05, 1.9972000000000045e-05, 2.5707999999999287e-05, 2.4764000000000036e-05, 1.9944000000000905e-05, 2.091699999999877e-05, 1.9972000000000045e-05, 2.2833999999999355e-05, 2.08890000000031e-05, 2.188900000000063e-05, 2.1916000000000296e-05, 1.9958000000000475e-05, 2.27770000000016e-05, 2.186100000000149e-05, 2.386100000000002e-05, 2.188900000000063e-05, 2.2820000000003254e-05, 2.2792000000000645e-05, 2.287499999999859e-05, 2.095899999999748e-05, 2.284699999999945e-05, 2.187500000000106e-05, 2.1848000000001394e-05, 2.4750000000000466e-05, 2.2792000000000645e-05, 1.9028000000000794e-05, 2.3833999999996885e-05, 2.187500000000106e-05, 2.566700000000005e-05, 2.094499999999791e-05, 2.284699999999945e-05, 2.0901999999999726e-05, 2.284699999999945e-05, 2.0915999999999296e-05, 2.3749999999999466e-05, 2.1929999999999866e-05, 2.5721999999998857e-05, 2.2833999999999355e-05, 1.993100000000081e-05, 1.904100000000089e-05, 2.194499999999891e-05, 2.286099999999902e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.953" endtime="20201112 09:43:21.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.949" endtime="20201112 09:43:21.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.958" endtime="20201112 09:43:21.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.962" endtime="20201112 09:43:21.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.960" endtime="20201112 09:43:21.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.957" endtime="20201112 09:43:21.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.590" endtime="20201112 09:43:21.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.589" endtime="20201112 09:43:21.983"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.992" endtime="20201112 09:43:22.011"></status>
</kw>
<msg timestamp="20201112 09:43:22.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.990" endtime="20201112 09:43:22.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.013" endtime="20201112 09:43:22.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.015" endtime="20201112 09:43:22.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.987" endtime="20201112 09:43:22.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.985" endtime="20201112 09:43:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.025" endtime="20201112 09:43:22.311"></status>
</kw>
<msg timestamp="20201112 09:43:22.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025099903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.024" endtime="20201112 09:43:22.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025099903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.315" endtime="20201112 09:43:22.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.323" endtime="20201112 09:43:22.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.021" endtime="20201112 09:43:22.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.020" endtime="20201112 09:43:22.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.330" level="INFO">${RESULT} = [{'time': 0.025105514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.025135292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:22.327" endtime="20201112 09:43:22.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.343" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 1.9000000000001654e-05, 2.288900000000163e-05, 2.094499999999791e-05, 2.0985999999997146e-05, 2.2848000000002394e-05, 1.9972000000000045e-05, 2.3819999999997316e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:22.331" endtime="20201112 09:43:22.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.348" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.347" endtime="20201112 09:43:22.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.350" level="INFO">VALUE: [5.610999999999117e-06, 1.9000000000001654e-05, 2.288900000000163e-05, 2.094499999999791e-05, 2.0985999999997146e-05, 2.2848000000002394e-05, 1.9972000000000045e-05, 2.3819999999997316e-05, 2.0888000000000156e-05, 2.186099999999802e-05, 2.283299999999988e-05, 2.4750000000000466e-05, 2.3820000000000785e-05, 2.4791999999999176e-05, 1.9930000000001336e-05, 2.4708000000001756e-05, 2.1000000000000185e-05, 2.0014000000002224e-05, 2.4764000000000036e-05, 2.188899999999716e-05, 2.094499999999791e-05, 2.3847999999999925e-05, 2.2833999999999355e-05, 2.3790999999998702e-05, 2.3778000000002075e-05, 2.4750000000000466e-05, 2.091700000000224e-05, 2.0972000000001045e-05, 2.3735999999999896e-05, 2.0014000000002224e-05, 2.3791999999998176e-05, 2.088899999999963e-05, 1.9985999999999615e-05, 1.9041999999996895e-05, 2.483300000000188e-05, 2.4750000000000466e-05, 1.9999999999999185e-05, 2.287500000000206e-05, 2.086100000000049e-05, 2.4750000000000466e-05, 2.5721999999998857e-05, 2.3832999999997412e-05, 2.09029999999992e-05, 2.091699999999877e-05, 1.9027999999997325e-05, 2.286099999999902e-05, 2.288900000000163e-05, 2.188900000000063e-05, 2.4722000000001326e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.349" endtime="20201112 09:43:22.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.344" endtime="20201112 09:43:22.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.354" endtime="20201112 09:43:22.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.357" endtime="20201112 09:43:22.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.356" endtime="20201112 09:43:22.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.352" endtime="20201112 09:43:22.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.984" endtime="20201112 09:43:22.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.983" endtime="20201112 09:43:22.378"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.387" endtime="20201112 09:43:22.408"></status>
</kw>
<msg timestamp="20201112 09:43:22.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.385" endtime="20201112 09:43:22.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.410" endtime="20201112 09:43:22.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.412" endtime="20201112 09:43:22.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.383" endtime="20201112 09:43:22.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.381" endtime="20201112 09:43:22.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.423" endtime="20201112 09:43:22.708"></status>
</kw>
<msg timestamp="20201112 09:43:22.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.421" endtime="20201112 09:43:22.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.712" endtime="20201112 09:43:22.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.720" endtime="20201112 09:43:22.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.419" endtime="20201112 09:43:22.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.417" endtime="20201112 09:43:22.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.727" level="INFO">${RESULT} = [{'time': 0.021571083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4277000000002694e-05, 'source_diff': 3.4277000000002694e-05}, {'time': 0.021601125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.723" endtime="20201112 09:43:22.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.741" level="INFO">${ACCURACY} = {'diff': [3.4277000000002694e-05, 1.9042000000000364e-05, 2.286099999999902e-05, 2.0013999999998755e-05, 2.5707999999999287e-05, 2.0972000000001045e-05, 2.2819999999999785e-05, 2.3806000000001215e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:22.728" endtime="20201112 09:43:22.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.746" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.745" endtime="20201112 09:43:22.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.748" level="INFO">VALUE: [3.4277000000002694e-05, 1.9042000000000364e-05, 2.286099999999902e-05, 2.0013999999998755e-05, 2.5707999999999287e-05, 2.0972000000001045e-05, 2.2819999999999785e-05, 2.3806000000001215e-05, 2.093100000000181e-05, 1.9014000000001224e-05, 2.286100000000249e-05, 2.093100000000181e-05, 2.4777999999999606e-05, 1.9042000000000364e-05, 2.3818999999997842e-05, 2.3819999999997316e-05, 2.188900000000063e-05, 2.4764000000000036e-05, 2.4790999999999702e-05, 2.1901999999997257e-05, 1.9014000000001224e-05, 2.0957999999998006e-05, 2.1916000000000296e-05, 2.188900000000063e-05, 2.287499999999859e-05, 1.9027999999997325e-05, 2.3790999999998702e-05, 2.09029999999992e-05, 2.0944000000001906e-05, 2.5764000000001036e-05, 2.2847999999998925e-05, 1.9985999999999615e-05, 2.5666000000000577e-05, 1.9999999999999185e-05, 2.3819999999997316e-05, 2.570899999999876e-05, 2.4778000000003075e-05, 2.0957999999998006e-05, 2.3790999999998702e-05, 2.57230000000018e-05, 2.568099999999962e-05, 2.1902000000000726e-05, 2.3806000000001215e-05, 2.088899999999963e-05, 2.093099999999834e-05, 1.8987000000001558e-05, 2.5722000000002326e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.5764000000001036e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.747" endtime="20201112 09:43:22.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.742" endtime="20201112 09:43:22.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.752" endtime="20201112 09:43:22.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.755" endtime="20201112 09:43:22.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.754" endtime="20201112 09:43:22.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.750" endtime="20201112 09:43:22.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.379" endtime="20201112 09:43:22.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.379" endtime="20201112 09:43:22.776"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.785" endtime="20201112 09:43:22.801"></status>
</kw>
<msg timestamp="20201112 09:43:22.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.783" endtime="20201112 09:43:22.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.802" endtime="20201112 09:43:22.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.805" endtime="20201112 09:43:22.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.781" endtime="20201112 09:43:22.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.779" endtime="20201112 09:43:22.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.815" endtime="20201112 09:43:23.100"></status>
</kw>
<msg timestamp="20201112 09:43:23.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.813" endtime="20201112 09:43:23.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.104" endtime="20201112 09:43:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.112" endtime="20201112 09:43:23.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.811" endtime="20201112 09:43:23.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.809" endtime="20201112 09:43:23.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.119" level="INFO">${RESULT} = [{'time': 0.020538819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.902700000000132e-05, 'source_diff': 1.902700000000132e-05}, {'time': 0.020569972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.116" endtime="20201112 09:43:23.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.132" level="INFO">${ACCURACY} = {'diff': [1.902700000000132e-05, 2.563899999999744e-05, 2.088899999999963e-05, 2.187500000000106e-05, 1.9985999999999615e-05, 2.094500000000138e-05, 2.3791999999998176e-05, 2.1776999999997132e-05, 2.5...</msg>
<status status="PASS" starttime="20201112 09:43:23.120" endtime="20201112 09:43:23.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.137" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.136" endtime="20201112 09:43:23.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.139" level="INFO">VALUE: [1.902700000000132e-05, 2.563899999999744e-05, 2.088899999999963e-05, 2.187500000000106e-05, 1.9985999999999615e-05, 2.094500000000138e-05, 2.3791999999998176e-05, 2.1776999999997132e-05, 2.565300000000048e-05, 2.4722000000001326e-05, 2.1929999999999866e-05, 2.3763999999999036e-05, 2.187500000000106e-05, 1.9958000000000475e-05, 2.4750000000000466e-05, 2.662500000000234e-05, 2.4736000000000896e-05, 2.4818999999998842e-05, 2.3820000000000785e-05, 2.184699999999845e-05, 2.4736000000000896e-05, 2.3832999999997412e-05, 2.095899999999748e-05, 2.470899999999776e-05, 2.2750000000001935e-05, 2.381900000000131e-05, 1.997299999999952e-05, 2.186099999999802e-05, 2.383300000000088e-05, 2.4791999999999176e-05, 2.2847999999998925e-05, 2.187499999999759e-05, 2.4749999999996997e-05, 2.568099999999962e-05, 2.2735999999998896e-05, 2.2833999999999355e-05, 2.284700000000292e-05, 2.4722000000001326e-05, 2.186099999999802e-05, 2.288899999999816e-05, 2.4763000000000562e-05, 2.1901999999997257e-05, 2.287499999999859e-05, 2.566700000000005e-05, 2.191699999999977e-05, 2.2804999999997272e-05, 2.4722000000001326e-05, 2.3806000000001215e-05, 2.3806000000001215e-05, 2.09029999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.138" endtime="20201112 09:43:23.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.133" endtime="20201112 09:43:23.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.143" endtime="20201112 09:43:23.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.146" endtime="20201112 09:43:23.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.145" endtime="20201112 09:43:23.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.141" endtime="20201112 09:43:23.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.777" endtime="20201112 09:43:23.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.776" endtime="20201112 09:43:23.167"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.176" endtime="20201112 09:43:23.192"></status>
</kw>
<msg timestamp="20201112 09:43:23.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.174" endtime="20201112 09:43:23.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.194" endtime="20201112 09:43:23.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.196" endtime="20201112 09:43:23.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.172" endtime="20201112 09:43:23.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.170" endtime="20201112 09:43:23.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.206" endtime="20201112 09:43:23.495"></status>
</kw>
<msg timestamp="20201112 09:43:23.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.205" endtime="20201112 09:43:23.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021311639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.499" endtime="20201112 09:43:23.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.507" endtime="20201112 09:43:23.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.202" endtime="20201112 09:43:23.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.201" endtime="20201112 09:43:23.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.514" level="INFO">${RESULT} = [{'time': 0.021339347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.021369014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:23.510" endtime="20201112 09:43:23.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.527" level="INFO">${ACCURACY} = {'diff': [2.7708000000001287e-05, 2.091699999999877e-05, 1.993100000000081e-05, 1.994500000000038e-05, 2.5764000000001036e-05, 2.188900000000063e-05, 1.9958000000000475e-05, 2.2806000000000215e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:23.515" endtime="20201112 09:43:23.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.531" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.530" endtime="20201112 09:43:23.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.534" level="INFO">VALUE: [2.7708000000001287e-05, 2.091699999999877e-05, 1.993100000000081e-05, 1.994500000000038e-05, 2.5764000000001036e-05, 2.188900000000063e-05, 1.9958000000000475e-05, 2.2806000000000215e-05, 2.4749999999996997e-05, 2.1916000000000296e-05, 1.994500000000038e-05, 2.091699999999877e-05, 2.470900000000123e-05, 2.1847999999997925e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.0944000000001906e-05, 2.287500000000206e-05, 2.3806000000001215e-05, 2.569499999999919e-05, 2.569499999999919e-05, 2.186099999999802e-05, 2.288899999999816e-05, 1.9985999999999615e-05, 2.4791999999999176e-05, 2.19030000000002e-05, 1.9985999999999615e-05, 2.093100000000181e-05, 2.4763000000000562e-05, 2.19030000000002e-05, 2.1929999999999866e-05, 2.187500000000106e-05, 2.087500000000006e-05, 2.186100000000149e-05, 2.0986000000000615e-05, 2.379100000000217e-05, 2.19030000000002e-05, 2.284699999999945e-05, 1.9929999999997866e-05, 1.9944000000000905e-05, 2.4764000000000036e-05, 2.186099999999802e-05, 2.086100000000049e-05, 2.3792000000001645e-05, 1.9944000000000905e-05, 2.184700000000192e-05, 2.19030000000002e-05, 2.5707999999999287e-05, 2.19030000000002e-05, 2.0930000000002336e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.532" endtime="20201112 09:43:23.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.528" endtime="20201112 09:43:23.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.537" endtime="20201112 09:43:23.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.541" endtime="20201112 09:43:23.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.539" endtime="20201112 09:43:23.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.536" endtime="20201112 09:43:23.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.168" endtime="20201112 09:43:23.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.168" endtime="20201112 09:43:23.562"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.570" endtime="20201112 09:43:23.590"></status>
</kw>
<msg timestamp="20201112 09:43:23.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.569" endtime="20201112 09:43:23.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.591" endtime="20201112 09:43:23.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.594" endtime="20201112 09:43:23.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.566" endtime="20201112 09:43:23.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.564" endtime="20201112 09:43:23.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.604" endtime="20201112 09:43:23.889"></status>
</kw>
<msg timestamp="20201112 09:43:23.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023633306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.602" endtime="20201112 09:43:23.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023633306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.893" endtime="20201112 09:43:23.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.902" endtime="20201112 09:43:23.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.600" endtime="20201112 09:43:23.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.598" endtime="20201112 09:43:23.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.908" level="INFO">${RESULT} = [{'time': 0.023663806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0499999999999278e-05, 'source_diff': 3.0499999999999278e-05}, {'time': 0.023694069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:23.905" endtime="20201112 09:43:23.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.922" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 2.0916000000002766e-05, 2.3763999999999036e-05, 2.473700000000037e-05, 2.4777999999999606e-05, 1.8971999999999045e-05, 2.3777999999998606e-05, 2.2847999999998925e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:23.909" endtime="20201112 09:43:23.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.926" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.925" endtime="20201112 09:43:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.929" level="INFO">VALUE: [3.0499999999999278e-05, 2.0916000000002766e-05, 2.3763999999999036e-05, 2.473700000000037e-05, 2.4777999999999606e-05, 1.8971999999999045e-05, 2.3777999999998606e-05, 2.2847999999998925e-05, 1.9985999999999615e-05, 2.2819999999999785e-05, 2.093100000000181e-05, 2.4722000000001326e-05, 2.284699999999945e-05, 2.5680000000000147e-05, 2.5680000000000147e-05, 2.19030000000002e-05, 1.9972000000000045e-05, 2.2819999999999785e-05, 2.1778000000000075e-05, 2.3776999999999132e-05, 2.4750000000000466e-05, 2.091699999999877e-05, 2.3806000000001215e-05, 2.3763999999999036e-05, 2.466699999999905e-05, 2.286099999999902e-05, 2.0972000000001045e-05, 2.3833999999996885e-05, 2.4750000000000466e-05, 1.8971999999999045e-05, 2.184699999999845e-05, 2.4777999999999606e-05, 2.2848000000002394e-05, 2.568099999999962e-05, 2.470900000000123e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 2.1848000000001394e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 2.284699999999945e-05, 2.5763999999997567e-05, 2.4736000000000896e-05, 1.9943999999997436e-05, 2.1957999999999006e-05, 1.9999999999999185e-05, 2.088899999999963e-05, 2.0915999999999296e-05, 2.194499999999891e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.927" endtime="20201112 09:43:23.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.923" endtime="20201112 09:43:23.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.932" endtime="20201112 09:43:23.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.936" endtime="20201112 09:43:23.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.934" endtime="20201112 09:43:23.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.931" endtime="20201112 09:43:23.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.563" endtime="20201112 09:43:23.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.562" endtime="20201112 09:43:23.957"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.965" endtime="20201112 09:43:23.981"></status>
</kw>
<msg timestamp="20201112 09:43:23.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.964" endtime="20201112 09:43:23.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.982" endtime="20201112 09:43:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.985" endtime="20201112 09:43:23.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.961" endtime="20201112 09:43:23.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.959" endtime="20201112 09:43:23.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.995" endtime="20201112 09:43:24.281"></status>
</kw>
<msg timestamp="20201112 09:43:24.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.993" endtime="20201112 09:43:24.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.285" endtime="20201112 09:43:24.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.293" endtime="20201112 09:43:24.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.991" endtime="20201112 09:43:24.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.989" endtime="20201112 09:43:24.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.300" level="INFO">${RESULT} = [{'time': 0.020557042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.020587306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.297" endtime="20201112 09:43:24.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.315" level="INFO">${ACCURACY} = {'diff': [8.430999999999716e-06, 2.187500000000106e-05, 2.1902000000000726e-05, 2.093099999999834e-05, 2.5721999999998857e-05, 2.283299999999988e-05, 2.287500000000206e-05, 2.3804999999998272e-05, 2.2...</msg>
<status status="PASS" starttime="20201112 09:43:24.301" endtime="20201112 09:43:24.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.319" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.318" endtime="20201112 09:43:24.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.322" level="INFO">VALUE: [8.430999999999716e-06, 2.187500000000106e-05, 2.1902000000000726e-05, 2.093099999999834e-05, 2.5721999999998857e-05, 2.283299999999988e-05, 2.287500000000206e-05, 2.3804999999998272e-05, 2.284699999999945e-05, 2.286100000000249e-05, 2.0027999999998325e-05, 2.4834000000001355e-05, 1.997299999999952e-05, 1.9985999999999615e-05, 2.5736000000001896e-05, 2.094500000000138e-05, 1.9985999999999615e-05, 2.188900000000063e-05, 2.0901999999999726e-05, 2.3749999999999466e-05, 2.5777999999997137e-05, 2.3805999999997746e-05, 1.9028000000000794e-05, 1.9985999999999615e-05, 2.4722000000001326e-05, 2.3806000000001215e-05, 2.284699999999945e-05, 1.9972000000000045e-05, 2.5764000000001036e-05, 2.094499999999791e-05, 1.9958000000000475e-05, 2.3790999999998702e-05, 2.0958000000001475e-05, 2.3806000000001215e-05, 2.3818999999997842e-05, 2.0042000000001364e-05, 2.470900000000123e-05, 2.187499999999759e-05, 2.197299999999805e-05, 2.093099999999834e-05, 2.088899999999963e-05, 1.995899999999995e-05, 2.569499999999919e-05, 2.5735999999998427e-05, 2.4777999999999606e-05, 2.4777000000000132e-05, 2.0986000000000615e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.19030000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.320" endtime="20201112 09:43:24.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.316" endtime="20201112 09:43:24.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.325" endtime="20201112 09:43:24.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.329" endtime="20201112 09:43:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.327" endtime="20201112 09:43:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.323" endtime="20201112 09:43:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.958" endtime="20201112 09:43:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.957" endtime="20201112 09:43:24.349"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.358" endtime="20201112 09:43:24.377"></status>
</kw>
<msg timestamp="20201112 09:43:24.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.357" endtime="20201112 09:43:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.379" endtime="20201112 09:43:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.381" endtime="20201112 09:43:24.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.354" endtime="20201112 09:43:24.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.352" endtime="20201112 09:43:24.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.391" endtime="20201112 09:43:24.677"></status>
</kw>
<msg timestamp="20201112 09:43:24.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024683167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.390" endtime="20201112 09:43:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024683167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.681" endtime="20201112 09:43:24.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.689" endtime="20201112 09:43:24.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.387" endtime="20201112 09:43:24.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.386" endtime="20201112 09:43:24.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.696" level="INFO">${RESULT} = [{'time': 0.024683167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.615299999999792e-05, 'source_diff': 1.615299999999792e-05}, {'time': 0.024713306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.692" endtime="20201112 09:43:24.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.709" level="INFO">${ACCURACY} = {'diff': [1.615299999999792e-05, 1.9028000000000794e-05, 2.4764000000000036e-05, 2.3806000000001215e-05, 2.091699999999877e-05, 2.0958000000001475e-05, 2.4722000000001326e-05, 1.904100000000089e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:24.697" endtime="20201112 09:43:24.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.714" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.713" endtime="20201112 09:43:24.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.716" level="INFO">VALUE: [1.615299999999792e-05, 1.9028000000000794e-05, 2.4764000000000036e-05, 2.3806000000001215e-05, 2.091699999999877e-05, 2.0958000000001475e-05, 2.4722000000001326e-05, 1.904100000000089e-05, 1.904099999999742e-05, 2.5750000000001466e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 2.188900000000063e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.286099999999902e-05, 2.1929999999999866e-05, 2.191699999999977e-05, 2.1013999999999755e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 1.990300000000167e-05, 1.9999999999999185e-05, 2.0930000000002336e-05, 2.094499999999791e-05, 2.19030000000002e-05, 2.3820000000000785e-05, 2.383300000000088e-05, 2.095900000000095e-05, 1.9027999999997325e-05, 2.570899999999876e-05, 2.2819999999999785e-05, 2.284699999999945e-05, 2.186099999999802e-05, 2.2806000000000215e-05, 2.2763999999998036e-05, 2.668100000000062e-05, 2.572299999999833e-05, 2.095899999999748e-05, 2.0013999999998755e-05, 1.9944000000000905e-05, 2.4736000000000896e-05, 2.095900000000095e-05, 1.9985999999999615e-05, 2.3834000000000355e-05, 2.5721999999998857e-05, 2.388899999999916e-05, 1.9014000000001224e-05, 2.4777000000000132e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.715" endtime="20201112 09:43:24.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.710" endtime="20201112 09:43:24.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.720" endtime="20201112 09:43:24.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.724" endtime="20201112 09:43:24.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.722" endtime="20201112 09:43:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.718" endtime="20201112 09:43:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.350" endtime="20201112 09:43:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.350" endtime="20201112 09:43:24.745"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.753" endtime="20201112 09:43:24.769"></status>
</kw>
<msg timestamp="20201112 09:43:24.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.752" endtime="20201112 09:43:24.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.771" endtime="20201112 09:43:24.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.773" endtime="20201112 09:43:24.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.749" endtime="20201112 09:43:24.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.747" endtime="20201112 09:43:24.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.783" endtime="20201112 09:43:25.068"></status>
</kw>
<msg timestamp="20201112 09:43:25.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.782" endtime="20201112 09:43:25.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.072" endtime="20201112 09:43:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.080" endtime="20201112 09:43:25.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.779" endtime="20201112 09:43:25.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.777" endtime="20201112 09:43:25.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.087" level="INFO">${RESULT} = [{'time': 0.021485333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6651999999998538e-05, 'source_diff': 2.6651999999998538e-05}, {'time': 0.021515931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.083" endtime="20201112 09:43:25.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.100" level="INFO">${ACCURACY} = {'diff': [2.6651999999998538e-05, 2.094499999999791e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.284699999999945e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.569499999999919e-05, 2.46...</msg>
<status status="PASS" starttime="20201112 09:43:25.088" endtime="20201112 09:43:25.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.105" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.104" endtime="20201112 09:43:25.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.107" level="INFO">VALUE: [2.6651999999998538e-05, 2.094499999999791e-05, 2.4764000000000036e-05, 2.188900000000063e-05, 2.284699999999945e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.569499999999919e-05, 2.4693999999998717e-05, 2.0013999999998755e-05, 2.380500000000174e-05, 2.4750000000000466e-05, 2.093099999999834e-05, 1.9028000000000794e-05, 2.287500000000206e-05, 2.380500000000174e-05, 2.0986000000000615e-05, 2.3820000000000785e-05, 2.3806000000001215e-05, 2.570899999999876e-05, 2.0916000000002766e-05, 2.286100000000249e-05, 1.9957999999997006e-05, 2.283299999999988e-05, 2.0930000000002336e-05, 2.5707999999999287e-05, 2.188900000000063e-05, 2.188900000000063e-05, 2.186100000000149e-05, 2.4721999999997857e-05, 2.5735999999998427e-05, 2.3806000000001215e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.2804999999997272e-05, 1.995899999999995e-05, 2.3804999999998272e-05, 2.093100000000181e-05, 2.286099999999902e-05, 2.188900000000063e-05, 2.094499999999791e-05, 2.286099999999902e-05, 2.4777999999999606e-05, 2.183299999999888e-05, 2.187500000000106e-05, 2.4778000000003075e-05, 1.9972000000000045e-05, 2.5735999999998427e-05, 1.9999999999999185e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.106" endtime="20201112 09:43:25.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.101" endtime="20201112 09:43:25.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.111" endtime="20201112 09:43:25.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.114" endtime="20201112 09:43:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.113" endtime="20201112 09:43:25.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.109" endtime="20201112 09:43:25.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.746" endtime="20201112 09:43:25.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.745" endtime="20201112 09:43:25.135"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.143" endtime="20201112 09:43:25.162"></status>
</kw>
<msg timestamp="20201112 09:43:25.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.142" endtime="20201112 09:43:25.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.163" endtime="20201112 09:43:25.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.166" endtime="20201112 09:43:25.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.139" endtime="20201112 09:43:25.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.137" endtime="20201112 09:43:25.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.176" endtime="20201112 09:43:25.462"></status>
</kw>
<msg timestamp="20201112 09:43:25.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.174" endtime="20201112 09:43:25.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.467" endtime="20201112 09:43:25.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.475" endtime="20201112 09:43:25.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.172" endtime="20201112 09:43:25.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.170" endtime="20201112 09:43:25.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.482" level="INFO">${RESULT} = [{'time': 0.022956333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3374999999998683e-05, 'source_diff': 3.3374999999998683e-05}, {'time': 0.022986861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.478" endtime="20201112 09:43:25.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.495" level="INFO">${ACCURACY} = {'diff': [3.3374999999998683e-05, 2.3792000000001645e-05, 1.9985999999999615e-05, 2.187500000000106e-05, 2.0929999999998866e-05, 2.188900000000063e-05, 2.5722000000002326e-05, 2.5707999999999287e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:25.483" endtime="20201112 09:43:25.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.500" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.499" endtime="20201112 09:43:25.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.502" level="INFO">VALUE: [3.3374999999998683e-05, 2.3792000000001645e-05, 1.9985999999999615e-05, 2.187500000000106e-05, 2.0929999999998866e-05, 2.188900000000063e-05, 2.5722000000002326e-05, 2.5707999999999287e-05, 2.281900000000031e-05, 2.4764000000000036e-05, 1.9999999999999185e-05, 2.5707999999999287e-05, 2.287499999999859e-05, 1.997299999999952e-05, 2.2833999999999355e-05, 2.4763000000000562e-05, 2.1888000000001157e-05, 2.5707999999999287e-05, 2.0986000000000615e-05, 2.0929999999998866e-05, 2.5735999999998427e-05, 2.093099999999834e-05, 2.187500000000106e-05, 1.995899999999995e-05, 2.5721999999998857e-05, 2.188900000000063e-05, 2.4694000000002186e-05, 2.380500000000174e-05, 2.5764000000001036e-05, 2.0000000000002655e-05, 1.9972000000000045e-05, 2.4750000000000466e-05, 2.0958000000001475e-05, 2.0929999999998866e-05, 2.19030000000002e-05, 2.086100000000049e-05, 1.9985999999999615e-05, 2.4735999999997427e-05, 2.2819999999999785e-05, 2.568099999999962e-05, 2.2833999999999355e-05, 1.9985999999999615e-05, 2.0943999999998436e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.570899999999876e-05, 1.994500000000038e-05, 2.281900000000031e-05, 2.279100000000117e-05, 2.5721999999998857e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.501" endtime="20201112 09:43:25.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.496" endtime="20201112 09:43:25.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.506" endtime="20201112 09:43:25.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.509" endtime="20201112 09:43:25.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.508" endtime="20201112 09:43:25.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.504" endtime="20201112 09:43:25.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.136" endtime="20201112 09:43:25.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.135" endtime="20201112 09:43:25.530"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.539" endtime="20201112 09:43:25.562"></status>
</kw>
<msg timestamp="20201112 09:43:25.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.537" endtime="20201112 09:43:25.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.564" endtime="20201112 09:43:25.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.566" endtime="20201112 09:43:25.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.535" endtime="20201112 09:43:25.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.533" endtime="20201112 09:43:25.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.576" endtime="20201112 09:43:25.861"></status>
</kw>
<msg timestamp="20201112 09:43:25.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.575" endtime="20201112 09:43:25.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024698042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.865" endtime="20201112 09:43:25.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.874" endtime="20201112 09:43:25.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.572" endtime="20201112 09:43:25.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.570" endtime="20201112 09:43:25.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.880" level="INFO">${RESULT} = [{'time': 0.024732389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4347000000000544e-05, 'source_diff': 3.4347000000000544e-05}, {'time': 0.024762264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.877" endtime="20201112 09:43:25.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.895" level="INFO">${ACCURACY} = {'diff': [3.4347000000000544e-05, 2.386100000000002e-05, 2.0041999999997895e-05, 2.381900000000131e-05, 2.0958000000001475e-05, 2.4764000000000036e-05, 2.0000000000002655e-05, 2.0901999999999726e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:25.881" endtime="20201112 09:43:25.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.899" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.898" endtime="20201112 09:43:25.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.902" level="INFO">VALUE: [3.4347000000000544e-05, 2.386100000000002e-05, 2.0041999999997895e-05, 2.381900000000131e-05, 2.0958000000001475e-05, 2.4764000000000036e-05, 2.0000000000002655e-05, 2.0901999999999726e-05, 2.5693999999999717e-05, 2.4764000000000036e-05, 2.09029999999992e-05, 2.5778000000000606e-05, 2.4777000000000132e-05, 2.281900000000031e-05, 2.284699999999945e-05, 2.3792000000001645e-05, 2.09029999999992e-05, 2.3806000000001215e-05, 2.0943999999998436e-05, 2.4777999999999606e-05, 2.4722000000001326e-05, 2.191699999999977e-05, 2.381900000000131e-05, 2.281900000000031e-05, 2.569499999999919e-05, 2.3792000000001645e-05, 2.093099999999834e-05, 2.3806000000001215e-05, 2.091699999999877e-05, 1.997299999999952e-05, 2.188899999999716e-05, 2.381900000000131e-05, 2.3792000000001645e-05, 2.19030000000002e-05, 2.5749999999997997e-05, 2.4764000000000036e-05, 1.9986000000003085e-05, 2.283299999999988e-05, 2.0929999999998866e-05, 2.4764000000000036e-05, 2.283299999999988e-05, 2.283299999999988e-05, 1.9930000000001336e-05, 1.9013999999997755e-05, 2.283299999999988e-05, 2.4777999999999606e-05, 2.0000000000002655e-05, 1.9028000000000794e-05, 2.187500000000106e-05, 2.568099999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.900" endtime="20201112 09:43:25.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.896" endtime="20201112 09:43:25.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.905" endtime="20201112 09:43:25.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.909" endtime="20201112 09:43:25.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.907" endtime="20201112 09:43:25.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.903" endtime="20201112 09:43:25.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.531" endtime="20201112 09:43:25.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.530" endtime="20201112 09:43:25.929"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.938" endtime="20201112 09:43:25.955"></status>
</kw>
<msg timestamp="20201112 09:43:25.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.936" endtime="20201112 09:43:25.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.957" endtime="20201112 09:43:25.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.959" endtime="20201112 09:43:25.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.934" endtime="20201112 09:43:25.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.932" endtime="20201112 09:43:25.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.969" endtime="20201112 09:43:26.256"></status>
</kw>
<msg timestamp="20201112 09:43:26.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.968" endtime="20201112 09:43:26.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.260" endtime="20201112 09:43:26.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.268" endtime="20201112 09:43:26.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.965" endtime="20201112 09:43:26.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.963" endtime="20201112 09:43:26.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.275" level="INFO">${RESULT} = [{'time': 0.022265986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3264000000002413e-05, 'source_diff': 1.3264000000002413e-05}, {'time': 0.022296153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.271" endtime="20201112 09:43:26.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.288" level="INFO">${ACCURACY} = {'diff': [1.3264000000002413e-05, 2.4791999999999176e-05, 2.286099999999902e-05, 2.2847999999998925e-05, 1.9958000000000475e-05, 2.4777999999999606e-05, 2.288899999999816e-05, 2.387499999999959e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:26.276" endtime="20201112 09:43:26.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.292" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.291" endtime="20201112 09:43:26.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.295" level="INFO">VALUE: [1.3264000000002413e-05, 2.4791999999999176e-05, 2.286099999999902e-05, 2.2847999999998925e-05, 1.9958000000000475e-05, 2.4777999999999606e-05, 2.288899999999816e-05, 2.387499999999959e-05, 1.8987000000001558e-05, 2.4764000000000036e-05, 1.9985999999999615e-05, 2.1000000000000185e-05, 2.2820000000003254e-05, 2.0013999999998755e-05, 1.9028000000000794e-05, 2.186100000000149e-05, 2.094499999999791e-05, 1.9972000000000045e-05, 2.4721999999997857e-05, 2.3792000000001645e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.0000000000002655e-05, 2.283299999999988e-05, 2.4750000000000466e-05, 2.091699999999877e-05, 2.4750000000000466e-05, 2.380500000000174e-05, 2.188900000000063e-05, 2.093099999999834e-05, 2.283299999999988e-05, 2.280500000000074e-05, 2.0014000000002224e-05, 2.187500000000106e-05, 2.2833999999999355e-05, 2.5735999999998427e-05, 2.4777999999999606e-05, 1.9999999999999185e-05, 2.001299999999928e-05, 2.5792000000000176e-05, 1.9014000000001224e-05, 2.380500000000174e-05, 2.5707999999999287e-05, 2.1902000000000726e-05, 2.4749999999996997e-05, 2.286099999999902e-05, 2.568100000000309e-05, 2.3749999999999466e-05, 2.4764000000000036e-05, 2.4749999999996997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.294" endtime="20201112 09:43:26.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.289" endtime="20201112 09:43:26.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.299" endtime="20201112 09:43:26.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.302" endtime="20201112 09:43:26.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.300" endtime="20201112 09:43:26.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.297" endtime="20201112 09:43:26.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.930" endtime="20201112 09:43:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.930" endtime="20201112 09:43:26.323"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.331" endtime="20201112 09:43:26.350"></status>
</kw>
<msg timestamp="20201112 09:43:26.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.330" endtime="20201112 09:43:26.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.352" endtime="20201112 09:43:26.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.354" endtime="20201112 09:43:26.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.327" endtime="20201112 09:43:26.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.325" endtime="20201112 09:43:26.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.364" endtime="20201112 09:43:26.650"></status>
</kw>
<msg timestamp="20201112 09:43:26.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.363" endtime="20201112 09:43:26.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.654" endtime="20201112 09:43:26.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.662" endtime="20201112 09:43:26.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.360" endtime="20201112 09:43:26.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.358" endtime="20201112 09:43:26.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.669" level="INFO">${RESULT} = [{'time': 0.020776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.629099999999998e-05, 'source_diff': 5.629099999999998e-05}, {'time': 0.020837681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.666" endtime="20201112 09:43:26.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.682" level="INFO">${ACCURACY} = {'diff': [5.629099999999998e-05, 5.538899999999944e-05, 5.154199999999817e-05, 5.061099999999902e-05, 5.2485999999997424e-05, 5.152800000000207e-05, 4.961100000000149e-05, 5.3499999999997994e-05, 5.15...</msg>
<status status="PASS" starttime="20201112 09:43:26.670" endtime="20201112 09:43:26.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.687" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.686" endtime="20201112 09:43:26.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.689" level="INFO">VALUE: [5.629099999999998e-05, 5.538899999999944e-05, 5.154199999999817e-05, 5.061099999999902e-05, 5.2485999999997424e-05, 5.152800000000207e-05, 4.961100000000149e-05, 5.3499999999997994e-05, 5.154199999999817e-05, 5.541699999999858e-05, 5.437499999999887e-05, 5.631899999999912e-05, 5.061099999999902e-05, 5.056900000000031e-05, 5.4430000000001144e-05, 5.348600000000189e-05, 5.3457999999999284e-05, 5.061199999999849e-05, 4.967999999999986e-05, 5.154200000000164e-05, 5.061099999999902e-05, 5.632000000000206e-05, 5.3485999999998424e-05, 5.156900000000131e-05, 4.96530000000002e-05, 4.963899999999716e-05, 5.438900000000191e-05, 5.443100000000062e-05, 5.161100000000002e-05, 5.537499999999987e-05, 5.055500000000074e-05, 5.3471999999998854e-05, 5.540299999999901e-05, 5.059799999999892e-05, 5.158400000000035e-05, 5.158399999999688e-05, 5.245800000000175e-05, 5.634700000000173e-05, 5.35280000000006e-05, 5.344499999999919e-05, 5.437499999999887e-05, 5.061099999999902e-05, 5.152800000000207e-05, 5.444500000000019e-05, 5.155599999999774e-05, 5.63480000000012e-05, 5.251400000000003e-05, 5.3471999999998854e-05, 5.537499999999987e-05, 5.443100000000062e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.688" endtime="20201112 09:43:26.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.683" endtime="20201112 09:43:26.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.693" endtime="20201112 09:43:26.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.696" endtime="20201112 09:43:26.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.695" endtime="20201112 09:43:26.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.691" endtime="20201112 09:43:26.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.324" endtime="20201112 09:43:26.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.323" endtime="20201112 09:43:26.717"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.726" endtime="20201112 09:43:26.748"></status>
</kw>
<msg timestamp="20201112 09:43:26.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.724" endtime="20201112 09:43:26.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.749" endtime="20201112 09:43:26.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.752" endtime="20201112 09:43:26.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.721" endtime="20201112 09:43:26.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.719" endtime="20201112 09:43:26.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.762" endtime="20201112 09:43:27.047"></status>
</kw>
<msg timestamp="20201112 09:43:27.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.760" endtime="20201112 09:43:27.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.051" endtime="20201112 09:43:27.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.059" endtime="20201112 09:43:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.758" endtime="20201112 09:43:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.756" endtime="20201112 09:43:27.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.066" level="INFO">${RESULT} = [{'time': 0.023498153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.443100000000062e-05, 'source_diff': 5.443100000000062e-05}, {'time': 0.023559556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:27.062" endtime="20201112 09:43:27.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.079" level="INFO">${ACCURACY} = {'diff': [5.443100000000062e-05, 5.633399999999816e-05, 5.4430000000001144e-05, 5.055600000000021e-05, 5.540299999999901e-05, 5.341700000000005e-05, 5.155500000000174e-05, 5.155499999999827e-05, 5.442...</msg>
<status status="PASS" starttime="20201112 09:43:27.067" endtime="20201112 09:43:27.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.083" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.082" endtime="20201112 09:43:27.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.086" level="INFO">VALUE: [5.443100000000062e-05, 5.633399999999816e-05, 5.4430000000001144e-05, 5.055600000000021e-05, 5.540299999999901e-05, 5.341700000000005e-05, 5.155500000000174e-05, 5.155499999999827e-05, 5.4429999999997675e-05, 5.155600000000121e-05, 5.155600000000121e-05, 5.062499999999859e-05, 5.443100000000062e-05, 5.63610000000013e-05, 5.059699999999945e-05, 5.344499999999919e-05, 5.250000000000046e-05, 5.0708e-05, 5.059699999999945e-05, 5.154199999999817e-05, 5.3471999999998854e-05, 5.633299999999869e-05, 5.63480000000012e-05, 4.975000000000118e-05, 5.637500000000087e-05, 5.156900000000131e-05, 5.058399999999935e-05, 5.054100000000117e-05, 5.149999999999946e-05, 5.451300000000256e-05, 4.966600000000029e-05, 5.250000000000046e-05, 4.962499999999759e-05, 5.631900000000259e-05, 5.156900000000131e-05, 5.25279999999996e-05, 5.261100000000102e-05, 5.536199999999977e-05, 5.344499999999919e-05, 5.53610000000003e-05, 5.540299999999901e-05, 5.444500000000019e-05, 5.156900000000131e-05, 5.3457999999999284e-05, 5.633400000000163e-05, 5.25279999999996e-05, 5.541699999999858e-05, 5.633300000000216e-05, 5.344499999999919e-05, 4.96530000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.085" endtime="20201112 09:43:27.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.080" endtime="20201112 09:43:27.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.090" endtime="20201112 09:43:27.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.093" endtime="20201112 09:43:27.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.091" endtime="20201112 09:43:27.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.088" endtime="20201112 09:43:27.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.718" endtime="20201112 09:43:27.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.717" endtime="20201112 09:43:27.114"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.122" endtime="20201112 09:43:27.145"></status>
</kw>
<msg timestamp="20201112 09:43:27.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.121" endtime="20201112 09:43:27.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.146" endtime="20201112 09:43:27.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.149" endtime="20201112 09:43:27.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.118" endtime="20201112 09:43:27.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.116" endtime="20201112 09:43:27.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.159" endtime="20201112 09:43:27.445"></status>
</kw>
<msg timestamp="20201112 09:43:27.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02352625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:27.157" endtime="20201112 09:43:27.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02352625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:27.449" endtime="20201112 09:43:27.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.457" endtime="20201112 09:43:27.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.155" endtime="20201112 09:43:27.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.153" endtime="20201112 09:43:27.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.464" level="INFO">${RESULT} = [{'time': 0.023565361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9111000000001395e-05, 'source_diff': 3.9111000000001395e-05}, {'time': 0.023626583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:27.460" endtime="20201112 09:43:27.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.478" level="INFO">${ACCURACY} = {'diff': [3.9111000000001395e-05, 5.5415999999999105e-05, 5.159700000000045e-05, 5.070899999999948e-05, 5.345899999999876e-05, 5.53480000000002e-05, 5.538899999999944e-05, 5.538899999999944e-05, 5.251...</msg>
<status status="PASS" starttime="20201112 09:43:27.465" endtime="20201112 09:43:27.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.483" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.481" endtime="20201112 09:43:27.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.485" level="INFO">VALUE: [3.9111000000001395e-05, 5.5415999999999105e-05, 5.159700000000045e-05, 5.070899999999948e-05, 5.345899999999876e-05, 5.53480000000002e-05, 5.538899999999944e-05, 5.538899999999944e-05, 5.251300000000056e-05, 5.2485999999997424e-05, 5.53610000000003e-05, 4.961099999999802e-05, 5.441699999999758e-05, 5.059799999999892e-05, 5.4443999999997245e-05, 5.155499999999827e-05, 5.155600000000121e-05, 5.250000000000046e-05, 5.4471999999999854e-05, 5.255599999999874e-05, 5.251300000000056e-05, 5.058399999999935e-05, 5.6305999999999023e-05, 5.637500000000087e-05, 5.062499999999859e-05, 5.53610000000003e-05, 5.059699999999945e-05, 4.962499999999759e-05, 5.343099999999962e-05, 5.148599999999989e-05, 5.157000000000078e-05, 5.633299999999869e-05, 5.53610000000003e-05, 5.15409999999987e-05, 5.15270000000026e-05, 5.4401999999998535e-05, 5.347299999999833e-05, 4.968099999999934e-05, 5.441700000000105e-05, 5.15279999999986e-05, 5.061100000000249e-05, 5.152800000000207e-05, 5.537499999999987e-05, 5.3471999999998854e-05, 5.056999999999978e-05, 5.441700000000105e-05, 5.3485999999998424e-05, 5.151399999999903e-05, 5.537499999999987e-05, 5.347200000000232e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.484" endtime="20201112 09:43:27.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.479" endtime="20201112 09:43:27.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.489" endtime="20201112 09:43:27.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.493" endtime="20201112 09:43:27.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.491" endtime="20201112 09:43:27.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.488" endtime="20201112 09:43:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.115" endtime="20201112 09:43:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.114" endtime="20201112 09:43:27.514"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.523" endtime="20201112 09:43:27.541"></status>
</kw>
<msg timestamp="20201112 09:43:27.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.521" endtime="20201112 09:43:27.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.543" endtime="20201112 09:43:27.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.545" endtime="20201112 09:43:27.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.519" endtime="20201112 09:43:27.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.517" endtime="20201112 09:43:27.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.555" endtime="20201112 09:43:27.841"></status>
</kw>
<msg timestamp="20201112 09:43:27.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.554" endtime="20201112 09:43:27.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.845" endtime="20201112 09:43:27.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.853" endtime="20201112 09:43:27.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.551" endtime="20201112 09:43:27.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.550" endtime="20201112 09:43:27.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.860" level="INFO">${RESULT} = [{'time': 0.020182944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.391600000000148e-05, 'source_diff': 4.391600000000148e-05}, {'time': 0.020243667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:27.857" endtime="20201112 09:43:27.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.874" level="INFO">${ACCURACY} = {'diff': [4.391600000000148e-05, 5.251400000000003e-05, 5.619499999999847e-05, 5.341700000000005e-05, 5.158400000000035e-05, 5.434699999999973e-05, 5.25279999999996e-05, 5.048599999999889e-05, 5.44580...</msg>
<status status="PASS" starttime="20201112 09:43:27.861" endtime="20201112 09:43:27.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.878" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.877" endtime="20201112 09:43:27.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.881" level="INFO">VALUE: [4.391600000000148e-05, 5.251400000000003e-05, 5.619499999999847e-05, 5.341700000000005e-05, 5.158400000000035e-05, 5.434699999999973e-05, 5.25279999999996e-05, 5.048599999999889e-05, 5.4458000000000284e-05, 5.540299999999901e-05, 5.5263999999999314e-05, 5.540299999999901e-05, 5.430500000000102e-05, 5.3457999999999284e-05, 5.337500000000134e-05, 5.061099999999902e-05, 5.157000000000078e-05, 5.156900000000131e-05, 5.144400000000118e-05, 5.058299999999988e-05, 5.155499999999827e-05, 5.5249999999999744e-05, 5.5387999999999965e-05, 5.633299999999869e-05, 5.6221999999998135e-05, 5.151299999999956e-05, 5.529099999999898e-05, 5.634700000000173e-05, 5.15409999999987e-05, 5.334699999999873e-05, 5.351400000000103e-05, 5.156900000000131e-05, 5.529200000000192e-05, 5.250000000000046e-05, 5.3471999999998854e-05, 5.431900000000059e-05, 4.954199999999964e-05, 5.444500000000019e-05, 5.337499999999787e-05, 5.254199999999917e-05, 5.430500000000102e-05, 5.534700000000073e-05, 5.1416000000002043e-05, 5.5401999999999535e-05, 5.537499999999987e-05, 4.956900000000278e-05, 5.25279999999996e-05, 5.34730000000018e-05, 5.14729999999998e-05, 5.059699999999945e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.879" endtime="20201112 09:43:27.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.875" endtime="20201112 09:43:27.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.884" endtime="20201112 09:43:27.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.888" endtime="20201112 09:43:27.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.886" endtime="20201112 09:43:27.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.883" endtime="20201112 09:43:27.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.515" endtime="20201112 09:43:27.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.515" endtime="20201112 09:43:27.909"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.917" endtime="20201112 09:43:27.940"></status>
</kw>
<msg timestamp="20201112 09:43:27.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.916" endtime="20201112 09:43:27.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.941" endtime="20201112 09:43:27.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.944" endtime="20201112 09:43:27.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.913" endtime="20201112 09:43:27.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.911" endtime="20201112 09:43:27.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.954" endtime="20201112 09:43:28.241"></status>
</kw>
<msg timestamp="20201112 09:43:28.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.953" endtime="20201112 09:43:28.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.245" endtime="20201112 09:43:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.253" endtime="20201112 09:43:28.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.950" endtime="20201112 09:43:28.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.948" endtime="20201112 09:43:28.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.260" level="INFO">${RESULT} = [{'time': 0.022660944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3860999999999206e-05, 'source_diff': 4.3860999999999206e-05}, {'time': 0.02272225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:28.257" endtime="20201112 09:43:28.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.273" level="INFO">${ACCURACY} = {'diff': [4.3860999999999206e-05, 5.538899999999944e-05, 4.962500000000106e-05, 5.443100000000062e-05, 5.4444000000000714e-05, 5.252800000000307e-05, 4.957000000000225e-05, 5.436100000000277e-05, 5.34...</msg>
<status status="PASS" starttime="20201112 09:43:28.261" endtime="20201112 09:43:28.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.278" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.277" endtime="20201112 09:43:28.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.280" level="INFO">VALUE: [4.3860999999999206e-05, 5.538899999999944e-05, 4.962500000000106e-05, 5.443100000000062e-05, 5.4444000000000714e-05, 5.252800000000307e-05, 4.957000000000225e-05, 5.436100000000277e-05, 5.345900000000223e-05, 5.347299999999833e-05, 5.3471999999998854e-05, 5.438900000000191e-05, 5.251400000000003e-05, 5.354200000000017e-05, 5.3443999999999714e-05, 5.631900000000259e-05, 5.250000000000046e-05, 5.155499999999827e-05, 5.3443999999999714e-05, 5.537499999999987e-05, 5.538899999999944e-05, 5.15279999999986e-05, 5.248600000000089e-05, 5.438899999999844e-05, 5.154200000000164e-05, 5.248600000000089e-05, 5.630499999999955e-05, 5.24869999999969e-05, 5.054200000000064e-05, 5.155599999999774e-05, 5.15279999999986e-05, 4.961099999999802e-05, 5.53610000000003e-05, 5.2485999999997424e-05, 4.96530000000002e-05, 5.252800000000307e-05, 5.540299999999901e-05, 5.048600000000236e-05, 5.341700000000005e-05, 5.345800000000275e-05, 5.447200000000332e-05, 5.148599999999989e-05, 5.531999999999759e-05, 5.158300000000088e-05, 5.434699999999973e-05, 5.3416000000000574e-05, 5.631900000000259e-05, 5.152800000000207e-05, 5.058399999999935e-05, 5.148600000000336e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.279" endtime="20201112 09:43:28.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.274" endtime="20201112 09:43:28.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.284" endtime="20201112 09:43:28.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.288" endtime="20201112 09:43:28.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.286" endtime="20201112 09:43:28.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.282" endtime="20201112 09:43:28.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.909" endtime="20201112 09:43:28.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.909" endtime="20201112 09:43:28.309"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.317" endtime="20201112 09:43:28.340"></status>
</kw>
<msg timestamp="20201112 09:43:28.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.316" endtime="20201112 09:43:28.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.341" endtime="20201112 09:43:28.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.344" endtime="20201112 09:43:28.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.313" endtime="20201112 09:43:28.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.311" endtime="20201112 09:43:28.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.354" endtime="20201112 09:43:28.639"></status>
</kw>
<msg timestamp="20201112 09:43:28.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.352" endtime="20201112 09:43:28.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024527708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.644" endtime="20201112 09:43:28.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.652" endtime="20201112 09:43:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.350" endtime="20201112 09:43:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.348" endtime="20201112 09:43:28.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.659" level="INFO">${RESULT} = [{'time': 0.024527708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.200000000000037e-05, 'source_diff': 4.200000000000037e-05}, {'time': 0.024589125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.655" endtime="20201112 09:43:28.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.672" level="INFO">${ACCURACY} = {'diff': [4.200000000000037e-05, 5.061099999999902e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.151399999999903e-05, 5.251400000000003e-05, 5.156900000000131e-05, 5.533400000000063e-05, 5.15130...</msg>
<status status="PASS" starttime="20201112 09:43:28.660" endtime="20201112 09:43:28.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.677" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.675" endtime="20201112 09:43:28.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.679" level="INFO">VALUE: [4.200000000000037e-05, 5.061099999999902e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.151399999999903e-05, 5.251400000000003e-05, 5.156900000000131e-05, 5.533400000000063e-05, 5.151300000000303e-05, 5.154199999999817e-05, 5.634700000000173e-05, 5.43609999999993e-05, 5.538899999999944e-05, 5.254199999999917e-05, 5.059699999999945e-05, 5.059699999999945e-05, 5.636099999999783e-05, 5.537499999999987e-05, 5.338900000000091e-05, 5.532000000000106e-05, 4.963900000000063e-05, 5.058299999999988e-05, 5.154199999999817e-05, 5.347200000000232e-05, 5.540300000000248e-05, 5.251400000000003e-05, 5.531900000000159e-05, 5.251400000000003e-05, 5.633299999999869e-05, 5.151399999999903e-05, 5.158300000000088e-05, 5.061099999999902e-05, 5.156899999999784e-05, 5.3457999999999284e-05, 5.537499999999987e-05, 5.244499999999819e-05, 4.962500000000106e-05, 5.443100000000062e-05, 5.062499999999859e-05, 5.441700000000105e-05, 5.347200000000232e-05, 5.345800000000275e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.3443999999999714e-05, 5.345900000000223e-05, 5.250000000000046e-05, 5.355599999999974e-05, 4.962500000000106e-05, 5.155600000000121e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.678" endtime="20201112 09:43:28.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.673" endtime="20201112 09:43:28.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.683" endtime="20201112 09:43:28.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.686" endtime="20201112 09:43:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.684" endtime="20201112 09:43:28.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.681" endtime="20201112 09:43:28.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.310" endtime="20201112 09:43:28.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.309" endtime="20201112 09:43:28.707"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.716" endtime="20201112 09:43:28.737"></status>
</kw>
<msg timestamp="20201112 09:43:28.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.714" endtime="20201112 09:43:28.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.739" endtime="20201112 09:43:28.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.741" endtime="20201112 09:43:28.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.711" endtime="20201112 09:43:28.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.709" endtime="20201112 09:43:28.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.751" endtime="20201112 09:43:29.037"></status>
</kw>
<msg timestamp="20201112 09:43:29.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023020653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.750" endtime="20201112 09:43:29.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023020653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.041" endtime="20201112 09:43:29.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.050" endtime="20201112 09:43:29.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.747" endtime="20201112 09:43:29.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.746" endtime="20201112 09:43:29.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.056" level="INFO">${RESULT} = [{'time': 0.023068347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.76940000000009e-05, 'source_diff': 4.76940000000009e-05}, {'time': 0.023129319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:29.053" endtime="20201112 09:43:29.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.071" level="INFO">${ACCURACY} = {'diff': [4.76940000000009e-05, 5.059699999999945e-05, 5.6277999999999884e-05, 5.440300000000148e-05, 5.536099999999683e-05, 5.25279999999996e-05, 5.3513999999997564e-05, 5.534700000000073e-05, 5.6304...</msg>
<status status="PASS" starttime="20201112 09:43:29.057" endtime="20201112 09:43:29.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.075" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.074" endtime="20201112 09:43:29.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.078" level="INFO">VALUE: [4.76940000000009e-05, 5.059699999999945e-05, 5.6277999999999884e-05, 5.440300000000148e-05, 5.536099999999683e-05, 5.25279999999996e-05, 5.3513999999997564e-05, 5.534700000000073e-05, 5.630499999999955e-05, 5.3443999999999714e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.3430000000000144e-05, 5.155600000000121e-05, 5.051399999999803e-05, 5.061099999999902e-05, 5.061100000000249e-05, 5.2443999999998714e-05, 5.250000000000046e-05, 5.3485999999998424e-05, 5.538900000000291e-05, 4.963900000000063e-05, 5.441699999999758e-05, 5.6305999999999023e-05, 5.156999999999731e-05, 5.062499999999859e-05, 5.537499999999987e-05, 5.159700000000045e-05, 5.4458000000000284e-05, 5.05270000000016e-05, 5.341700000000005e-05, 5.538899999999944e-05, 5.344500000000266e-05, 5.149999999999946e-05, 5.252700000000013e-05, 5.6305999999999023e-05, 4.962500000000106e-05, 5.4416000000001574e-05, 5.156900000000131e-05, 5.15409999999987e-05, 5.062500000000206e-05, 5.634700000000173e-05, 5.157000000000078e-05, 5.158300000000088e-05, 5.250000000000046e-05, 5.345800000000275e-05, 5.158400000000035e-05, 5.537499999999987e-05, 5.25279999999996e-05, 5.05140000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.076" endtime="20201112 09:43:29.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.072" endtime="20201112 09:43:29.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.081" endtime="20201112 09:43:29.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.085" endtime="20201112 09:43:29.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.083" endtime="20201112 09:43:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.080" endtime="20201112 09:43:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.708" endtime="20201112 09:43:29.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.707" endtime="20201112 09:43:29.106"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.114" endtime="20201112 09:43:29.134"></status>
</kw>
<msg timestamp="20201112 09:43:29.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.113" endtime="20201112 09:43:29.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.136" endtime="20201112 09:43:29.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.138" endtime="20201112 09:43:29.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.110" endtime="20201112 09:43:29.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.108" endtime="20201112 09:43:29.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.148" endtime="20201112 09:43:29.433"></status>
</kw>
<msg timestamp="20201112 09:43:29.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.147" endtime="20201112 09:43:29.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.437" endtime="20201112 09:43:29.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.446" endtime="20201112 09:43:29.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.144" endtime="20201112 09:43:29.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.142" endtime="20201112 09:43:29.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.452" level="INFO">${RESULT} = [{'time': 0.021242431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4874999999999776e-05, 'source_diff': 4.4874999999999776e-05}, {'time': 0.021304, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:29.449" endtime="20201112 09:43:29.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.466" level="INFO">${ACCURACY} = {'diff': [4.4874999999999776e-05, 5.2443999999998714e-05, 5.2471999999997854e-05, 5.443100000000062e-05, 5.251400000000003e-05, 5.052800000000107e-05, 5.4387999999998965e-05, 5.3471999999998854e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:43:29.453" endtime="20201112 09:43:29.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.470" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.469" endtime="20201112 09:43:29.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.473" level="INFO">VALUE: [4.4874999999999776e-05, 5.2443999999998714e-05, 5.2471999999997854e-05, 5.443100000000062e-05, 5.251400000000003e-05, 5.052800000000107e-05, 5.4387999999998965e-05, 5.3471999999998854e-05, 4.963900000000063e-05, 5.53480000000002e-05, 5.440300000000148e-05, 5.058299999999988e-05, 5.052800000000107e-05, 5.343099999999962e-05, 5.634699999999826e-05, 5.440300000000148e-05, 5.433300000000016e-05, 5.630600000000249e-05, 5.25279999999996e-05, 5.252700000000013e-05, 5.247200000000132e-05, 5.437500000000234e-05, 5.151399999999903e-05, 5.634699999999826e-05, 5.148599999999989e-05, 5.3457999999999284e-05, 5.541699999999858e-05, 5.2443999999998714e-05, 5.2485999999997424e-05, 5.443099999999715e-05, 5.058299999999988e-05, 5.055500000000074e-05, 5.058299999999988e-05, 5.154100000000217e-05, 5.061099999999902e-05, 5.056899999999684e-05, 5.241699999999905e-05, 5.250000000000046e-05, 5.061200000000196e-05, 5.636099999999783e-05, 5.055600000000021e-05, 5.056900000000031e-05, 5.061100000000249e-05, 5.05140000000015e-05, 5.25279999999996e-05, 5.634799999999773e-05, 5.538899999999944e-05, 4.952800000000007e-05, 5.056900000000031e-05, 5.4430000000001144e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.471" endtime="20201112 09:43:29.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.467" endtime="20201112 09:43:29.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.476" endtime="20201112 09:43:29.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.480" endtime="20201112 09:43:29.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.478" endtime="20201112 09:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.475" endtime="20201112 09:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.107" endtime="20201112 09:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.106" endtime="20201112 09:43:29.501"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.509" endtime="20201112 09:43:29.531"></status>
</kw>
<msg timestamp="20201112 09:43:29.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.508" endtime="20201112 09:43:29.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.532" endtime="20201112 09:43:29.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.535" endtime="20201112 09:43:29.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.505" endtime="20201112 09:43:29.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.503" endtime="20201112 09:43:29.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.545" endtime="20201112 09:43:29.831"></status>
</kw>
<msg timestamp="20201112 09:43:29.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023213847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.543" endtime="20201112 09:43:29.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023213847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.835" endtime="20201112 09:43:29.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.843" endtime="20201112 09:43:29.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.541" endtime="20201112 09:43:29.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.539" endtime="20201112 09:43:29.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.850" level="INFO">${RESULT} = [{'time': 0.023262569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.872200000000104e-05, 'source_diff': 4.872200000000104e-05}, {'time': 0.023323889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.847" endtime="20201112 09:43:29.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.864" level="INFO">${ACCURACY} = {'diff': [4.872200000000104e-05, 5.348600000000189e-05, 5.144500000000066e-05, 5.532000000000106e-05, 5.251400000000003e-05, 5.631899999999912e-05, 5.4444000000000714e-05, 5.345900000000223e-05, 5.526...</msg>
<status status="PASS" starttime="20201112 09:43:29.851" endtime="20201112 09:43:29.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.868" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.867" endtime="20201112 09:43:29.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.871" level="INFO">VALUE: [4.872200000000104e-05, 5.348600000000189e-05, 5.144500000000066e-05, 5.532000000000106e-05, 5.251400000000003e-05, 5.631899999999912e-05, 5.4444000000000714e-05, 5.345900000000223e-05, 5.5263999999999314e-05, 5.149999999999946e-05, 5.541699999999858e-05, 5.53610000000003e-05, 5.538899999999944e-05, 4.962500000000106e-05, 5.3471999999998854e-05, 5.048599999999889e-05, 5.538899999999944e-05, 5.059800000000239e-05, 5.155600000000121e-05, 5.631899999999912e-05, 5.347200000000232e-05, 5.536200000000324e-05, 5.433399999999963e-05, 5.155499999999827e-05, 5.154200000000164e-05, 5.4415999999998105e-05, 5.443100000000062e-05, 5.527800000000235e-05, 5.4429999999997675e-05, 5.15270000000026e-05, 5.441699999999758e-05, 5.3499999999997994e-05, 5.248600000000089e-05, 5.157000000000078e-05, 5.055500000000074e-05, 5.633300000000216e-05, 5.3457999999999284e-05, 5.058299999999988e-05, 5.537499999999987e-05, 5.251400000000003e-05, 5.3471999999998854e-05, 5.334699999999873e-05, 4.963900000000063e-05, 5.252700000000013e-05, 5.632000000000206e-05, 5.056999999999978e-05, 5.154200000000164e-05, 5.33470000000022e-05, 5.444500000000019e-05, 5.538899999999944e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.869" endtime="20201112 09:43:29.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.865" endtime="20201112 09:43:29.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.879" endtime="20201112 09:43:29.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.882" endtime="20201112 09:43:29.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.881" endtime="20201112 09:43:29.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.877" endtime="20201112 09:43:29.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.501" endtime="20201112 09:43:29.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.501" endtime="20201112 09:43:29.903"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.912" endtime="20201112 09:43:29.937"></status>
</kw>
<msg timestamp="20201112 09:43:29.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.910" endtime="20201112 09:43:29.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.938" endtime="20201112 09:43:29.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.941" endtime="20201112 09:43:29.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.908" endtime="20201112 09:43:29.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.906" endtime="20201112 09:43:29.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.951" endtime="20201112 09:43:30.236"></status>
</kw>
<msg timestamp="20201112 09:43:30.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.949" endtime="20201112 09:43:30.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.240" endtime="20201112 09:43:30.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.248" endtime="20201112 09:43:30.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.947" endtime="20201112 09:43:30.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.945" endtime="20201112 09:43:30.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.255" level="INFO">${RESULT} = [{'time': 0.022749306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.197299999999989e-05, 'source_diff': 6.197299999999989e-05}, {'time': 0.022809569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:30.251" endtime="20201112 09:43:30.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.268" level="INFO">${ACCURACY} = {'diff': [6.197299999999989e-05, 5.3429999999996675e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.537499999999987e-05, 5.6249999999997274e-05, 5.531999999999759e-05, 5.15270000000026e-05, 5.4445...</msg>
<status status="PASS" starttime="20201112 09:43:30.256" endtime="20201112 09:43:30.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.273" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.272" endtime="20201112 09:43:30.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.275" level="INFO">VALUE: [6.197299999999989e-05, 5.3429999999996675e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.537499999999987e-05, 5.6249999999997274e-05, 5.531999999999759e-05, 5.15270000000026e-05, 5.444500000000019e-05, 5.151299999999956e-05, 5.6235999999997704e-05, 5.15409999999987e-05, 5.156899999999784e-05, 5.061099999999902e-05, 5.145900000000023e-05, 5.53610000000003e-05, 5.437499999999887e-05, 5.431900000000059e-05, 5.152800000000207e-05, 5.440300000000148e-05, 4.963900000000063e-05, 5.2499999999996994e-05, 5.25279999999996e-05, 5.059699999999945e-05, 5.640300000000001e-05, 5.4429999999997675e-05, 5.53480000000002e-05, 5.33609999999983e-05, 5.538899999999944e-05, 5.251400000000003e-05, 5.4430000000001144e-05, 5.433300000000016e-05, 5.061099999999902e-05, 5.538899999999944e-05, 5.059699999999945e-05, 5.433300000000016e-05, 5.049999999999846e-05, 5.443099999999715e-05, 5.154100000000217e-05, 5.155500000000174e-05, 5.338900000000091e-05, 5.3471999999998854e-05, 5.250000000000046e-05, 5.536099999999683e-05, 5.538899999999944e-05, 5.240299999999948e-05, 5.631900000000259e-05, 5.056900000000031e-05, 4.963900000000063e-05, 5.530600000000149e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.274" endtime="20201112 09:43:30.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.269" endtime="20201112 09:43:30.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.279" endtime="20201112 09:43:30.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.282" endtime="20201112 09:43:30.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.281" endtime="20201112 09:43:30.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.277" endtime="20201112 09:43:30.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.904" endtime="20201112 09:43:30.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.903" endtime="20201112 09:43:30.303"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.312" endtime="20201112 09:43:30.334"></status>
</kw>
<msg timestamp="20201112 09:43:30.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.310" endtime="20201112 09:43:30.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.336" endtime="20201112 09:43:30.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.338" endtime="20201112 09:43:30.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.308" endtime="20201112 09:43:30.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.306" endtime="20201112 09:43:30.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.348" endtime="20201112 09:43:30.634"></status>
</kw>
<msg timestamp="20201112 09:43:30.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024676278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.347" endtime="20201112 09:43:30.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024676278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.638" endtime="20201112 09:43:30.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.646" endtime="20201112 09:43:30.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.344" endtime="20201112 09:43:30.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.342" endtime="20201112 09:43:30.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.653" level="INFO">${RESULT} = [{'time': 0.024676278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86529999999992e-05, 'source_diff': 4.86529999999992e-05}, {'time': 0.024737792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:30.650" endtime="20201112 09:43:30.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.667" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 5.155600000000121e-05, 5.250000000000046e-05, 5.154200000000164e-05, 5.251300000000056e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.154199999999817e-05, 5.44029...</msg>
<status status="PASS" starttime="20201112 09:43:30.654" endtime="20201112 09:43:30.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.672" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.671" endtime="20201112 09:43:30.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.674" level="INFO">VALUE: [4.86529999999992e-05, 5.155600000000121e-05, 5.250000000000046e-05, 5.154200000000164e-05, 5.251300000000056e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.154199999999817e-05, 5.440299999999801e-05, 5.634699999999826e-05, 5.440300000000148e-05, 5.4430000000001144e-05, 5.245800000000175e-05, 5.248600000000089e-05, 5.443100000000062e-05, 5.4458000000000284e-05, 5.537499999999987e-05, 5.53610000000003e-05, 5.251400000000003e-05, 5.441700000000105e-05, 5.056900000000031e-05, 5.3471999999998854e-05, 4.963899999999716e-05, 5.25279999999996e-05, 5.343099999999962e-05, 5.541700000000205e-05, 5.538899999999944e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.538900000000291e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.443100000000062e-05, 5.53610000000003e-05, 5.059799999999892e-05, 5.348600000000189e-05, 4.961099999999802e-05, 5.056899999999684e-05, 5.345900000000223e-05, 5.061099999999902e-05, 5.348700000000137e-05, 5.062499999999859e-05, 5.443100000000062e-05, 5.348700000000137e-05, 5.630499999999955e-05, 5.248700000000037e-05, 5.4429999999997675e-05, 5.345899999999876e-05, 5.069400000000043e-05, 5.447299999999933e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.673" endtime="20201112 09:43:30.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.668" endtime="20201112 09:43:30.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.678" endtime="20201112 09:43:30.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.681" endtime="20201112 09:43:30.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.680" endtime="20201112 09:43:30.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.676" endtime="20201112 09:43:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.304" endtime="20201112 09:43:30.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.303" endtime="20201112 09:43:30.702"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.711" endtime="20201112 09:43:30.731"></status>
</kw>
<msg timestamp="20201112 09:43:30.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.709" endtime="20201112 09:43:30.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.732" endtime="20201112 09:43:30.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.735" endtime="20201112 09:43:30.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.707" endtime="20201112 09:43:30.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.705" endtime="20201112 09:43:30.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.745" endtime="20201112 09:43:31.031"></status>
</kw>
<msg timestamp="20201112 09:43:31.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.743" endtime="20201112 09:43:31.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.036" endtime="20201112 09:43:31.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.044" endtime="20201112 09:43:31.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.741" endtime="20201112 09:43:31.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.739" endtime="20201112 09:43:31.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.050" level="INFO">${RESULT} = [{'time': 0.022301931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8249999999999275e-05, 'source_diff': 5.8249999999999275e-05}, {'time': 0.022363097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:31.047" endtime="20201112 09:43:31.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.064" level="INFO">${ACCURACY} = {'diff': [5.8249999999999275e-05, 5.4443999999997245e-05, 5.444500000000019e-05, 5.53610000000003e-05, 5.148599999999989e-05, 5.058399999999935e-05, 5.3457999999999284e-05, 5.337500000000134e-05, 5.05...</msg>
<status status="PASS" starttime="20201112 09:43:31.051" endtime="20201112 09:43:31.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.068" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.067" endtime="20201112 09:43:31.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.071" level="INFO">VALUE: [5.8249999999999275e-05, 5.4443999999997245e-05, 5.444500000000019e-05, 5.53610000000003e-05, 5.148599999999989e-05, 5.058399999999935e-05, 5.3457999999999284e-05, 5.337500000000134e-05, 5.058299999999988e-05, 5.343099999999962e-05, 5.533300000000116e-05, 5.141700000000152e-05, 5.251400000000003e-05, 5.337500000000134e-05, 5.156999999999731e-05, 5.634699999999826e-05, 5.434699999999973e-05, 4.959699999999845e-05, 5.441700000000105e-05, 5.6208000000002034e-05, 5.154200000000164e-05, 5.25279999999996e-05, 5.540299999999901e-05, 5.631900000000259e-05, 5.5180000000001894e-05, 5.155600000000121e-05, 5.154200000000164e-05, 5.244500000000166e-05, 5.347200000000232e-05, 5.155500000000174e-05, 5.350000000000146e-05, 5.237500000000034e-05, 5.6291999999999454e-05, 5.336199999999777e-05, 5.447299999999933e-05, 5.53480000000002e-05, 5.3443999999999714e-05, 5.056900000000031e-05, 5.344499999999919e-05, 5.241699999999905e-05, 5.443100000000062e-05, 4.962500000000106e-05, 5.152699999999913e-05, 5.6165999999999855e-05, 5.443100000000062e-05, 5.062500000000206e-05, 5.629099999999998e-05, 5.53480000000002e-05, 5.6250000000000744e-05, 5.251400000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.069" endtime="20201112 09:43:31.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.065" endtime="20201112 09:43:31.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.074" endtime="20201112 09:43:31.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.078" endtime="20201112 09:43:31.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.076" endtime="20201112 09:43:31.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.073" endtime="20201112 09:43:31.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.703" endtime="20201112 09:43:31.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.703" endtime="20201112 09:43:31.099"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.107" endtime="20201112 09:43:31.129"></status>
</kw>
<msg timestamp="20201112 09:43:31.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.106" endtime="20201112 09:43:31.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.130" endtime="20201112 09:43:31.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.133" endtime="20201112 09:43:31.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.103" endtime="20201112 09:43:31.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.101" endtime="20201112 09:43:31.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.143" endtime="20201112 09:43:31.428"></status>
</kw>
<msg timestamp="20201112 09:43:31.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.141" endtime="20201112 09:43:31.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.432" endtime="20201112 09:43:31.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.440" endtime="20201112 09:43:31.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.139" endtime="20201112 09:43:31.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.137" endtime="20201112 09:43:31.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.447" level="INFO">${RESULT} = [{'time': 0.022734278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916699999999886e-05, 'source_diff': 5.916699999999886e-05}, {'time': 0.022795972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.443" endtime="20201112 09:43:31.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.460" level="INFO">${ACCURACY} = {'diff': [5.916699999999886e-05, 5.058299999999988e-05, 5.537499999999987e-05, 5.155600000000121e-05, 5.438900000000191e-05, 5.633300000000216e-05, 5.062500000000206e-05, 5.152800000000207e-05, 5.1458...</msg>
<status status="PASS" starttime="20201112 09:43:31.448" endtime="20201112 09:43:31.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.465" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.464" endtime="20201112 09:43:31.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.467" level="INFO">VALUE: [5.916699999999886e-05, 5.058299999999988e-05, 5.537499999999987e-05, 5.155600000000121e-05, 5.438900000000191e-05, 5.633300000000216e-05, 5.062500000000206e-05, 5.152800000000207e-05, 5.145800000000075e-05, 5.6277999999999884e-05, 5.059699999999945e-05, 5.145899999999676e-05, 5.441699999999758e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.155599999999774e-05, 5.158300000000088e-05, 5.3471999999998854e-05, 5.534700000000073e-05, 5.537499999999987e-05, 5.061099999999902e-05, 5.53610000000003e-05, 5.155500000000174e-05, 5.3457999999999284e-05, 5.25279999999996e-05, 5.520900000000051e-05, 5.629200000000292e-05, 5.061099999999902e-05, 5.333299999999916e-05, 5.6319999999998593e-05, 5.155599999999774e-05, 5.4415999999998105e-05, 5.527700000000288e-05, 5.630600000000249e-05, 5.443100000000062e-05, 5.443099999999715e-05, 5.250000000000046e-05, 5.530500000000202e-05, 5.53610000000003e-05, 5.337500000000134e-05, 5.538899999999944e-05, 5.1486999999999367e-05, 5.444500000000019e-05, 5.444500000000019e-05, 5.4444000000000714e-05, 5.234699999999773e-05, 5.350000000000146e-05, 5.4430000000001144e-05, 5.061099999999902e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.466" endtime="20201112 09:43:31.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.461" endtime="20201112 09:43:31.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.471" endtime="20201112 09:43:31.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.474" endtime="20201112 09:43:31.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.473" endtime="20201112 09:43:31.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.469" endtime="20201112 09:43:31.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.100" endtime="20201112 09:43:31.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.099" endtime="20201112 09:43:31.495"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.504" endtime="20201112 09:43:31.525"></status>
</kw>
<msg timestamp="20201112 09:43:31.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.502" endtime="20201112 09:43:31.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.527" endtime="20201112 09:43:31.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.529" endtime="20201112 09:43:31.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.500" endtime="20201112 09:43:31.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.498" endtime="20201112 09:43:31.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.539" endtime="20201112 09:43:31.824"></status>
</kw>
<msg timestamp="20201112 09:43:31.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.538" endtime="20201112 09:43:31.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.829" endtime="20201112 09:43:31.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.837" endtime="20201112 09:43:31.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.535" endtime="20201112 09:43:31.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.533" endtime="20201112 09:43:31.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.843" level="INFO">${RESULT} = [{'time': 0.023198347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3861000000002676e-05, 'source_diff': 4.3861000000002676e-05}, {'time': 0.023259222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:31.840" endtime="20201112 09:43:31.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.857" level="INFO">${ACCURACY} = {'diff': [4.3861000000002676e-05, 5.4444000000000714e-05, 5.345899999999876e-05, 5.441700000000105e-05, 5.345800000000275e-05, 5.63610000000013e-05, 5.058299999999988e-05, 5.545899999999729e-05, 5.148...</msg>
<status status="PASS" starttime="20201112 09:43:31.845" endtime="20201112 09:43:31.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.861" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.860" endtime="20201112 09:43:31.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.864" level="INFO">VALUE: [4.3861000000002676e-05, 5.4444000000000714e-05, 5.345899999999876e-05, 5.441700000000105e-05, 5.345800000000275e-05, 5.63610000000013e-05, 5.058299999999988e-05, 5.545899999999729e-05, 5.148599999999989e-05, 5.248700000000037e-05, 5.348700000000137e-05, 5.250000000000046e-05, 5.5387999999999965e-05, 5.4444000000000714e-05, 5.149999999999946e-05, 5.441699999999758e-05, 4.962499999999759e-05, 5.3485999999998424e-05, 5.34730000000018e-05, 5.341700000000005e-05, 4.958299999999888e-05, 5.5387999999999965e-05, 5.436100000000277e-05, 5.255599999999874e-05, 5.4444000000000714e-05, 5.43609999999993e-05, 5.5277999999998884e-05, 5.3457999999999284e-05, 5.061099999999902e-05, 5.538899999999944e-05, 5.541699999999858e-05, 5.059699999999945e-05, 5.436100000000277e-05, 5.6250000000000744e-05, 5.437500000000234e-05, 5.633299999999869e-05, 5.4415999999998105e-05, 5.254199999999917e-05, 5.6277999999999884e-05, 5.532000000000106e-05, 5.256999999999831e-05, 5.054200000000064e-05, 5.0459000000002696e-05, 5.058299999999988e-05, 5.245900000000123e-05, 5.627700000000041e-05, 5.061099999999902e-05, 5.244400000000218e-05, 5.2457999999998284e-05, 4.966600000000029e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.862" endtime="20201112 09:43:31.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.858" endtime="20201112 09:43:31.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.867" endtime="20201112 09:43:31.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.871" endtime="20201112 09:43:31.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.869" endtime="20201112 09:43:31.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.866" endtime="20201112 09:43:31.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.496" endtime="20201112 09:43:31.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.496" endtime="20201112 09:43:31.892"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.900" endtime="20201112 09:43:31.922"></status>
</kw>
<msg timestamp="20201112 09:43:31.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.899" endtime="20201112 09:43:31.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.923" endtime="20201112 09:43:31.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.926" endtime="20201112 09:43:31.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.896" endtime="20201112 09:43:31.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.894" endtime="20201112 09:43:31.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.936" endtime="20201112 09:43:32.222"></status>
</kw>
<msg timestamp="20201112 09:43:32.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.934" endtime="20201112 09:43:32.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.226" endtime="20201112 09:43:32.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.234" endtime="20201112 09:43:32.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.932" endtime="20201112 09:43:32.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.930" endtime="20201112 09:43:32.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.241" level="INFO">${RESULT} = [{'time': 0.023539431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.484800000000011e-05, 'source_diff': 4.484800000000011e-05}, {'time': 0.023601125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.237" endtime="20201112 09:43:32.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.255" level="INFO">${ACCURACY} = {'diff': [4.484800000000011e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.062499999999859e-05, 5.058299999999988e-05, 5.3457999999999284e-05, 5.537499999999987e-05, 5.3443999999999714e-05, 5.06...</msg>
<status status="PASS" starttime="20201112 09:43:32.242" endtime="20201112 09:43:32.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.260" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.259" endtime="20201112 09:43:32.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.262" level="INFO">VALUE: [4.484800000000011e-05, 5.537499999999987e-05, 5.250000000000046e-05, 5.062499999999859e-05, 5.058299999999988e-05, 5.3457999999999284e-05, 5.537499999999987e-05, 5.3443999999999714e-05, 5.061099999999902e-05, 5.061099999999902e-05, 5.444500000000019e-05, 5.540299999999901e-05, 5.250000000000046e-05, 5.345899999999876e-05, 5.155600000000121e-05, 5.4429999999997675e-05, 5.059700000000292e-05, 5.6250000000000744e-05, 5.147200000000032e-05, 5.343099999999962e-05, 5.633299999999869e-05, 5.4416000000001574e-05, 5.155600000000121e-05, 5.062499999999859e-05, 5.15279999999986e-05, 5.154200000000164e-05, 4.961099999999802e-05, 5.058399999999935e-05, 5.05140000000015e-05, 5.055500000000074e-05, 4.961099999999802e-05, 5.345900000000223e-05, 5.441700000000105e-05, 5.631899999999912e-05, 5.44869999999989e-05, 5.250000000000046e-05, 5.050000000000193e-05, 5.6305999999999023e-05, 5.155600000000121e-05, 5.2429999999999144e-05, 5.3443999999999714e-05, 5.537500000000334e-05, 5.2499999999996994e-05, 5.058299999999988e-05, 5.244500000000166e-05, 5.443099999999715e-05, 5.151399999999903e-05, 5.156899999999784e-05, 4.962499999999759e-05, 5.4443999999997245e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.261" endtime="20201112 09:43:32.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.256" endtime="20201112 09:43:32.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.266" endtime="20201112 09:43:32.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.269" endtime="20201112 09:43:32.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.268" endtime="20201112 09:43:32.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.264" endtime="20201112 09:43:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.893" endtime="20201112 09:43:32.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.892" endtime="20201112 09:43:32.290"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.299" endtime="20201112 09:43:32.320"></status>
</kw>
<msg timestamp="20201112 09:43:32.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.297" endtime="20201112 09:43:32.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.321" endtime="20201112 09:43:32.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.324" endtime="20201112 09:43:32.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.294" endtime="20201112 09:43:32.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.292" endtime="20201112 09:43:32.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.333" endtime="20201112 09:43:32.620"></status>
</kw>
<msg timestamp="20201112 09:43:32.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.332" endtime="20201112 09:43:32.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.624" endtime="20201112 09:43:32.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.632" endtime="20201112 09:43:32.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.329" endtime="20201112 09:43:32.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.328" endtime="20201112 09:43:32.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.639" level="INFO">${RESULT} = [{'time': 0.022141403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.772200000000004e-05, 'source_diff': 4.772200000000004e-05}, {'time': 0.022202639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.636" endtime="20201112 09:43:32.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.652" level="INFO">${ACCURACY} = {'diff': [4.772200000000004e-05, 5.344499999999919e-05, 5.4485999999999424e-05, 5.432000000000006e-05, 5.631900000000259e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.151399999999903e-05, 5.062...</msg>
<status status="PASS" starttime="20201112 09:43:32.640" endtime="20201112 09:43:32.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.657" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.656" endtime="20201112 09:43:32.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.659" level="INFO">VALUE: [4.772200000000004e-05, 5.344499999999919e-05, 5.4485999999999424e-05, 5.432000000000006e-05, 5.631900000000259e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.151399999999903e-05, 5.062500000000206e-05, 5.058399999999935e-05, 5.15409999999987e-05, 5.155499999999827e-05, 5.154200000000164e-05, 5.443100000000062e-05, 4.963899999999716e-05, 5.33479999999982e-05, 5.630499999999955e-05, 5.259700000000145e-05, 5.537499999999987e-05, 5.5263999999999314e-05, 4.966699999999977e-05, 5.633400000000163e-05, 5.252700000000013e-05, 5.4291999999997453e-05, 5.251400000000003e-05, 5.633300000000216e-05, 5.0652000000001723e-05, 5.154200000000164e-05, 5.53610000000003e-05, 5.6277999999999884e-05, 5.056999999999978e-05, 5.2388000000000434e-05, 5.154200000000164e-05, 5.2499999999996994e-05, 5.540300000000248e-05, 5.35280000000006e-05, 5.5415999999999105e-05, 5.337499999999787e-05, 5.538899999999944e-05, 5.34730000000018e-05, 5.061100000000249e-05, 5.441699999999758e-05, 5.533400000000063e-05, 5.537499999999987e-05, 5.154200000000164e-05, 5.440299999999801e-05, 5.238899999999991e-05, 5.15409999999987e-05, 5.441699999999758e-05, 5.437499999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.658" endtime="20201112 09:43:32.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.653" endtime="20201112 09:43:32.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.663" endtime="20201112 09:43:32.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.666" endtime="20201112 09:43:32.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.665" endtime="20201112 09:43:32.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.661" endtime="20201112 09:43:32.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.291" endtime="20201112 09:43:32.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.290" endtime="20201112 09:43:32.687"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.696" endtime="20201112 09:43:32.716"></status>
</kw>
<msg timestamp="20201112 09:43:32.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.694" endtime="20201112 09:43:32.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.718" endtime="20201112 09:43:32.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.720" endtime="20201112 09:43:32.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.692" endtime="20201112 09:43:32.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.690" endtime="20201112 09:43:32.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.730" endtime="20201112 09:43:33.016"></status>
</kw>
<msg timestamp="20201112 09:43:33.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:32.729" endtime="20201112 09:43:33.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:33.020" endtime="20201112 09:43:33.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.029" endtime="20201112 09:43:33.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.726" endtime="20201112 09:43:33.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.725" endtime="20201112 09:43:33.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.035" level="INFO">${RESULT} = [{'time': 0.021658528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.25279999999996e-05, 'source_diff': 5.25279999999996e-05}, {'time': 0.021720083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:33.032" endtime="20201112 09:43:33.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.049" level="INFO">${ACCURACY} = {'diff': [5.25279999999996e-05, 5.251400000000003e-05, 5.440300000000148e-05, 5.050000000000193e-05, 5.3443999999999714e-05, 5.058399999999935e-05, 5.154199999999817e-05, 4.955499999999974e-05, 5.1513...</msg>
<status status="PASS" starttime="20201112 09:43:33.037" endtime="20201112 09:43:33.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.053" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.052" endtime="20201112 09:43:33.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.056" level="INFO">VALUE: [5.25279999999996e-05, 5.251400000000003e-05, 5.440300000000148e-05, 5.050000000000193e-05, 5.3443999999999714e-05, 5.058399999999935e-05, 5.154199999999817e-05, 4.955499999999974e-05, 5.151300000000303e-05, 5.154200000000164e-05, 5.248600000000089e-05, 5.051399999999803e-05, 5.348600000000189e-05, 5.247200000000132e-05, 5.345900000000223e-05, 5.6235999999997704e-05, 4.969399999999943e-05, 5.4430000000001144e-05, 5.3430000000000144e-05, 5.050000000000193e-05, 5.537499999999987e-05, 5.14729999999998e-05, 5.251400000000003e-05, 5.634699999999826e-05, 5.25279999999996e-05, 4.96530000000002e-05, 5.3471999999998854e-05, 5.347200000000232e-05, 5.049999999999846e-05, 5.633299999999869e-05, 4.966699999999977e-05, 5.061100000000249e-05, 5.152699999999913e-05, 5.145800000000075e-05, 5.156900000000131e-05, 5.437500000000234e-05, 5.338900000000091e-05, 5.244400000000218e-05, 5.145800000000075e-05, 4.956899999999931e-05, 5.632000000000206e-05, 5.254200000000264e-05, 4.9651999999997254e-05, 5.345900000000223e-05, 5.149999999999946e-05, 5.540300000000248e-05, 5.158300000000088e-05, 5.340300000000048e-05, 4.96530000000002e-05, 5.538900000000291e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.054" endtime="20201112 09:43:33.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.050" endtime="20201112 09:43:33.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.059" endtime="20201112 09:43:33.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.063" endtime="20201112 09:43:33.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.061" endtime="20201112 09:43:33.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.058" endtime="20201112 09:43:33.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.688" endtime="20201112 09:43:33.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.688" endtime="20201112 09:43:33.084"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.092" endtime="20201112 09:43:33.113"></status>
</kw>
<msg timestamp="20201112 09:43:33.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.091" endtime="20201112 09:43:33.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.115" endtime="20201112 09:43:33.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.117" endtime="20201112 09:43:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.088" endtime="20201112 09:43:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.086" endtime="20201112 09:43:33.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.127" endtime="20201112 09:43:33.413"></status>
</kw>
<msg timestamp="20201112 09:43:33.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.126" endtime="20201112 09:43:33.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.418" endtime="20201112 09:43:33.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.426" endtime="20201112 09:43:33.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.123" endtime="20201112 09:43:33.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.121" endtime="20201112 09:43:33.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.432" level="INFO">${RESULT} = [{'time': 0.022122375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.404200000000027e-05, 'source_diff': 6.404200000000027e-05}, {'time': 0.022183319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.429" endtime="20201112 09:43:33.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.446" level="INFO">${ACCURACY} = {'diff': [6.404200000000027e-05, 5.4416000000001574e-05, 5.4444000000000714e-05, 5.250000000000046e-05, 4.962500000000106e-05, 5.631900000000259e-05, 5.538899999999944e-05, 5.3485999999998424e-05, 5.1...</msg>
<status status="PASS" starttime="20201112 09:43:33.433" endtime="20201112 09:43:33.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.450" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.449" endtime="20201112 09:43:33.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.453" level="INFO">VALUE: [6.404200000000027e-05, 5.4416000000001574e-05, 5.4444000000000714e-05, 5.250000000000046e-05, 4.962500000000106e-05, 5.631900000000259e-05, 5.538899999999944e-05, 5.3485999999998424e-05, 5.156899999999784e-05, 5.53610000000003e-05, 5.355500000000027e-05, 5.444500000000019e-05, 5.4416000000001574e-05, 5.538899999999944e-05, 5.441700000000105e-05, 5.250000000000046e-05, 5.058399999999935e-05, 5.25279999999996e-05, 5.537499999999987e-05, 5.441699999999758e-05, 5.25279999999996e-05, 5.445899999999976e-05, 5.251400000000003e-05, 5.540299999999901e-05, 5.4416000000001574e-05, 5.4416000000001574e-05, 5.4430000000001144e-05, 5.158399999999688e-05, 5.53610000000003e-05, 5.351400000000103e-05, 5.340300000000048e-05, 5.441700000000105e-05, 5.536099999999683e-05, 5.438900000000191e-05, 5.537499999999987e-05, 5.345899999999876e-05, 5.631899999999912e-05, 5.3457999999999284e-05, 5.158299999999741e-05, 5.059699999999945e-05, 5.536199999999977e-05, 5.061099999999902e-05, 5.155600000000121e-05, 5.0651999999998254e-05, 5.3443999999999714e-05, 5.3443999999999714e-05, 5.6305999999999023e-05, 5.062499999999859e-05, 5.53610000000003e-05, 5.538899999999944e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.451" endtime="20201112 09:43:33.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.447" endtime="20201112 09:43:33.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.456" endtime="20201112 09:43:33.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.460" endtime="20201112 09:43:33.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.458" endtime="20201112 09:43:33.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.455" endtime="20201112 09:43:33.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.085" endtime="20201112 09:43:33.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.084" endtime="20201112 09:43:33.481"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.489" endtime="20201112 09:43:33.512"></status>
</kw>
<msg timestamp="20201112 09:43:33.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.488" endtime="20201112 09:43:33.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.513" endtime="20201112 09:43:33.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.516" endtime="20201112 09:43:33.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.485" endtime="20201112 09:43:33.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.483" endtime="20201112 09:43:33.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.526" endtime="20201112 09:43:33.811"></status>
</kw>
<msg timestamp="20201112 09:43:33.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.524" endtime="20201112 09:43:33.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.816" endtime="20201112 09:43:33.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.824" endtime="20201112 09:43:33.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.522" endtime="20201112 09:43:33.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.520" endtime="20201112 09:43:33.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.830" level="INFO">${RESULT} = [{'time': 0.022158722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.295799999999838e-05, 'source_diff': 6.295799999999838e-05}, {'time': 0.022219472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.827" endtime="20201112 09:43:33.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.845" level="INFO">${ACCURACY} = {'diff': [6.295799999999838e-05, 5.151399999999903e-05, 5.533300000000116e-05, 5.443100000000062e-05, 5.627700000000041e-05, 5.05409999999977e-05, 5.437500000000234e-05, 5.251400000000003e-05, 5.62770...</msg>
<status status="PASS" starttime="20201112 09:43:33.831" endtime="20201112 09:43:33.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.849" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.848" endtime="20201112 09:43:33.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.852" level="INFO">VALUE: [6.295799999999838e-05, 5.151399999999903e-05, 5.533300000000116e-05, 5.443100000000062e-05, 5.627700000000041e-05, 5.05409999999977e-05, 5.437500000000234e-05, 5.251400000000003e-05, 5.627700000000041e-05, 5.533299999999769e-05, 5.250000000000046e-05, 5.536199999999977e-05, 5.148599999999989e-05, 5.251400000000003e-05, 5.149999999999946e-05, 5.43609999999993e-05, 5.151399999999903e-05, 5.534700000000073e-05, 5.3485999999998424e-05, 5.152800000000207e-05, 5.533300000000116e-05, 5.4444000000000714e-05, 5.061100000000249e-05, 5.15140000000025e-05, 5.345900000000223e-05, 5.251400000000003e-05, 5.538899999999944e-05, 5.540299999999901e-05, 5.440300000000148e-05, 5.343099999999962e-05, 5.533299999999769e-05, 5.533300000000116e-05, 5.437500000000234e-05, 5.151399999999903e-05, 5.538899999999944e-05, 5.149999999999946e-05, 5.343099999999962e-05, 5.059799999999892e-05, 5.059800000000239e-05, 5.440300000000148e-05, 5.244400000000218e-05, 5.061100000000249e-05, 5.3485999999998424e-05, 5.149999999999946e-05, 5.436100000000277e-05, 5.250000000000046e-05, 5.156900000000131e-05, 5.058299999999988e-05, 5.15279999999986e-05, 5.243100000000209e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.850" endtime="20201112 09:43:33.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.846" endtime="20201112 09:43:33.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.855" endtime="20201112 09:43:33.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.859" endtime="20201112 09:43:33.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.857" endtime="20201112 09:43:33.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.854" endtime="20201112 09:43:33.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.482" endtime="20201112 09:43:33.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.481" endtime="20201112 09:43:33.880"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.888" endtime="20201112 09:43:33.911"></status>
</kw>
<msg timestamp="20201112 09:43:33.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.887" endtime="20201112 09:43:33.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.913" endtime="20201112 09:43:33.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.915" endtime="20201112 09:43:33.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.884" endtime="20201112 09:43:33.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.882" endtime="20201112 09:43:33.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.925" endtime="20201112 09:43:34.211"></status>
</kw>
<msg timestamp="20201112 09:43:34.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.924" endtime="20201112 09:43:34.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.216" endtime="20201112 09:43:34.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.224" endtime="20201112 09:43:34.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.921" endtime="20201112 09:43:34.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.920" endtime="20201112 09:43:34.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.230" level="INFO">${RESULT} = [{'time': 0.025032111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.151399999999903e-05, 'source_diff': 5.151399999999903e-05}, {'time': 0.025093333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.227" endtime="20201112 09:43:34.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.244" level="INFO">${ACCURACY} = {'diff': [5.151399999999903e-05, 5.3430000000000144e-05, 5.534699999999726e-05, 5.157000000000078e-05, 5.633300000000216e-05, 5.540300000000248e-05, 5.4471999999999854e-05, 5.05270000000016e-05, 5.248...</msg>
<status status="PASS" starttime="20201112 09:43:34.231" endtime="20201112 09:43:34.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.248" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.247" endtime="20201112 09:43:34.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.251" level="INFO">VALUE: [5.151399999999903e-05, 5.3430000000000144e-05, 5.534699999999726e-05, 5.157000000000078e-05, 5.633300000000216e-05, 5.540300000000248e-05, 5.4471999999999854e-05, 5.05270000000016e-05, 5.2485999999997424e-05, 5.440300000000148e-05, 5.059699999999945e-05, 5.343099999999962e-05, 5.440299999999801e-05, 5.056999999999978e-05, 5.058299999999988e-05, 5.438899999999844e-05, 5.058299999999988e-05, 4.962500000000106e-05, 5.2415999999999574e-05, 5.3443999999999714e-05, 5.058399999999935e-05, 5.248600000000089e-05, 5.3457999999999284e-05, 5.155499999999827e-05, 5.538899999999944e-05, 5.344499999999919e-05, 5.050000000000193e-05, 5.056900000000031e-05, 5.063900000000163e-05, 5.147200000000032e-05, 5.344499999999919e-05, 5.537499999999987e-05, 5.333299999999916e-05, 5.440299999999801e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.53610000000003e-05, 5.4415999999998105e-05, 5.244499999999819e-05, 5.240299999999948e-05, 5.061100000000249e-05, 5.154199999999817e-05, 5.53610000000003e-05, 5.540299999999901e-05, 4.958300000000235e-05, 5.154199999999817e-05, 5.4401999999998535e-05, 5.6250000000000744e-05, 5.440299999999801e-05, 5.056900000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.249" endtime="20201112 09:43:34.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.245" endtime="20201112 09:43:34.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.254" endtime="20201112 09:43:34.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.258" endtime="20201112 09:43:34.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.256" endtime="20201112 09:43:34.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.253" endtime="20201112 09:43:34.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.881" endtime="20201112 09:43:34.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.880" endtime="20201112 09:43:34.279"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.287" endtime="20201112 09:43:34.308"></status>
</kw>
<msg timestamp="20201112 09:43:34.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.286" endtime="20201112 09:43:34.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.309" endtime="20201112 09:43:34.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.312" endtime="20201112 09:43:34.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.283" endtime="20201112 09:43:34.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.281" endtime="20201112 09:43:34.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.322" endtime="20201112 09:43:34.607"></status>
</kw>
<msg timestamp="20201112 09:43:34.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.320" endtime="20201112 09:43:34.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.611" endtime="20201112 09:43:34.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.619" endtime="20201112 09:43:34.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.318" endtime="20201112 09:43:34.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.316" endtime="20201112 09:43:34.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.626" level="INFO">${RESULT} = [{'time': 0.022992708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.815199999999963e-05, 'source_diff': 3.815199999999963e-05}, {'time': 0.023053931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.622" endtime="20201112 09:43:34.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.639" level="INFO">${ACCURACY} = {'diff': [3.815199999999963e-05, 5.157000000000078e-05, 5.3471999999998854e-05, 5.633299999999869e-05, 5.4415999999998105e-05, 5.533300000000116e-05, 5.154200000000164e-05, 4.954100000000017e-05, 5.25...</msg>
<status status="PASS" starttime="20201112 09:43:34.627" endtime="20201112 09:43:34.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.644" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.643" endtime="20201112 09:43:34.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.646" level="INFO">VALUE: [3.815199999999963e-05, 5.157000000000078e-05, 5.3471999999998854e-05, 5.633299999999869e-05, 5.4415999999998105e-05, 5.533300000000116e-05, 5.154200000000164e-05, 4.954100000000017e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.3471999999998854e-05, 5.155600000000121e-05, 5.062499999999859e-05, 4.963899999999716e-05, 5.637500000000087e-05, 5.538899999999944e-05, 5.3457999999999284e-05, 5.344499999999919e-05, 5.6221999999998135e-05, 5.53610000000003e-05, 5.351400000000103e-05, 5.633300000000216e-05, 5.15279999999986e-05, 5.338899999999744e-05, 5.3485999999998424e-05, 5.056900000000031e-05, 5.433300000000016e-05, 5.251400000000003e-05, 4.962500000000106e-05, 5.061099999999902e-05, 5.25409999999997e-05, 5.633299999999869e-05, 4.955600000000268e-05, 5.058299999999988e-05, 5.156900000000131e-05, 5.244500000000166e-05, 5.3499999999997994e-05, 5.048599999999889e-05, 4.963899999999716e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.151399999999903e-05, 5.344499999999919e-05, 5.063899999999816e-05, 5.050000000000193e-05, 5.5415999999999105e-05, 5.537499999999987e-05, 5.440300000000148e-05, 5.049999999999846e-05, 5.250000000000046e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.645" endtime="20201112 09:43:34.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.640" endtime="20201112 09:43:34.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.650" endtime="20201112 09:43:34.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.653" endtime="20201112 09:43:34.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.652" endtime="20201112 09:43:34.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.648" endtime="20201112 09:43:34.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.280" endtime="20201112 09:43:34.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.279" endtime="20201112 09:43:34.674"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.683" endtime="20201112 09:43:34.706"></status>
</kw>
<msg timestamp="20201112 09:43:34.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.681" endtime="20201112 09:43:34.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.707" endtime="20201112 09:43:34.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.710" endtime="20201112 09:43:34.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.678" endtime="20201112 09:43:34.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.676" endtime="20201112 09:43:34.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.720" endtime="20201112 09:43:35.005"></status>
</kw>
<msg timestamp="20201112 09:43:35.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024540111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.718" endtime="20201112 09:43:35.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024540111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.009" endtime="20201112 09:43:35.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.017" endtime="20201112 09:43:35.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.716" endtime="20201112 09:43:35.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.714" endtime="20201112 09:43:35.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.024" level="INFO">${RESULT} = [{'time': 0.024585903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.579199999999936e-05, 'source_diff': 4.579199999999936e-05}, {'time': 0.024646583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.021" endtime="20201112 09:43:35.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.037" level="INFO">${ACCURACY} = {'diff': [4.579199999999936e-05, 5.247200000000132e-05, 5.441700000000105e-05, 5.251400000000003e-05, 5.061100000000249e-05, 4.962500000000106e-05, 5.054100000000117e-05, 5.4387999999998965e-05, 5.634...</msg>
<status status="PASS" starttime="20201112 09:43:35.025" endtime="20201112 09:43:35.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.042" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.041" endtime="20201112 09:43:35.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.044" level="INFO">VALUE: [4.579199999999936e-05, 5.247200000000132e-05, 5.441700000000105e-05, 5.251400000000003e-05, 5.061100000000249e-05, 4.962500000000106e-05, 5.054100000000117e-05, 5.4387999999998965e-05, 5.63480000000012e-05, 5.541700000000205e-05, 5.34730000000018e-05, 5.437499999999887e-05, 5.344499999999919e-05, 5.634699999999826e-05, 5.152699999999913e-05, 5.245800000000175e-05, 5.630499999999955e-05, 5.536199999999977e-05, 5.348700000000137e-05, 5.059699999999945e-05, 5.538899999999944e-05, 5.251300000000056e-05, 5.534700000000073e-05, 4.963899999999716e-05, 5.344499999999919e-05, 5.252700000000013e-05, 5.537499999999987e-05, 5.350000000000146e-05, 5.440300000000148e-05, 5.340300000000048e-05, 5.14729999999998e-05, 5.441699999999758e-05, 5.250000000000046e-05, 5.440300000000148e-05, 5.154200000000164e-05, 5.059800000000239e-05, 5.056999999999978e-05, 5.530600000000149e-05, 5.6291999999999454e-05, 5.347200000000232e-05, 5.537499999999987e-05, 5.4471999999999854e-05, 5.154100000000217e-05, 5.059699999999945e-05, 5.059799999999892e-05, 5.058299999999988e-05, 5.534700000000073e-05, 5.154199999999817e-05, 5.048599999999889e-05, 5.4444000000000714e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.043" endtime="20201112 09:43:35.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.038" endtime="20201112 09:43:35.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.052" endtime="20201112 09:43:35.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.055" endtime="20201112 09:43:35.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.053" endtime="20201112 09:43:35.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.050" endtime="20201112 09:43:35.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.675" endtime="20201112 09:43:35.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.674" endtime="20201112 09:43:35.076"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.085" endtime="20201112 09:43:35.107"></status>
</kw>
<msg timestamp="20201112 09:43:35.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.083" endtime="20201112 09:43:35.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.109" endtime="20201112 09:43:35.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.111" endtime="20201112 09:43:35.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.080" endtime="20201112 09:43:35.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.078" endtime="20201112 09:43:35.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.121" endtime="20201112 09:43:35.408"></status>
</kw>
<msg timestamp="20201112 09:43:35.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.120" endtime="20201112 09:43:35.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.412" endtime="20201112 09:43:35.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.420" endtime="20201112 09:43:35.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.117" endtime="20201112 09:43:35.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.116" endtime="20201112 09:43:35.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.427" level="INFO">${RESULT} = [{'time': 0.024438236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.999999999999837e-05, 'source_diff': 3.999999999999837e-05}, {'time': 0.024499458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.423" endtime="20201112 09:43:35.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.486" level="INFO">${ACCURACY} = {'diff': [3.999999999999837e-05, 5.062500000000206e-05, 4.963900000000063e-05, 5.347299999999833e-05, 5.254199999999917e-05, 5.062499999999859e-05, 5.532000000000106e-05, 5.068000000000086e-05, 5.4402...</msg>
<status status="PASS" starttime="20201112 09:43:35.428" endtime="20201112 09:43:35.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.491" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.490" endtime="20201112 09:43:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.493" level="INFO">VALUE: [3.999999999999837e-05, 5.062500000000206e-05, 4.963900000000063e-05, 5.347299999999833e-05, 5.254199999999917e-05, 5.062499999999859e-05, 5.532000000000106e-05, 5.068000000000086e-05, 5.440299999999801e-05, 5.155500000000174e-05, 5.437500000000234e-05, 5.156899999999784e-05, 5.345800000000275e-05, 5.252700000000013e-05, 5.251400000000003e-05, 5.538900000000291e-05, 5.344499999999919e-05, 5.255499999999927e-05, 5.537499999999987e-05, 5.2457999999998284e-05, 4.958300000000235e-05, 5.540300000000248e-05, 5.641699999999958e-05, 5.35280000000006e-05, 5.154199999999817e-05, 5.251400000000003e-05, 4.963900000000063e-05, 5.63749999999974e-05, 5.3457999999999284e-05, 5.440300000000148e-05, 5.259700000000145e-05, 5.452700000000213e-05, 5.347299999999833e-05, 5.058299999999988e-05, 5.252700000000013e-05, 5.441700000000105e-05, 5.537499999999987e-05, 5.440299999999801e-05, 5.63610000000013e-05, 5.345800000000275e-05, 5.634799999999773e-05, 5.444500000000019e-05, 5.168100000000134e-05, 5.251400000000003e-05, 5.53610000000003e-05, 5.061099999999902e-05, 5.529200000000192e-05, 5.059699999999945e-05, 5.540299999999901e-05, 5.25279999999996e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.492" endtime="20201112 09:43:35.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.487" endtime="20201112 09:43:35.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.497" endtime="20201112 09:43:35.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.501" endtime="20201112 09:43:35.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.499" endtime="20201112 09:43:35.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.495" endtime="20201112 09:43:35.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.077" endtime="20201112 09:43:35.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.076" endtime="20201112 09:43:35.522"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.530" endtime="20201112 09:43:35.554"></status>
</kw>
<msg timestamp="20201112 09:43:35.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.529" endtime="20201112 09:43:35.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.555" endtime="20201112 09:43:35.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.558" endtime="20201112 09:43:35.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.526" endtime="20201112 09:43:35.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.524" endtime="20201112 09:43:35.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.567" endtime="20201112 09:43:35.852"></status>
</kw>
<msg timestamp="20201112 09:43:35.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020988889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.565" endtime="20201112 09:43:35.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020988889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.856" endtime="20201112 09:43:35.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.864" endtime="20201112 09:43:35.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.562" endtime="20201112 09:43:35.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.561" endtime="20201112 09:43:35.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.871" level="INFO">${RESULT} = [{'time': 0.020988889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.491700000000114e-05, 'source_diff': 6.491700000000114e-05}, {'time': 0.021049764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.868" endtime="20201112 09:43:35.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.884" level="INFO">${ACCURACY} = {'diff': [6.491700000000114e-05, 5.059699999999945e-05, 5.148599999999989e-05, 5.534700000000073e-05, 5.3471999999998854e-05, 5.350000000000146e-05, 5.251400000000003e-05, 5.152699999999913e-05, 5.054...</msg>
<status status="PASS" starttime="20201112 09:43:35.872" endtime="20201112 09:43:35.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.889" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.888" endtime="20201112 09:43:35.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.891" level="INFO">VALUE: [6.491700000000114e-05, 5.059699999999945e-05, 5.148599999999989e-05, 5.534700000000073e-05, 5.3471999999998854e-05, 5.350000000000146e-05, 5.251400000000003e-05, 5.152699999999913e-05, 5.054100000000117e-05, 5.155499999999827e-05, 5.530500000000202e-05, 5.3485999999998424e-05, 5.340300000000048e-05, 5.054100000000117e-05, 5.158400000000035e-05, 5.055600000000021e-05, 5.443100000000062e-05, 5.354200000000017e-05, 5.5416000000002574e-05, 5.056900000000031e-05, 5.149999999999946e-05, 5.444500000000019e-05, 5.6264000000000314e-05, 5.154100000000217e-05, 5.25279999999996e-05, 5.055500000000074e-05, 5.254199999999917e-05, 4.963900000000063e-05, 5.63610000000013e-05, 5.531899999999812e-05, 5.056900000000031e-05, 4.96530000000002e-05, 5.43609999999993e-05, 5.537499999999987e-05, 5.63610000000013e-05, 5.055500000000074e-05, 5.53610000000003e-05, 5.537500000000334e-05, 5.2443999999998714e-05, 5.250000000000046e-05, 5.541699999999858e-05, 5.533400000000063e-05, 5.061099999999902e-05, 5.5401999999999535e-05, 5.540299999999901e-05, 5.054100000000117e-05, 5.25279999999996e-05, 5.534700000000073e-05, 5.256899999999884e-05, 5.631899999999912e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.890" endtime="20201112 09:43:35.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.885" endtime="20201112 09:43:35.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.895" endtime="20201112 09:43:35.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.898" endtime="20201112 09:43:35.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.897" endtime="20201112 09:43:35.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.893" endtime="20201112 09:43:35.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.522" endtime="20201112 09:43:35.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.522" endtime="20201112 09:43:35.919"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.928" endtime="20201112 09:43:35.946"></status>
</kw>
<msg timestamp="20201112 09:43:35.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.926" endtime="20201112 09:43:35.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.947" endtime="20201112 09:43:35.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.950" endtime="20201112 09:43:35.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.924" endtime="20201112 09:43:35.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.922" endtime="20201112 09:43:35.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.959" endtime="20201112 09:43:36.244"></status>
</kw>
<msg timestamp="20201112 09:43:36.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.957" endtime="20201112 09:43:36.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.248" endtime="20201112 09:43:36.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.256" endtime="20201112 09:43:36.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.955" endtime="20201112 09:43:36.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.953" endtime="20201112 09:43:36.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.263" level="INFO">${RESULT} = [{'time': 0.020262389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.586099999999774e-05, 'source_diff': 4.586099999999774e-05}, {'time': 0.020322528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.260" endtime="20201112 09:43:36.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.277" level="INFO">${ACCURACY} = {'diff': [4.586099999999774e-05, 5.155599999999774e-05, 5.443100000000062e-05, 5.540300000000248e-05, 5.2443999999998714e-05, 5.538899999999944e-05, 5.3471999999998854e-05, 5.444500000000019e-05, 5.63...</msg>
<status status="PASS" starttime="20201112 09:43:36.264" endtime="20201112 09:43:36.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.282" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.281" endtime="20201112 09:43:36.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.284" level="INFO">VALUE: [4.586099999999774e-05, 5.155599999999774e-05, 5.443100000000062e-05, 5.540300000000248e-05, 5.2443999999998714e-05, 5.538899999999944e-05, 5.3471999999998854e-05, 5.444500000000019e-05, 5.636099999999783e-05, 5.058299999999988e-05, 5.054100000000117e-05, 5.156899999999784e-05, 5.156900000000131e-05, 5.157000000000078e-05, 5.541699999999858e-05, 5.250000000000046e-05, 5.155599999999774e-05, 4.96530000000002e-05, 5.434699999999973e-05, 5.25279999999996e-05, 5.531899999999812e-05, 5.254199999999917e-05, 5.632000000000206e-05, 5.059699999999945e-05, 5.6236000000001174e-05, 5.438900000000191e-05, 5.5277999999998884e-05, 5.3485999999998424e-05, 5.538899999999944e-05, 5.443099999999715e-05, 5.443100000000062e-05, 5.537499999999987e-05, 5.350000000000146e-05, 5.441700000000105e-05, 5.6250000000000744e-05, 5.154199999999817e-05, 5.250000000000046e-05, 5.05270000000016e-05, 5.155600000000121e-05, 5.158399999999688e-05, 5.2443999999998714e-05, 5.2443999999998714e-05, 5.151399999999903e-05, 5.3485999999998424e-05, 5.156999999999731e-05, 5.6235999999997704e-05, 5.059699999999945e-05, 5.337499999999787e-05, 5.537499999999987e-05, 5.6221999999998135e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.283" endtime="20201112 09:43:36.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.278" endtime="20201112 09:43:36.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.288" endtime="20201112 09:43:36.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.291" endtime="20201112 09:43:36.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.290" endtime="20201112 09:43:36.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.286" endtime="20201112 09:43:36.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.920" endtime="20201112 09:43:36.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.920" endtime="20201112 09:43:36.312"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.321" endtime="20201112 09:43:36.344"></status>
</kw>
<msg timestamp="20201112 09:43:36.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.319" endtime="20201112 09:43:36.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.345" endtime="20201112 09:43:36.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.348" endtime="20201112 09:43:36.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.317" endtime="20201112 09:43:36.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.314" endtime="20201112 09:43:36.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.357" endtime="20201112 09:43:36.643"></status>
</kw>
<msg timestamp="20201112 09:43:36.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024254417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.355" endtime="20201112 09:43:36.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024254417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.647" endtime="20201112 09:43:36.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.655" endtime="20201112 09:43:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.352" endtime="20201112 09:43:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.351" endtime="20201112 09:43:36.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.662" level="INFO">${RESULT} = [{'time': 0.024296431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.201399999999994e-05, 'source_diff': 4.201399999999994e-05}, {'time': 0.024356958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.659" endtime="20201112 09:43:36.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.675" level="INFO">${ACCURACY} = {'diff': [4.201399999999994e-05, 5.4430000000001144e-05, 5.438899999999844e-05, 5.147200000000032e-05, 5.054200000000064e-05, 5.056900000000031e-05, 5.337500000000134e-05, 5.3457999999999284e-05, 5.25...</msg>
<status status="PASS" starttime="20201112 09:43:36.663" endtime="20201112 09:43:36.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.679" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.678" endtime="20201112 09:43:36.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.682" level="INFO">VALUE: [4.201399999999994e-05, 5.4430000000001144e-05, 5.438899999999844e-05, 5.147200000000032e-05, 5.054200000000064e-05, 5.056900000000031e-05, 5.337500000000134e-05, 5.3457999999999284e-05, 5.25279999999996e-05, 5.53610000000003e-05, 5.241699999999905e-05, 5.158399999999688e-05, 5.3471999999998854e-05, 5.5401999999999535e-05, 5.533299999999769e-05, 5.43609999999993e-05, 5.3485999999998424e-05, 5.4458000000000284e-05, 5.440299999999801e-05, 5.058299999999988e-05, 5.3485999999998424e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.338899999999744e-05, 4.962499999999759e-05, 5.155600000000121e-05, 5.3443999999999714e-05, 5.537499999999987e-05, 5.430600000000049e-05, 5.157000000000078e-05, 5.154200000000164e-05, 5.157000000000078e-05, 5.440300000000148e-05, 5.059799999999892e-05, 5.155600000000121e-05, 5.6236000000001174e-05, 5.259700000000145e-05, 5.250000000000046e-05, 5.633300000000216e-05, 5.537499999999987e-05, 5.2443999999998714e-05, 5.3471999999998854e-05, 5.34730000000018e-05, 5.250000000000046e-05, 5.154199999999817e-05, 5.622300000000108e-05, 5.244499999999819e-05, 4.963900000000063e-05, 5.147200000000032e-05, 5.156899999999784e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.681" endtime="20201112 09:43:36.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.676" endtime="20201112 09:43:36.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.686" endtime="20201112 09:43:36.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.689" endtime="20201112 09:43:36.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.687" endtime="20201112 09:43:36.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.684" endtime="20201112 09:43:36.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.313" endtime="20201112 09:43:36.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.312" endtime="20201112 09:43:36.710"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.719" endtime="20201112 09:43:36.741"></status>
</kw>
<msg timestamp="20201112 09:43:36.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.717" endtime="20201112 09:43:36.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.742" endtime="20201112 09:43:36.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.745" endtime="20201112 09:43:36.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.714" endtime="20201112 09:43:36.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.712" endtime="20201112 09:43:36.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.754" endtime="20201112 09:43:37.040"></status>
</kw>
<msg timestamp="20201112 09:43:37.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.752" endtime="20201112 09:43:37.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.044" endtime="20201112 09:43:37.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.052" endtime="20201112 09:43:37.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.749" endtime="20201112 09:43:37.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.748" endtime="20201112 09:43:37.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.059" level="INFO">${RESULT} = [{'time': 0.023386194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.251300000000056e-05, 'source_diff': 5.251300000000056e-05}, {'time': 0.023447708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.056" endtime="20201112 09:43:37.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.073" level="INFO">${ACCURACY} = {'diff': [5.251300000000056e-05, 5.629099999999998e-05, 5.4485999999999424e-05, 5.251400000000003e-05, 5.155600000000121e-05, 5.154199999999817e-05, 5.252800000000307e-05, 5.059699999999945e-05, 5.640...</msg>
<status status="PASS" starttime="20201112 09:43:37.060" endtime="20201112 09:43:37.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.078" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.077" endtime="20201112 09:43:37.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.080" level="INFO">VALUE: [5.251300000000056e-05, 5.629099999999998e-05, 5.4485999999999424e-05, 5.251400000000003e-05, 5.155600000000121e-05, 5.154199999999817e-05, 5.252800000000307e-05, 5.059699999999945e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.537500000000334e-05, 5.059800000000239e-05, 5.056900000000031e-05, 5.058299999999988e-05, 5.63480000000012e-05, 5.538899999999944e-05, 5.250000000000046e-05, 5.061099999999902e-05, 5.534700000000073e-05, 5.059699999999945e-05, 5.443100000000062e-05, 5.351400000000103e-05, 5.250000000000046e-05, 5.3471999999998854e-05, 5.538899999999944e-05, 5.058400000000282e-05, 5.443099999999715e-05, 5.150000000000293e-05, 5.3471999999998854e-05, 5.062499999999859e-05, 5.340300000000048e-05, 5.6305999999999023e-05, 5.633299999999869e-05, 5.147200000000032e-05, 5.2485999999997424e-05, 5.441700000000105e-05, 5.250000000000046e-05, 5.063899999999816e-05, 5.159700000000045e-05, 5.058299999999988e-05, 5.25279999999996e-05, 5.154200000000164e-05, 5.53610000000003e-05, 5.155500000000174e-05, 5.155499999999827e-05, 5.348700000000137e-05, 5.441700000000105e-05, 5.05140000000015e-05, 5.636099999999783e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.079" endtime="20201112 09:43:37.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.074" endtime="20201112 09:43:37.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.084" endtime="20201112 09:43:37.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.087" endtime="20201112 09:43:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.086" endtime="20201112 09:43:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.082" endtime="20201112 09:43:37.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.711" endtime="20201112 09:43:37.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.710" endtime="20201112 09:43:37.108"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.117" endtime="20201112 09:43:37.137"></status>
</kw>
<msg timestamp="20201112 09:43:37.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.115" endtime="20201112 09:43:37.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.138" endtime="20201112 09:43:37.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.141" endtime="20201112 09:43:37.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.112" endtime="20201112 09:43:37.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.110" endtime="20201112 09:43:37.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.150" endtime="20201112 09:43:37.435"></status>
</kw>
<msg timestamp="20201112 09:43:37.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:37.148" endtime="20201112 09:43:37.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:37.440" endtime="20201112 09:43:37.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.448" endtime="20201112 09:43:37.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.146" endtime="20201112 09:43:37.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.144" endtime="20201112 09:43:37.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.454" level="INFO">${RESULT} = [{'time': 0.02214075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.676400000000122e-05, 'source_diff': 4.676400000000122e-05}, {'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:37.451" endtime="20201112 09:43:37.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.468" level="INFO">${ACCURACY} = {'diff': [4.676400000000122e-05, 5.351400000000103e-05, 5.2485999999997424e-05, 5.537499999999987e-05, 5.059699999999945e-05, 5.633300000000216e-05, 5.158300000000088e-05, 5.53480000000002e-05, 5.4291...</msg>
<status status="PASS" starttime="20201112 09:43:37.455" endtime="20201112 09:43:37.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.472" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.471" endtime="20201112 09:43:37.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.475" level="INFO">VALUE: [4.676400000000122e-05, 5.351400000000103e-05, 5.2485999999997424e-05, 5.537499999999987e-05, 5.059699999999945e-05, 5.633300000000216e-05, 5.158300000000088e-05, 5.53480000000002e-05, 5.429100000000145e-05, 5.53610000000003e-05, 5.347299999999833e-05, 5.251400000000003e-05, 5.631899999999912e-05, 5.250000000000046e-05, 5.062499999999859e-05, 5.15409999999987e-05, 5.23609999999973e-05, 5.25279999999996e-05, 5.055500000000074e-05, 5.6319999999998593e-05, 5.537500000000334e-05, 5.155599999999774e-05, 5.152699999999913e-05, 5.056999999999978e-05, 5.250000000000046e-05, 5.059699999999945e-05, 5.53610000000003e-05, 5.427699999999841e-05, 5.15279999999986e-05, 5.245899999999776e-05, 5.250000000000046e-05, 5.2485999999997424e-05, 5.254200000000264e-05, 5.348600000000189e-05, 5.055499999999727e-05, 5.33479999999982e-05, 4.962499999999759e-05, 5.155599999999774e-05, 5.251400000000003e-05, 5.438900000000191e-05, 5.250000000000046e-05, 5.634700000000173e-05, 5.6291999999999454e-05, 5.334800000000167e-05, 5.155600000000121e-05, 5.629099999999998e-05, 5.53610000000003e-05, 5.444500000000019e-05, 5.537499999999987e-05, 5.633299999999869e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.473" endtime="20201112 09:43:37.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.468" endtime="20201112 09:43:37.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.478" endtime="20201112 09:43:37.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.481" endtime="20201112 09:43:37.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.480" endtime="20201112 09:43:37.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.476" endtime="20201112 09:43:37.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.109" endtime="20201112 09:43:37.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.108" endtime="20201112 09:43:37.502"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.511" endtime="20201112 09:43:37.534"></status>
</kw>
<msg timestamp="20201112 09:43:37.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.509" endtime="20201112 09:43:37.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.535" endtime="20201112 09:43:37.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.538" endtime="20201112 09:43:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.507" endtime="20201112 09:43:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.505" endtime="20201112 09:43:37.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.546" endtime="20201112 09:43:37.833"></status>
</kw>
<msg timestamp="20201112 09:43:37.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024709222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.545" endtime="20201112 09:43:37.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024709222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.838" endtime="20201112 09:43:37.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.846" endtime="20201112 09:43:37.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.542" endtime="20201112 09:43:37.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.541" endtime="20201112 09:43:37.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.852" level="INFO">${RESULT} = [{'time': 0.024771306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208400000000044e-05, 'source_diff': 6.208400000000044e-05}, {'time': 0.024832514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.849" endtime="20201112 09:43:37.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.865" level="INFO">${ACCURACY} = {'diff': [6.208400000000044e-05, 5.343099999999962e-05, 5.53610000000003e-05, 5.4471999999999854e-05, 4.962500000000106e-05, 5.633299999999869e-05, 5.35280000000006e-05, 5.6319999999998593e-05, 5.2486...</msg>
<status status="PASS" starttime="20201112 09:43:37.853" endtime="20201112 09:43:37.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.870" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.869" endtime="20201112 09:43:37.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.872" level="INFO">VALUE: [6.208400000000044e-05, 5.343099999999962e-05, 5.53610000000003e-05, 5.4471999999999854e-05, 4.962500000000106e-05, 5.633299999999869e-05, 5.35280000000006e-05, 5.6319999999998593e-05, 5.248600000000089e-05, 5.343099999999962e-05, 5.15279999999986e-05, 5.056999999999978e-05, 5.15409999999987e-05, 5.061099999999902e-05, 5.534700000000073e-05, 5.2485999999997424e-05, 5.059700000000292e-05, 5.532000000000106e-05, 5.248600000000089e-05, 5.250000000000046e-05, 5.137500000000281e-05, 5.631899999999912e-05, 5.533300000000116e-05, 5.440299999999801e-05, 5.258400000000135e-05, 5.155600000000121e-05, 5.438899999999844e-05, 5.058299999999988e-05, 5.534700000000073e-05, 5.345900000000223e-05, 5.53610000000003e-05, 5.2457999999998284e-05, 5.250000000000046e-05, 5.53480000000002e-05, 5.058299999999988e-05, 5.054100000000117e-05, 5.337499999999787e-05, 5.440299999999801e-05, 5.4444000000000714e-05, 5.633299999999869e-05, 5.0486999999998367e-05, 5.059699999999945e-05, 5.537499999999987e-05, 5.347200000000232e-05, 5.058299999999988e-05, 5.347299999999833e-05, 5.340300000000048e-05, 5.347200000000232e-05, 5.631899999999912e-05, 5.048599999999889e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.871" endtime="20201112 09:43:37.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.866" endtime="20201112 09:43:37.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.876" endtime="20201112 09:43:37.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.879" endtime="20201112 09:43:37.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.878" endtime="20201112 09:43:37.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.874" endtime="20201112 09:43:37.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.503" endtime="20201112 09:43:37.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.503" endtime="20201112 09:43:37.900"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.909" endtime="20201112 09:43:37.933"></status>
</kw>
<msg timestamp="20201112 09:43:37.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.907" endtime="20201112 09:43:37.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.934" endtime="20201112 09:43:37.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.937" endtime="20201112 09:43:37.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.905" endtime="20201112 09:43:37.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.903" endtime="20201112 09:43:37.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.946" endtime="20201112 09:43:38.231"></status>
</kw>
<msg timestamp="20201112 09:43:38.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023621986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023678319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.944" endtime="20201112 09:43:38.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023621986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023678319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.236" endtime="20201112 09:43:38.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.244" endtime="20201112 09:43:38.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.941" endtime="20201112 09:43:38.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.940" endtime="20201112 09:43:38.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.251" level="INFO">${RESULT} = [{'time': 0.023678319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.633299999999869e-05, 'source_diff': 5.633299999999869e-05}, {'time': 0.023739222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.247" endtime="20201112 09:43:38.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.264" level="INFO">${ACCURACY} = {'diff': [5.633299999999869e-05, 5.35410000000007e-05, 5.63610000000013e-05, 5.4430000000001144e-05, 5.438900000000191e-05, 5.3471999999998854e-05, 5.344499999999919e-05, 4.962500000000106e-05, 5.2500...</msg>
<status status="PASS" starttime="20201112 09:43:38.252" endtime="20201112 09:43:38.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.268" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.267" endtime="20201112 09:43:38.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.271" level="INFO">VALUE: [5.633299999999869e-05, 5.35410000000007e-05, 5.63610000000013e-05, 5.4430000000001144e-05, 5.438900000000191e-05, 5.3471999999998854e-05, 5.344499999999919e-05, 4.962500000000106e-05, 5.250000000000046e-05, 5.161100000000002e-05, 5.149999999999946e-05, 5.448700000000237e-05, 5.534699999999726e-05, 5.059699999999945e-05, 5.3471999999998854e-05, 5.151399999999903e-05, 5.441699999999758e-05, 5.257000000000178e-05, 5.059699999999945e-05, 5.441699999999758e-05, 5.441700000000105e-05, 5.538899999999944e-05, 5.251400000000003e-05, 5.53610000000003e-05, 5.537499999999987e-05, 5.154199999999817e-05, 5.640300000000001e-05, 5.538899999999944e-05, 5.3430000000000144e-05, 5.059799999999892e-05, 5.157000000000078e-05, 5.632000000000206e-05, 5.052800000000107e-05, 5.069499999999991e-05, 5.3457999999999284e-05, 5.338899999999744e-05, 5.6305999999999023e-05, 5.4429999999997675e-05, 5.061099999999902e-05, 5.163899999999916e-05, 5.056900000000031e-05, 5.250000000000046e-05, 5.154200000000164e-05, 5.4444000000000714e-05, 5.537499999999987e-05, 4.9638000000001153e-05, 5.634700000000173e-05, 5.53610000000003e-05, 5.4444000000000714e-05, 5.540299999999901e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.269" endtime="20201112 09:43:38.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.265" endtime="20201112 09:43:38.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.274" endtime="20201112 09:43:38.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.278" endtime="20201112 09:43:38.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.276" endtime="20201112 09:43:38.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.273" endtime="20201112 09:43:38.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.901" endtime="20201112 09:43:38.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.901" endtime="20201112 09:43:38.299"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.307" endtime="20201112 09:43:38.329"></status>
</kw>
<msg timestamp="20201112 09:43:38.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.306" endtime="20201112 09:43:38.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.330" endtime="20201112 09:43:38.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.333" endtime="20201112 09:43:38.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.303" endtime="20201112 09:43:38.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.301" endtime="20201112 09:43:38.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.342" endtime="20201112 09:43:38.629"></status>
</kw>
<msg timestamp="20201112 09:43:38.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.340" endtime="20201112 09:43:38.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.633" endtime="20201112 09:43:38.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.641" endtime="20201112 09:43:38.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.338" endtime="20201112 09:43:38.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.336" endtime="20201112 09:43:38.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.648" level="INFO">${RESULT} = [{'time': 0.022280056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.841700000000076e-05, 'source_diff': 7.841700000000076e-05}, {'time': 0.022371597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.645" endtime="20201112 09:43:38.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.663" level="INFO">${ACCURACY} = {'diff': [7.841700000000076e-05, 8.31110000000003e-05, 8.212499999999887e-05, 8.309700000000073e-05, 8.116700000000004e-05, 8.2152999999998e-05, 8.212500000000234e-05, 8.691699999999886e-05, 8.3986000...</msg>
<status status="PASS" starttime="20201112 09:43:38.649" endtime="20201112 09:43:38.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.668" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.667" endtime="20201112 09:43:38.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.670" level="INFO">VALUE: [7.841700000000076e-05, 8.31110000000003e-05, 8.212499999999887e-05, 8.309700000000073e-05, 8.116700000000004e-05, 8.2152999999998e-05, 8.212500000000234e-05, 8.691699999999886e-05, 8.398600000000117e-05, 8.502800000000088e-05, 8.504200000000045e-05, 8.120799999999928e-05, 8.511099999999883e-05, 8.119399999999971e-05, 8.407000000000206e-05, 8.402799999999988e-05, 8.405599999999902e-05, 8.119500000000265e-05, 8.583300000000044e-05, 8.215300000000147e-05, 8.406999999999859e-05, 8.597200000000013e-05, 8.505500000000055e-05, 8.595800000000056e-05, 8.315199999999953e-05, 8.020799999999828e-05, 8.59859999999997e-05, 8.308300000000116e-05, 8.395899999999804e-05, 8.119499999999918e-05, 8.306900000000159e-05, 8.692999999999895e-05, 8.219400000000071e-05, 8.31110000000003e-05, 8.409700000000173e-05, 8.026400000000003e-05, 8.595800000000056e-05, 8.306900000000159e-05, 8.023599999999742e-05, 8.697200000000113e-05, 8.118000000000014e-05, 8.207000000000006e-05, 8.597200000000013e-05, 8.404099999999998e-05, 8.21109999999993e-05, 8.401400000000031e-05, 8.21659999999981e-05, 8.502700000000141e-05, 8.599999999999927e-05, 8.12369999999979e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.669" endtime="20201112 09:43:38.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.664" endtime="20201112 09:43:38.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.674" endtime="20201112 09:43:38.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.677" endtime="20201112 09:43:38.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.676" endtime="20201112 09:43:38.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.672" endtime="20201112 09:43:38.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.299" endtime="20201112 09:43:38.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.299" endtime="20201112 09:43:38.698"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.707" endtime="20201112 09:43:38.730"></status>
</kw>
<msg timestamp="20201112 09:43:38.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.705" endtime="20201112 09:43:38.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.732" endtime="20201112 09:43:38.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.734" endtime="20201112 09:43:38.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.702" endtime="20201112 09:43:38.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.700" endtime="20201112 09:43:38.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.743" endtime="20201112 09:43:39.030"></status>
</kw>
<msg timestamp="20201112 09:43:39.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.742" endtime="20201112 09:43:39.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.035" endtime="20201112 09:43:39.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.043" endtime="20201112 09:43:39.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.739" endtime="20201112 09:43:39.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.738" endtime="20201112 09:43:39.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.049" level="INFO">${RESULT} = [{'time': 0.024726014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.358300000000206e-05, 'source_diff': 7.358300000000206e-05}, {'time': 0.024817458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.046" endtime="20201112 09:43:39.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.062" level="INFO">${ACCURACY} = {'diff': [7.358300000000206e-05, 8.118000000000014e-05, 8.409700000000173e-05, 8.4846999999999e-05, 8.601399999999884e-05, 8.601299999999937e-05, 8.213899999999844e-05, 8.599999999999927e-05, 8.313900...</msg>
<status status="PASS" starttime="20201112 09:43:39.050" endtime="20201112 09:43:39.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.067" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.066" endtime="20201112 09:43:39.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.069" level="INFO">VALUE: [7.358300000000206e-05, 8.118000000000014e-05, 8.409700000000173e-05, 8.4846999999999e-05, 8.601399999999884e-05, 8.601299999999937e-05, 8.213899999999844e-05, 8.599999999999927e-05, 8.31390000000029e-05, 8.301399999999931e-05, 8.602800000000188e-05, 8.119399999999971e-05, 8.690199999999981e-05, 8.123600000000189e-05, 8.218099999999715e-05, 8.587499999999915e-05, 8.12230000000018e-05, 8.49309999999999e-05, 8.505500000000055e-05, 8.219500000000018e-05, 8.108299999999916e-05, 8.219400000000071e-05, 8.21109999999993e-05, 8.497199999999913e-05, 8.687500000000015e-05, 8.024999999999699e-05, 8.6847000000001e-05, 8.406999999999859e-05, 8.405500000000302e-05, 8.491700000000033e-05, 8.308299999999769e-05, 8.12230000000018e-05, 8.205599999999702e-05, 8.590300000000176e-05, 8.408299999999869e-05, 8.401400000000031e-05, 8.29720000000006e-05, 8.599999999999927e-05, 8.502699999999794e-05, 8.213899999999844e-05, 8.216600000000157e-05, 8.116700000000004e-05, 8.208300000000016e-05, 8.49859999999987e-05, 8.298699999999964e-05, 8.31110000000003e-05, 8.405599999999902e-05, 8.693099999999843e-05, 8.694400000000199e-05, 8.312499999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.068" endtime="20201112 09:43:39.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.063" endtime="20201112 09:43:39.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.073" endtime="20201112 09:43:39.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.076" endtime="20201112 09:43:39.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.075" endtime="20201112 09:43:39.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.071" endtime="20201112 09:43:39.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.699" endtime="20201112 09:43:39.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.698" endtime="20201112 09:43:39.097"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.106" endtime="20201112 09:43:39.127"></status>
</kw>
<msg timestamp="20201112 09:43:39.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.104" endtime="20201112 09:43:39.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.128" endtime="20201112 09:43:39.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.131" endtime="20201112 09:43:39.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.102" endtime="20201112 09:43:39.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.100" endtime="20201112 09:43:39.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.140" endtime="20201112 09:43:39.427"></status>
</kw>
<msg timestamp="20201112 09:43:39.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.138" endtime="20201112 09:43:39.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.431" endtime="20201112 09:43:39.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.439" endtime="20201112 09:43:39.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.136" endtime="20201112 09:43:39.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.134" endtime="20201112 09:43:39.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.446" level="INFO">${RESULT} = [{'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.548599999999961e-05, 'source_diff': 7.548599999999961e-05}, {'time': 0.022412306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.443" endtime="20201112 09:43:39.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.459" level="INFO">${ACCURACY} = {'diff': [7.548599999999961e-05, 8.39590000000015e-05, 8.022199999999785e-05, 8.408399999999816e-05, 8.312499999999987e-05, 8.017999999999914e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.126399...</msg>
<status status="PASS" starttime="20201112 09:43:39.447" endtime="20201112 09:43:39.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.464" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.463" endtime="20201112 09:43:39.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.466" level="INFO">VALUE: [7.548599999999961e-05, 8.39590000000015e-05, 8.022199999999785e-05, 8.408399999999816e-05, 8.312499999999987e-05, 8.017999999999914e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.126399999999756e-05, 8.119399999999971e-05, 8.488900000000119e-05, 8.120799999999928e-05, 8.312499999999987e-05, 8.590300000000176e-05, 8.595800000000056e-05, 8.222199999999985e-05, 8.398600000000117e-05, 8.505500000000055e-05, 8.599999999999927e-05, 8.409699999999826e-05, 8.022199999999785e-05, 8.218100000000061e-05, 8.31110000000003e-05, 8.404199999999945e-05, 8.21659999999981e-05, 8.027700000000013e-05, 8.594500000000047e-05, 8.599999999999927e-05, 8.490199999999781e-05, 8.59859999999997e-05, 8.505500000000055e-05, 8.587500000000262e-05, 8.3152999999999e-05, 8.105500000000002e-05, 8.508299999999969e-05, 8.599999999999927e-05, 8.688800000000024e-05, 8.215199999999853e-05, 8.306899999999812e-05, 8.2152999999998e-05, 8.59859999999997e-05, 8.586100000000305e-05, 8.504199999999698e-05, 8.406900000000259e-05, 8.21390000000019e-05, 8.500000000000174e-05, 8.112499999999787e-05, 8.109699999999873e-05, 8.216600000000157e-05, 8.10970000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.465" endtime="20201112 09:43:39.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.460" endtime="20201112 09:43:39.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.470" endtime="20201112 09:43:39.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.473" endtime="20201112 09:43:39.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.471" endtime="20201112 09:43:39.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.468" endtime="20201112 09:43:39.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.098" endtime="20201112 09:43:39.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.098" endtime="20201112 09:43:39.494"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.502" endtime="20201112 09:43:39.524"></status>
</kw>
<msg timestamp="20201112 09:43:39.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.501" endtime="20201112 09:43:39.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.525" endtime="20201112 09:43:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.528" endtime="20201112 09:43:39.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.498" endtime="20201112 09:43:39.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.496" endtime="20201112 09:43:39.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.537" endtime="20201112 09:43:39.823"></status>
</kw>
<msg timestamp="20201112 09:43:39.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.535" endtime="20201112 09:43:39.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.827" endtime="20201112 09:43:39.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.835" endtime="20201112 09:43:39.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.532" endtime="20201112 09:43:39.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.531" endtime="20201112 09:43:39.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.842" level="INFO">${RESULT} = [{'time': 0.022662056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.781999999999887e-05, 'source_diff': 8.781999999999887e-05}, {'time': 0.022753569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.838" endtime="20201112 09:43:39.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.855" level="INFO">${ACCURACY} = {'diff': [8.781999999999887e-05, 8.218000000000114e-05, 8.312499999999987e-05, 8.691699999999886e-05, 8.323600000000042e-05, 8.594399999999752e-05, 8.604200000000145e-05, 8.308300000000116e-05, 8.2166...</msg>
<status status="PASS" starttime="20201112 09:43:39.843" endtime="20201112 09:43:39.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.859" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.858" endtime="20201112 09:43:39.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.862" level="INFO">VALUE: [8.781999999999887e-05, 8.218000000000114e-05, 8.312499999999987e-05, 8.691699999999886e-05, 8.323600000000042e-05, 8.594399999999752e-05, 8.604200000000145e-05, 8.308300000000116e-05, 8.216699999999758e-05, 8.602799999999841e-05, 8.61110000000033e-05, 8.500000000000174e-05, 8.31390000000029e-05, 8.608300000000069e-05, 8.602799999999841e-05, 8.21390000000019e-05, 8.2152000000002e-05, 8.597200000000013e-05, 8.123599999999842e-05, 8.409699999999826e-05, 8.218100000000061e-05, 8.130500000000027e-05, 8.315300000000247e-05, 8.3152999999999e-05, 8.601400000000231e-05, 8.307000000000106e-05, 8.3152999999999e-05, 8.406999999999859e-05, 8.408300000000216e-05, 8.122299999999832e-05, 8.319499999999772e-05, 8.694399999999852e-05, 8.504200000000045e-05, 8.597200000000013e-05, 8.119500000000265e-05, 8.693000000000242e-05, 8.215199999999853e-05, 8.122199999999885e-05, 8.118099999999961e-05, 8.69310000000019e-05, 8.498699999999818e-05, 8.224999999999899e-05, 8.59859999999997e-05, 8.695799999999809e-05, 8.408299999999869e-05, 8.505499999999708e-05, 8.122299999999832e-05, 8.41110000000013e-05, 8.59859999999997e-05, 8.412500000000087e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.861" endtime="20201112 09:43:39.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.856" endtime="20201112 09:43:39.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.866" endtime="20201112 09:43:39.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.869" endtime="20201112 09:43:39.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.867" endtime="20201112 09:43:39.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.864" endtime="20201112 09:43:39.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.495" endtime="20201112 09:43:39.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.494" endtime="20201112 09:43:39.890"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.898" endtime="20201112 09:43:39.921"></status>
</kw>
<msg timestamp="20201112 09:43:39.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.897" endtime="20201112 09:43:39.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.923" endtime="20201112 09:43:39.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.926" endtime="20201112 09:43:39.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.894" endtime="20201112 09:43:39.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.892" endtime="20201112 09:43:39.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.935" endtime="20201112 09:43:40.221"></status>
</kw>
<msg timestamp="20201112 09:43:40.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02370575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:39.933" endtime="20201112 09:43:40.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02370575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:40.226" endtime="20201112 09:43:40.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.234" endtime="20201112 09:43:40.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.930" endtime="20201112 09:43:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.929" endtime="20201112 09:43:40.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.241" level="INFO">${RESULT} = [{'time': 0.02370575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.919400000000118e-05, 'source_diff': 7.919400000000118e-05}, {'time': 0.023797444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:40.237" endtime="20201112 09:43:40.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.255" level="INFO">${ACCURACY} = {'diff': [7.919400000000118e-05, 8.702699999999994e-05, 8.218100000000061e-05, 8.02779999999996e-05, 8.305599999999802e-05, 8.494499999999947e-05, 8.40980000000012e-05, 8.708300000000169e-05, 8.595800...</msg>
<status status="PASS" starttime="20201112 09:43:40.241" endtime="20201112 09:43:40.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.259" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.258" endtime="20201112 09:43:40.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.262" level="INFO">VALUE: [7.919400000000118e-05, 8.702699999999994e-05, 8.218100000000061e-05, 8.02779999999996e-05, 8.305599999999802e-05, 8.494499999999947e-05, 8.40980000000012e-05, 8.708300000000169e-05, 8.595800000000056e-05, 8.31110000000003e-05, 8.404199999999945e-05, 8.323600000000042e-05, 8.023600000000089e-05, 8.406999999999859e-05, 8.023600000000089e-05, 8.408299999999869e-05, 8.118000000000014e-05, 8.120800000000275e-05, 8.408299999999869e-05, 8.611099999999983e-05, 8.120899999999875e-05, 8.602799999999841e-05, 8.3152999999999e-05, 8.499999999999827e-05, 8.400000000000074e-05, 8.505600000000002e-05, 8.21390000000019e-05, 8.309700000000073e-05, 8.505600000000002e-05, 8.120799999999928e-05, 8.219400000000071e-05, 8.600000000000274e-05, 8.31110000000003e-05, 8.118000000000014e-05, 8.20970000000032e-05, 8.405599999999902e-05, 8.408300000000216e-05, 8.122199999999885e-05, 8.41110000000013e-05, 8.602800000000188e-05, 8.406899999999912e-05, 8.692999999999895e-05, 8.59859999999997e-05, 8.216700000000104e-05, 8.312499999999987e-05, 8.405499999999955e-05, 8.217999999999767e-05, 8.405599999999902e-05, 8.218000000000114e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.260" endtime="20201112 09:43:40.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.256" endtime="20201112 09:43:40.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.269" endtime="20201112 09:43:40.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.272" endtime="20201112 09:43:40.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.271" endtime="20201112 09:43:40.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.267" endtime="20201112 09:43:40.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.891" endtime="20201112 09:43:40.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.890" endtime="20201112 09:43:40.293"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.302" endtime="20201112 09:43:40.323"></status>
</kw>
<msg timestamp="20201112 09:43:40.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.300" endtime="20201112 09:43:40.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.325" endtime="20201112 09:43:40.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.327" endtime="20201112 09:43:40.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.298" endtime="20201112 09:43:40.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.296" endtime="20201112 09:43:40.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.336" endtime="20201112 09:43:40.623"></status>
</kw>
<msg timestamp="20201112 09:43:40.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.335" endtime="20201112 09:43:40.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.627" endtime="20201112 09:43:40.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.635" endtime="20201112 09:43:40.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.332" endtime="20201112 09:43:40.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.330" endtime="20201112 09:43:40.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.642" level="INFO">${RESULT} = [{'time': 0.022092986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.92779999999986e-05, 'source_diff': 7.92779999999986e-05}, {'time': 0.022184792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:40.639" endtime="20201112 09:43:40.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.655" level="INFO">${ACCURACY} = {'diff': [7.92779999999986e-05, 8.2152999999998e-05, 8.406899999999912e-05, 8.502700000000141e-05, 8.505499999999708e-05, 8.594400000000099e-05, 8.327799999999913e-05, 8.504100000000098e-05, 8.5985999...</msg>
<status status="PASS" starttime="20201112 09:43:40.643" endtime="20201112 09:43:40.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.660" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.659" endtime="20201112 09:43:40.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.662" level="INFO">VALUE: [7.92779999999986e-05, 8.2152999999998e-05, 8.406899999999912e-05, 8.502700000000141e-05, 8.505499999999708e-05, 8.594400000000099e-05, 8.327799999999913e-05, 8.504100000000098e-05, 8.59859999999997e-05, 8.323600000000042e-05, 8.501399999999784e-05, 8.402700000000041e-05, 8.406999999999859e-05, 8.41110000000013e-05, 8.605500000000155e-05, 8.59859999999997e-05, 8.222199999999985e-05, 8.504200000000045e-05, 8.611099999999983e-05, 8.213899999999844e-05, 8.406999999999859e-05, 8.131999999999931e-05, 8.597200000000013e-05, 8.495799999999956e-05, 8.1152000000001e-05, 8.509699999999926e-05, 8.212499999999887e-05, 8.502700000000141e-05, 8.407000000000206e-05, 8.120799999999928e-05, 8.506900000000012e-05, 8.691599999999938e-05, 8.31110000000003e-05, 8.323600000000042e-05, 8.30980000000002e-05, 8.31110000000003e-05, 8.215300000000147e-05, 8.608300000000069e-05, 8.216700000000104e-05, 8.026400000000003e-05, 8.413900000000044e-05, 8.217999999999767e-05, 8.409699999999826e-05, 8.312499999999987e-05, 8.218000000000114e-05, 8.216600000000157e-05, 8.323600000000042e-05, 8.318100000000161e-05, 8.309699999999726e-05, 8.602800000000188e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.661" endtime="20201112 09:43:40.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.656" endtime="20201112 09:43:40.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.666" endtime="20201112 09:43:40.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.669" endtime="20201112 09:43:40.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.668" endtime="20201112 09:43:40.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.664" endtime="20201112 09:43:40.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.294" endtime="20201112 09:43:40.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.294" endtime="20201112 09:43:40.690"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.699" endtime="20201112 09:43:40.720"></status>
</kw>
<msg timestamp="20201112 09:43:40.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.698" endtime="20201112 09:43:40.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.721" endtime="20201112 09:43:40.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.724" endtime="20201112 09:43:40.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.695" endtime="20201112 09:43:40.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.693" endtime="20201112 09:43:40.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.733" endtime="20201112 09:43:41.019"></status>
</kw>
<msg timestamp="20201112 09:43:41.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.731" endtime="20201112 09:43:41.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.024" endtime="20201112 09:43:41.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.032" endtime="20201112 09:43:41.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.729" endtime="20201112 09:43:41.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.727" endtime="20201112 09:43:41.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.038" level="INFO">${RESULT} = [{'time': 0.022282194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.45270000000005e-05, 'source_diff': 9.45270000000005e-05}, {'time': 0.022373736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:41.035" endtime="20201112 09:43:41.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.052" level="INFO">${ACCURACY} = {'diff': [9.45270000000005e-05, 8.119400000000318e-05, 8.21109999999993e-05, 8.59859999999997e-05, 8.69730000000006e-05, 8.015299999999947e-05, 8.218100000000061e-05, 8.299999999999974e-05, 8.40559999...</msg>
<status status="PASS" starttime="20201112 09:43:41.039" endtime="20201112 09:43:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.056" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.055" endtime="20201112 09:43:41.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.059" level="INFO">VALUE: [9.45270000000005e-05, 8.119400000000318e-05, 8.21109999999993e-05, 8.59859999999997e-05, 8.69730000000006e-05, 8.015299999999947e-05, 8.218100000000061e-05, 8.299999999999974e-05, 8.405599999999902e-05, 8.308299999999769e-05, 8.299999999999974e-05, 8.022200000000132e-05, 8.206900000000059e-05, 8.216700000000104e-05, 8.105500000000002e-05, 8.025000000000046e-05, 8.305600000000149e-05, 8.316699999999858e-05, 8.212500000000234e-05, 8.304200000000192e-05, 8.315199999999953e-05, 8.395899999999804e-05, 8.313899999999944e-05, 8.116700000000004e-05, 8.395800000000203e-05, 8.505500000000055e-05, 8.502800000000088e-05, 8.216700000000104e-05, 8.394500000000193e-05, 8.601399999999884e-05, 8.216700000000104e-05, 8.692999999999895e-05, 8.59859999999997e-05, 8.31110000000003e-05, 8.601299999999937e-05, 8.219400000000071e-05, 8.301399999999931e-05, 8.31110000000003e-05, 8.49720000000026e-05, 8.591600000000185e-05, 8.591700000000133e-05, 8.601399999999884e-05, 8.5847e-05, 8.405499999999955e-05, 8.10970000000022e-05, 8.299999999999974e-05, 8.406899999999912e-05, 8.682000000000134e-05, 8.599999999999927e-05, 8.408399999999816e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.057" endtime="20201112 09:43:41.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.052" endtime="20201112 09:43:41.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.062" endtime="20201112 09:43:41.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.066" endtime="20201112 09:43:41.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.064" endtime="20201112 09:43:41.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.061" endtime="20201112 09:43:41.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.691" endtime="20201112 09:43:41.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.691" endtime="20201112 09:43:41.087"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.095" endtime="20201112 09:43:41.120"></status>
</kw>
<msg timestamp="20201112 09:43:41.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.093" endtime="20201112 09:43:41.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.122" endtime="20201112 09:43:41.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.124" endtime="20201112 09:43:41.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.091" endtime="20201112 09:43:41.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.089" endtime="20201112 09:43:41.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.133" endtime="20201112 09:43:41.420"></status>
</kw>
<msg timestamp="20201112 09:43:41.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.132" endtime="20201112 09:43:41.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.424" endtime="20201112 09:43:41.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.433" endtime="20201112 09:43:41.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.129" endtime="20201112 09:43:41.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.128" endtime="20201112 09:43:41.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.439" level="INFO">${RESULT} = [{'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.64859999999998e-05, 'source_diff': 9.64859999999998e-05}, {'time': 0.022744792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:41.436" endtime="20201112 09:43:41.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.453" level="INFO">${ACCURACY} = {'diff': [9.64859999999998e-05, 8.120899999999875e-05, 8.404199999999945e-05, 8.597200000000013e-05, 8.112500000000133e-05, 8.404199999999945e-05, 8.306899999999812e-05, 8.213899999999844e-05, 8.12089...</msg>
<status status="PASS" starttime="20201112 09:43:41.440" endtime="20201112 09:43:41.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.457" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.456" endtime="20201112 09:43:41.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.460" level="INFO">VALUE: [9.64859999999998e-05, 8.120899999999875e-05, 8.404199999999945e-05, 8.597200000000013e-05, 8.112500000000133e-05, 8.404199999999945e-05, 8.306899999999812e-05, 8.213899999999844e-05, 8.120899999999875e-05, 8.023600000000089e-05, 8.509699999999926e-05, 8.219400000000071e-05, 8.31110000000003e-05, 8.601399999999884e-05, 8.501400000000131e-05, 8.2152999999998e-05, 8.406900000000259e-05, 8.688899999999972e-05, 8.118099999999961e-05, 8.695799999999809e-05, 8.212500000000234e-05, 8.59310000000009e-05, 8.41110000000013e-05, 8.309700000000073e-05, 8.215300000000147e-05, 8.708300000000169e-05, 8.502800000000088e-05, 8.119399999999971e-05, 8.404099999999998e-05, 8.497199999999913e-05, 8.305600000000149e-05, 8.408299999999869e-05, 8.602800000000188e-05, 8.59859999999997e-05, 8.120899999999875e-05, 8.119399999999971e-05, 8.506999999999959e-05, 8.697199999999766e-05, 8.607000000000059e-05, 8.212499999999887e-05, 8.306899999999812e-05, 8.501300000000184e-05, 8.313899999999944e-05, 8.402799999999988e-05, 8.411099999999783e-05, 8.504199999999698e-05, 8.120799999999928e-05, 8.120799999999928e-05, 8.405599999999902e-05, 8.218099999999715e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.458" endtime="20201112 09:43:41.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.453" endtime="20201112 09:43:41.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.463" endtime="20201112 09:43:41.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.467" endtime="20201112 09:43:41.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.465" endtime="20201112 09:43:41.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.462" endtime="20201112 09:43:41.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.087" endtime="20201112 09:43:41.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.087" endtime="20201112 09:43:41.488"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.496" endtime="20201112 09:43:41.518"></status>
</kw>
<msg timestamp="20201112 09:43:41.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.495" endtime="20201112 09:43:41.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.520" endtime="20201112 09:43:41.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.522" endtime="20201112 09:43:41.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.492" endtime="20201112 09:43:41.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.490" endtime="20201112 09:43:41.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.531" endtime="20201112 09:43:41.818"></status>
</kw>
<msg timestamp="20201112 09:43:41.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.530" endtime="20201112 09:43:41.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.822" endtime="20201112 09:43:41.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.830" endtime="20201112 09:43:41.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.527" endtime="20201112 09:43:41.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.525" endtime="20201112 09:43:41.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.837" level="INFO">${RESULT} = [{'time': 0.023696486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402799999999988e-05, 'source_diff': 8.402799999999988e-05}, {'time': 0.023787861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.833" endtime="20201112 09:43:41.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.851" level="INFO">${ACCURACY} = {'diff': [8.402799999999988e-05, 8.026400000000003e-05, 8.318100000000161e-05, 8.601400000000231e-05, 8.509700000000273e-05, 8.69310000000019e-05, 8.02779999999996e-05, 8.59859999999997e-05, 8.2165999...</msg>
<status status="PASS" starttime="20201112 09:43:41.838" endtime="20201112 09:43:41.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.856" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.855" endtime="20201112 09:43:41.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.858" level="INFO">VALUE: [8.402799999999988e-05, 8.026400000000003e-05, 8.318100000000161e-05, 8.601400000000231e-05, 8.509700000000273e-05, 8.69310000000019e-05, 8.02779999999996e-05, 8.59859999999997e-05, 8.21659999999981e-05, 8.315300000000247e-05, 8.408400000000163e-05, 8.59859999999997e-05, 8.601400000000231e-05, 8.505500000000055e-05, 8.695800000000156e-05, 8.408400000000163e-05, 8.119499999999918e-05, 8.694399999999852e-05, 8.124999999999799e-05, 8.219500000000018e-05, 8.217999999999767e-05, 8.3152999999999e-05, 8.504200000000045e-05, 8.505600000000002e-05, 8.312499999999987e-05, 8.302800000000235e-05, 8.119500000000265e-05, 8.3152999999999e-05, 8.409700000000173e-05, 8.506999999999959e-05, 8.119399999999971e-05, 8.700000000000027e-05, 8.504199999999698e-05, 8.694400000000199e-05, 8.408299999999869e-05, 8.595900000000004e-05, 8.220800000000028e-05, 8.409700000000173e-05, 8.405499999999955e-05, 8.123599999999842e-05, 8.695800000000156e-05, 8.122199999999885e-05, 8.511099999999883e-05, 8.704199999999898e-05, 8.413900000000044e-05, 8.601399999999884e-05, 8.69730000000006e-05, 8.597200000000013e-05, 8.119399999999971e-05, 8.218000000000114e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.857" endtime="20201112 09:43:41.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.852" endtime="20201112 09:43:41.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.862" endtime="20201112 09:43:41.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.865" endtime="20201112 09:43:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.864" endtime="20201112 09:43:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.860" endtime="20201112 09:43:41.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.488" endtime="20201112 09:43:41.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.488" endtime="20201112 09:43:41.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.109" endtime="20201112 09:43:41.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.891" endtime="20201112 09:43:41.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.889" endtime="20201112 09:43:41.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.888" endtime="20201112 09:43:41.911"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:02.030" endtime="20201112 09:43:41.911" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.919" endtime="20201112 09:43:41.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.917" endtime="20201112 09:43:41.939"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.952" endtime="20201112 09:43:41.977"></status>
</kw>
<msg timestamp="20201112 09:43:41.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.950" endtime="20201112 09:43:41.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.978" endtime="20201112 09:43:41.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:41.981" endtime="20201112 09:43:41.983"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:41.947" endtime="20201112 09:43:41.983"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:41.945" endtime="20201112 09:43:41.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.944" endtime="20201112 09:43:41.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:41.988" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:41.987" endtime="20201112 09:43:41.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.985" endtime="20201112 09:43:41.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.943" endtime="20201112 09:43:41.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.942" endtime="20201112 09:43:41.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.991" endtime="20201112 09:43:41.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.941" endtime="20201112 09:43:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.939" endtime="20201112 09:43:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.916" endtime="20201112 09:43:41.994"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.004" endtime="20201112 09:43:42.022"></status>
</kw>
<msg timestamp="20201112 09:43:42.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.002" endtime="20201112 09:43:42.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.023" endtime="20201112 09:43:42.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.026" endtime="20201112 09:43:42.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.999" endtime="20201112 09:43:42.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.997" endtime="20201112 09:43:42.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.035" endtime="20201112 09:43:42.320"></status>
</kw>
<msg timestamp="20201112 09:43:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079050653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079058917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.033" endtime="20201112 09:43:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079050653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079058917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.324" endtime="20201112 09:43:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.332" endtime="20201112 09:43:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.031" endtime="20201112 09:43:42.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.029" endtime="20201112 09:43:42.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.339" level="INFO">${RESULT} = [{'time': 0.079058917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.26400000000782e-06, 'source_diff': 8.26400000000782e-06}, {'time': 0.079075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8....</msg>
<status status="PASS" starttime="20201112 09:43:42.336" endtime="20201112 09:43:42.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.353" level="INFO">${ACCURACY} = {'diff': [8.26400000000782e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.138999999990348e-06, 8.179999999996523e-06, 8.223000000001646e-06, 8.22300...</msg>
<status status="PASS" starttime="20201112 09:43:42.340" endtime="20201112 09:43:42.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.358" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.356" endtime="20201112 09:43:42.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.360" level="INFO">VALUE: [8.26400000000782e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.138999999990348e-06, 8.179999999996523e-06, 8.223000000001646e-06, 8.223000000001646e-06, 8.194999999988628e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.208999999995137e-06, 8.207999999995663e-06, 8.221999999988294e-06, 8.222000000002172e-06, 8.207999999995663e-06, 8.194000000003032e-06, 8.207999999995663e-06, 8.207999999995663e-06, 8.179999999996523e-06, 8.209000000009015e-06, 8.194000000003032e-06, 8.193999999989154e-06, 8.194000000003032e-06, 8.222000000002172e-06, 8.208999999995137e-06, 8.23600000000868e-06, 8.208000000009541e-06, 8.195000000002506e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.180000000010401e-06, 8.195000000002506e-06, 8.208999999995137e-06, 8.181000000009875e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.207999999995663e-06, 8.152999999996857e-06, 8.26299999999447e-06, 8.235999999994803e-06, 8.193999999989154e-06, 8.180000000010401e-06, 8.209000000009015e-06]</msg>
<status status="PASS" starttime="20201112 09:43:42.359" endtime="20201112 09:43:42.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.354" endtime="20201112 09:43:42.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.363" endtime="20201112 09:43:42.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.367" endtime="20201112 09:43:42.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.365" endtime="20201112 09:43:42.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.361" endtime="20201112 09:43:42.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.996" endtime="20201112 09:43:42.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.995" endtime="20201112 09:43:42.388"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.396" endtime="20201112 09:43:42.413"></status>
</kw>
<msg timestamp="20201112 09:43:42.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.395" endtime="20201112 09:43:42.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.415" endtime="20201112 09:43:42.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.417" endtime="20201112 09:43:42.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.392" endtime="20201112 09:43:42.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.390" endtime="20201112 09:43:42.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.426" endtime="20201112 09:43:42.739"></status>
</kw>
<msg timestamp="20201112 09:43:42.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.425" endtime="20201112 09:43:42.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.744" endtime="20201112 09:43:42.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.753" endtime="20201112 09:43:42.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.422" endtime="20201112 09:43:42.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.421" endtime="20201112 09:43:42.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.760" level="INFO">${RESULT} = [{'time': 0.022990653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.023006194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.756" endtime="20201112 09:43:42.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.774" level="INFO">${ACCURACY} = {'diff': [8.250000000001312e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.2090...</msg>
<status status="PASS" starttime="20201112 09:43:42.761" endtime="20201112 09:43:42.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.779" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.778" endtime="20201112 09:43:42.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.782" level="INFO">VALUE: [8.250000000001312e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.305999999999591e-06, 8.222000000002172e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 09:43:42.780" endtime="20201112 09:43:42.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.775" endtime="20201112 09:43:42.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.786" endtime="20201112 09:43:42.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.789" endtime="20201112 09:43:42.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.788" endtime="20201112 09:43:42.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.784" endtime="20201112 09:43:42.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.389" endtime="20201112 09:43:42.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.388" endtime="20201112 09:43:42.810"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.819" endtime="20201112 09:43:42.839"></status>
</kw>
<msg timestamp="20201112 09:43:42.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.818" endtime="20201112 09:43:42.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.840" endtime="20201112 09:43:42.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.843" endtime="20201112 09:43:42.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.815" endtime="20201112 09:43:42.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.813" endtime="20201112 09:43:42.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.853" endtime="20201112 09:43:43.140"></status>
</kw>
<msg timestamp="20201112 09:43:43.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02224675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:42.851" endtime="20201112 09:43:43.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02224675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:43.144" endtime="20201112 09:43:43.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.153" endtime="20201112 09:43:43.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.848" endtime="20201112 09:43:43.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.846" endtime="20201112 09:43:43.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.161" level="INFO">${RESULT} = [{'time': 0.02224675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.022261194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:43.158" endtime="20201112 09:43:43.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.175" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.152000000000853e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.1520...</msg>
<status status="PASS" starttime="20201112 09:43:43.162" endtime="20201112 09:43:43.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.180" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.178" endtime="20201112 09:43:43.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.182" level="INFO">VALUE: [8.193999999999563e-06, 8.152000000000853e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.152000000000853e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.250000000001312e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.221999999998703e-06]</msg>
<status status="PASS" starttime="20201112 09:43:43.181" endtime="20201112 09:43:43.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.176" endtime="20201112 09:43:43.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.186" endtime="20201112 09:43:43.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.190" endtime="20201112 09:43:43.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.188" endtime="20201112 09:43:43.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.184" endtime="20201112 09:43:43.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.811" endtime="20201112 09:43:43.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.811" endtime="20201112 09:43:43.211"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.220" endtime="20201112 09:43:43.238"></status>
</kw>
<msg timestamp="20201112 09:43:43.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.218" endtime="20201112 09:43:43.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.239" endtime="20201112 09:43:43.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.242" endtime="20201112 09:43:43.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.215" endtime="20201112 09:43:43.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.213" endtime="20201112 09:43:43.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.252" endtime="20201112 09:43:43.541"></status>
</kw>
<msg timestamp="20201112 09:43:43.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023895875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.250" endtime="20201112 09:43:43.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023895875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.545" endtime="20201112 09:43:43.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.554" endtime="20201112 09:43:43.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.247" endtime="20201112 09:43:43.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.246" endtime="20201112 09:43:43.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.561" level="INFO">${RESULT} = [{'time': 0.023904083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.023917486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.557" endtime="20201112 09:43:43.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.575" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.194000000003032e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.2220...</msg>
<status status="PASS" starttime="20201112 09:43:43.562" endtime="20201112 09:43:43.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.580" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.578" endtime="20201112 09:43:43.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.582" level="INFO">VALUE: [8.207999999999133e-06, 8.194000000003032e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.278000000000452e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.250000000001312e-06, 8.153000000000327e-06, 8.125000000001187e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.165999999996953e-06]</msg>
<status status="PASS" starttime="20201112 09:43:43.581" endtime="20201112 09:43:43.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.576" endtime="20201112 09:43:43.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.586" endtime="20201112 09:43:43.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.589" endtime="20201112 09:43:43.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.588" endtime="20201112 09:43:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.584" endtime="20201112 09:43:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.212" endtime="20201112 09:43:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.211" endtime="20201112 09:43:43.610"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.619" endtime="20201112 09:43:43.634"></status>
</kw>
<msg timestamp="20201112 09:43:43.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.618" endtime="20201112 09:43:43.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.636" endtime="20201112 09:43:43.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.639" endtime="20201112 09:43:43.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.615" endtime="20201112 09:43:43.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.613" endtime="20201112 09:43:43.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.648" endtime="20201112 09:43:43.935"></status>
</kw>
<msg timestamp="20201112 09:43:43.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.646" endtime="20201112 09:43:43.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.939" endtime="20201112 09:43:43.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.948" endtime="20201112 09:43:43.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.644" endtime="20201112 09:43:43.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.642" endtime="20201112 09:43:43.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.955" level="INFO">${RESULT} = [{'time': 0.020889903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.020903431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.951" endtime="20201112 09:43:43.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.969" level="INFO">${ACCURACY} = {'diff': [8.209000000002076e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.1809...</msg>
<status status="PASS" starttime="20201112 09:43:43.956" endtime="20201112 09:43:43.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.974" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.972" endtime="20201112 09:43:43.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.976" level="INFO">VALUE: [8.209000000002076e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.138999999997287e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.236999999997746e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.277000000000978e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.125000000001187e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.111000000001617e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201112 09:43:43.975" endtime="20201112 09:43:43.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.970" endtime="20201112 09:43:43.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.980" endtime="20201112 09:43:43.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.984" endtime="20201112 09:43:44.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.982" endtime="20201112 09:43:44.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.978" endtime="20201112 09:43:44.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.611" endtime="20201112 09:43:44.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.611" endtime="20201112 09:43:44.005"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.014" endtime="20201112 09:43:44.036"></status>
</kw>
<msg timestamp="20201112 09:43:44.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.012" endtime="20201112 09:43:44.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.037" endtime="20201112 09:43:44.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.040" endtime="20201112 09:43:44.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.010" endtime="20201112 09:43:44.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.007" endtime="20201112 09:43:44.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.049" endtime="20201112 09:43:44.336"></status>
</kw>
<msg timestamp="20201112 09:43:44.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.048" endtime="20201112 09:43:44.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.341" endtime="20201112 09:43:44.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.349" endtime="20201112 09:43:44.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.045" endtime="20201112 09:43:44.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.043" endtime="20201112 09:43:44.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.356" level="INFO">${RESULT} = [{'time': 0.023566292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.023580431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.353" endtime="20201112 09:43:44.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.370" level="INFO">${ACCURACY} = {'diff': [8.208999999998606e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.2080...</msg>
<status status="PASS" starttime="20201112 09:43:44.357" endtime="20201112 09:43:44.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.375" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.374" endtime="20201112 09:43:44.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.377" level="INFO">VALUE: [8.208999999998606e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.139000000000757e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.194000000003032e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201112 09:43:44.376" endtime="20201112 09:43:44.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.371" endtime="20201112 09:43:44.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.381" endtime="20201112 09:43:44.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.385" endtime="20201112 09:43:44.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.383" endtime="20201112 09:43:44.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.379" endtime="20201112 09:43:44.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.006" endtime="20201112 09:43:44.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.005" endtime="20201112 09:43:44.406"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.415" endtime="20201112 09:43:44.434"></status>
</kw>
<msg timestamp="20201112 09:43:44.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.413" endtime="20201112 09:43:44.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.435" endtime="20201112 09:43:44.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.438" endtime="20201112 09:43:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.411" endtime="20201112 09:43:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.408" endtime="20201112 09:43:44.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.448" endtime="20201112 09:43:44.734"></status>
</kw>
<msg timestamp="20201112 09:43:44.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.446" endtime="20201112 09:43:44.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.739" endtime="20201112 09:43:44.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.748" endtime="20201112 09:43:44.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.443" endtime="20201112 09:43:44.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.441" endtime="20201112 09:43:44.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.755" level="INFO">${RESULT} = [{'time': 0.024332208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.0243485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:44.751" endtime="20201112 09:43:44.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.769" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.165999999996953e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.2089...</msg>
<status status="PASS" starttime="20201112 09:43:44.756" endtime="20201112 09:43:44.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.774" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.773" endtime="20201112 09:43:44.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.777" level="INFO">VALUE: [8.179999999999993e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.165999999996953e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.124999999997717e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.278000000000452e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 09:43:44.775" endtime="20201112 09:43:44.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.770" endtime="20201112 09:43:44.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.780" endtime="20201112 09:43:44.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.784" endtime="20201112 09:43:44.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.782" endtime="20201112 09:43:44.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.779" endtime="20201112 09:43:44.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.407" endtime="20201112 09:43:44.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.406" endtime="20201112 09:43:44.805"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.814" endtime="20201112 09:43:44.830"></status>
</kw>
<msg timestamp="20201112 09:43:44.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.813" endtime="20201112 09:43:44.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.832" endtime="20201112 09:43:44.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.835" endtime="20201112 09:43:44.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.810" endtime="20201112 09:43:44.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.808" endtime="20201112 09:43:44.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.844" endtime="20201112 09:43:45.133"></status>
</kw>
<msg timestamp="20201112 09:43:45.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.842" endtime="20201112 09:43:45.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.138" endtime="20201112 09:43:45.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.147" endtime="20201112 09:43:45.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.840" endtime="20201112 09:43:45.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.838" endtime="20201112 09:43:45.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.154" level="INFO">${RESULT} = [{'time': 0.022023236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.022040181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.150" endtime="20201112 09:43:45.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.167" level="INFO">${ACCURACY} = {'diff': [8.166999999999897e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.2080...</msg>
<status status="PASS" starttime="20201112 09:43:45.155" endtime="20201112 09:43:45.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.172" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.171" endtime="20201112 09:43:45.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.175" level="INFO">VALUE: [8.166999999999897e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.195000000002506e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.278000000000452e-06, 8.262999999997939e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 09:43:45.173" endtime="20201112 09:43:45.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.168" endtime="20201112 09:43:45.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.179" endtime="20201112 09:43:45.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.182" endtime="20201112 09:43:45.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.181" endtime="20201112 09:43:45.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.177" endtime="20201112 09:43:45.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.806" endtime="20201112 09:43:45.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.806" endtime="20201112 09:43:45.203"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.212" endtime="20201112 09:43:45.227"></status>
</kw>
<msg timestamp="20201112 09:43:45.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.211" endtime="20201112 09:43:45.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.229" endtime="20201112 09:43:45.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.231" endtime="20201112 09:43:45.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.208" endtime="20201112 09:43:45.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.206" endtime="20201112 09:43:45.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.241" endtime="20201112 09:43:45.527"></status>
</kw>
<msg timestamp="20201112 09:43:45.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.239" endtime="20201112 09:43:45.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.532" endtime="20201112 09:43:45.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.540" endtime="20201112 09:43:45.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.237" endtime="20201112 09:43:45.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.235" endtime="20201112 09:43:45.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.547" level="INFO">${RESULT} = [{'time': 0.020699611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.020712375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.544" endtime="20201112 09:43:45.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.561" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.194000000003032e-06, 8.125000000001187e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.292000000000022e-06, 8.2219...</msg>
<status status="PASS" starttime="20201112 09:43:45.548" endtime="20201112 09:43:45.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.566" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.565" endtime="20201112 09:43:45.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.569" level="INFO">VALUE: [8.179999999999993e-06, 8.194000000003032e-06, 8.125000000001187e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.292000000000022e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201112 09:43:45.567" endtime="20201112 09:43:45.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.562" endtime="20201112 09:43:45.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.578" endtime="20201112 09:43:45.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.582" endtime="20201112 09:43:45.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.580" endtime="20201112 09:43:45.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.576" endtime="20201112 09:43:45.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.204" endtime="20201112 09:43:45.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.204" endtime="20201112 09:43:45.603"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.612" endtime="20201112 09:43:45.630"></status>
</kw>
<msg timestamp="20201112 09:43:45.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.610" endtime="20201112 09:43:45.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.631" endtime="20201112 09:43:45.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.634" endtime="20201112 09:43:45.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.607" endtime="20201112 09:43:45.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.605" endtime="20201112 09:43:45.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.643" endtime="20201112 09:43:45.930"></status>
</kw>
<msg timestamp="20201112 09:43:45.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.642" endtime="20201112 09:43:45.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.934" endtime="20201112 09:43:45.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.943" endtime="20201112 09:43:45.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.639" endtime="20201112 09:43:45.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.637" endtime="20201112 09:43:45.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.950" level="INFO">${RESULT} = [{'time': 0.023371917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.023387694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.946" endtime="20201112 09:43:45.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.964" level="INFO">${ACCURACY} = {'diff': [8.235999999998272e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.1939...</msg>
<status status="PASS" starttime="20201112 09:43:45.951" endtime="20201112 09:43:45.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.969" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.967" endtime="20201112 09:43:45.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.971" level="INFO">VALUE: [8.235999999998272e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 09:43:45.970" endtime="20201112 09:43:45.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.965" endtime="20201112 09:43:45.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.975" endtime="20201112 09:43:45.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.979" endtime="20201112 09:43:45.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.977" endtime="20201112 09:43:45.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.973" endtime="20201112 09:43:45.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.604" endtime="20201112 09:43:45.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.603" endtime="20201112 09:43:46.000"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.009" endtime="20201112 09:43:46.026"></status>
</kw>
<msg timestamp="20201112 09:43:46.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.007" endtime="20201112 09:43:46.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.028" endtime="20201112 09:43:46.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.030" endtime="20201112 09:43:46.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.004" endtime="20201112 09:43:46.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.002" endtime="20201112 09:43:46.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.040" endtime="20201112 09:43:46.326"></status>
</kw>
<msg timestamp="20201112 09:43:46.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023280597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023288792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.038" endtime="20201112 09:43:46.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023280597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023288792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.331" endtime="20201112 09:43:46.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.339" endtime="20201112 09:43:46.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.036" endtime="20201112 09:43:46.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.034" endtime="20201112 09:43:46.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.346" level="INFO">${RESULT} = [{'time': 0.023288792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.023301764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.343" endtime="20201112 09:43:46.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.360" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.2220...</msg>
<status status="PASS" starttime="20201112 09:43:46.348" endtime="20201112 09:43:46.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.365" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.364" endtime="20201112 09:43:46.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.368" level="INFO">VALUE: [8.194999999999036e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.181000000002936e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.194000000003032e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.152000000000853e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.263000000001408e-06, 8.250000000001312e-06, 8.306000000003061e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.366" endtime="20201112 09:43:46.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.361" endtime="20201112 09:43:46.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.371" endtime="20201112 09:43:46.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.375" endtime="20201112 09:43:46.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.373" endtime="20201112 09:43:46.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.370" endtime="20201112 09:43:46.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.001" endtime="20201112 09:43:46.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.000" endtime="20201112 09:43:46.396"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.405" endtime="20201112 09:43:46.424"></status>
</kw>
<msg timestamp="20201112 09:43:46.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.404" endtime="20201112 09:43:46.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.426" endtime="20201112 09:43:46.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.429" endtime="20201112 09:43:46.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.401" endtime="20201112 09:43:46.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.399" endtime="20201112 09:43:46.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.438" endtime="20201112 09:43:46.726"></status>
</kw>
<msg timestamp="20201112 09:43:46.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02354475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:46.437" endtime="20201112 09:43:46.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02354475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:46.730" endtime="20201112 09:43:46.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.739" endtime="20201112 09:43:46.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.434" endtime="20201112 09:43:46.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.432" endtime="20201112 09:43:46.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.746" level="INFO">${RESULT} = [{'time': 0.023552972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.023568819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.742" endtime="20201112 09:43:46.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.759" level="INFO">${ACCURACY} = {'diff': [8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.1809...</msg>
<status status="PASS" starttime="20201112 09:43:46.747" endtime="20201112 09:43:46.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.764" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.763" endtime="20201112 09:43:46.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.767" level="INFO">VALUE: [8.221999999998703e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.152999999996857e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.138999999997287e-06, 8.125000000001187e-06, 8.153000000000327e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.765" endtime="20201112 09:43:46.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.760" endtime="20201112 09:43:46.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.771" endtime="20201112 09:43:46.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.774" endtime="20201112 09:43:46.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.773" endtime="20201112 09:43:46.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.769" endtime="20201112 09:43:46.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.397" endtime="20201112 09:43:46.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.397" endtime="20201112 09:43:46.796"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.805" endtime="20201112 09:43:46.824"></status>
</kw>
<msg timestamp="20201112 09:43:46.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.804" endtime="20201112 09:43:46.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.826" endtime="20201112 09:43:46.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.829" endtime="20201112 09:43:46.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.801" endtime="20201112 09:43:46.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.799" endtime="20201112 09:43:46.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.838" endtime="20201112 09:43:47.126"></status>
</kw>
<msg timestamp="20201112 09:43:47.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026449236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026457458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.837" endtime="20201112 09:43:47.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026449236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026457458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.131" endtime="20201112 09:43:47.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.139" endtime="20201112 09:43:47.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.834" endtime="20201112 09:43:47.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.832" endtime="20201112 09:43:47.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.146" level="INFO">${RESULT} = [{'time': 0.026457458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.026476167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.143" endtime="20201112 09:43:47.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.160" level="INFO">${ACCURACY} = {'diff': [8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.236000000001742e-06, 8.1809...</msg>
<status status="PASS" starttime="20201112 09:43:47.147" endtime="20201112 09:43:47.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.165" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.164" endtime="20201112 09:43:47.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.168" level="INFO">VALUE: [8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.237000000001216e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.194999999999036e-06, 8.111000000001617e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.138000000001283e-06, 8.180999999999466e-06, 8.152000000000853e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.277000000000978e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.166" endtime="20201112 09:43:47.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.161" endtime="20201112 09:43:47.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.171" endtime="20201112 09:43:47.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.175" endtime="20201112 09:43:47.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.173" endtime="20201112 09:43:47.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.170" endtime="20201112 09:43:47.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.797" endtime="20201112 09:43:47.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.796" endtime="20201112 09:43:47.196"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.205" endtime="20201112 09:43:47.225"></status>
</kw>
<msg timestamp="20201112 09:43:47.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.203" endtime="20201112 09:43:47.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.227" endtime="20201112 09:43:47.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.230" endtime="20201112 09:43:47.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.201" endtime="20201112 09:43:47.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.199" endtime="20201112 09:43:47.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.239" endtime="20201112 09:43:47.525"></status>
</kw>
<msg timestamp="20201112 09:43:47.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.238" endtime="20201112 09:43:47.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.530" endtime="20201112 09:43:47.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.538" endtime="20201112 09:43:47.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.235" endtime="20201112 09:43:47.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.233" endtime="20201112 09:43:47.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.545" level="INFO">${RESULT} = [{'time': 0.022598972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.022614611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.542" endtime="20201112 09:43:47.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.559" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.1939...</msg>
<status status="PASS" starttime="20201112 09:43:47.546" endtime="20201112 09:43:47.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.564" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.563" endtime="20201112 09:43:47.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.567" level="INFO">VALUE: [8.193999999999563e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.208000000002602e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.236999999997746e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.236000000001742e-06, 8.209000000002076e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.565" endtime="20201112 09:43:47.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.560" endtime="20201112 09:43:47.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.570" endtime="20201112 09:43:47.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.574" endtime="20201112 09:43:47.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.572" endtime="20201112 09:43:47.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.569" endtime="20201112 09:43:47.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.197" endtime="20201112 09:43:47.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.196" endtime="20201112 09:43:47.595"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.604" endtime="20201112 09:43:47.624"></status>
</kw>
<msg timestamp="20201112 09:43:47.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.603" endtime="20201112 09:43:47.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.625" endtime="20201112 09:43:47.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.628" endtime="20201112 09:43:47.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.600" endtime="20201112 09:43:47.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.598" endtime="20201112 09:43:47.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.638" endtime="20201112 09:43:47.924"></status>
</kw>
<msg timestamp="20201112 09:43:47.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025430139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025438403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.636" endtime="20201112 09:43:47.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025430139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025438403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.928" endtime="20201112 09:43:47.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.939" endtime="20201112 09:43:47.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.633" endtime="20201112 09:43:47.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.631" endtime="20201112 09:43:47.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.946" level="INFO">${RESULT} = [{'time': 0.025438403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.025451111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.943" endtime="20201112 09:43:47.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.960" level="INFO">${ACCURACY} = {'diff': [8.263999999997412e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.2359...</msg>
<status status="PASS" starttime="20201112 09:43:47.947" endtime="20201112 09:43:47.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.964" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.963" endtime="20201112 09:43:47.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.967" level="INFO">VALUE: [8.263999999997412e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.181000000002936e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.966" endtime="20201112 09:43:47.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.961" endtime="20201112 09:43:47.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.971" endtime="20201112 09:43:47.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.974" endtime="20201112 09:43:47.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.972" endtime="20201112 09:43:47.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.969" endtime="20201112 09:43:47.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.596" endtime="20201112 09:43:47.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.596" endtime="20201112 09:43:47.995"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.004" endtime="20201112 09:43:48.020"></status>
</kw>
<msg timestamp="20201112 09:43:48.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.002" endtime="20201112 09:43:48.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.022" endtime="20201112 09:43:48.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.024" endtime="20201112 09:43:48.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.999" endtime="20201112 09:43:48.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.997" endtime="20201112 09:43:48.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.033" endtime="20201112 09:43:48.321"></status>
</kw>
<msg timestamp="20201112 09:43:48.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:48.031" endtime="20201112 09:43:48.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:48.325" endtime="20201112 09:43:48.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.333" endtime="20201112 09:43:48.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.029" endtime="20201112 09:43:48.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.027" endtime="20201112 09:43:48.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.340" level="INFO">${RESULT} = [{'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.022515194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:48.336" endtime="20201112 09:43:48.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.353" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.1669...</msg>
<status status="PASS" starttime="20201112 09:43:48.341" endtime="20201112 09:43:48.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.358" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.357" endtime="20201112 09:43:48.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.360" level="INFO">VALUE: [8.207999999999133e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.152999999996857e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.138000000001283e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 09:43:48.359" endtime="20201112 09:43:48.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.354" endtime="20201112 09:43:48.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.364" endtime="20201112 09:43:48.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.368" endtime="20201112 09:43:48.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.366" endtime="20201112 09:43:48.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.362" endtime="20201112 09:43:48.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.996" endtime="20201112 09:43:48.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.995" endtime="20201112 09:43:48.389"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.400" endtime="20201112 09:43:48.425"></status>
</kw>
<msg timestamp="20201112 09:43:48.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.396" endtime="20201112 09:43:48.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.428" endtime="20201112 09:43:48.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.433" endtime="20201112 09:43:48.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.393" endtime="20201112 09:43:48.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.391" endtime="20201112 09:43:48.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.452" endtime="20201112 09:43:48.747"></status>
</kw>
<msg timestamp="20201112 09:43:48.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025728653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.449" endtime="20201112 09:43:48.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025728653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.752" endtime="20201112 09:43:48.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.760" endtime="20201112 09:43:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.443" endtime="20201112 09:43:48.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.440" endtime="20201112 09:43:48.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.767" level="INFO">${RESULT} = [{'time': 0.025736847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.025752042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.763" endtime="20201112 09:43:48.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.780" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.1389...</msg>
<status status="PASS" starttime="20201112 09:43:48.768" endtime="20201112 09:43:48.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.784" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.783" endtime="20201112 09:43:48.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.787" level="INFO">VALUE: [8.193999999999563e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.138999999997287e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.223000000001646e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 09:43:48.786" endtime="20201112 09:43:48.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.781" endtime="20201112 09:43:48.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.791" endtime="20201112 09:43:48.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.794" endtime="20201112 09:43:48.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.792" endtime="20201112 09:43:48.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.789" endtime="20201112 09:43:48.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.389" endtime="20201112 09:43:48.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.389" endtime="20201112 09:43:48.815"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.824" endtime="20201112 09:43:48.839"></status>
</kw>
<msg timestamp="20201112 09:43:48.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.823" endtime="20201112 09:43:48.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.841" endtime="20201112 09:43:48.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.843" endtime="20201112 09:43:48.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.820" endtime="20201112 09:43:48.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.818" endtime="20201112 09:43:48.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.852" endtime="20201112 09:43:49.140"></status>
</kw>
<msg timestamp="20201112 09:43:49.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021310681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.851" endtime="20201112 09:43:49.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021310681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.144" endtime="20201112 09:43:49.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.152" endtime="20201112 09:43:49.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.848" endtime="20201112 09:43:49.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.847" endtime="20201112 09:43:49.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.159" level="INFO">${RESULT} = [{'time': 0.021318889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.021333958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.156" endtime="20201112 09:43:49.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.172" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.1809...</msg>
<status status="PASS" starttime="20201112 09:43:49.160" endtime="20201112 09:43:49.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.177" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.176" endtime="20201112 09:43:49.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.179" level="INFO">VALUE: [8.207999999999133e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.181000000002936e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.111000000001617e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.194000000003032e-06]</msg>
<status status="PASS" starttime="20201112 09:43:49.178" endtime="20201112 09:43:49.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.173" endtime="20201112 09:43:49.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.183" endtime="20201112 09:43:49.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.186" endtime="20201112 09:43:49.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.185" endtime="20201112 09:43:49.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.181" endtime="20201112 09:43:49.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.816" endtime="20201112 09:43:49.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.815" endtime="20201112 09:43:49.207"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.216" endtime="20201112 09:43:49.231"></status>
</kw>
<msg timestamp="20201112 09:43:49.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.214" endtime="20201112 09:43:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.232" endtime="20201112 09:43:49.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.235" endtime="20201112 09:43:49.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.212" endtime="20201112 09:43:49.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.210" endtime="20201112 09:43:49.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.244" endtime="20201112 09:43:49.530"></status>
</kw>
<msg timestamp="20201112 09:43:49.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020794014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.242" endtime="20201112 09:43:49.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020794014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.534" endtime="20201112 09:43:49.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.542" endtime="20201112 09:43:49.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.240" endtime="20201112 09:43:49.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.238" endtime="20201112 09:43:49.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.549" level="INFO">${RESULT} = [{'time': 0.020794014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.020812181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.546" endtime="20201112 09:43:49.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.562" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.2079...</msg>
<status status="PASS" starttime="20201112 09:43:49.550" endtime="20201112 09:43:49.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.567" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.566" endtime="20201112 09:43:49.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.569" level="INFO">VALUE: [8.194999999999036e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.138999999997287e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.152000000000853e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.151999999997384e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 09:43:49.568" endtime="20201112 09:43:49.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.563" endtime="20201112 09:43:49.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.573" endtime="20201112 09:43:49.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.576" endtime="20201112 09:43:49.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.575" endtime="20201112 09:43:49.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.571" endtime="20201112 09:43:49.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.208" endtime="20201112 09:43:49.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.208" endtime="20201112 09:43:49.597"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.606" endtime="20201112 09:43:49.625"></status>
</kw>
<msg timestamp="20201112 09:43:49.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.604" endtime="20201112 09:43:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.626" endtime="20201112 09:43:49.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.628" endtime="20201112 09:43:49.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.602" endtime="20201112 09:43:49.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.600" endtime="20201112 09:43:49.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.637" endtime="20201112 09:43:49.925"></status>
</kw>
<msg timestamp="20201112 09:43:49.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.636" endtime="20201112 09:43:49.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.929" endtime="20201112 09:43:49.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.937" endtime="20201112 09:43:49.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.633" endtime="20201112 09:43:49.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.632" endtime="20201112 09:43:49.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.944" level="INFO">${RESULT} = [{'time': 0.022679722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.022692208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.941" endtime="20201112 09:43:49.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.957" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.152999999996857e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.1520...</msg>
<status status="PASS" starttime="20201112 09:43:49.945" endtime="20201112 09:43:49.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.962" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.961" endtime="20201112 09:43:49.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.964" level="INFO">VALUE: [8.193999999999563e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.152999999996857e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.152000000000853e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.291000000000548e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.195000000002506e-06, 8.222999999998176e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.276999999997509e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201112 09:43:49.963" endtime="20201112 09:43:49.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.958" endtime="20201112 09:43:49.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.968" endtime="20201112 09:43:49.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.971" endtime="20201112 09:43:49.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.970" endtime="20201112 09:43:49.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.966" endtime="20201112 09:43:49.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.598" endtime="20201112 09:43:49.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.598" endtime="20201112 09:43:49.992"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.001" endtime="20201112 09:43:50.020"></status>
</kw>
<msg timestamp="20201112 09:43:50.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.999" endtime="20201112 09:43:50.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.022" endtime="20201112 09:43:50.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.024" endtime="20201112 09:43:50.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.997" endtime="20201112 09:43:50.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.994" endtime="20201112 09:43:50.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.033" endtime="20201112 09:43:50.321"></status>
</kw>
<msg timestamp="20201112 09:43:50.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024891681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024899889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.032" endtime="20201112 09:43:50.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024891681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024899889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.325" endtime="20201112 09:43:50.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.333" endtime="20201112 09:43:50.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.029" endtime="20201112 09:43:50.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.027" endtime="20201112 09:43:50.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.340" level="INFO">${RESULT} = [{'time': 0.024899889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.024916819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.337" endtime="20201112 09:43:50.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.353" level="INFO">${ACCURACY} = {'diff': [8.208000000002602e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.1939...</msg>
<status status="PASS" starttime="20201112 09:43:50.341" endtime="20201112 09:43:50.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.358" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.357" endtime="20201112 09:43:50.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.360" level="INFO">VALUE: [8.208000000002602e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.152000000000853e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.124999999997717e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.166000000000423e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.139000000000757e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201112 09:43:50.359" endtime="20201112 09:43:50.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.354" endtime="20201112 09:43:50.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.364" endtime="20201112 09:43:50.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.368" endtime="20201112 09:43:50.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.366" endtime="20201112 09:43:50.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.362" endtime="20201112 09:43:50.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.993" endtime="20201112 09:43:50.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.992" endtime="20201112 09:43:50.388"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.397" endtime="20201112 09:43:50.412"></status>
</kw>
<msg timestamp="20201112 09:43:50.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.396" endtime="20201112 09:43:50.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.413" endtime="20201112 09:43:50.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.416" endtime="20201112 09:43:50.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.393" endtime="20201112 09:43:50.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.391" endtime="20201112 09:43:50.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.425" endtime="20201112 09:43:50.713"></status>
</kw>
<msg timestamp="20201112 09:43:50.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02034225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:50.423" endtime="20201112 09:43:50.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02034225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:50.718" endtime="20201112 09:43:50.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.726" endtime="20201112 09:43:50.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.421" endtime="20201112 09:43:50.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.419" endtime="20201112 09:43:50.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.733" level="INFO">${RESULT} = [{'time': 0.020350417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.020364542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.729" endtime="20201112 09:43:50.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.746" level="INFO">${ACCURACY} = {'diff': [8.166999999999897e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.1939...</msg>
<status status="PASS" starttime="20201112 09:43:50.734" endtime="20201112 09:43:50.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.750" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.749" endtime="20201112 09:43:50.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.753" level="INFO">VALUE: [8.166999999999897e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.263999999997412e-06, 8.166999999999897e-06, 8.263999999997412e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.125000000001187e-06, 8.237000000001216e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.249999999997842e-06]</msg>
<status status="PASS" starttime="20201112 09:43:50.751" endtime="20201112 09:43:50.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.747" endtime="20201112 09:43:50.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.760" endtime="20201112 09:43:50.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.764" endtime="20201112 09:43:50.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.762" endtime="20201112 09:43:50.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.759" endtime="20201112 09:43:50.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.389" endtime="20201112 09:43:50.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.389" endtime="20201112 09:43:50.785"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.793" endtime="20201112 09:43:50.810"></status>
</kw>
<msg timestamp="20201112 09:43:50.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.792" endtime="20201112 09:43:50.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.812" endtime="20201112 09:43:50.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.814" endtime="20201112 09:43:50.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.789" endtime="20201112 09:43:50.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.787" endtime="20201112 09:43:50.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.823" endtime="20201112 09:43:51.109"></status>
</kw>
<msg timestamp="20201112 09:43:51.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020929167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020937333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.822" endtime="20201112 09:43:51.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020929167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020937333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.114" endtime="20201112 09:43:51.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.122" endtime="20201112 09:43:51.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.819" endtime="20201112 09:43:51.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.817" endtime="20201112 09:43:51.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.129" level="INFO">${RESULT} = [{'time': 0.020937333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166000000000423e-06, 'source_diff': 8.166000000000423e-06}, {'time': 0.020950319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.125" endtime="20201112 09:43:51.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.142" level="INFO">${ACCURACY} = {'diff': [8.166000000000423e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.152999999996857e-06, 8.180000000003462e-06, 8.166000000000423e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.2219...</msg>
<status status="PASS" starttime="20201112 09:43:51.130" endtime="20201112 09:43:51.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.146" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.145" endtime="20201112 09:43:51.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.149" level="INFO">VALUE: [8.166000000000423e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.152999999996857e-06, 8.180000000003462e-06, 8.166000000000423e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.138999999997287e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.278000000000452e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.194999999999036e-06]</msg>
<status status="PASS" starttime="20201112 09:43:51.148" endtime="20201112 09:43:51.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.143" endtime="20201112 09:43:51.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.153" endtime="20201112 09:43:51.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.156" endtime="20201112 09:43:51.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.154" endtime="20201112 09:43:51.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.151" endtime="20201112 09:43:51.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.786" endtime="20201112 09:43:51.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.785" endtime="20201112 09:43:51.177"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.185" endtime="20201112 09:43:51.201"></status>
</kw>
<msg timestamp="20201112 09:43:51.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.184" endtime="20201112 09:43:51.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.203" endtime="20201112 09:43:51.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.205" endtime="20201112 09:43:51.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.181" endtime="20201112 09:43:51.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.179" endtime="20201112 09:43:51.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.214" endtime="20201112 09:43:51.501"></status>
</kw>
<msg timestamp="20201112 09:43:51.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.213" endtime="20201112 09:43:51.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.506" endtime="20201112 09:43:51.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.514" endtime="20201112 09:43:51.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.210" endtime="20201112 09:43:51.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.208" endtime="20201112 09:43:51.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.521" level="INFO">${RESULT} = [{'time': 0.020623806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.020636764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.517" endtime="20201112 09:43:51.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.534" level="INFO">${ACCURACY} = {'diff': [8.223000000001646e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.2090...</msg>
<status status="PASS" starttime="20201112 09:43:51.522" endtime="20201112 09:43:51.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.538" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.537" endtime="20201112 09:43:51.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.541" level="INFO">VALUE: [8.223000000001646e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.124999999997717e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.152000000000853e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201112 09:43:51.539" endtime="20201112 09:43:51.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.535" endtime="20201112 09:43:51.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.544" endtime="20201112 09:43:51.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.548" endtime="20201112 09:43:51.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.546" endtime="20201112 09:43:51.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.543" endtime="20201112 09:43:51.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.178" endtime="20201112 09:43:51.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.177" endtime="20201112 09:43:51.569"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.577" endtime="20201112 09:43:51.596"></status>
</kw>
<msg timestamp="20201112 09:43:51.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.576" endtime="20201112 09:43:51.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.598" endtime="20201112 09:43:51.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.600" endtime="20201112 09:43:51.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.573" endtime="20201112 09:43:51.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.571" endtime="20201112 09:43:51.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.609" endtime="20201112 09:43:51.895"></status>
</kw>
<msg timestamp="20201112 09:43:51.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.608" endtime="20201112 09:43:51.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.899" endtime="20201112 09:43:51.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.908" endtime="20201112 09:43:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.605" endtime="20201112 09:43:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.604" endtime="20201112 09:43:51.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.915" level="INFO">${RESULT} = [{'time': 0.020653125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.020671847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.911" endtime="20201112 09:43:51.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.928" level="INFO">${ACCURACY} = {'diff': [8.194000000003032e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.1950...</msg>
<status status="PASS" starttime="20201112 09:43:51.916" endtime="20201112 09:43:51.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.932" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.931" endtime="20201112 09:43:51.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.935" level="INFO">VALUE: [8.194000000003032e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.096999999998578e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.222999999998176e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.250000000001312e-06, 8.222999999998176e-06, 8.235999999998272e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.152000000000853e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.151999999997384e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.166000000000423e-06, 8.165999999996953e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.249999999997842e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 09:43:51.933" endtime="20201112 09:43:51.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.929" endtime="20201112 09:43:51.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.938" endtime="20201112 09:43:51.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.942" endtime="20201112 09:43:51.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.940" endtime="20201112 09:43:51.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.937" endtime="20201112 09:43:51.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.570" endtime="20201112 09:43:51.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.569" endtime="20201112 09:43:51.963"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.971" endtime="20201112 09:43:51.989"></status>
</kw>
<msg timestamp="20201112 09:43:51.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.970" endtime="20201112 09:43:51.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.991" endtime="20201112 09:43:51.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.993" endtime="20201112 09:43:51.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.967" endtime="20201112 09:43:51.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.965" endtime="20201112 09:43:51.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.002" endtime="20201112 09:43:52.287"></status>
</kw>
<msg timestamp="20201112 09:43:52.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.001" endtime="20201112 09:43:52.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.292" endtime="20201112 09:43:52.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.300" endtime="20201112 09:43:52.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.998" endtime="20201112 09:43:52.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.997" endtime="20201112 09:43:52.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.307" level="INFO">${RESULT} = [{'time': 0.023578542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.023596847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.303" endtime="20201112 09:43:52.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.320" level="INFO">${ACCURACY} = {'diff': [8.209000000002076e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.111000000001617e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.2219...</msg>
<status status="PASS" starttime="20201112 09:43:52.308" endtime="20201112 09:43:52.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.325" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.324" endtime="20201112 09:43:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.327" level="INFO">VALUE: [8.209000000002076e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.111000000001617e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.110999999998147e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201112 09:43:52.326" endtime="20201112 09:43:52.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.321" endtime="20201112 09:43:52.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.331" endtime="20201112 09:43:52.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.334" endtime="20201112 09:43:52.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.333" endtime="20201112 09:43:52.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.329" endtime="20201112 09:43:52.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.964" endtime="20201112 09:43:52.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.963" endtime="20201112 09:43:52.355"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.363" endtime="20201112 09:43:52.381"></status>
</kw>
<msg timestamp="20201112 09:43:52.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.362" endtime="20201112 09:43:52.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.382" endtime="20201112 09:43:52.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.385" endtime="20201112 09:43:52.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.359" endtime="20201112 09:43:52.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.357" endtime="20201112 09:43:52.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.394" endtime="20201112 09:43:52.680"></status>
</kw>
<msg timestamp="20201112 09:43:52.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.392" endtime="20201112 09:43:52.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.684" endtime="20201112 09:43:52.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.693" endtime="20201112 09:43:52.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.390" endtime="20201112 09:43:52.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.388" endtime="20201112 09:43:52.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.699" level="INFO">${RESULT} = [{'time': 0.023204903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.023221528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.696" endtime="20201112 09:43:52.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.713" level="INFO">${ACCURACY} = {'diff': [8.221999999998703e-06, 8.209000000002076e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.1950...</msg>
<status status="PASS" starttime="20201112 09:43:52.700" endtime="20201112 09:43:52.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.717" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.716" endtime="20201112 09:43:52.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.720" level="INFO">VALUE: [8.221999999998703e-06, 8.209000000002076e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.305000000000118e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.139000000000757e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.139000000000757e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.139000000000757e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 09:43:52.718" endtime="20201112 09:43:52.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.713" endtime="20201112 09:43:52.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.723" endtime="20201112 09:43:52.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.727" endtime="20201112 09:43:52.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.725" endtime="20201112 09:43:52.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.722" endtime="20201112 09:43:52.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.356" endtime="20201112 09:43:52.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.355" endtime="20201112 09:43:52.748"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.756" endtime="20201112 09:43:52.778"></status>
</kw>
<msg timestamp="20201112 09:43:52.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.755" endtime="20201112 09:43:52.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.780" endtime="20201112 09:43:52.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.782" endtime="20201112 09:43:52.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.752" endtime="20201112 09:43:52.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.750" endtime="20201112 09:43:52.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.791" endtime="20201112 09:43:53.079"></status>
</kw>
<msg timestamp="20201112 09:43:53.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.790" endtime="20201112 09:43:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.083" endtime="20201112 09:43:53.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.091" endtime="20201112 09:43:53.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.787" endtime="20201112 09:43:53.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.786" endtime="20201112 09:43:53.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.098" level="INFO">${RESULT} = [{'time': 0.022506736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.022522639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.095" endtime="20201112 09:43:53.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.111" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.2359...</msg>
<status status="PASS" starttime="20201112 09:43:53.099" endtime="20201112 09:43:53.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.116" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.115" endtime="20201112 09:43:53.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.118" level="INFO">VALUE: [8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.264000000000882e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.194000000003032e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.124999999997717e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.263000000001408e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.263999999997412e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201112 09:43:53.117" endtime="20201112 09:43:53.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.112" endtime="20201112 09:43:53.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.122" endtime="20201112 09:43:53.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.125" endtime="20201112 09:43:53.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.124" endtime="20201112 09:43:53.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.120" endtime="20201112 09:43:53.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.748" endtime="20201112 09:43:53.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.748" endtime="20201112 09:43:53.146"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.155" endtime="20201112 09:43:53.170"></status>
</kw>
<msg timestamp="20201112 09:43:53.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.153" endtime="20201112 09:43:53.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.172" endtime="20201112 09:43:53.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.174" endtime="20201112 09:43:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.151" endtime="20201112 09:43:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.149" endtime="20201112 09:43:53.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.183" endtime="20201112 09:43:53.468"></status>
</kw>
<msg timestamp="20201112 09:43:53.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020793778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.181" endtime="20201112 09:43:53.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020793778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.472" endtime="20201112 09:43:53.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.480" endtime="20201112 09:43:53.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.179" endtime="20201112 09:43:53.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.177" endtime="20201112 09:43:53.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.487" level="INFO">${RESULT} = [{'time': 0.020801972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.020815292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.484" endtime="20201112 09:43:53.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.500" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.2079...</msg>
<status status="PASS" starttime="20201112 09:43:53.488" endtime="20201112 09:43:53.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.505" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.504" endtime="20201112 09:43:53.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.507" level="INFO">VALUE: [8.193999999999563e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.111000000001617e-06, 8.237000000001216e-06, 8.166000000000423e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.124999999997717e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 09:43:53.506" endtime="20201112 09:43:53.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.501" endtime="20201112 09:43:53.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.511" endtime="20201112 09:43:53.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.514" endtime="20201112 09:43:53.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.513" endtime="20201112 09:43:53.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.509" endtime="20201112 09:43:53.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.147" endtime="20201112 09:43:53.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.146" endtime="20201112 09:43:53.535"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.544" endtime="20201112 09:43:53.562"></status>
</kw>
<msg timestamp="20201112 09:43:53.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.542" endtime="20201112 09:43:53.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.563" endtime="20201112 09:43:53.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.566" endtime="20201112 09:43:53.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.540" endtime="20201112 09:43:53.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.538" endtime="20201112 09:43:53.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.575" endtime="20201112 09:43:53.860"></status>
</kw>
<msg timestamp="20201112 09:43:53.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.573" endtime="20201112 09:43:53.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.864" endtime="20201112 09:43:53.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.873" endtime="20201112 09:43:53.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.571" endtime="20201112 09:43:53.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.569" endtime="20201112 09:43:53.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.880" level="INFO">${RESULT} = [{'time': 0.023601042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.023617889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.876" endtime="20201112 09:43:53.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.893" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.1809...</msg>
<status status="PASS" starttime="20201112 09:43:53.881" endtime="20201112 09:43:53.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.898" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.897" endtime="20201112 09:43:53.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.901" level="INFO">VALUE: [8.194999999999036e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.277000000000978e-06, 8.153000000000327e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.209000000002076e-06, 8.264000000000882e-06, 8.194999999999036e-06, 8.152000000000853e-06, 8.208999999998606e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.179999999999993e-06]</msg>
<status status="PASS" starttime="20201112 09:43:53.899" endtime="20201112 09:43:53.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.894" endtime="20201112 09:43:53.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.905" endtime="20201112 09:43:53.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.908" endtime="20201112 09:43:53.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.907" endtime="20201112 09:43:53.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.903" endtime="20201112 09:43:53.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.536" endtime="20201112 09:43:53.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.536" endtime="20201112 09:43:53.929"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.938" endtime="20201112 09:43:53.956"></status>
</kw>
<msg timestamp="20201112 09:43:53.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.936" endtime="20201112 09:43:53.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.958" endtime="20201112 09:43:53.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.960" endtime="20201112 09:43:53.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.934" endtime="20201112 09:43:53.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.932" endtime="20201112 09:43:53.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.969" endtime="20201112 09:43:54.255"></status>
</kw>
<msg timestamp="20201112 09:43:54.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.968" endtime="20201112 09:43:54.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.259" endtime="20201112 09:43:54.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.267" endtime="20201112 09:43:54.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.965" endtime="20201112 09:43:54.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.963" endtime="20201112 09:43:54.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.274" level="INFO">${RESULT} = [{'time': 0.021536056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.021566028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.271" endtime="20201112 09:43:54.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.287" level="INFO">${ACCURACY} = {'diff': [8.209000000002076e-06, 2.159700000000167e-05, 2.4486000000000646e-05, 2.4443999999998467e-05, 2.54169999999998e-05, 2.3499999999999216e-05, 2.3500000000002685e-05, 2.159700000000167e-05, 2.5...</msg>
<status status="PASS" starttime="20201112 09:43:54.275" endtime="20201112 09:43:54.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.292" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.291" endtime="20201112 09:43:54.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.294" level="INFO">VALUE: [8.209000000002076e-06, 2.159700000000167e-05, 2.4486000000000646e-05, 2.4443999999998467e-05, 2.54169999999998e-05, 2.3499999999999216e-05, 2.3500000000002685e-05, 2.159700000000167e-05, 2.5458000000002506e-05, 2.065300000000242e-05, 2.4472000000001076e-05, 2.448700000000012e-05, 2.4401999999999757e-05, 2.6278000000001106e-05, 2.445900000000098e-05, 2.640300000000123e-05, 2.061099999999677e-05, 2.15830000000021e-05, 2.066699999999852e-05, 1.966699999999752e-05, 2.440299999999923e-05, 2.2513999999997786e-05, 2.445900000000098e-05, 2.5429999999999897e-05, 2.062499999999981e-05, 2.540300000000023e-05, 2.543100000000284e-05, 2.062499999999981e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.063899999999938e-05, 2.2570000000003004e-05, 2.062499999999981e-05, 2.3499999999999216e-05, 2.54169999999998e-05, 2.6471999999999607e-05, 2.3514000000002255e-05, 2.066700000000199e-05, 2.538900000000066e-05, 2.445900000000098e-05, 2.4540999999999452e-05, 2.6360999999999052e-05, 2.540300000000023e-05, 2.4458000000001506e-05, 2.3472000000000076e-05, 2.443099999999837e-05, 2.5332999999998912e-05, 2.6278000000001106e-05, 2.3499999999999216e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.293" endtime="20201112 09:43:54.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.288" endtime="20201112 09:43:54.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.298" endtime="20201112 09:43:54.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.301" endtime="20201112 09:43:54.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.300" endtime="20201112 09:43:54.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.296" endtime="20201112 09:43:54.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.930" endtime="20201112 09:43:54.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.929" endtime="20201112 09:43:54.322"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.331" endtime="20201112 09:43:54.349"></status>
</kw>
<msg timestamp="20201112 09:43:54.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.329" endtime="20201112 09:43:54.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.351" endtime="20201112 09:43:54.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.353" endtime="20201112 09:43:54.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.327" endtime="20201112 09:43:54.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.325" endtime="20201112 09:43:54.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.362" endtime="20201112 09:43:54.651"></status>
</kw>
<msg timestamp="20201112 09:43:54.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.361" endtime="20201112 09:43:54.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.655" endtime="20201112 09:43:54.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.663" endtime="20201112 09:43:54.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.358" endtime="20201112 09:43:54.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.356" endtime="20201112 09:43:54.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.670" level="INFO">${RESULT} = [{'time': 0.020382597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5416000000000327e-05, 'source_diff': 2.5416000000000327e-05}, {'time': 0.020412292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:54.667" endtime="20201112 09:43:54.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.683" level="INFO">${ACCURACY} = {'diff': [2.5416000000000327e-05, 2.3555999999997496e-05, 2.15969999999982e-05, 2.445899999999751e-05, 2.638900000000166e-05, 2.44169999999988e-05, 2.254100000000092e-05, 2.1583999999998105e-05, 2.351...</msg>
<status status="PASS" starttime="20201112 09:43:54.671" endtime="20201112 09:43:54.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.688" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.687" endtime="20201112 09:43:54.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.690" level="INFO">VALUE: [2.5416000000000327e-05, 2.3555999999997496e-05, 2.15969999999982e-05, 2.445899999999751e-05, 2.638900000000166e-05, 2.44169999999988e-05, 2.254100000000092e-05, 2.1583999999998105e-05, 2.3514000000002255e-05, 1.9651999999998476e-05, 2.3472000000000076e-05, 2.161100000000124e-05, 2.2569999999999535e-05, 2.1598000000001144e-05, 2.5443999999999467e-05, 1.9694000000000655e-05, 2.1611999999997245e-05, 2.448700000000012e-05, 2.3499999999999216e-05, 2.4472000000001076e-05, 2.065300000000242e-05, 2.2499999999998216e-05, 2.3458000000000506e-05, 2.065299999999895e-05, 2.062499999999981e-05, 2.547299999999808e-05, 2.545899999999851e-05, 2.263899999999791e-05, 2.4500000000000216e-05, 2.2542000000000395e-05, 2.6332999999999912e-05, 2.3485999999999646e-05, 2.162500000000081e-05, 2.3526999999998882e-05, 2.6374999999998622e-05, 2.3472000000000076e-05, 2.158299999999863e-05, 2.065300000000242e-05, 2.6360999999999052e-05, 2.2528000000000825e-05, 2.3499999999999216e-05, 2.256900000000006e-05, 2.444500000000141e-05, 2.3540999999998452e-05, 2.162500000000081e-05, 2.065299999999895e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.3513999999998786e-05, 2.544499999999894e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.689" endtime="20201112 09:43:54.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.684" endtime="20201112 09:43:54.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.694" endtime="20201112 09:43:54.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.697" endtime="20201112 09:43:54.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.696" endtime="20201112 09:43:54.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.692" endtime="20201112 09:43:54.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.323" endtime="20201112 09:43:54.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.323" endtime="20201112 09:43:54.718"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.727" endtime="20201112 09:43:54.746"></status>
</kw>
<msg timestamp="20201112 09:43:54.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.725" endtime="20201112 09:43:54.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.747" endtime="20201112 09:43:54.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.750" endtime="20201112 09:43:54.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.723" endtime="20201112 09:43:54.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.721" endtime="20201112 09:43:54.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.759" endtime="20201112 09:43:55.046"></status>
</kw>
<msg timestamp="20201112 09:43:55.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021364833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.757" endtime="20201112 09:43:55.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021364833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.050" endtime="20201112 09:43:55.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.058" endtime="20201112 09:43:55.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.755" endtime="20201112 09:43:55.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.753" endtime="20201112 09:43:55.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.065" level="INFO">${RESULT} = [{'time': 0.021364833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3055000000000584e-05, 'source_diff': 3.3055000000000584e-05}, {'time': 0.021395278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.062" endtime="20201112 09:43:55.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.078" level="INFO">${ACCURACY} = {'diff': [3.3055000000000584e-05, 2.638900000000166e-05, 2.54169999999998e-05, 2.4472000000001076e-05, 2.4486000000000646e-05, 2.543099999999937e-05, 2.2542000000000395e-05, 2.4458000000001506e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:55.066" endtime="20201112 09:43:55.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.083" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.082" endtime="20201112 09:43:55.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.085" level="INFO">VALUE: [3.3055000000000584e-05, 2.638900000000166e-05, 2.54169999999998e-05, 2.4472000000001076e-05, 2.4486000000000646e-05, 2.543099999999937e-05, 2.2542000000000395e-05, 2.4458000000001506e-05, 2.638899999999819e-05, 2.3526999999998882e-05, 2.256900000000006e-05, 2.0665999999999046e-05, 2.1583999999998105e-05, 2.4486000000000646e-05, 2.262499999999834e-05, 2.3500000000002685e-05, 2.159700000000167e-05, 2.637500000000209e-05, 2.1584000000001574e-05, 2.5443999999999467e-05, 2.159700000000167e-05, 1.9708000000000225e-05, 2.540300000000023e-05, 2.4472000000001076e-05, 2.2542000000000395e-05, 2.54169999999998e-05, 2.44169999999988e-05, 2.2514000000001255e-05, 2.3513999999998786e-05, 1.9665999999998046e-05, 2.4472000000001076e-05, 2.3500000000002685e-05, 2.3555999999997496e-05, 2.161099999999777e-05, 2.063900000000285e-05, 2.3514000000002255e-05, 2.3514000000002255e-05, 2.156900000000253e-05, 2.358300000000063e-05, 2.0665999999999046e-05, 2.162500000000081e-05, 1.9693999999997186e-05, 2.161099999999777e-05, 2.6374999999998622e-05, 2.6374999999998622e-05, 2.158299999999863e-05, 2.5486000000001646e-05, 2.352700000000235e-05, 2.540300000000023e-05, 2.6387999999998718e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.084" endtime="20201112 09:43:55.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.079" endtime="20201112 09:43:55.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.089" endtime="20201112 09:43:55.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.092" endtime="20201112 09:43:55.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.091" endtime="20201112 09:43:55.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.087" endtime="20201112 09:43:55.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.719" endtime="20201112 09:43:55.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.718" endtime="20201112 09:43:55.113"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.122" endtime="20201112 09:43:55.143"></status>
</kw>
<msg timestamp="20201112 09:43:55.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.120" endtime="20201112 09:43:55.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.144" endtime="20201112 09:43:55.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.147" endtime="20201112 09:43:55.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.118" endtime="20201112 09:43:55.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.115" endtime="20201112 09:43:55.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.156" endtime="20201112 09:43:55.441"></status>
</kw>
<msg timestamp="20201112 09:43:55.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.154" endtime="20201112 09:43:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.446" endtime="20201112 09:43:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.454" endtime="20201112 09:43:55.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.151" endtime="20201112 09:43:55.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.150" endtime="20201112 09:43:55.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.461" level="INFO">${RESULT} = [{'time': 0.023384472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.215300000000004e-05, 'source_diff': 3.215300000000004e-05}, {'time': 0.023415403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.457" endtime="20201112 09:43:55.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.474" level="INFO">${ACCURACY} = {'diff': [3.215300000000004e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.34169999999978e-05, 2.534700000000195e-05, 2.543100000000284e-05, 2.6387999999998718e-05, 2.161100000000124e-05, 2.255...</msg>
<status status="PASS" starttime="20201112 09:43:55.462" endtime="20201112 09:43:55.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.478" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.477" endtime="20201112 09:43:55.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.481" level="INFO">VALUE: [3.215300000000004e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.34169999999978e-05, 2.534700000000195e-05, 2.543100000000284e-05, 2.6387999999998718e-05, 2.161100000000124e-05, 2.2555999999999965e-05, 2.2584000000002574e-05, 2.3528000000001825e-05, 2.6360999999999052e-05, 2.062499999999981e-05, 2.638899999999819e-05, 2.3500000000002685e-05, 2.3486000000003115e-05, 2.6374999999998622e-05, 2.2540999999997452e-05, 1.963900000000185e-05, 2.641699999999733e-05, 2.5402000000000757e-05, 2.159700000000167e-05, 2.54169999999998e-05, 2.7334000000000386e-05, 2.065300000000242e-05, 2.065300000000242e-05, 2.538900000000066e-05, 2.54169999999998e-05, 2.3500000000002685e-05, 1.966699999999752e-05, 2.2472000000002545e-05, 2.1584000000001574e-05, 2.0708000000001225e-05, 2.545899999999851e-05, 2.4430000000002366e-05, 2.6374999999998622e-05, 2.059700000000067e-05, 2.158299999999863e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.256900000000006e-05, 2.347299999999955e-05, 2.441700000000227e-05, 2.2542000000000395e-05, 2.3528000000001825e-05, 2.15969999999982e-05, 2.2569999999999535e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.480" endtime="20201112 09:43:55.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.475" endtime="20201112 09:43:55.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.485" endtime="20201112 09:43:55.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.488" endtime="20201112 09:43:55.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.486" endtime="20201112 09:43:55.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.483" endtime="20201112 09:43:55.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.114" endtime="20201112 09:43:55.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.113" endtime="20201112 09:43:55.509"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.517" endtime="20201112 09:43:55.539"></status>
</kw>
<msg timestamp="20201112 09:43:55.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.516" endtime="20201112 09:43:55.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.541" endtime="20201112 09:43:55.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.543" endtime="20201112 09:43:55.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.513" endtime="20201112 09:43:55.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.511" endtime="20201112 09:43:55.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.552" endtime="20201112 09:43:55.839"></status>
</kw>
<msg timestamp="20201112 09:43:55.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024397403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.551" endtime="20201112 09:43:55.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024397403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.843" endtime="20201112 09:43:55.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.851" endtime="20201112 09:43:55.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.548" endtime="20201112 09:43:55.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.546" endtime="20201112 09:43:55.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.858" level="INFO">${RESULT} = [{'time': 0.024397403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3945000000001317e-05, 'source_diff': 1.3945000000001317e-05}, {'time': 0.024427847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.855" endtime="20201112 09:43:55.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.871" level="INFO">${ACCURACY} = {'diff': [1.3945000000001317e-05, 2.5457999999999037e-05, 2.1583999999998105e-05, 2.2540999999997452e-05, 2.256900000000006e-05, 2.1486000000001115e-05, 2.440299999999923e-05, 2.1583999999998105e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:55.859" endtime="20201112 09:43:55.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.876" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.875" endtime="20201112 09:43:55.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.878" level="INFO">VALUE: [1.3945000000001317e-05, 2.5457999999999037e-05, 2.1583999999998105e-05, 2.2540999999997452e-05, 2.256900000000006e-05, 2.1486000000001115e-05, 2.440299999999923e-05, 2.1583999999998105e-05, 2.256900000000006e-05, 2.1569999999998535e-05, 2.4471999999997607e-05, 2.161100000000124e-05, 2.4486000000000646e-05, 2.2528000000000825e-05, 2.3526999999998882e-05, 2.158299999999863e-05, 2.2570000000003004e-05, 2.4472000000001076e-05, 2.638900000000166e-05, 2.447300000000055e-05, 2.3499999999999216e-05, 2.6292000000000676e-05, 2.0584000000000574e-05, 2.4429999999998897e-05, 2.636100000000252e-05, 2.062499999999981e-05, 2.3527999999998356e-05, 2.15969999999982e-05, 2.358300000000063e-05, 2.438899999999966e-05, 2.6360999999999052e-05, 2.1569999999998535e-05, 2.3527999999998356e-05, 2.1597999999997675e-05, 2.0665999999999046e-05, 2.641699999999733e-05, 2.156900000000253e-05, 2.161099999999777e-05, 2.059700000000067e-05, 2.1556000000002434e-05, 2.6360999999999052e-05, 2.4471999999997607e-05, 2.634700000000295e-05, 2.0598000000000144e-05, 2.4471999999997607e-05, 2.4485999999997177e-05, 2.0651999999999476e-05, 2.6429999999997428e-05, 2.437500000000009e-05, 2.54169999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.877" endtime="20201112 09:43:55.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.872" endtime="20201112 09:43:55.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.882" endtime="20201112 09:43:55.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.886" endtime="20201112 09:43:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.884" endtime="20201112 09:43:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.880" endtime="20201112 09:43:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.510" endtime="20201112 09:43:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.509" endtime="20201112 09:43:55.907"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.915" endtime="20201112 09:43:55.937"></status>
</kw>
<msg timestamp="20201112 09:43:55.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.914" endtime="20201112 09:43:55.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.939" endtime="20201112 09:43:55.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.941" endtime="20201112 09:43:55.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.911" endtime="20201112 09:43:55.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.909" endtime="20201112 09:43:55.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.950" endtime="20201112 09:43:56.237"></status>
</kw>
<msg timestamp="20201112 09:43:56.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023479597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.948" endtime="20201112 09:43:56.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023479597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.241" endtime="20201112 09:43:56.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.249" endtime="20201112 09:43:56.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.946" endtime="20201112 09:43:56.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.944" endtime="20201112 09:43:56.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.256" level="INFO">${RESULT} = [{'time': 0.023487806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.023518319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.253" endtime="20201112 09:43:56.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.269" level="INFO">${ACCURACY} = {'diff': [8.208999999998606e-06, 2.056899999999806e-05, 2.540299999999676e-05, 2.1570000000002004e-05, 2.159700000000167e-05, 2.4415999999999327e-05, 2.0569999999997535e-05, 2.3485999999999646e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:56.257" endtime="20201112 09:43:56.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.274" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.273" endtime="20201112 09:43:56.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.276" level="INFO">VALUE: [8.208999999998606e-06, 2.056899999999806e-05, 2.540299999999676e-05, 2.1570000000002004e-05, 2.159700000000167e-05, 2.4415999999999327e-05, 2.0569999999997535e-05, 2.3485999999999646e-05, 2.255500000000049e-05, 2.07090000000007e-05, 2.4458000000001506e-05, 2.155500000000296e-05, 2.438899999999966e-05, 2.5429999999999897e-05, 2.065299999999895e-05, 2.3500000000002685e-05, 2.3500000000002685e-05, 2.4458000000001506e-05, 2.065299999999895e-05, 2.1584000000001574e-05, 2.638900000000166e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.1555999999998965e-05, 2.2514000000001255e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.2569999999999535e-05, 2.2584000000002574e-05, 1.963899999999838e-05, 2.2513999999997786e-05, 2.6374999999998622e-05, 2.4486000000000646e-05, 2.3514000000002255e-05, 2.2542000000000395e-05, 2.638900000000166e-05, 2.0666000000002516e-05, 2.061100000000024e-05, 2.4429999999998897e-05, 2.161099999999777e-05, 2.5457999999999037e-05, 2.3527999999998356e-05, 2.065300000000242e-05, 2.3528000000001825e-05, 2.3499999999999216e-05, 2.1583999999998105e-05, 2.4429999999998897e-05, 2.2555999999999965e-05, 2.3499999999999216e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.275" endtime="20201112 09:43:56.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.270" endtime="20201112 09:43:56.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.280" endtime="20201112 09:43:56.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.283" endtime="20201112 09:43:56.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.282" endtime="20201112 09:43:56.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.278" endtime="20201112 09:43:56.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.908" endtime="20201112 09:43:56.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.907" endtime="20201112 09:43:56.304"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.313" endtime="20201112 09:43:56.334"></status>
</kw>
<msg timestamp="20201112 09:43:56.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.311" endtime="20201112 09:43:56.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.335" endtime="20201112 09:43:56.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.338" endtime="20201112 09:43:56.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.309" endtime="20201112 09:43:56.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.307" endtime="20201112 09:43:56.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.347" endtime="20201112 09:43:56.633"></status>
</kw>
<msg timestamp="20201112 09:43:56.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.345" endtime="20201112 09:43:56.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.638" endtime="20201112 09:43:56.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.646" endtime="20201112 09:43:56.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.343" endtime="20201112 09:43:56.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.341" endtime="20201112 09:43:56.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.653" level="INFO">${RESULT} = [{'time': 0.022943569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.159700000000167e-05, 'source_diff': 2.159700000000167e-05}, {'time': 0.022973778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.649" endtime="20201112 09:43:56.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.666" level="INFO">${ACCURACY} = {'diff': [2.159700000000167e-05, 2.4486000000000646e-05, 2.5443999999999467e-05, 2.540300000000023e-05, 2.4471999999997607e-05, 2.540300000000023e-05, 2.161100000000124e-05, 2.544499999999894e-05, 2.4...</msg>
<status status="PASS" starttime="20201112 09:43:56.654" endtime="20201112 09:43:56.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.670" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.669" endtime="20201112 09:43:56.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.673" level="INFO">VALUE: [2.159700000000167e-05, 2.4486000000000646e-05, 2.5443999999999467e-05, 2.540300000000023e-05, 2.4471999999997607e-05, 2.540300000000023e-05, 2.161100000000124e-05, 2.544499999999894e-05, 2.4430000000002366e-05, 2.6332999999999912e-05, 2.161100000000124e-05, 2.063899999999938e-05, 2.0680000000002086e-05, 2.3527999999998356e-05, 2.5429999999999897e-05, 2.0665999999999046e-05, 2.062499999999981e-05, 2.2569999999999535e-05, 2.3499999999999216e-05, 2.065300000000242e-05, 2.4429999999998897e-05, 2.4332999999997912e-05, 2.6360999999999052e-05, 2.162499999999734e-05, 1.9680000000001086e-05, 2.4472000000001076e-05, 2.540300000000023e-05, 2.0598000000000144e-05, 2.4444000000001936e-05, 2.638899999999819e-05, 2.163900000000038e-05, 2.161100000000124e-05, 2.0694000000001656e-05, 2.54169999999998e-05, 2.6319999999999816e-05, 2.445900000000098e-05, 2.2555999999999965e-05, 2.345899999999998e-05, 2.254100000000092e-05, 2.345899999999998e-05, 2.2457999999999506e-05, 2.1583999999998105e-05, 1.966700000000099e-05, 2.4568999999998592e-05, 2.3458000000000506e-05, 2.255500000000049e-05, 2.2569999999999535e-05, 2.6361999999998526e-05, 2.640300000000123e-05, 2.2570000000003004e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.671" endtime="20201112 09:43:56.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.667" endtime="20201112 09:43:56.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.676" endtime="20201112 09:43:56.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.680" endtime="20201112 09:43:56.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.678" endtime="20201112 09:43:56.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.675" endtime="20201112 09:43:56.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.305" endtime="20201112 09:43:56.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.305" endtime="20201112 09:43:56.701"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.709" endtime="20201112 09:43:56.730"></status>
</kw>
<msg timestamp="20201112 09:43:56.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.708" endtime="20201112 09:43:56.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.732" endtime="20201112 09:43:56.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.734" endtime="20201112 09:43:56.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.705" endtime="20201112 09:43:56.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.703" endtime="20201112 09:43:56.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.743" endtime="20201112 09:43:57.031"></status>
</kw>
<msg timestamp="20201112 09:43:57.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.742" endtime="20201112 09:43:57.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.036" endtime="20201112 09:43:57.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.044" endtime="20201112 09:43:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.739" endtime="20201112 09:43:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.737" endtime="20201112 09:43:57.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.051" level="INFO">${RESULT} = [{'time': 0.023193431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.023223875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.047" endtime="20201112 09:43:57.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.064" level="INFO">${ACCURACY} = {'diff': [2.2542000000000395e-05, 2.638900000000166e-05, 2.3514000000002255e-05, 2.2499999999998216e-05, 2.443100000000184e-05, 2.2555999999999965e-05, 2.065300000000242e-05, 2.5443999999999467e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:57.052" endtime="20201112 09:43:57.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.068" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.067" endtime="20201112 09:43:57.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.071" level="INFO">VALUE: [2.2542000000000395e-05, 2.638900000000166e-05, 2.3514000000002255e-05, 2.2499999999998216e-05, 2.443100000000184e-05, 2.2555999999999965e-05, 2.065300000000242e-05, 2.5443999999999467e-05, 2.1611999999997245e-05, 2.44169999999988e-05, 2.544500000000241e-05, 2.6360999999999052e-05, 2.2528000000000825e-05, 2.255500000000049e-05, 2.540300000000023e-05, 2.162500000000081e-05, 2.3540999999998452e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.540300000000023e-05, 2.065299999999895e-05, 2.540300000000023e-05, 2.1597999999997675e-05, 2.1569999999998535e-05, 2.2500000000001685e-05, 2.062499999999981e-05, 2.6374999999998622e-05, 2.3542000000001395e-05, 2.0652000000002946e-05, 2.3485999999999646e-05, 2.15969999999982e-05, 2.6401999999998288e-05, 2.4500000000000216e-05, 2.7319000000001342e-05, 2.058299999999763e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3499999999999216e-05, 2.6360999999999052e-05, 2.161099999999777e-05, 2.25830000000031e-05, 2.1541999999999395e-05, 2.3430000000001366e-05, 2.5443999999999467e-05, 2.3485999999999646e-05, 2.3528000000001825e-05, 2.3540999999998452e-05, 2.638899999999819e-05, 2.54169999999998e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.069" endtime="20201112 09:43:57.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.065" endtime="20201112 09:43:57.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.074" endtime="20201112 09:43:57.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.078" endtime="20201112 09:43:57.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.076" endtime="20201112 09:43:57.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.073" endtime="20201112 09:43:57.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.702" endtime="20201112 09:43:57.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.701" endtime="20201112 09:43:57.099"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.107" endtime="20201112 09:43:57.129"></status>
</kw>
<msg timestamp="20201112 09:43:57.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.106" endtime="20201112 09:43:57.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.131" endtime="20201112 09:43:57.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.133" endtime="20201112 09:43:57.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.103" endtime="20201112 09:43:57.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.101" endtime="20201112 09:43:57.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.142" endtime="20201112 09:43:57.428"></status>
</kw>
<msg timestamp="20201112 09:43:57.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.140" endtime="20201112 09:43:57.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.433" endtime="20201112 09:43:57.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.441" endtime="20201112 09:43:57.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.138" endtime="20201112 09:43:57.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.136" endtime="20201112 09:43:57.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.448" level="INFO">${RESULT} = [{'time': 0.022070278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9263999999997597e-05, 'source_diff': 2.9263999999997597e-05}, {'time': 0.022100667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.444" endtime="20201112 09:43:57.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.461" level="INFO">${ACCURACY} = {'diff': [2.9263999999997597e-05, 2.072300000000027e-05, 2.2569999999999535e-05, 2.2528000000000825e-05, 2.2555999999999965e-05, 2.6360999999999052e-05, 2.445900000000098e-05, 2.065299999999895e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:57.449" endtime="20201112 09:43:57.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.465" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.464" endtime="20201112 09:43:57.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.468" level="INFO">VALUE: [2.9263999999997597e-05, 2.072300000000027e-05, 2.2569999999999535e-05, 2.2528000000000825e-05, 2.2555999999999965e-05, 2.6360999999999052e-05, 2.445900000000098e-05, 2.065299999999895e-05, 2.3526999999998882e-05, 2.351300000000278e-05, 2.15969999999982e-05, 2.545900000000198e-05, 2.063899999999938e-05, 2.643100000000037e-05, 2.4500000000000216e-05, 2.4458000000001506e-05, 2.156899999999906e-05, 2.538899999999719e-05, 2.3528000000001825e-05, 2.3486000000003115e-05, 2.538900000000066e-05, 2.252700000000135e-05, 2.358300000000063e-05, 2.065299999999895e-05, 2.351300000000278e-05, 2.2555999999999965e-05, 2.159700000000167e-05, 2.54169999999998e-05, 2.161099999999777e-05, 2.0638000000003376e-05, 2.6374999999998622e-05, 2.062499999999981e-05, 2.3499999999999216e-05, 1.9680000000001086e-05, 2.643100000000037e-05, 2.5429999999999897e-05, 2.54169999999998e-05, 2.062500000000328e-05, 2.638900000000166e-05, 2.156900000000253e-05, 2.4556000000001965e-05, 2.0707999999997756e-05, 2.066700000000199e-05, 2.4457999999998037e-05, 2.2570000000003004e-05, 2.638899999999819e-05, 2.4500000000000216e-05, 2.5402000000000757e-05, 2.54169999999998e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.467" endtime="20201112 09:43:57.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.462" endtime="20201112 09:43:57.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.472" endtime="20201112 09:43:57.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.475" endtime="20201112 09:43:57.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.473" endtime="20201112 09:43:57.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.470" endtime="20201112 09:43:57.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.100" endtime="20201112 09:43:57.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.099" endtime="20201112 09:43:57.496"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.505" endtime="20201112 09:43:57.524"></status>
</kw>
<msg timestamp="20201112 09:43:57.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.503" endtime="20201112 09:43:57.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.525" endtime="20201112 09:43:57.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.528" endtime="20201112 09:43:57.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.500" endtime="20201112 09:43:57.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.498" endtime="20201112 09:43:57.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.537" endtime="20201112 09:43:57.823"></status>
</kw>
<msg timestamp="20201112 09:43:57.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.535" endtime="20201112 09:43:57.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.828" endtime="20201112 09:43:57.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.836" endtime="20201112 09:43:57.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.532" endtime="20201112 09:43:57.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.531" endtime="20201112 09:43:57.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.842" level="INFO">${RESULT} = [{'time': 0.021861486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2110999999997863e-05, 'source_diff': 3.2110999999997863e-05}, {'time': 0.021892111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.839" endtime="20201112 09:43:57.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.856" level="INFO">${ACCURACY} = {'diff': [3.2110999999997863e-05, 2.063899999999938e-05, 2.543099999999937e-05, 2.54169999999998e-05, 2.5458000000002506e-05, 2.256900000000006e-05, 2.638899999999819e-05, 2.3499999999999216e-05, 2.26...</msg>
<status status="PASS" starttime="20201112 09:43:57.843" endtime="20201112 09:43:57.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.860" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.859" endtime="20201112 09:43:57.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.863" level="INFO">VALUE: [3.2110999999997863e-05, 2.063899999999938e-05, 2.543099999999937e-05, 2.54169999999998e-05, 2.5458000000002506e-05, 2.256900000000006e-05, 2.638899999999819e-05, 2.3499999999999216e-05, 2.262499999999834e-05, 2.638899999999819e-05, 2.640299999999776e-05, 2.4500000000000216e-05, 2.543099999999937e-05, 2.6346999999999482e-05, 2.5429999999999897e-05, 2.1612000000000714e-05, 2.2542000000000395e-05, 2.3485999999999646e-05, 2.4444000000001936e-05, 2.5443999999999467e-05, 2.162500000000081e-05, 2.063899999999938e-05, 2.1611999999997245e-05, 2.3526999999998882e-05, 2.638900000000166e-05, 2.5443999999999467e-05, 2.3485999999999646e-05, 2.2500000000001685e-05, 2.161100000000124e-05, 2.6471999999999607e-05, 2.4527999999999356e-05, 2.4499999999996747e-05, 2.2555999999999965e-05, 2.3499999999999216e-05, 2.159700000000167e-05, 2.352700000000235e-05, 2.2514000000001255e-05, 2.634700000000295e-05, 2.1597999999997675e-05, 2.15969999999982e-05, 2.638900000000166e-05, 2.4485999999997177e-05, 2.2542000000000395e-05, 2.54169999999998e-05, 2.0651999999999476e-05, 2.0542000000001864e-05, 2.062499999999981e-05, 2.5401999999997288e-05, 2.64170000000008e-05, 2.161100000000124e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.861" endtime="20201112 09:43:57.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.857" endtime="20201112 09:43:57.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.866" endtime="20201112 09:43:57.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.870" endtime="20201112 09:43:57.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.868" endtime="20201112 09:43:57.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.865" endtime="20201112 09:43:57.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.497" endtime="20201112 09:43:57.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.496" endtime="20201112 09:43:57.890"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.899" endtime="20201112 09:43:57.920"></status>
</kw>
<msg timestamp="20201112 09:43:57.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.898" endtime="20201112 09:43:57.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.922" endtime="20201112 09:43:57.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.924" endtime="20201112 09:43:57.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.895" endtime="20201112 09:43:57.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.893" endtime="20201112 09:43:57.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.933" endtime="20201112 09:43:58.220"></status>
</kw>
<msg timestamp="20201112 09:43:58.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.932" endtime="20201112 09:43:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.225" endtime="20201112 09:43:58.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.233" endtime="20201112 09:43:58.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.929" endtime="20201112 09:43:58.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.927" endtime="20201112 09:43:58.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.239" level="INFO">${RESULT} = [{'time': 0.024156542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5847999999998863e-05, 'source_diff': 1.5847999999998863e-05}, {'time': 0.024187069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:58.236" endtime="20201112 09:43:58.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.253" level="INFO">${ACCURACY} = {'diff': [1.5847999999998863e-05, 2.0665999999999046e-05, 2.254100000000092e-05, 2.3500000000002685e-05, 2.2499999999998216e-05, 2.5416000000000327e-05, 1.966699999999752e-05, 2.6374999999998622e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:58.240" endtime="20201112 09:43:58.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.257" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.256" endtime="20201112 09:43:58.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.260" level="INFO">VALUE: [1.5847999999998863e-05, 2.0665999999999046e-05, 2.254100000000092e-05, 2.3500000000002685e-05, 2.2499999999998216e-05, 2.5416000000000327e-05, 1.966699999999752e-05, 2.6374999999998622e-05, 2.3499999999999216e-05, 2.345899999999998e-05, 2.445900000000098e-05, 2.255500000000049e-05, 2.0694000000001656e-05, 2.638900000000166e-05, 2.538899999999719e-05, 2.7290999999998733e-05, 2.4472000000001076e-05, 2.2542000000000395e-05, 2.640300000000123e-05, 2.2597999999998675e-05, 2.4471999999997607e-05, 2.3499999999999216e-05, 2.538900000000066e-05, 2.3514000000002255e-05, 2.4444000000001936e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.3485999999999646e-05, 2.2514000000001255e-05, 2.538900000000066e-05, 2.0722000000000795e-05, 2.0694000000001656e-05, 2.638899999999819e-05, 1.965300000000142e-05, 2.161100000000124e-05, 2.065299999999895e-05, 1.9680000000001086e-05, 2.536100000000152e-05, 2.262500000000181e-05, 2.0665999999999046e-05, 2.4486000000000646e-05, 2.0584000000000574e-05, 2.445900000000098e-05, 2.6360999999999052e-05, 2.247299999999855e-05, 2.444499999999794e-05, 2.6360999999999052e-05, 2.5443999999999467e-05, 2.066699999999852e-05, 2.3499999999999216e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.258" endtime="20201112 09:43:58.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.254" endtime="20201112 09:43:58.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.263" endtime="20201112 09:43:58.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.267" endtime="20201112 09:43:58.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.265" endtime="20201112 09:43:58.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.262" endtime="20201112 09:43:58.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.891" endtime="20201112 09:43:58.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.891" endtime="20201112 09:43:58.288"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.296" endtime="20201112 09:43:58.317"></status>
</kw>
<msg timestamp="20201112 09:43:58.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.295" endtime="20201112 09:43:58.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.318" endtime="20201112 09:43:58.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.321" endtime="20201112 09:43:58.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.292" endtime="20201112 09:43:58.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.290" endtime="20201112 09:43:58.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.330" endtime="20201112 09:43:58.617"></status>
</kw>
<msg timestamp="20201112 09:43:58.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.328" endtime="20201112 09:43:58.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.621" endtime="20201112 09:43:58.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.630" endtime="20201112 09:43:58.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.326" endtime="20201112 09:43:58.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.324" endtime="20201112 09:43:58.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.636" level="INFO">${RESULT} = [{'time': 0.023918347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7763999999999974e-05, 'source_diff': 1.7763999999999974e-05}, {'time': 0.023948514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:58.633" endtime="20201112 09:43:58.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.650" level="INFO">${ACCURACY} = {'diff': [1.7763999999999974e-05, 2.4472000000001076e-05, 2.5429999999999897e-05, 2.07090000000007e-05, 2.3500000000002685e-05, 2.155499999999949e-05, 2.5528000000000356e-05, 2.544499999999894e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:58.637" endtime="20201112 09:43:58.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.654" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.653" endtime="20201112 09:43:58.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.657" level="INFO">VALUE: [1.7763999999999974e-05, 2.4472000000001076e-05, 2.5429999999999897e-05, 2.07090000000007e-05, 2.3500000000002685e-05, 2.155499999999949e-05, 2.5528000000000356e-05, 2.544499999999894e-05, 2.4472000000001076e-05, 2.15969999999982e-05, 2.262499999999834e-05, 2.443099999999837e-05, 2.7319000000001342e-05, 1.9694000000000655e-05, 2.4471999999997607e-05, 2.255500000000049e-05, 2.5443999999999467e-05, 2.3528000000001825e-05, 2.161100000000124e-05, 2.2486000000002115e-05, 2.2527999999997356e-05, 2.637500000000209e-05, 2.2569999999999535e-05, 2.6416000000001327e-05, 2.161099999999777e-05, 2.3528000000001825e-05, 2.6430000000000897e-05, 2.2500000000001685e-05, 2.7277999999998637e-05, 2.5429999999999897e-05, 2.163900000000038e-05, 2.543099999999937e-05, 2.2554999999997022e-05, 2.5486000000001646e-05, 2.256900000000006e-05, 2.543099999999937e-05, 2.2542000000000395e-05, 2.440299999999923e-05, 2.2513999999997786e-05, 2.255500000000049e-05, 2.54169999999998e-05, 2.1611999999997245e-05, 2.065300000000242e-05, 2.4499999999996747e-05, 2.2500000000001685e-05, 2.065300000000242e-05, 2.3513999999998786e-05, 2.5360999999998052e-05, 2.4444000000001936e-05, 2.258299999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.655" endtime="20201112 09:43:58.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.650" endtime="20201112 09:43:58.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.660" endtime="20201112 09:43:58.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.664" endtime="20201112 09:43:58.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.662" endtime="20201112 09:43:58.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.658" endtime="20201112 09:43:58.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.289" endtime="20201112 09:43:58.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.288" endtime="20201112 09:43:58.685"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.693" endtime="20201112 09:43:58.715"></status>
</kw>
<msg timestamp="20201112 09:43:58.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.692" endtime="20201112 09:43:58.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.716" endtime="20201112 09:43:58.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.719" endtime="20201112 09:43:58.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.689" endtime="20201112 09:43:58.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.687" endtime="20201112 09:43:58.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.728" endtime="20201112 09:43:59.015"></status>
</kw>
<msg timestamp="20201112 09:43:59.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023923361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.726" endtime="20201112 09:43:59.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023923361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.019" endtime="20201112 09:43:59.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.027" endtime="20201112 09:43:59.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.724" endtime="20201112 09:43:59.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.722" endtime="20201112 09:43:59.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.034" level="INFO">${RESULT} = [{'time': 0.023923361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4916999999999708e-05, 'source_diff': 1.4916999999999708e-05}, {'time': 0.023953806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:59.031" endtime="20201112 09:43:59.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.047" level="INFO">${ACCURACY} = {'diff': [1.4916999999999708e-05, 2.638900000000166e-05, 2.2569999999999535e-05, 2.638900000000166e-05, 2.3485999999999646e-05, 2.2569999999999535e-05, 2.3513999999998786e-05, 2.3444000000000936e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:59.035" endtime="20201112 09:43:59.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.052" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.051" endtime="20201112 09:43:59.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.054" level="INFO">VALUE: [1.4916999999999708e-05, 2.638900000000166e-05, 2.2569999999999535e-05, 2.638900000000166e-05, 2.3485999999999646e-05, 2.2569999999999535e-05, 2.3513999999998786e-05, 2.3444000000000936e-05, 2.347299999999955e-05, 2.3514000000002255e-05, 2.3485999999999646e-05, 2.4472000000001076e-05, 2.2569999999999535e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.256900000000006e-05, 2.062499999999981e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.054099999999892e-05, 2.061100000000024e-05, 2.5500000000001216e-05, 2.3526999999998882e-05, 2.3499999999999216e-05, 2.2528000000000825e-05, 2.062499999999981e-05, 2.0680000000002086e-05, 2.4458000000001506e-05, 2.256900000000006e-05, 2.3526999999998882e-05, 2.3514000000002255e-05, 2.540300000000023e-05, 2.063899999999938e-05, 2.543099999999937e-05, 2.161099999999777e-05, 2.637500000000209e-05, 2.4458000000001506e-05, 2.5500000000001216e-05, 2.07090000000007e-05, 2.2554999999997022e-05, 2.4472000000001076e-05, 2.1541999999999395e-05, 2.7333000000000912e-05, 2.4485999999997177e-05, 2.5429999999999897e-05, 2.256900000000006e-05, 2.4471999999997607e-05, 2.537500000000109e-05, 2.15830000000021e-05, 2.15830000000021e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.053" endtime="20201112 09:43:59.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.048" endtime="20201112 09:43:59.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.058" endtime="20201112 09:43:59.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.061" endtime="20201112 09:43:59.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.060" endtime="20201112 09:43:59.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.056" endtime="20201112 09:43:59.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.685" endtime="20201112 09:43:59.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.685" endtime="20201112 09:43:59.082"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.091" endtime="20201112 09:43:59.112"></status>
</kw>
<msg timestamp="20201112 09:43:59.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.089" endtime="20201112 09:43:59.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.113" endtime="20201112 09:43:59.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.116" endtime="20201112 09:43:59.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.087" endtime="20201112 09:43:59.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.085" endtime="20201112 09:43:59.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.125" endtime="20201112 09:43:59.413"></status>
</kw>
<msg timestamp="20201112 09:43:59.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:59.123" endtime="20201112 09:43:59.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:59.417" endtime="20201112 09:43:59.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.425" endtime="20201112 09:43:59.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.121" endtime="20201112 09:43:59.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.119" endtime="20201112 09:43:59.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.432" level="INFO">${RESULT} = [{'time': 0.02301325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4889000000000568e-05, 'source_diff': 1.4889000000000568e-05}, {'time': 0.023043722, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:59.429" endtime="20201112 09:43:59.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.445" level="INFO">${ACCURACY} = {'diff': [1.4889000000000568e-05, 2.440299999999923e-05, 2.3527999999998356e-05, 2.263900000000138e-05, 2.063899999999938e-05, 2.3499999999999216e-05, 2.4457999999998037e-05, 2.5416000000000327e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:59.433" endtime="20201112 09:43:59.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.450" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.449" endtime="20201112 09:43:59.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.452" level="INFO">VALUE: [1.4889000000000568e-05, 2.440299999999923e-05, 2.3527999999998356e-05, 2.263900000000138e-05, 2.063899999999938e-05, 2.3499999999999216e-05, 2.4457999999998037e-05, 2.5416000000000327e-05, 2.05969999999972e-05, 2.3485999999999646e-05, 2.059700000000067e-05, 2.158299999999863e-05, 2.161099999999777e-05, 2.158299999999863e-05, 2.1555999999998965e-05, 2.440299999999923e-05, 2.255500000000049e-05, 2.2555999999999965e-05, 2.4458000000001506e-05, 2.356900000000106e-05, 2.3514000000002255e-05, 2.4429999999998897e-05, 2.54169999999998e-05, 2.0666000000002516e-05, 2.059700000000067e-05, 2.3513999999998786e-05, 2.159700000000167e-05, 1.9665999999998046e-05, 2.3528000000001825e-05, 2.445899999999751e-05, 2.3528000000001825e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 1.9666000000001516e-05, 2.069499999999766e-05, 2.5472000000002076e-05, 2.2569999999999535e-05, 2.3499999999999216e-05, 2.538900000000066e-05, 2.544499999999894e-05, 2.54169999999998e-05, 2.059700000000067e-05, 2.255500000000049e-05, 2.062499999999981e-05, 2.6360999999999052e-05, 2.066699999999852e-05, 2.158299999999863e-05, 2.4486000000000646e-05, 2.061100000000024e-05, 2.062499999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.451" endtime="20201112 09:43:59.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.446" endtime="20201112 09:43:59.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.456" endtime="20201112 09:43:59.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.459" endtime="20201112 09:43:59.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.458" endtime="20201112 09:43:59.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.454" endtime="20201112 09:43:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.083" endtime="20201112 09:43:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.083" endtime="20201112 09:43:59.480"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.489" endtime="20201112 09:43:59.508"></status>
</kw>
<msg timestamp="20201112 09:43:59.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.487" endtime="20201112 09:43:59.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.510" endtime="20201112 09:43:59.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.512" endtime="20201112 09:43:59.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.485" endtime="20201112 09:43:59.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.483" endtime="20201112 09:43:59.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.521" endtime="20201112 09:43:59.807"></status>
</kw>
<msg timestamp="20201112 09:43:59.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.519" endtime="20201112 09:43:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.811" endtime="20201112 09:43:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.820" endtime="20201112 09:43:59.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.517" endtime="20201112 09:43:59.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.515" endtime="20201112 09:43:59.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.826" level="INFO">${RESULT} = [{'time': 0.022012125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.022043, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:59.823" endtime="20201112 09:43:59.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.839" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 2.161100000000124e-05, 2.4472000000001076e-05, 2.2569999999999535e-05, 2.538900000000066e-05, 2.3528000000001825e-05, 1.961099999999924e-05, 2.3526999999998882e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:43:59.827" endtime="20201112 09:43:59.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.844" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.843" endtime="20201112 09:43:59.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.846" level="INFO">VALUE: [3.500000000000031e-05, 2.161100000000124e-05, 2.4472000000001076e-05, 2.2569999999999535e-05, 2.538900000000066e-05, 2.3528000000001825e-05, 1.961099999999924e-05, 2.3526999999998882e-05, 2.255500000000049e-05, 2.2540999999997452e-05, 2.065299999999895e-05, 2.0679999999998616e-05, 2.5429999999999897e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.2528000000000825e-05, 2.062499999999981e-05, 2.4500000000000216e-05, 2.156899999999906e-05, 2.3514000000002255e-05, 2.638899999999819e-05, 2.163900000000038e-05, 2.356900000000106e-05, 2.4458000000001506e-05, 2.3542000000001395e-05, 2.062499999999981e-05, 2.065299999999895e-05, 2.158299999999863e-05, 2.5471999999998607e-05, 2.3540999999998452e-05, 2.5458000000002506e-05, 2.4500000000000216e-05, 2.440299999999923e-05, 2.345899999999998e-05, 2.4471999999997607e-05, 2.4500000000000216e-05, 2.5429999999999897e-05, 2.643100000000037e-05, 2.5416000000000327e-05, 2.5429999999999897e-05, 2.2569999999999535e-05, 2.15969999999982e-05, 2.4486000000000646e-05, 2.4457999999998037e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.540300000000023e-05, 2.445900000000098e-05, 2.543099999999937e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.845" endtime="20201112 09:43:59.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.840" endtime="20201112 09:43:59.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.850" endtime="20201112 09:43:59.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.853" endtime="20201112 09:43:59.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.852" endtime="20201112 09:43:59.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.848" endtime="20201112 09:43:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.481" endtime="20201112 09:43:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.481" endtime="20201112 09:43:59.874"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.883" endtime="20201112 09:43:59.905"></status>
</kw>
<msg timestamp="20201112 09:43:59.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.881" endtime="20201112 09:43:59.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.906" endtime="20201112 09:43:59.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.909" endtime="20201112 09:43:59.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.879" endtime="20201112 09:43:59.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.877" endtime="20201112 09:43:59.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.918" endtime="20201112 09:44:00.205"></status>
</kw>
<msg timestamp="20201112 09:44:00.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.916" endtime="20201112 09:44:00.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.209" endtime="20201112 09:44:00.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.217" endtime="20201112 09:44:00.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.913" endtime="20201112 09:44:00.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.912" endtime="20201112 09:44:00.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.224" level="INFO">${RESULT} = [{'time': 0.024825444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4457999999998037e-05, 'source_diff': 2.4457999999998037e-05}, {'time': 0.024856264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.221" endtime="20201112 09:44:00.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.237" level="INFO">${ACCURACY} = {'diff': [2.4457999999998037e-05, 2.2499999999998216e-05, 2.4458000000001506e-05, 2.641699999999733e-05, 2.6415999999997858e-05, 2.545899999999851e-05, 2.3541999999997926e-05, 2.161100000000124e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:44:00.225" endtime="20201112 09:44:00.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.242" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.241" endtime="20201112 09:44:00.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.244" level="INFO">VALUE: [2.4457999999998037e-05, 2.2499999999998216e-05, 2.4458000000001506e-05, 2.641699999999733e-05, 2.6415999999997858e-05, 2.545899999999851e-05, 2.3541999999997926e-05, 2.161100000000124e-05, 2.255500000000049e-05, 2.2486000000002115e-05, 2.2528000000000825e-05, 2.548699999999765e-05, 2.3542000000001395e-05, 2.0598000000000144e-05, 2.3513999999998786e-05, 2.065299999999895e-05, 2.252700000000135e-05, 2.4500000000000216e-05, 2.4500000000000216e-05, 2.4555999999998496e-05, 2.161100000000124e-05, 2.54169999999998e-05, 2.255500000000049e-05, 2.161100000000124e-05, 2.3499999999999216e-05, 2.2583999999999105e-05, 2.162500000000081e-05, 2.3526999999998882e-05, 2.063899999999938e-05, 2.2542000000000395e-05, 2.3457999999997037e-05, 2.543099999999937e-05, 2.5429999999999897e-05, 2.159700000000167e-05, 2.158299999999863e-05, 2.3512999999999312e-05, 2.444499999999794e-05, 2.2584000000002574e-05, 2.5471999999998607e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.062499999999981e-05, 2.3514000000002255e-05, 2.7347000000000482e-05, 2.4471999999997607e-05, 2.4458000000001506e-05, 2.063900000000285e-05, 2.065299999999895e-05, 2.640299999999776e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.243" endtime="20201112 09:44:00.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.238" endtime="20201112 09:44:00.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.248" endtime="20201112 09:44:00.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.251" endtime="20201112 09:44:00.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.250" endtime="20201112 09:44:00.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.246" endtime="20201112 09:44:00.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.875" endtime="20201112 09:44:00.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.875" endtime="20201112 09:44:00.272"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.281" endtime="20201112 09:44:00.304"></status>
</kw>
<msg timestamp="20201112 09:44:00.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.279" endtime="20201112 09:44:00.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.305" endtime="20201112 09:44:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.308" endtime="20201112 09:44:00.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.277" endtime="20201112 09:44:00.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.275" endtime="20201112 09:44:00.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.317" endtime="20201112 09:44:00.604"></status>
</kw>
<msg timestamp="20201112 09:44:00.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.315" endtime="20201112 09:44:00.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.608" endtime="20201112 09:44:00.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.617" endtime="20201112 09:44:00.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.313" endtime="20201112 09:44:00.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.311" endtime="20201112 09:44:00.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.623" level="INFO">${RESULT} = [{'time': 0.023824236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3888999999999568e-05, 'source_diff': 1.3888999999999568e-05}, {'time': 0.023855264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.620" endtime="20201112 09:44:00.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.636" level="INFO">${ACCURACY} = {'diff': [1.3888999999999568e-05, 2.0570000000001004e-05, 2.2542000000000395e-05, 2.544499999999894e-05, 2.161100000000124e-05, 2.540300000000023e-05, 2.1597999999997675e-05, 2.4457999999998037e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:44:00.624" endtime="20201112 09:44:00.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.641" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.640" endtime="20201112 09:44:00.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.643" level="INFO">VALUE: [1.3888999999999568e-05, 2.0570000000001004e-05, 2.2542000000000395e-05, 2.544499999999894e-05, 2.161100000000124e-05, 2.540300000000023e-05, 2.1597999999997675e-05, 2.4457999999998037e-05, 2.2542000000000395e-05, 2.6319000000000342e-05, 2.536100000000152e-05, 2.5500000000001216e-05, 2.4457999999998037e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.065299999999895e-05, 2.543099999999937e-05, 2.3542000000001395e-05, 2.6374999999998622e-05, 2.159700000000167e-05, 2.4486000000000646e-05, 2.1542000000002864e-05, 2.2513999999997786e-05, 2.255500000000049e-05, 2.5429999999999897e-05, 2.162500000000081e-05, 2.256900000000006e-05, 2.15969999999982e-05, 2.2541999999996926e-05, 2.340299999999823e-05, 2.6346999999999482e-05, 2.544499999999894e-05, 2.2569999999999535e-05, 2.636100000000252e-05, 2.3486000000003115e-05, 2.155499999999949e-05, 2.062499999999981e-05, 2.2584000000002574e-05, 2.4486000000000646e-05, 2.544499999999894e-05, 2.638900000000166e-05, 2.1486000000001115e-05, 2.1527999999999825e-05, 2.2471999999999076e-05, 2.5485999999998177e-05, 2.161099999999777e-05, 2.255500000000049e-05, 2.3485999999999646e-05, 2.2542000000000395e-05, 2.34030000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.642" endtime="20201112 09:44:00.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.637" endtime="20201112 09:44:00.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.647" endtime="20201112 09:44:00.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.650" endtime="20201112 09:44:00.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.649" endtime="20201112 09:44:00.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.645" endtime="20201112 09:44:00.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.273" endtime="20201112 09:44:00.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.273" endtime="20201112 09:44:00.671"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.680" endtime="20201112 09:44:00.699"></status>
</kw>
<msg timestamp="20201112 09:44:00.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.678" endtime="20201112 09:44:00.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.701" endtime="20201112 09:44:00.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.703" endtime="20201112 09:44:00.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.676" endtime="20201112 09:44:00.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.674" endtime="20201112 09:44:00.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.712" endtime="20201112 09:44:00.999"></status>
</kw>
<msg timestamp="20201112 09:44:01.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:00.711" endtime="20201112 09:44:01.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:01.004" endtime="20201112 09:44:01.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.012" endtime="20201112 09:44:01.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.708" endtime="20201112 09:44:01.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.706" endtime="20201112 09:44:01.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.019" level="INFO">${RESULT} = [{'time': 0.021663292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.404200000000149e-05, 'source_diff': 3.404200000000149e-05}, {'time': 0.021693278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.016" endtime="20201112 09:44:01.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.032" level="INFO">${ACCURACY} = {'diff': [3.404200000000149e-05, 1.968100000000056e-05, 2.2555999999999965e-05, 2.3500000000002685e-05, 2.643100000000037e-05, 2.068099999999809e-05, 2.2514000000001255e-05, 2.15830000000021e-05, 2.06...</msg>
<status status="PASS" starttime="20201112 09:44:01.020" endtime="20201112 09:44:01.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.037" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.036" endtime="20201112 09:44:01.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.039" level="INFO">VALUE: [3.404200000000149e-05, 1.968100000000056e-05, 2.2555999999999965e-05, 2.3500000000002685e-05, 2.643100000000037e-05, 2.068099999999809e-05, 2.2514000000001255e-05, 2.15830000000021e-05, 2.063899999999938e-05, 2.15969999999982e-05, 2.161100000000124e-05, 2.163899999999691e-05, 2.4485999999997177e-05, 2.538899999999719e-05, 2.3527999999998356e-05, 2.2583999999999105e-05, 2.0637999999999906e-05, 2.544499999999894e-05, 2.3513999999998786e-05, 2.163900000000038e-05, 2.4457999999998037e-05, 2.444500000000141e-05, 2.1555999999998965e-05, 2.4457999999998037e-05, 2.540300000000023e-05, 2.543099999999937e-05, 2.066699999999852e-05, 2.2637999999998437e-05, 2.1598000000001144e-05, 2.1570000000002004e-05, 2.4457999999998037e-05, 1.9679999999997616e-05, 2.066700000000199e-05, 2.2542000000000395e-05, 2.6388000000002187e-05, 2.6319999999999816e-05, 2.065299999999895e-05, 2.4472000000001076e-05, 2.061099999999677e-05, 2.4500000000000216e-05, 2.062499999999981e-05, 2.4457999999998037e-05, 2.158299999999863e-05, 2.159700000000167e-05, 2.3512999999999312e-05, 2.638899999999819e-05, 2.534700000000195e-05, 2.2541999999996926e-05, 2.159700000000167e-05, 2.5429999999999897e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.038" endtime="20201112 09:44:01.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.033" endtime="20201112 09:44:01.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.043" endtime="20201112 09:44:01.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.046" endtime="20201112 09:44:01.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.045" endtime="20201112 09:44:01.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.041" endtime="20201112 09:44:01.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.672" endtime="20201112 09:44:01.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.672" endtime="20201112 09:44:01.067"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.076" endtime="20201112 09:44:01.096"></status>
</kw>
<msg timestamp="20201112 09:44:01.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.074" endtime="20201112 09:44:01.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.097" endtime="20201112 09:44:01.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.100" endtime="20201112 09:44:01.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.072" endtime="20201112 09:44:01.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.070" endtime="20201112 09:44:01.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.109" endtime="20201112 09:44:01.394"></status>
</kw>
<msg timestamp="20201112 09:44:01.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.107" endtime="20201112 09:44:01.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.399" endtime="20201112 09:44:01.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.407" endtime="20201112 09:44:01.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.105" endtime="20201112 09:44:01.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.103" endtime="20201112 09:44:01.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.414" level="INFO">${RESULT} = [{'time': 0.022706056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5847999999998863e-05, 'source_diff': 1.5847999999998863e-05}, {'time': 0.022737069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:01.410" endtime="20201112 09:44:01.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.427" level="INFO">${ACCURACY} = {'diff': [1.5847999999998863e-05, 2.256900000000006e-05, 2.5485999999998177e-05, 2.4429999999998897e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.540299999999676e-05, 2.3472000000000076e-05, 2.4...</msg>
<status status="PASS" starttime="20201112 09:44:01.415" endtime="20201112 09:44:01.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.431" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.430" endtime="20201112 09:44:01.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.434" level="INFO">VALUE: [1.5847999999998863e-05, 2.256900000000006e-05, 2.5485999999998177e-05, 2.4429999999998897e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.540299999999676e-05, 2.3472000000000076e-05, 2.4471999999997607e-05, 2.2513999999997786e-05, 2.4429999999998897e-05, 2.640300000000123e-05, 2.447300000000055e-05, 2.258299999999963e-05, 2.3513999999998786e-05, 2.1597999999997675e-05, 2.3499999999999216e-05, 2.2541999999996926e-05, 2.6374999999998622e-05, 2.065300000000242e-05, 1.9694000000000655e-05, 2.3513999999998786e-05, 2.540300000000023e-05, 2.2542000000000395e-05, 2.063899999999938e-05, 2.065300000000242e-05, 2.256900000000006e-05, 2.3458000000000506e-05, 2.4513999999999786e-05, 2.4485999999997177e-05, 2.0555999999997965e-05, 2.44169999999988e-05, 2.2443999999999936e-05, 2.640299999999776e-05, 2.4472000000001076e-05, 2.634700000000295e-05, 2.545899999999851e-05, 2.44169999999988e-05, 2.4486000000000646e-05, 2.5443999999999467e-05, 2.2555999999999965e-05, 2.2486000000002115e-05, 2.5472000000002076e-05, 2.159700000000167e-05, 2.640300000000123e-05, 2.3485999999999646e-05, 2.063900000000285e-05, 2.3541999999997926e-05, 2.155499999999949e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.432" endtime="20201112 09:44:01.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.428" endtime="20201112 09:44:01.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.437" endtime="20201112 09:44:01.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.441" endtime="20201112 09:44:01.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.439" endtime="20201112 09:44:01.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.436" endtime="20201112 09:44:01.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.068" endtime="20201112 09:44:01.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.067" endtime="20201112 09:44:01.462"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.470" endtime="20201112 09:44:01.495"></status>
</kw>
<msg timestamp="20201112 09:44:01.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.469" endtime="20201112 09:44:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.496" endtime="20201112 09:44:01.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.499" endtime="20201112 09:44:01.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.466" endtime="20201112 09:44:01.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.464" endtime="20201112 09:44:01.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.508" endtime="20201112 09:44:01.797"></status>
</kw>
<msg timestamp="20201112 09:44:01.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.506" endtime="20201112 09:44:01.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.801" endtime="20201112 09:44:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.810" endtime="20201112 09:44:01.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.504" endtime="20201112 09:44:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.502" endtime="20201112 09:44:01.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.817" level="INFO">${RESULT} = [{'time': 0.025001292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1570000000002004e-05, 'source_diff': 2.1570000000002004e-05}, {'time': 0.025030972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:01.813" endtime="20201112 09:44:01.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.830" level="INFO">${ACCURACY} = {'diff': [2.1570000000002004e-05, 2.065299999999895e-05, 2.444500000000141e-05, 2.6346999999999482e-05, 2.3472000000000076e-05, 2.065300000000242e-05, 2.6346999999999482e-05, 2.543099999999937e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:01.818" endtime="20201112 09:44:01.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.834" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.833" endtime="20201112 09:44:01.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.837" level="INFO">VALUE: [2.1570000000002004e-05, 2.065299999999895e-05, 2.444500000000141e-05, 2.6346999999999482e-05, 2.3472000000000076e-05, 2.065300000000242e-05, 2.6346999999999482e-05, 2.543099999999937e-05, 2.3513999999998786e-05, 2.15969999999982e-05, 2.637500000000209e-05, 2.059700000000067e-05, 2.063900000000285e-05, 2.638899999999819e-05, 2.0679999999998616e-05, 2.3485999999999646e-05, 2.161099999999777e-05, 2.4499999999996747e-05, 2.3512999999999312e-05, 2.156899999999906e-05, 2.537500000000109e-05, 2.444500000000141e-05, 2.05830000000011e-05, 2.3514000000002255e-05, 2.4471999999997607e-05, 2.537499999999762e-05, 2.1499999999997216e-05, 2.15830000000021e-05, 2.1569999999998535e-05, 2.1584000000001574e-05, 2.15969999999982e-05, 2.2555999999999965e-05, 2.163899999999691e-05, 2.4458000000001506e-05, 2.4472000000001076e-05, 2.162500000000081e-05, 2.638900000000166e-05, 2.2514000000001255e-05, 2.151300000000078e-05, 2.063899999999938e-05, 2.0694000000001656e-05, 2.638899999999819e-05, 2.3514000000002255e-05, 2.538900000000066e-05, 2.0598000000000144e-05, 2.4486000000000646e-05, 2.25830000000031e-05, 2.1485999999997646e-05, 2.147299999999755e-05, 2.159700000000167e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.836" endtime="20201112 09:44:01.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.831" endtime="20201112 09:44:01.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.841" endtime="20201112 09:44:01.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.844" endtime="20201112 09:44:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.842" endtime="20201112 09:44:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.839" endtime="20201112 09:44:01.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.463" endtime="20201112 09:44:01.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.462" endtime="20201112 09:44:01.865"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.874" endtime="20201112 09:44:01.894"></status>
</kw>
<msg timestamp="20201112 09:44:01.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.872" endtime="20201112 09:44:01.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.896" endtime="20201112 09:44:01.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.898" endtime="20201112 09:44:01.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.870" endtime="20201112 09:44:01.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.868" endtime="20201112 09:44:01.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.907" endtime="20201112 09:44:02.218"></status>
</kw>
<msg timestamp="20201112 09:44:02.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023613, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:01.906" endtime="20201112 09:44:02.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023613, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:02.222" endtime="20201112 09:44:02.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.230" endtime="20201112 09:44:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.903" endtime="20201112 09:44:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.901" endtime="20201112 09:44:02.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.237" level="INFO">${RESULT} = [{'time': 0.023632667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.966700000000099e-05, 'source_diff': 1.966700000000099e-05}, {'time': 0.023663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.233" endtime="20201112 09:44:02.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.250" level="INFO">${ACCURACY} = {'diff': [1.966700000000099e-05, 2.3499999999999216e-05, 2.161100000000124e-05, 2.5457999999999037e-05, 2.2527999999997356e-05, 2.537500000000109e-05, 2.159700000000167e-05, 2.5443999999999467e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:02.238" endtime="20201112 09:44:02.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.255" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.253" endtime="20201112 09:44:02.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.257" level="INFO">VALUE: [1.966700000000099e-05, 2.3499999999999216e-05, 2.161100000000124e-05, 2.5457999999999037e-05, 2.2527999999997356e-05, 2.537500000000109e-05, 2.159700000000167e-05, 2.5443999999999467e-05, 2.065299999999895e-05, 2.245899999999898e-05, 2.444500000000141e-05, 2.3486000000003115e-05, 2.544499999999894e-05, 1.972299999999927e-05, 2.538899999999719e-05, 1.9680000000001086e-05, 2.638900000000166e-05, 2.2570000000003004e-05, 2.6374999999998622e-05, 2.5360999999998052e-05, 2.3499999999999216e-05, 2.2528000000000825e-05, 2.2513999999997786e-05, 2.540300000000023e-05, 2.2583999999999105e-05, 2.354100000000192e-05, 2.3430000000001366e-05, 2.062499999999981e-05, 2.4458000000001506e-05, 2.159700000000167e-05, 2.159700000000167e-05, 2.063899999999938e-05, 2.5443999999999467e-05, 2.065299999999895e-05, 2.159700000000167e-05, 2.4472000000001076e-05, 2.536100000000152e-05, 2.4443999999998467e-05, 2.165299999999995e-05, 2.3485999999999646e-05, 2.2569999999999535e-05, 2.065300000000242e-05, 2.3499999999999216e-05, 2.065299999999895e-05, 2.5416000000000327e-05, 2.3500000000002685e-05, 2.159700000000167e-05, 2.3472000000000076e-05, 2.063899999999938e-05, 2.3528000000001825e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.256" endtime="20201112 09:44:02.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.251" endtime="20201112 09:44:02.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.261" endtime="20201112 09:44:02.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.264" endtime="20201112 09:44:02.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.262" endtime="20201112 09:44:02.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.259" endtime="20201112 09:44:02.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.866" endtime="20201112 09:44:02.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.865" endtime="20201112 09:44:02.285"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.294" endtime="20201112 09:44:02.312"></status>
</kw>
<msg timestamp="20201112 09:44:02.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.292" endtime="20201112 09:44:02.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.313" endtime="20201112 09:44:02.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.316" endtime="20201112 09:44:02.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.289" endtime="20201112 09:44:02.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.287" endtime="20201112 09:44:02.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.325" endtime="20201112 09:44:02.611"></status>
</kw>
<msg timestamp="20201112 09:44:02.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.323" endtime="20201112 09:44:02.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.615" endtime="20201112 09:44:02.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.623" endtime="20201112 09:44:02.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.321" endtime="20201112 09:44:02.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.319" endtime="20201112 09:44:02.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.630" level="INFO">${RESULT} = [{'time': 0.020644014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.506999999999816e-05, 'source_diff': 3.506999999999816e-05}, {'time': 0.020674528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.627" endtime="20201112 09:44:02.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.643" level="INFO">${ACCURACY} = {'diff': [3.506999999999816e-05, 2.2555999999999965e-05, 2.3485999999999646e-05, 2.2542000000000395e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.1584000000001574e-05, 2.638899999999819e-05, 2.2...</msg>
<status status="PASS" starttime="20201112 09:44:02.631" endtime="20201112 09:44:02.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.648" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.647" endtime="20201112 09:44:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.650" level="INFO">VALUE: [3.506999999999816e-05, 2.2555999999999965e-05, 2.3485999999999646e-05, 2.2542000000000395e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.1584000000001574e-05, 2.638899999999819e-05, 2.2527999999997356e-05, 2.3528000000001825e-05, 2.065300000000242e-05, 2.3513999999998786e-05, 2.15969999999982e-05, 2.6360999999999052e-05, 2.4527999999999356e-05, 2.161100000000124e-05, 2.5429999999999897e-05, 2.062499999999981e-05, 2.636100000000252e-05, 2.4458000000001506e-05, 2.063899999999938e-05, 2.54169999999998e-05, 2.445900000000098e-05, 2.3513999999998786e-05, 2.158299999999863e-05, 1.9680000000001086e-05, 2.069500000000113e-05, 2.445900000000098e-05, 1.9708000000000225e-05, 2.6360999999999052e-05, 2.6360999999999052e-05, 2.0541999999998395e-05, 2.3485999999999646e-05, 2.156899999999906e-05, 2.1612000000000714e-05, 2.2486000000002115e-05, 2.158299999999863e-05, 2.5416000000000327e-05, 2.2443999999999936e-05, 2.6402000000001757e-05, 2.158299999999863e-05, 2.5402000000000757e-05, 2.15830000000021e-05, 2.5429999999999897e-05, 2.2555999999999965e-05, 2.3500000000002685e-05, 2.256900000000006e-05, 2.2528000000000825e-05, 2.058299999999763e-05, 2.152700000000035e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.649" endtime="20201112 09:44:02.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.644" endtime="20201112 09:44:02.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.654" endtime="20201112 09:44:02.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.657" endtime="20201112 09:44:02.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.656" endtime="20201112 09:44:02.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.652" endtime="20201112 09:44:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.286" endtime="20201112 09:44:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.285" endtime="20201112 09:44:02.678"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.687" endtime="20201112 09:44:02.709"></status>
</kw>
<msg timestamp="20201112 09:44:02.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.685" endtime="20201112 09:44:02.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.710" endtime="20201112 09:44:02.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.713" endtime="20201112 09:44:02.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.683" endtime="20201112 09:44:02.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.681" endtime="20201112 09:44:02.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.722" endtime="20201112 09:44:03.007"></status>
</kw>
<msg timestamp="20201112 09:44:03.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024331097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.720" endtime="20201112 09:44:03.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024331097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024343042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.011" endtime="20201112 09:44:03.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.019" endtime="20201112 09:44:03.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.718" endtime="20201112 09:44:03.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.716" endtime="20201112 09:44:03.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.026" level="INFO">${RESULT} = [{'time': 0.024343042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1944999999999317e-05, 'source_diff': 1.1944999999999317e-05}, {'time': 0.024373542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.022" endtime="20201112 09:44:03.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.039" level="INFO">${ACCURACY} = {'diff': [1.1944999999999317e-05, 2.447300000000055e-05, 2.3527999999998356e-05, 2.4471999999997607e-05, 2.5429999999999897e-05, 2.543100000000284e-05, 2.5416000000000327e-05, 2.0694000000001656e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:03.027" endtime="20201112 09:44:03.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.044" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.043" endtime="20201112 09:44:03.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.047" level="INFO">VALUE: [1.1944999999999317e-05, 2.447300000000055e-05, 2.3527999999998356e-05, 2.4471999999997607e-05, 2.5429999999999897e-05, 2.543100000000284e-05, 2.5416000000000327e-05, 2.0694000000001656e-05, 2.5472000000002076e-05, 2.4472000000001076e-05, 2.3499999999999216e-05, 2.4457999999998037e-05, 2.534700000000195e-05, 2.066699999999852e-05, 2.2555999999999965e-05, 2.640299999999776e-05, 2.638899999999819e-05, 2.637500000000209e-05, 2.162500000000081e-05, 2.640300000000123e-05, 2.4444000000001936e-05, 2.4485999999997177e-05, 1.9708000000000225e-05, 2.065299999999895e-05, 2.4485999999997177e-05, 2.5415999999996858e-05, 2.4472000000001076e-05, 2.159700000000167e-05, 1.969500000000013e-05, 2.0611999999999714e-05, 2.358300000000063e-05, 2.637500000000209e-05, 2.162500000000081e-05, 2.438899999999966e-05, 2.4486000000000646e-05, 2.638900000000166e-05, 2.544500000000241e-05, 2.159700000000167e-05, 2.3526999999998882e-05, 2.4472000000001076e-05, 2.0555999999997965e-05, 2.3528000000001825e-05, 1.9679999999997616e-05, 2.2555999999999965e-05, 2.4500000000000216e-05, 1.9708000000000225e-05, 2.538899999999719e-05, 2.261100000000224e-05, 2.544499999999894e-05, 2.068100000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.045" endtime="20201112 09:44:03.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.040" endtime="20201112 09:44:03.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.051" endtime="20201112 09:44:03.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.054" endtime="20201112 09:44:03.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.052" endtime="20201112 09:44:03.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.049" endtime="20201112 09:44:03.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.679" endtime="20201112 09:44:03.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.678" endtime="20201112 09:44:03.075"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.084" endtime="20201112 09:44:03.105"></status>
</kw>
<msg timestamp="20201112 09:44:03.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.082" endtime="20201112 09:44:03.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.107" endtime="20201112 09:44:03.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.109" endtime="20201112 09:44:03.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.080" endtime="20201112 09:44:03.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.078" endtime="20201112 09:44:03.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.118" endtime="20201112 09:44:03.404"></status>
</kw>
<msg timestamp="20201112 09:44:03.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024418944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.117" endtime="20201112 09:44:03.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024418944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.408" endtime="20201112 09:44:03.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.416" endtime="20201112 09:44:03.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.114" endtime="20201112 09:44:03.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.112" endtime="20201112 09:44:03.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.423" level="INFO">${RESULT} = [{'time': 0.024440542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1597999999997675e-05, 'source_diff': 2.1597999999997675e-05}, {'time': 0.024470764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.420" endtime="20201112 09:44:03.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.436" level="INFO">${ACCURACY} = {'diff': [2.1597999999997675e-05, 2.15969999999982e-05, 2.1527999999999825e-05, 2.161099999999777e-05, 2.1651999999997007e-05, 2.2541999999996926e-05, 2.637500000000209e-05, 2.4486000000000646e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:03.424" endtime="20201112 09:44:03.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.441" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.440" endtime="20201112 09:44:03.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.443" level="INFO">VALUE: [2.1597999999997675e-05, 2.15969999999982e-05, 2.1527999999999825e-05, 2.161099999999777e-05, 2.1651999999997007e-05, 2.2541999999996926e-05, 2.637500000000209e-05, 2.4486000000000646e-05, 2.2528000000000825e-05, 2.07090000000007e-05, 2.4429999999998897e-05, 2.261100000000224e-05, 2.5429999999999897e-05, 2.2555999999999965e-05, 2.165299999999995e-05, 2.063899999999938e-05, 2.5429999999999897e-05, 2.3513999999998786e-05, 1.9665999999998046e-05, 2.2554999999997022e-05, 2.0722000000000795e-05, 1.97089999999997e-05, 2.3513999999998786e-05, 2.543099999999937e-05, 2.643100000000037e-05, 2.6388000000002187e-05, 2.4457999999998037e-05, 2.540300000000023e-05, 2.1584000000001574e-05, 2.258299999999963e-05, 2.643100000000037e-05, 2.065300000000242e-05, 2.256900000000006e-05, 2.6374999999998622e-05, 2.162499999999734e-05, 2.643100000000037e-05, 2.637500000000209e-05, 2.445900000000098e-05, 2.161100000000124e-05, 2.4458000000001506e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.444500000000141e-05, 2.2569999999999535e-05, 2.5416000000000327e-05, 2.0694000000001656e-05, 2.6361999999998526e-05, 2.3499999999999216e-05, 2.158299999999863e-05, 2.059700000000067e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.442" endtime="20201112 09:44:03.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.437" endtime="20201112 09:44:03.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.447" endtime="20201112 09:44:03.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.450" endtime="20201112 09:44:03.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.449" endtime="20201112 09:44:03.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.445" endtime="20201112 09:44:03.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.076" endtime="20201112 09:44:03.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.075" endtime="20201112 09:44:03.471"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.480" endtime="20201112 09:44:03.497"></status>
</kw>
<msg timestamp="20201112 09:44:03.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.478" endtime="20201112 09:44:03.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.499" endtime="20201112 09:44:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.501" endtime="20201112 09:44:03.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.475" endtime="20201112 09:44:03.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.473" endtime="20201112 09:44:03.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.510" endtime="20201112 09:44:03.798"></status>
</kw>
<msg timestamp="20201112 09:44:03.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.509" endtime="20201112 09:44:03.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.802" endtime="20201112 09:44:03.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.810" endtime="20201112 09:44:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.506" endtime="20201112 09:44:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.504" endtime="20201112 09:44:03.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.817" level="INFO">${RESULT} = [{'time': 0.020295958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5429999999999897e-05, 'source_diff': 2.5429999999999897e-05}, {'time': 0.020325764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.814" endtime="20201112 09:44:03.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.830" level="INFO">${ACCURACY} = {'diff': [2.5429999999999897e-05, 1.9735999999999365e-05, 2.161100000000124e-05, 2.4443999999998467e-05, 2.3499999999999216e-05, 2.6374999999998622e-05, 2.161100000000124e-05, 2.1598000000001144e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:03.818" endtime="20201112 09:44:03.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.835" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.834" endtime="20201112 09:44:03.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.837" level="INFO">VALUE: [2.5429999999999897e-05, 1.9735999999999365e-05, 2.161100000000124e-05, 2.4443999999998467e-05, 2.3499999999999216e-05, 2.6374999999998622e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.2569999999999535e-05, 2.4471999999997607e-05, 2.2569999999999535e-05, 2.3527999999998356e-05, 2.162499999999734e-05, 2.062499999999981e-05, 2.066700000000199e-05, 2.437500000000009e-05, 2.6346999999999482e-05, 2.638899999999819e-05, 1.968100000000056e-05, 2.4471999999997607e-05, 2.159700000000167e-05, 2.4458000000001506e-05, 2.4472000000001076e-05, 2.255500000000049e-05, 2.152700000000035e-05, 1.966700000000099e-05, 2.4458000000001506e-05, 2.156899999999906e-05, 2.05830000000011e-05, 2.5402000000000757e-05, 2.2597999999998675e-05, 2.6374999999998622e-05, 2.159700000000167e-05, 2.162500000000081e-05, 2.540300000000023e-05, 2.3485999999999646e-05, 2.4458000000001506e-05, 2.2542000000000395e-05, 2.2555999999999965e-05, 2.5444000000002936e-05, 1.9693999999997186e-05, 2.2513999999997786e-05, 2.2570000000003004e-05, 2.6319000000000342e-05, 2.065299999999895e-05, 2.636100000000252e-05, 2.261099999999877e-05, 2.543099999999937e-05, 2.256900000000006e-05, 2.440299999999923e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.836" endtime="20201112 09:44:03.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.831" endtime="20201112 09:44:03.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.841" endtime="20201112 09:44:03.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.844" endtime="20201112 09:44:03.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.843" endtime="20201112 09:44:03.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.839" endtime="20201112 09:44:03.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.472" endtime="20201112 09:44:03.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.471" endtime="20201112 09:44:03.865"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.874" endtime="20201112 09:44:03.895"></status>
</kw>
<msg timestamp="20201112 09:44:03.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.872" endtime="20201112 09:44:03.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.896" endtime="20201112 09:44:03.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.899" endtime="20201112 09:44:03.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.870" endtime="20201112 09:44:03.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.868" endtime="20201112 09:44:03.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.908" endtime="20201112 09:44:04.205"></status>
</kw>
<msg timestamp="20201112 09:44:04.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.906" endtime="20201112 09:44:04.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.209" endtime="20201112 09:44:04.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.218" endtime="20201112 09:44:04.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.904" endtime="20201112 09:44:04.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.902" endtime="20201112 09:44:04.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.224" level="INFO">${RESULT} = [{'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9167000000000082e-05, 'source_diff': 2.9167000000000082e-05}, {'time': 0.023170153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.221" endtime="20201112 09:44:04.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.237" level="INFO">${ACCURACY} = {'diff': [2.9167000000000082e-05, 1.97089999999997e-05, 2.1584000000001574e-05, 2.161099999999777e-05, 2.2528000000000825e-05, 2.2430000000000366e-05, 2.2555999999999965e-05, 2.1598000000001144e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:44:04.225" endtime="20201112 09:44:04.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.242" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.241" endtime="20201112 09:44:04.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.244" level="INFO">VALUE: [2.9167000000000082e-05, 1.97089999999997e-05, 2.1584000000001574e-05, 2.161099999999777e-05, 2.2528000000000825e-05, 2.2430000000000366e-05, 2.2555999999999965e-05, 2.1598000000001144e-05, 2.54169999999998e-05, 2.255500000000049e-05, 2.159700000000167e-05, 2.4430000000002366e-05, 2.0637999999999906e-05, 2.065300000000242e-05, 2.3458000000000506e-05, 2.6332999999999912e-05, 2.444500000000141e-05, 2.640300000000123e-05, 2.5429999999999897e-05, 2.54169999999998e-05, 2.2514000000001255e-05, 2.6374999999998622e-05, 2.540300000000023e-05, 2.256900000000006e-05, 2.640300000000123e-05, 2.3597999999999675e-05, 2.538900000000066e-05, 2.3458000000000506e-05, 2.540300000000023e-05, 2.543099999999937e-05, 2.158299999999863e-05, 2.070899999999723e-05, 2.063899999999938e-05, 2.5416000000000327e-05, 2.254100000000092e-05, 2.2569999999999535e-05, 2.540300000000023e-05, 2.5360999999998052e-05, 2.3527999999998356e-05, 2.4444000000001936e-05, 2.3458000000000506e-05, 2.063899999999938e-05, 2.543099999999937e-05, 2.5429999999999897e-05, 2.063899999999938e-05, 2.538899999999719e-05, 2.54169999999998e-05, 1.968100000000056e-05, 2.448700000000012e-05, 2.538899999999719e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.243" endtime="20201112 09:44:04.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.238" endtime="20201112 09:44:04.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.248" endtime="20201112 09:44:04.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.251" endtime="20201112 09:44:04.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.250" endtime="20201112 09:44:04.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.246" endtime="20201112 09:44:04.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.866" endtime="20201112 09:44:04.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.865" endtime="20201112 09:44:04.272"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.281" endtime="20201112 09:44:04.301"></status>
</kw>
<msg timestamp="20201112 09:44:04.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.279" endtime="20201112 09:44:04.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.303" endtime="20201112 09:44:04.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.305" endtime="20201112 09:44:04.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.277" endtime="20201112 09:44:04.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.275" endtime="20201112 09:44:04.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.314" endtime="20201112 09:44:04.602"></status>
</kw>
<msg timestamp="20201112 09:44:04.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.313" endtime="20201112 09:44:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.607" endtime="20201112 09:44:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.615" endtime="20201112 09:44:04.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.310" endtime="20201112 09:44:04.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.309" endtime="20201112 09:44:04.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.622" level="INFO">${RESULT} = [{'time': 0.023052333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497200000000117e-05, 'source_diff': 3.497200000000117e-05}, {'time': 0.023082556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.618" endtime="20201112 09:44:04.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.635" level="INFO">${ACCURACY} = {'diff': [3.497200000000117e-05, 2.1584000000001574e-05, 2.055499999999849e-05, 2.638900000000166e-05, 2.6361999999998526e-05, 2.065299999999895e-05, 2.2542000000000395e-05, 2.2486000000002115e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:04.623" endtime="20201112 09:44:04.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.639" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.638" endtime="20201112 09:44:04.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.642" level="INFO">VALUE: [3.497200000000117e-05, 2.1584000000001574e-05, 2.055499999999849e-05, 2.638900000000166e-05, 2.6361999999998526e-05, 2.065299999999895e-05, 2.2542000000000395e-05, 2.2486000000002115e-05, 2.2542000000000395e-05, 2.540300000000023e-05, 2.4555999999998496e-05, 2.25969999999992e-05, 2.3486000000003115e-05, 2.540300000000023e-05, 2.3526999999998882e-05, 2.3527999999998356e-05, 2.543099999999937e-05, 2.156899999999906e-05, 2.6346999999999482e-05, 2.35970000000002e-05, 2.159700000000167e-05, 2.255500000000049e-05, 2.3485999999999646e-05, 2.065299999999895e-05, 2.6319000000000342e-05, 2.444500000000141e-05, 2.444500000000141e-05, 2.2555999999999965e-05, 2.54169999999998e-05, 2.6374999999998622e-05, 2.348700000000259e-05, 2.3499999999999216e-05, 2.0556000000001434e-05, 2.161100000000124e-05, 2.065299999999895e-05, 2.252700000000135e-05, 2.5416000000000327e-05, 2.063899999999938e-05, 2.2528000000000825e-05, 2.2542000000000395e-05, 2.3499999999999216e-05, 2.15969999999982e-05, 2.2555999999999965e-05, 2.5443999999999467e-05, 2.6374999999998622e-05, 2.065299999999895e-05, 2.7347000000000482e-05, 2.2500000000001685e-05, 2.156899999999906e-05, 2.6333999999999386e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.640" endtime="20201112 09:44:04.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.636" endtime="20201112 09:44:04.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.645" endtime="20201112 09:44:04.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.649" endtime="20201112 09:44:04.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.647" endtime="20201112 09:44:04.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.644" endtime="20201112 09:44:04.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.273" endtime="20201112 09:44:04.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.272" endtime="20201112 09:44:04.670"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.678" endtime="20201112 09:44:04.700"></status>
</kw>
<msg timestamp="20201112 09:44:04.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.677" endtime="20201112 09:44:04.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.701" endtime="20201112 09:44:04.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.703" endtime="20201112 09:44:04.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.674" endtime="20201112 09:44:04.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.672" endtime="20201112 09:44:04.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.712" endtime="20201112 09:44:04.999"></status>
</kw>
<msg timestamp="20201112 09:44:05.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.711" endtime="20201112 09:44:05.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.004" endtime="20201112 09:44:05.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.012" endtime="20201112 09:44:05.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.708" endtime="20201112 09:44:05.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.707" endtime="20201112 09:44:05.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.019" level="INFO">${RESULT} = [{'time': 0.022325986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.402799999999845e-05, 'source_diff': 3.402799999999845e-05}, {'time': 0.022355764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.016" endtime="20201112 09:44:05.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.033" level="INFO">${ACCURACY} = {'diff': [3.402799999999845e-05, 2.540300000000023e-05, 2.3514000000002255e-05, 2.162500000000081e-05, 2.1584000000001574e-05, 2.5443999999999467e-05, 2.4471999999997607e-05, 2.638900000000166e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:05.020" endtime="20201112 09:44:05.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.037" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.036" endtime="20201112 09:44:05.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.040" level="INFO">VALUE: [3.402799999999845e-05, 2.540300000000023e-05, 2.3514000000002255e-05, 2.162500000000081e-05, 2.1584000000001574e-05, 2.5443999999999467e-05, 2.4471999999997607e-05, 2.638900000000166e-05, 2.4486000000000646e-05, 1.9763999999998505e-05, 2.3527999999998356e-05, 2.065299999999895e-05, 1.966700000000099e-05, 2.638900000000166e-05, 2.5416000000000327e-05, 2.3499999999999216e-05, 2.6387999999998718e-05, 2.343100000000084e-05, 2.640300000000123e-05, 2.5457999999999037e-05, 2.544500000000241e-05, 2.161099999999777e-05, 2.3499999999999216e-05, 2.540300000000023e-05, 2.155499999999949e-05, 2.6360999999999052e-05, 2.6347999999998956e-05, 2.3527999999998356e-05, 2.638900000000166e-05, 2.445900000000098e-05, 2.3499999999999216e-05, 2.4457999999998037e-05, 2.544499999999894e-05, 2.640300000000123e-05, 1.968100000000056e-05, 2.159700000000167e-05, 2.0665999999999046e-05, 1.9666000000001516e-05, 2.6374999999998622e-05, 2.3513999999998786e-05, 2.1597999999997675e-05, 2.540300000000023e-05, 2.0679999999998616e-05, 2.5500000000001216e-05, 2.2542000000000395e-05, 2.161100000000124e-05, 2.15969999999982e-05, 2.4443999999998467e-05, 2.159700000000167e-05, 2.544499999999894e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.038" endtime="20201112 09:44:05.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.033" endtime="20201112 09:44:05.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.043" endtime="20201112 09:44:05.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.047" endtime="20201112 09:44:05.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.045" endtime="20201112 09:44:05.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.042" endtime="20201112 09:44:05.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.671" endtime="20201112 09:44:05.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.670" endtime="20201112 09:44:05.069"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.078" endtime="20201112 09:44:05.100"></status>
</kw>
<msg timestamp="20201112 09:44:05.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.077" endtime="20201112 09:44:05.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.101" endtime="20201112 09:44:05.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.104" endtime="20201112 09:44:05.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.074" endtime="20201112 09:44:05.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.071" endtime="20201112 09:44:05.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.113" endtime="20201112 09:44:05.398"></status>
</kw>
<msg timestamp="20201112 09:44:05.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026117972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.111" endtime="20201112 09:44:05.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026117972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.402" endtime="20201112 09:44:05.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.411" endtime="20201112 09:44:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.109" endtime="20201112 09:44:05.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.107" endtime="20201112 09:44:05.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.418" level="INFO">${RESULT} = [{'time': 0.026145319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.026176556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.414" endtime="20201112 09:44:05.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.431" level="INFO">${ACCURACY} = {'diff': [2.7347000000000482e-05, 2.54169999999998e-05, 2.543099999999937e-05, 2.4500000000000216e-05, 2.5388000000001187e-05, 2.155499999999949e-05, 2.4472000000001076e-05, 1.968099999999709e-05, 2.1...</msg>
<status status="PASS" starttime="20201112 09:44:05.418" endtime="20201112 09:44:05.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.435" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.434" endtime="20201112 09:44:05.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.438" level="INFO">VALUE: [2.7347000000000482e-05, 2.54169999999998e-05, 2.543099999999937e-05, 2.4500000000000216e-05, 2.5388000000001187e-05, 2.155499999999949e-05, 2.4472000000001076e-05, 1.968099999999709e-05, 2.161100000000124e-05, 2.540299999999676e-05, 2.5416000000000327e-05, 2.445900000000098e-05, 2.2569999999999535e-05, 2.159700000000167e-05, 2.4486000000000646e-05, 2.063899999999938e-05, 2.0611999999999714e-05, 2.537499999999762e-05, 2.3499999999999216e-05, 2.061099999999677e-05, 2.2569999999999535e-05, 2.538900000000066e-05, 2.6374999999998622e-05, 2.165299999999995e-05, 2.4443999999998467e-05, 2.3499999999999216e-05, 2.637500000000209e-05, 2.163900000000038e-05, 2.3485999999999646e-05, 2.061100000000024e-05, 2.5402000000000757e-05, 2.5444000000002936e-05, 2.065299999999895e-05, 2.3499999999999216e-05, 2.1569999999998535e-05, 2.54169999999998e-05, 2.4570000000001535e-05, 1.969500000000013e-05, 2.5348000000001425e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.536100000000152e-05, 2.065299999999895e-05, 2.540300000000023e-05, 2.061100000000024e-05, 2.636100000000252e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.161100000000124e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.436" endtime="20201112 09:44:05.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.432" endtime="20201112 09:44:05.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.441" endtime="20201112 09:44:05.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.445" endtime="20201112 09:44:05.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.443" endtime="20201112 09:44:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.440" endtime="20201112 09:44:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.070" endtime="20201112 09:44:05.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.069" endtime="20201112 09:44:05.466"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.474" endtime="20201112 09:44:05.496"></status>
</kw>
<msg timestamp="20201112 09:44:05.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.473" endtime="20201112 09:44:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.498" endtime="20201112 09:44:05.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.500" endtime="20201112 09:44:05.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.470" endtime="20201112 09:44:05.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.468" endtime="20201112 09:44:05.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.509" endtime="20201112 09:44:05.820"></status>
</kw>
<msg timestamp="20201112 09:44:05.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025199194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025236083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.508" endtime="20201112 09:44:05.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025199194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025236083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.824" endtime="20201112 09:44:05.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.832" endtime="20201112 09:44:05.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.505" endtime="20201112 09:44:05.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.503" endtime="20201112 09:44:05.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.840" level="INFO">${RESULT} = [{'time': 0.025236083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6888999999998284e-05, 'source_diff': 3.6888999999998284e-05}, {'time': 0.025266319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.836" endtime="20201112 09:44:05.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.853" level="INFO">${ACCURACY} = {'diff': [3.6888999999998284e-05, 2.161099999999777e-05, 2.54169999999998e-05, 2.545900000000198e-05, 2.5429999999999897e-05, 1.969500000000013e-05, 2.6374999999998622e-05, 2.5443999999999467e-05, 2.5...</msg>
<status status="PASS" starttime="20201112 09:44:05.841" endtime="20201112 09:44:05.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.858" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.857" endtime="20201112 09:44:05.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.861" level="INFO">VALUE: [3.6888999999998284e-05, 2.161099999999777e-05, 2.54169999999998e-05, 2.545900000000198e-05, 2.5429999999999897e-05, 1.969500000000013e-05, 2.6374999999998622e-05, 2.5443999999999467e-05, 2.54169999999998e-05, 1.9694000000000655e-05, 2.543099999999937e-05, 2.3499999999999216e-05, 2.444499999999794e-05, 2.256900000000006e-05, 2.3472000000000076e-05, 2.062499999999981e-05, 2.161099999999777e-05, 2.354100000000192e-05, 2.065299999999895e-05, 2.0651999999999476e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.637500000000209e-05, 2.161099999999777e-05, 2.3500000000002685e-05, 2.161099999999777e-05, 2.2598000000002144e-05, 2.068099999999809e-05, 2.3499999999999216e-05, 2.163900000000038e-05, 2.1611999999997245e-05, 2.3513999999998786e-05, 2.3527999999998356e-05, 2.640299999999776e-05, 2.066699999999852e-05, 2.0637999999999906e-05, 2.252700000000135e-05, 1.9708000000000225e-05, 2.5458000000002506e-05, 2.445900000000098e-05, 2.7333000000000912e-05, 2.3512999999999312e-05, 2.1598000000001144e-05, 2.3499999999999216e-05, 2.158299999999863e-05, 2.255500000000049e-05, 2.5402000000000757e-05, 2.065299999999895e-05, 2.5471999999998607e-05, 2.355500000000149e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.859" endtime="20201112 09:44:05.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.854" endtime="20201112 09:44:05.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.864" endtime="20201112 09:44:05.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.868" endtime="20201112 09:44:05.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.867" endtime="20201112 09:44:05.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.863" endtime="20201112 09:44:05.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.467" endtime="20201112 09:44:05.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.466" endtime="20201112 09:44:05.889"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.898" endtime="20201112 09:44:05.919"></status>
</kw>
<msg timestamp="20201112 09:44:05.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.897" endtime="20201112 09:44:05.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.921" endtime="20201112 09:44:05.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.923" endtime="20201112 09:44:05.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.894" endtime="20201112 09:44:05.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.892" endtime="20201112 09:44:05.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.933" endtime="20201112 09:44:06.220"></status>
</kw>
<msg timestamp="20201112 09:44:06.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.931" endtime="20201112 09:44:06.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.225" endtime="20201112 09:44:06.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.233" endtime="20201112 09:44:06.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.928" endtime="20201112 09:44:06.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.927" endtime="20201112 09:44:06.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.240" level="INFO">${RESULT} = [{'time': 0.023803792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.023833667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.237" endtime="20201112 09:44:06.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.254" level="INFO">${ACCURACY} = {'diff': [2.162500000000081e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.2555999999999965e-05, 2.066699999999852e-05, 2.063900000000285e-05, 2.3514000000002255e-05, 2.444499999999794e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:44:06.241" endtime="20201112 09:44:06.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.259" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.257" endtime="20201112 09:44:06.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.261" level="INFO">VALUE: [2.162500000000081e-05, 2.4486000000000646e-05, 2.3499999999999216e-05, 2.2555999999999965e-05, 2.066699999999852e-05, 2.063900000000285e-05, 2.3514000000002255e-05, 2.444499999999794e-05, 2.255500000000049e-05, 2.638900000000166e-05, 2.3542000000001395e-05, 1.968100000000056e-05, 2.161100000000124e-05, 2.643100000000037e-05, 1.9708000000000225e-05, 2.3513999999998786e-05, 2.062499999999981e-05, 2.351300000000278e-05, 2.1570000000002004e-05, 2.256900000000006e-05, 2.163900000000038e-05, 2.643100000000037e-05, 2.3513999999998786e-05, 2.543099999999937e-05, 2.255500000000049e-05, 2.5416000000000327e-05, 2.6360999999999052e-05, 2.543100000000284e-05, 2.640300000000123e-05, 2.537500000000109e-05, 2.6374999999998622e-05, 2.3513999999998786e-05, 2.5500000000001216e-05, 2.4472000000001076e-05, 2.2514000000001255e-05, 2.159700000000167e-05, 2.15969999999982e-05, 1.969500000000013e-05, 2.6348000000002425e-05, 2.4458000000001506e-05, 2.2541999999996926e-05, 2.5443999999999467e-05, 2.5416000000000327e-05, 2.636100000000252e-05, 2.162500000000081e-05, 2.4458000000001506e-05, 2.2540999999997452e-05, 2.3528000000001825e-05, 2.2499999999998216e-05, 1.9679999999997616e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.260" endtime="20201112 09:44:06.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.255" endtime="20201112 09:44:06.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.272" endtime="20201112 09:44:06.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.275" endtime="20201112 09:44:06.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.274" endtime="20201112 09:44:06.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.270" endtime="20201112 09:44:06.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.890" endtime="20201112 09:44:06.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.890" endtime="20201112 09:44:06.296"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.305" endtime="20201112 09:44:06.327"></status>
</kw>
<msg timestamp="20201112 09:44:06.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.304" endtime="20201112 09:44:06.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.328" endtime="20201112 09:44:06.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.331" endtime="20201112 09:44:06.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.301" endtime="20201112 09:44:06.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.299" endtime="20201112 09:44:06.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.340" endtime="20201112 09:44:06.627"></status>
</kw>
<msg timestamp="20201112 09:44:06.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.339" endtime="20201112 09:44:06.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.632" endtime="20201112 09:44:06.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.640" endtime="20201112 09:44:06.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.336" endtime="20201112 09:44:06.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.334" endtime="20201112 09:44:06.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.647" level="INFO">${RESULT} = [{'time': 0.023532444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3596999999999386e-05, 'source_diff': 4.3596999999999386e-05}, {'time': 0.023593694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:06.644" endtime="20201112 09:44:06.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.661" level="INFO">${ACCURACY} = {'diff': [4.3596999999999386e-05, 5.6999999999998024e-05, 5.2221999999997604e-05, 5.312499999999762e-05, 5.31669999999998e-05, 5.126299999999931e-05, 5.218100000000184e-05, 5.5151999999999285e-05, 5.6...</msg>
<status status="PASS" starttime="20201112 09:44:06.648" endtime="20201112 09:44:06.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.666" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.665" endtime="20201112 09:44:06.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.669" level="INFO">VALUE: [4.3596999999999386e-05, 5.6999999999998024e-05, 5.2221999999997604e-05, 5.312499999999762e-05, 5.31669999999998e-05, 5.126299999999931e-05, 5.218100000000184e-05, 5.5151999999999285e-05, 5.6986000000001924e-05, 5.131999999999706e-05, 5.123599999999964e-05, 5.219400000000193e-05, 5.029200000000039e-05, 5.508300000000091e-05, 5.415300000000123e-05, 5.60549999999993e-05, 5.604099999999973e-05, 5.6055999999998773e-05, 5.508300000000091e-05, 5.2221999999997604e-05, 5.7013999999997594e-05, 5.6041999999999204e-05, 5.413899999999819e-05, 5.406900000000034e-05, 5.6985999999998455e-05, 5.215299999999923e-05, 5.511100000000005e-05, 5.5985999999997454e-05, 5.505500000000177e-05, 5.411100000000252e-05, 5.7000000000001494e-05, 5.6014000000000064e-05, 5.213899999999966e-05, 5.7014000000001064e-05, 5.222300000000055e-05, 5.6041999999999204e-05, 5.604200000000267e-05, 5.6986000000001924e-05, 5.030599999999996e-05, 5.6027999999999634e-05, 5.513899999999919e-05, 5.318099999999937e-05, 5.319400000000293e-05, 5.6055999999998773e-05, 5.6055999999998773e-05, 5.508299999999744e-05, 5.604099999999973e-05, 5.50549999999983e-05, 5.5986000000000924e-05, 5.3193999999999464e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.667" endtime="20201112 09:44:06.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.662" endtime="20201112 09:44:06.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.673" endtime="20201112 09:44:06.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.676" endtime="20201112 09:44:06.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.675" endtime="20201112 09:44:06.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.671" endtime="20201112 09:44:06.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.297" endtime="20201112 09:44:06.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.297" endtime="20201112 09:44:06.697"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.707" endtime="20201112 09:44:06.728"></status>
</kw>
<msg timestamp="20201112 09:44:06.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.705" endtime="20201112 09:44:06.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.730" endtime="20201112 09:44:06.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.732" endtime="20201112 09:44:06.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.702" endtime="20201112 09:44:06.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.700" endtime="20201112 09:44:06.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.742" endtime="20201112 09:44:07.029"></status>
</kw>
<msg timestamp="20201112 09:44:07.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024318125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.740" endtime="20201112 09:44:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024318125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.034" endtime="20201112 09:44:07.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.042" endtime="20201112 09:44:07.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.738" endtime="20201112 09:44:07.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.736" endtime="20201112 09:44:07.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.049" level="INFO">${RESULT} = [{'time': 0.024361708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3582999999999816e-05, 'source_diff': 4.3582999999999816e-05}, {'time': 0.024422764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:07.046" endtime="20201112 09:44:07.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.063" level="INFO">${ACCURACY} = {'diff': [4.3582999999999816e-05, 5.6041999999999204e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.315300000000023e-05, 5.124999999999921e-05, 5.702700000000116e-05, 5.611200000000052e-05, 5....</msg>
<status status="PASS" starttime="20201112 09:44:07.050" endtime="20201112 09:44:07.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.068" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.067" endtime="20201112 09:44:07.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.070" level="INFO">VALUE: [4.3582999999999816e-05, 5.6041999999999204e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.315300000000023e-05, 5.124999999999921e-05, 5.702700000000116e-05, 5.611200000000052e-05, 5.406900000000034e-05, 5.408299999999991e-05, 5.507000000000081e-05, 5.512499999999962e-05, 5.4180000000000894e-05, 5.6985999999998455e-05, 5.509799999999995e-05, 5.219500000000141e-05, 5.409699999999948e-05, 5.6041999999999204e-05, 5.031999999999953e-05, 5.225000000000021e-05, 5.691700000000008e-05, 5.123599999999964e-05, 5.222300000000055e-05, 5.319499999999894e-05, 5.027700000000135e-05, 5.3179999999999894e-05, 5.6041999999999204e-05, 5.6041999999999204e-05, 5.611199999999705e-05, 5.13470000000002e-05, 5.126399999999878e-05, 5.506899999999787e-05, 5.124999999999921e-05, 5.509700000000048e-05, 5.4194000000000464e-05, 5.3179999999999894e-05, 5.508300000000091e-05, 5.7069999999999343e-05, 5.508300000000091e-05, 5.4166000000001324e-05, 5.4180000000000894e-05, 5.412500000000209e-05, 5.315300000000023e-05, 5.318100000000284e-05, 5.3179999999999894e-05, 5.319499999999894e-05, 5.226399999999978e-05, 5.509700000000048e-05, 5.325000000000121e-05, 5.611099999999758e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.069" endtime="20201112 09:44:07.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.064" endtime="20201112 09:44:07.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.074" endtime="20201112 09:44:07.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.078" endtime="20201112 09:44:07.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.076" endtime="20201112 09:44:07.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.072" endtime="20201112 09:44:07.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.698" endtime="20201112 09:44:07.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.698" endtime="20201112 09:44:07.099"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.109" endtime="20201112 09:44:07.130"></status>
</kw>
<msg timestamp="20201112 09:44:07.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.108" endtime="20201112 09:44:07.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.132" endtime="20201112 09:44:07.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.134" endtime="20201112 09:44:07.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.105" endtime="20201112 09:44:07.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.102" endtime="20201112 09:44:07.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.144" endtime="20201112 09:44:07.431"></status>
</kw>
<msg timestamp="20201112 09:44:07.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024843403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:07.142" endtime="20201112 09:44:07.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024843403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:07.435" endtime="20201112 09:44:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.444" endtime="20201112 09:44:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.139" endtime="20201112 09:44:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.138" endtime="20201112 09:44:07.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.451" level="INFO">${RESULT} = [{'time': 0.024886, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2596999999998386e-05, 'source_diff': 4.2596999999998386e-05}, {'time': 0.024946597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:07.447" endtime="20201112 09:44:07.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.464" level="INFO">${ACCURACY} = {'diff': [4.2596999999998386e-05, 5.412500000000209e-05, 5.4999999999999494e-05, 5.12080000000005e-05, 5.509700000000048e-05, 5.7028000000000634e-05, 5.3193999999999464e-05, 5.108399999999985e-05, 5.6...</msg>
<status status="PASS" starttime="20201112 09:44:07.452" endtime="20201112 09:44:07.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.469" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.468" endtime="20201112 09:44:07.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.472" level="INFO">VALUE: [4.2596999999998386e-05, 5.412500000000209e-05, 5.4999999999999494e-05, 5.12080000000005e-05, 5.509700000000048e-05, 5.7028000000000634e-05, 5.3193999999999464e-05, 5.108399999999985e-05, 5.694499999999922e-05, 5.126399999999878e-05, 5.6986000000001924e-05, 5.408299999999991e-05, 5.122200000000007e-05, 5.513899999999919e-05, 5.605600000000224e-05, 5.691700000000008e-05, 5.505599999999777e-05, 5.2138000000000184e-05, 5.309699999999848e-05, 5.124999999999921e-05, 5.5986000000000924e-05, 5.312500000000109e-05, 5.413900000000166e-05, 5.318099999999937e-05, 5.4027999999997633e-05, 5.2193999999998464e-05, 5.7027999999997164e-05, 5.3166000000000324e-05, 5.118100000000084e-05, 5.6957999999999315e-05, 5.6041999999999204e-05, 5.693099999999965e-05, 5.411099999999905e-05, 5.6999999999998024e-05, 5.502699999999916e-05, 5.026400000000125e-05, 5.3179999999999894e-05, 5.411099999999905e-05, 5.227799999999935e-05, 5.419499999999994e-05, 5.691700000000008e-05, 5.222300000000055e-05, 5.506899999999787e-05, 5.222200000000107e-05, 5.1165999999998324e-05, 5.508400000000038e-05, 5.031900000000006e-05, 5.690300000000051e-05, 5.223600000000064e-05, 5.127799999999835e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.470" endtime="20201112 09:44:07.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.465" endtime="20201112 09:44:07.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.476" endtime="20201112 09:44:07.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.479" endtime="20201112 09:44:07.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.478" endtime="20201112 09:44:07.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.474" endtime="20201112 09:44:07.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.100" endtime="20201112 09:44:07.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.100" endtime="20201112 09:44:07.500"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.509" endtime="20201112 09:44:07.533"></status>
</kw>
<msg timestamp="20201112 09:44:07.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.508" endtime="20201112 09:44:07.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.534" endtime="20201112 09:44:07.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.537" endtime="20201112 09:44:07.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.505" endtime="20201112 09:44:07.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.503" endtime="20201112 09:44:07.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.546" endtime="20201112 09:44:07.836"></status>
</kw>
<msg timestamp="20201112 09:44:07.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.545" endtime="20201112 09:44:07.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.840" endtime="20201112 09:44:07.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.849" endtime="20201112 09:44:07.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.542" endtime="20201112 09:44:07.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.540" endtime="20201112 09:44:07.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.856" level="INFO">${RESULT} = [{'time': 0.025440139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.74030000000006e-05, 'source_diff': 6.74030000000006e-05}, {'time': 0.025501181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:07.852" endtime="20201112 09:44:07.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.870" level="INFO">${ACCURACY} = {'diff': [6.74030000000006e-05, 5.418100000000037e-05, 5.695899999999879e-05, 5.605500000000277e-05, 5.607000000000181e-05, 5.030599999999996e-05, 5.68749999999979e-05, 5.033299999999963e-05, 5.694499...</msg>
<status status="PASS" starttime="20201112 09:44:07.857" endtime="20201112 09:44:07.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.874" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.873" endtime="20201112 09:44:07.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.877" level="INFO">VALUE: [6.74030000000006e-05, 5.418100000000037e-05, 5.695899999999879e-05, 5.605500000000277e-05, 5.607000000000181e-05, 5.030599999999996e-05, 5.68749999999979e-05, 5.033299999999963e-05, 5.694499999999922e-05, 5.312499999999762e-05, 5.688900000000094e-05, 5.033299999999963e-05, 5.124999999999921e-05, 5.3179999999999894e-05, 5.402700000000163e-05, 5.126399999999878e-05, 5.608400000000138e-05, 5.509700000000048e-05, 5.413899999999819e-05, 5.490299999999851e-05, 5.031999999999953e-05, 5.512499999999962e-05, 5.227799999999935e-05, 5.126400000000225e-05, 5.687500000000137e-05, 5.03330000000031e-05, 5.701300000000159e-05, 5.60280000000031e-05, 5.312500000000109e-05, 5.223600000000064e-05, 5.413900000000166e-05, 5.306899999999934e-05, 5.22080000000015e-05, 5.412500000000209e-05, 5.3152000000000754e-05, 5.495900000000026e-05, 5.130599999999749e-05, 5.607000000000181e-05, 5.225000000000021e-05, 5.593099999999865e-05, 5.126399999999878e-05, 5.125000000000268e-05, 5.6027999999999634e-05, 5.113900000000213e-05, 5.318099999999937e-05, 5.306900000000281e-05, 5.036099999999877e-05, 5.318099999999937e-05, 5.313900000000066e-05, 5.126399999999878e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.876" endtime="20201112 09:44:07.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.871" endtime="20201112 09:44:07.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.881" endtime="20201112 09:44:07.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.885" endtime="20201112 09:44:07.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.883" endtime="20201112 09:44:07.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.879" endtime="20201112 09:44:07.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.501" endtime="20201112 09:44:07.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.501" endtime="20201112 09:44:07.906"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.915" endtime="20201112 09:44:07.934"></status>
</kw>
<msg timestamp="20201112 09:44:07.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.913" endtime="20201112 09:44:07.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.936" endtime="20201112 09:44:07.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.939" endtime="20201112 09:44:07.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.910" endtime="20201112 09:44:07.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.908" endtime="20201112 09:44:07.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.948" endtime="20201112 09:44:08.236"></status>
</kw>
<msg timestamp="20201112 09:44:08.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.947" endtime="20201112 09:44:08.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.241" endtime="20201112 09:44:08.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.249" endtime="20201112 09:44:08.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.944" endtime="20201112 09:44:08.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.942" endtime="20201112 09:44:08.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.257" level="INFO">${RESULT} = [{'time': 0.022057458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.269399999999856e-05, 'source_diff': 6.269399999999856e-05}, {'time': 0.022117819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.253" endtime="20201112 09:44:08.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.270" level="INFO">${ACCURACY} = {'diff': [6.269399999999856e-05, 5.02079999999995e-05, 5.124999999999921e-05, 5.697300000000183e-05, 5.225000000000021e-05, 5.309699999999848e-05, 5.318100000000284e-05, 5.508300000000091e-05, 5.31660...</msg>
<status status="PASS" starttime="20201112 09:44:08.258" endtime="20201112 09:44:08.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.275" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.274" endtime="20201112 09:44:08.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.278" level="INFO">VALUE: [6.269399999999856e-05, 5.02079999999995e-05, 5.124999999999921e-05, 5.697300000000183e-05, 5.225000000000021e-05, 5.309699999999848e-05, 5.318100000000284e-05, 5.508300000000091e-05, 5.3166000000000324e-05, 5.4999999999999494e-05, 5.319499999999894e-05, 5.3179999999999894e-05, 5.212500000000009e-05, 5.608300000000191e-05, 5.706899999999987e-05, 5.211199999999999e-05, 5.606899999999887e-05, 5.404200000000067e-05, 5.3207999999999034e-05, 5.213899999999966e-05, 5.412500000000209e-05, 5.312500000000109e-05, 5.127800000000182e-05, 5.5027999999998634e-05, 5.509700000000048e-05, 5.308399999999838e-05, 5.7069999999999343e-05, 5.415300000000123e-05, 5.5971999999997885e-05, 5.226399999999978e-05, 5.129199999999792e-05, 5.4999999999999494e-05, 5.7028000000000634e-05, 5.3166000000000324e-05, 5.118000000000136e-05, 5.123599999999964e-05, 5.212500000000009e-05, 5.6055999999998773e-05, 5.690300000000051e-05, 5.22080000000015e-05, 5.322300000000155e-05, 5.1179999999997894e-05, 5.60549999999993e-05, 5.126399999999878e-05, 5.587500000000037e-05, 5.411200000000199e-05, 5.408399999999938e-05, 5.691700000000008e-05, 5.609800000000095e-05, 5.127800000000182e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.276" endtime="20201112 09:44:08.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.271" endtime="20201112 09:44:08.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.282" endtime="20201112 09:44:08.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.285" endtime="20201112 09:44:08.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.284" endtime="20201112 09:44:08.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.280" endtime="20201112 09:44:08.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.907" endtime="20201112 09:44:08.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.906" endtime="20201112 09:44:08.306"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.316" endtime="20201112 09:44:08.336"></status>
</kw>
<msg timestamp="20201112 09:44:08.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.314" endtime="20201112 09:44:08.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.338" endtime="20201112 09:44:08.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.340" endtime="20201112 09:44:08.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.311" endtime="20201112 09:44:08.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.309" endtime="20201112 09:44:08.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.350" endtime="20201112 09:44:08.638"></status>
</kw>
<msg timestamp="20201112 09:44:08.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.348" endtime="20201112 09:44:08.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.642" endtime="20201112 09:44:08.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.651" endtime="20201112 09:44:08.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.345" endtime="20201112 09:44:08.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.343" endtime="20201112 09:44:08.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.658" level="INFO">${RESULT} = [{'time': 0.023160861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.272200000000198e-05, 'source_diff': 4.272200000000198e-05}, {'time': 0.023222319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.654" endtime="20201112 09:44:08.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.672" level="INFO">${ACCURACY} = {'diff': [4.272200000000198e-05, 5.3180000000003363e-05, 5.023599999999864e-05, 5.6971999999998885e-05, 5.3207999999999034e-05, 5.511100000000005e-05, 5.50280000000021e-05, 5.125000000000268e-05, 5.41...</msg>
<status status="PASS" starttime="20201112 09:44:08.659" endtime="20201112 09:44:08.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.677" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.675" endtime="20201112 09:44:08.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.679" level="INFO">VALUE: [4.272200000000198e-05, 5.3180000000003363e-05, 5.023599999999864e-05, 5.6971999999998885e-05, 5.3207999999999034e-05, 5.511100000000005e-05, 5.50280000000021e-05, 5.125000000000268e-05, 5.41670000000008e-05, 5.213899999999966e-05, 5.602700000000016e-05, 5.223600000000064e-05, 5.2151999999999754e-05, 5.412499999999862e-05, 5.2207999999998034e-05, 5.412500000000209e-05, 5.511100000000005e-05, 5.5971999999997885e-05, 5.126299999999931e-05, 5.413899999999819e-05, 5.6000000000000494e-05, 5.130600000000096e-05, 5.030500000000049e-05, 5.219500000000141e-05, 5.4985999999999924e-05, 5.315300000000023e-05, 5.6027999999999634e-05, 5.213899999999966e-05, 5.123599999999964e-05, 5.129099999999845e-05, 5.59870000000004e-05, 5.40410000000012e-05, 5.226399999999978e-05, 5.211100000000052e-05, 5.507000000000081e-05, 5.129100000000192e-05, 5.5971999999997885e-05, 5.225000000000021e-05, 5.509700000000048e-05, 5.6041999999999204e-05, 5.40280000000011e-05, 5.213900000000313e-05, 5.6041999999999204e-05, 5.415300000000123e-05, 5.223600000000064e-05, 5.412500000000209e-05, 5.118000000000136e-05, 5.3193999999999464e-05, 5.6041999999999204e-05, 5.323700000000112e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.678" endtime="20201112 09:44:08.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.673" endtime="20201112 09:44:08.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.683" endtime="20201112 09:44:08.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.687" endtime="20201112 09:44:08.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.685" endtime="20201112 09:44:08.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.681" endtime="20201112 09:44:08.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.307" endtime="20201112 09:44:08.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.307" endtime="20201112 09:44:08.708"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.718" endtime="20201112 09:44:08.738"></status>
</kw>
<msg timestamp="20201112 09:44:08.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.716" endtime="20201112 09:44:08.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.739" endtime="20201112 09:44:08.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.742" endtime="20201112 09:44:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.713" endtime="20201112 09:44:08.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.711" endtime="20201112 09:44:08.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.751" endtime="20201112 09:44:09.040"></status>
</kw>
<msg timestamp="20201112 09:44:09.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023074431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.750" endtime="20201112 09:44:09.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023074431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.044" endtime="20201112 09:44:09.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.052" endtime="20201112 09:44:09.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.747" endtime="20201112 09:44:09.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.745" endtime="20201112 09:44:09.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.059" level="INFO">${RESULT} = [{'time': 0.023074431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.976399999999769e-05, 'source_diff': 3.976399999999769e-05}, {'time': 0.023135472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.056" endtime="20201112 09:44:09.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.073" level="INFO">${ACCURACY} = {'diff': [3.976399999999769e-05, 5.218000000000236e-05, 5.126399999999878e-05, 5.508400000000038e-05, 5.315300000000023e-05, 5.505599999999777e-05, 5.223600000000064e-05, 5.3138000000001184e-05, 5.508...</msg>
<status status="PASS" starttime="20201112 09:44:09.060" endtime="20201112 09:44:09.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.078" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.077" endtime="20201112 09:44:09.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.080" level="INFO">VALUE: [3.976399999999769e-05, 5.218000000000236e-05, 5.126399999999878e-05, 5.508400000000038e-05, 5.315300000000023e-05, 5.505599999999777e-05, 5.223600000000064e-05, 5.3138000000001184e-05, 5.508300000000091e-05, 5.031999999999953e-05, 5.605500000000277e-05, 5.409699999999948e-05, 5.029200000000039e-05, 5.413900000000166e-05, 5.412499999999862e-05, 5.2221999999997604e-05, 5.5971999999997885e-05, 5.124999999999921e-05, 5.2221999999997604e-05, 5.6041999999999204e-05, 5.125000000000268e-05, 5.605600000000224e-05, 5.413900000000166e-05, 5.31669999999998e-05, 5.511100000000005e-05, 5.512499999999962e-05, 5.222200000000107e-05, 5.508400000000038e-05, 5.7013999999997594e-05, 5.606899999999887e-05, 5.60549999999993e-05, 5.506900000000134e-05, 5.4151999999998285e-05, 5.6027999999999634e-05, 5.412499999999862e-05, 5.222200000000107e-05, 5.31669999999998e-05, 5.222300000000055e-05, 5.124999999999921e-05, 5.413899999999819e-05, 5.129100000000192e-05, 5.6972000000002354e-05, 5.508400000000038e-05, 5.506900000000134e-05, 5.225000000000021e-05, 5.318100000000284e-05, 5.318100000000284e-05, 5.508300000000091e-05, 5.023599999999864e-05, 5.506900000000134e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.079" endtime="20201112 09:44:09.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.074" endtime="20201112 09:44:09.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.084" endtime="20201112 09:44:09.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.088" endtime="20201112 09:44:09.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.086" endtime="20201112 09:44:09.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.082" endtime="20201112 09:44:09.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.709" endtime="20201112 09:44:09.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.709" endtime="20201112 09:44:09.109"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.118" endtime="20201112 09:44:09.142"></status>
</kw>
<msg timestamp="20201112 09:44:09.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.116" endtime="20201112 09:44:09.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.143" endtime="20201112 09:44:09.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.146" endtime="20201112 09:44:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.113" endtime="20201112 09:44:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.111" endtime="20201112 09:44:09.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.156" endtime="20201112 09:44:09.443"></status>
</kw>
<msg timestamp="20201112 09:44:09.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02456275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024605319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:09.154" endtime="20201112 09:44:09.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02456275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024605319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:09.447" endtime="20201112 09:44:09.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.456" endtime="20201112 09:44:09.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.151" endtime="20201112 09:44:09.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.149" endtime="20201112 09:44:09.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.463" level="INFO">${RESULT} = [{'time': 0.024605319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2568999999999246e-05, 'source_diff': 4.2568999999999246e-05}, {'time': 0.024666472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:09.459" endtime="20201112 09:44:09.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.476" level="INFO">${ACCURACY} = {'diff': [4.2568999999999246e-05, 5.127799999999835e-05, 5.2193999999998464e-05, 5.413899999999819e-05, 5.6957999999999315e-05, 5.3166000000000324e-05, 5.604200000000267e-05, 5.5944000000002214e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:44:09.464" endtime="20201112 09:44:09.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.481" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.480" endtime="20201112 09:44:09.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.483" level="INFO">VALUE: [4.2568999999999246e-05, 5.127799999999835e-05, 5.2193999999998464e-05, 5.413899999999819e-05, 5.6957999999999315e-05, 5.3166000000000324e-05, 5.604200000000267e-05, 5.5944000000002214e-05, 5.124999999999921e-05, 5.513899999999919e-05, 5.5013999999999064e-05, 5.318099999999937e-05, 5.6971999999998885e-05, 5.508400000000038e-05, 5.412499999999862e-05, 5.223700000000012e-05, 5.318099999999937e-05, 5.400000000000196e-05, 5.60549999999993e-05, 5.029199999999692e-05, 5.126299999999931e-05, 5.319499999999894e-05, 5.40419999999972e-05, 5.123599999999964e-05, 5.6027999999999634e-05, 5.116700000000127e-05, 5.415300000000123e-05, 5.604200000000267e-05, 5.509700000000048e-05, 5.226399999999978e-05, 5.3179999999999894e-05, 5.4985999999999924e-05, 5.604200000000267e-05, 5.124999999999921e-05, 5.690299999999704e-05, 5.3193999999999464e-05, 5.516699999999833e-05, 5.4013999999998064e-05, 5.3193999999999464e-05, 5.408400000000285e-05, 5.506899999999787e-05, 5.129100000000192e-05, 5.127799999999835e-05, 5.223600000000064e-05, 5.1165999999998324e-05, 5.127800000000182e-05, 5.609700000000148e-05, 5.134799999999967e-05, 5.208400000000085e-05, 5.604099999999973e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.482" endtime="20201112 09:44:09.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.477" endtime="20201112 09:44:09.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.487" endtime="20201112 09:44:09.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.491" endtime="20201112 09:44:09.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.489" endtime="20201112 09:44:09.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.486" endtime="20201112 09:44:09.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.110" endtime="20201112 09:44:09.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.109" endtime="20201112 09:44:09.512"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.521" endtime="20201112 09:44:09.542"></status>
</kw>
<msg timestamp="20201112 09:44:09.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.519" endtime="20201112 09:44:09.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.544" endtime="20201112 09:44:09.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.546" endtime="20201112 09:44:09.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.517" endtime="20201112 09:44:09.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.515" endtime="20201112 09:44:09.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.556" endtime="20201112 09:44:09.844"></status>
</kw>
<msg timestamp="20201112 09:44:09.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.554" endtime="20201112 09:44:09.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.848" endtime="20201112 09:44:09.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.857" endtime="20201112 09:44:09.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.551" endtime="20201112 09:44:09.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.550" endtime="20201112 09:44:09.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.863" level="INFO">${RESULT} = [{'time': 0.023297944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.170800000000141e-05, 'source_diff': 4.170800000000141e-05}, {'time': 0.023358736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.860" endtime="20201112 09:44:09.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.877" level="INFO">${ACCURACY} = {'diff': [4.170800000000141e-05, 5.027800000000082e-05, 5.5041999999998203e-05, 5.3179999999999894e-05, 5.126400000000225e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.315300000000023e-05, 5.59...</msg>
<status status="PASS" starttime="20201112 09:44:09.865" endtime="20201112 09:44:09.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.882" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.881" endtime="20201112 09:44:09.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.885" level="INFO">VALUE: [4.170800000000141e-05, 5.027800000000082e-05, 5.5041999999998203e-05, 5.3179999999999894e-05, 5.126400000000225e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.315300000000023e-05, 5.5986000000000924e-05, 5.7000000000001494e-05, 5.21530000000027e-05, 5.50280000000021e-05, 5.604099999999973e-05, 5.122200000000007e-05, 5.118099999999737e-05, 5.223700000000012e-05, 5.408299999999991e-05, 5.5027999999998634e-05, 5.218100000000184e-05, 5.312500000000109e-05, 5.3249999999997744e-05, 5.315300000000023e-05, 5.695899999999879e-05, 5.223600000000064e-05, 5.412499999999862e-05, 5.505600000000124e-05, 5.312500000000109e-05, 5.509700000000048e-05, 5.129200000000139e-05, 5.508300000000091e-05, 5.406999999999981e-05, 5.22080000000015e-05, 5.415299999999776e-05, 5.406900000000034e-05, 5.21669999999988e-05, 5.126399999999878e-05, 5.509700000000048e-05, 5.3221999999998604e-05, 5.327800000000035e-05, 5.219400000000193e-05, 5.409699999999948e-05, 5.223700000000012e-05, 5.6000000000000494e-05, 5.406999999999981e-05, 5.309700000000195e-05, 5.604200000000267e-05, 5.2193999999998464e-05, 5.411099999999905e-05, 5.311099999999805e-05, 5.408299999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.883" endtime="20201112 09:44:09.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.878" endtime="20201112 09:44:09.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.888" endtime="20201112 09:44:09.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.892" endtime="20201112 09:44:09.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.890" endtime="20201112 09:44:09.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.887" endtime="20201112 09:44:09.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.513" endtime="20201112 09:44:09.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.512" endtime="20201112 09:44:09.913"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.922" endtime="20201112 09:44:09.944"></status>
</kw>
<msg timestamp="20201112 09:44:09.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.921" endtime="20201112 09:44:09.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.945" endtime="20201112 09:44:09.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.948" endtime="20201112 09:44:09.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.918" endtime="20201112 09:44:09.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.916" endtime="20201112 09:44:09.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.958" endtime="20201112 09:44:10.245"></status>
</kw>
<msg timestamp="20201112 09:44:10.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.956" endtime="20201112 09:44:10.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.249" endtime="20201112 09:44:10.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.258" endtime="20201112 09:44:10.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.953" endtime="20201112 09:44:10.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.951" endtime="20201112 09:44:10.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.265" level="INFO">${RESULT} = [{'time': 0.023974569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972200000000245e-05, 'source_diff': 3.972200000000245e-05}, {'time': 0.024035139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.261" endtime="20201112 09:44:10.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.279" level="INFO">${ACCURACY} = {'diff': [3.972200000000245e-05, 5.408299999999991e-05, 5.508400000000038e-05, 5.2179999999998894e-05, 5.122200000000007e-05, 5.129200000000139e-05, 5.41670000000008e-05, 5.223700000000012e-05, 5.3111...</msg>
<status status="PASS" starttime="20201112 09:44:10.266" endtime="20201112 09:44:10.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.283" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.282" endtime="20201112 09:44:10.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.286" level="INFO">VALUE: [3.972200000000245e-05, 5.408299999999991e-05, 5.508400000000038e-05, 5.2179999999998894e-05, 5.122200000000007e-05, 5.129200000000139e-05, 5.41670000000008e-05, 5.223700000000012e-05, 5.311100000000152e-05, 5.127700000000235e-05, 5.3166000000000324e-05, 5.6027999999999634e-05, 5.406999999999981e-05, 5.1193999999997464e-05, 5.318099999999937e-05, 5.126399999999878e-05, 5.5027999999998634e-05, 5.405500000000077e-05, 5.413899999999819e-05, 5.6027999999999634e-05, 5.312500000000109e-05, 5.313900000000066e-05, 5.6986000000001924e-05, 5.60280000000031e-05, 5.226399999999978e-05, 5.508300000000091e-05, 5.6986000000001924e-05, 5.5041999999998203e-05, 5.500000000000296e-05, 5.506900000000134e-05, 5.60549999999993e-05, 5.123599999999964e-05, 5.402700000000163e-05, 5.313899999999719e-05, 5.605500000000277e-05, 5.319499999999894e-05, 5.313900000000066e-05, 5.213899999999966e-05, 5.030599999999996e-05, 5.4152000000001754e-05, 5.125000000000268e-05, 5.2235999999997174e-05, 5.3179999999999894e-05, 5.220899999999751e-05, 5.222299999999708e-05, 5.120899999999998e-05, 5.415300000000123e-05, 5.12080000000005e-05, 5.505600000000124e-05, 5.029100000000092e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.284" endtime="20201112 09:44:10.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.279" endtime="20201112 09:44:10.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.290" endtime="20201112 09:44:10.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.293" endtime="20201112 09:44:10.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.292" endtime="20201112 09:44:10.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.288" endtime="20201112 09:44:10.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.914" endtime="20201112 09:44:10.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.914" endtime="20201112 09:44:10.314"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.323" endtime="20201112 09:44:10.345"></status>
</kw>
<msg timestamp="20201112 09:44:10.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.322" endtime="20201112 09:44:10.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.347" endtime="20201112 09:44:10.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.350" endtime="20201112 09:44:10.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.319" endtime="20201112 09:44:10.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.317" endtime="20201112 09:44:10.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.359" endtime="20201112 09:44:10.648"></status>
</kw>
<msg timestamp="20201112 09:44:10.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024803653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.358" endtime="20201112 09:44:10.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024756236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024803653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.652" endtime="20201112 09:44:10.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.661" endtime="20201112 09:44:10.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.355" endtime="20201112 09:44:10.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.353" endtime="20201112 09:44:10.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.668" level="INFO">${RESULT} = [{'time': 0.024803653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.741699999999752e-05, 'source_diff': 4.741699999999752e-05}, {'time': 0.024864472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.664" endtime="20201112 09:44:10.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.681" level="INFO">${ACCURACY} = {'diff': [4.741699999999752e-05, 5.033299999999963e-05, 5.125000000000268e-05, 5.315300000000023e-05, 5.3166000000000324e-05, 5.506900000000134e-05, 5.127800000000182e-05, 5.319499999999894e-05, 5.413...</msg>
<status status="PASS" starttime="20201112 09:44:10.669" endtime="20201112 09:44:10.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.686" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.685" endtime="20201112 09:44:10.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.689" level="INFO">VALUE: [4.741699999999752e-05, 5.033299999999963e-05, 5.125000000000268e-05, 5.315300000000023e-05, 5.3166000000000324e-05, 5.506900000000134e-05, 5.127800000000182e-05, 5.319499999999894e-05, 5.413900000000166e-05, 5.411200000000199e-05, 5.315300000000023e-05, 5.506899999999787e-05, 5.508300000000091e-05, 5.3207999999999034e-05, 5.318100000000284e-05, 5.126399999999878e-05, 5.325000000000121e-05, 5.223600000000064e-05, 5.222300000000055e-05, 5.123599999999964e-05, 5.31669999999998e-05, 5.222200000000107e-05, 5.508300000000091e-05, 5.506899999999787e-05, 5.12080000000005e-05, 5.507000000000081e-05, 5.126400000000225e-05, 5.318100000000284e-05, 5.412499999999862e-05, 5.3179999999999894e-05, 5.60549999999993e-05, 5.7014000000001064e-05, 5.502699999999916e-05, 5.509700000000048e-05, 5.3193999999999464e-05, 5.6986000000001924e-05, 5.315300000000023e-05, 5.418100000000037e-05, 5.12080000000005e-05, 5.126300000000278e-05, 5.315300000000023e-05, 5.025000000000168e-05, 5.506899999999787e-05, 5.031999999999953e-05, 5.2193999999998464e-05, 5.411199999999852e-05, 5.127799999999835e-05, 5.411100000000252e-05, 5.60549999999993e-05, 5.509799999999995e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.687" endtime="20201112 09:44:10.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.682" endtime="20201112 09:44:10.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.693" endtime="20201112 09:44:10.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.696" endtime="20201112 09:44:10.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.695" endtime="20201112 09:44:10.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.691" endtime="20201112 09:44:10.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.315" endtime="20201112 09:44:10.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.315" endtime="20201112 09:44:10.717"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.726" endtime="20201112 09:44:10.748"></status>
</kw>
<msg timestamp="20201112 09:44:10.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.725" endtime="20201112 09:44:10.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.750" endtime="20201112 09:44:10.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.752" endtime="20201112 09:44:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.722" endtime="20201112 09:44:10.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.720" endtime="20201112 09:44:10.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.762" endtime="20201112 09:44:11.050"></status>
</kw>
<msg timestamp="20201112 09:44:11.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.760" endtime="20201112 09:44:11.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.054" endtime="20201112 09:44:11.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.063" endtime="20201112 09:44:11.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.758" endtime="20201112 09:44:11.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.756" endtime="20201112 09:44:11.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.070" level="INFO">${RESULT} = [{'time': 0.023831986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2582999999998816e-05, 'source_diff': 4.2582999999998816e-05}, {'time': 0.023892583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:11.066" endtime="20201112 09:44:11.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.083" level="INFO">${ACCURACY} = {'diff': [4.2582999999998816e-05, 5.3207999999999034e-05, 5.6986000000001924e-05, 5.212500000000009e-05, 5.125000000000268e-05, 5.226399999999978e-05, 5.026400000000125e-05, 5.220900000000098e-05, 5.1...</msg>
<status status="PASS" starttime="20201112 09:44:11.071" endtime="20201112 09:44:11.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.088" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.087" endtime="20201112 09:44:11.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.091" level="INFO">VALUE: [4.2582999999998816e-05, 5.3207999999999034e-05, 5.6986000000001924e-05, 5.212500000000009e-05, 5.125000000000268e-05, 5.226399999999978e-05, 5.026400000000125e-05, 5.220900000000098e-05, 5.1236999999999117e-05, 5.5972000000001354e-05, 5.031999999999953e-05, 5.6041999999999204e-05, 5.4166000000001324e-05, 5.213899999999966e-05, 5.5138000000003184e-05, 5.213899999999966e-05, 5.227799999999935e-05, 5.222200000000107e-05, 5.033299999999963e-05, 5.123599999999964e-05, 5.120899999999998e-05, 5.223600000000064e-05, 5.6027999999999634e-05, 5.029200000000039e-05, 5.509700000000048e-05, 5.508300000000091e-05, 5.688900000000094e-05, 5.7014000000001064e-05, 5.408299999999991e-05, 5.12080000000005e-05, 5.605600000000224e-05, 5.50410000000022e-05, 5.308299999999891e-05, 5.6999999999998024e-05, 5.595900000000126e-05, 5.318099999999937e-05, 5.122200000000007e-05, 5.400000000000196e-05, 5.6041999999999204e-05, 5.694499999999922e-05, 5.412499999999862e-05, 5.697300000000183e-05, 5.508300000000091e-05, 5.315300000000023e-05, 5.695900000000226e-05, 5.7014000000001064e-05, 5.6014000000000064e-05, 5.120899999999998e-05, 5.031999999999953e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.089" endtime="20201112 09:44:11.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.084" endtime="20201112 09:44:11.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.095" endtime="20201112 09:44:11.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.098" endtime="20201112 09:44:11.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.097" endtime="20201112 09:44:11.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.093" endtime="20201112 09:44:11.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.718" endtime="20201112 09:44:11.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.718" endtime="20201112 09:44:11.119"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.129" endtime="20201112 09:44:11.150"></status>
</kw>
<msg timestamp="20201112 09:44:11.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.127" endtime="20201112 09:44:11.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.152" endtime="20201112 09:44:11.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.155" endtime="20201112 09:44:11.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.124" endtime="20201112 09:44:11.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.122" endtime="20201112 09:44:11.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.165" endtime="20201112 09:44:11.452"></status>
</kw>
<msg timestamp="20201112 09:44:11.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023622986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.163" endtime="20201112 09:44:11.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023622986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.456" endtime="20201112 09:44:11.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.465" endtime="20201112 09:44:11.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.161" endtime="20201112 09:44:11.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.159" endtime="20201112 09:44:11.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.472" level="INFO">${RESULT} = [{'time': 0.023622986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.270799999999894e-05, 'source_diff': 4.270799999999894e-05}, {'time': 0.023684222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.468" endtime="20201112 09:44:11.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.486" level="INFO">${ACCURACY} = {'diff': [4.270799999999894e-05, 5.40280000000011e-05, 5.704100000000073e-05, 5.513900000000266e-05, 5.7930000000001175e-05, 5.5027999999998634e-05, 5.508300000000091e-05, 5.222300000000055e-05, 5.413...</msg>
<status status="PASS" starttime="20201112 09:44:11.473" endtime="20201112 09:44:11.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.490" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.489" endtime="20201112 09:44:11.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.493" level="INFO">VALUE: [4.270799999999894e-05, 5.40280000000011e-05, 5.704100000000073e-05, 5.513900000000266e-05, 5.7930000000001175e-05, 5.5027999999998634e-05, 5.508300000000091e-05, 5.222300000000055e-05, 5.413900000000166e-05, 5.605500000000277e-05, 5.3221999999998604e-05, 5.508300000000091e-05, 5.030500000000049e-05, 5.222300000000055e-05, 5.208400000000085e-05, 5.511100000000005e-05, 5.509699999999701e-05, 5.319500000000241e-05, 5.508300000000091e-05, 5.413899999999819e-05, 5.126400000000225e-05, 5.4194000000000464e-05, 5.124999999999921e-05, 5.509700000000048e-05, 5.318099999999937e-05, 5.604200000000267e-05, 5.604099999999973e-05, 5.4152000000001754e-05, 5.033299999999963e-05, 5.322200000000207e-05, 5.3137999999997715e-05, 5.312500000000109e-05, 5.320900000000198e-05, 5.127799999999835e-05, 5.415300000000123e-05, 5.7000000000001494e-05, 5.511100000000005e-05, 5.318099999999937e-05, 5.319499999999894e-05, 5.222300000000055e-05, 5.508400000000038e-05, 5.687500000000137e-05, 5.225000000000021e-05, 5.126399999999878e-05, 5.7014000000001064e-05, 5.126399999999878e-05, 5.3193999999999464e-05, 5.609700000000148e-05, 5.219500000000141e-05, 5.309699999999848e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.492" endtime="20201112 09:44:11.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.487" endtime="20201112 09:44:11.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.505" endtime="20201112 09:44:11.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.509" endtime="20201112 09:44:11.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.507" endtime="20201112 09:44:11.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.503" endtime="20201112 09:44:11.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.120" endtime="20201112 09:44:11.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.120" endtime="20201112 09:44:11.530"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.539" endtime="20201112 09:44:11.562"></status>
</kw>
<msg timestamp="20201112 09:44:11.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.537" endtime="20201112 09:44:11.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.563" endtime="20201112 09:44:11.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.566" endtime="20201112 09:44:11.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.534" endtime="20201112 09:44:11.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.532" endtime="20201112 09:44:11.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.575" endtime="20201112 09:44:11.862"></status>
</kw>
<msg timestamp="20201112 09:44:11.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.574" endtime="20201112 09:44:11.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.866" endtime="20201112 09:44:11.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.875" endtime="20201112 09:44:11.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.571" endtime="20201112 09:44:11.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.569" endtime="20201112 09:44:11.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.882" level="INFO">${RESULT} = [{'time': 0.025305486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276399999999988e-05, 'source_diff': 6.276399999999988e-05}, {'time': 0.025366306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.879" endtime="20201112 09:44:11.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.896" level="INFO">${ACCURACY} = {'diff': [6.276399999999988e-05, 5.594500000000169e-05, 5.7000000000001494e-05, 5.318099999999937e-05, 5.509799999999995e-05, 5.698699999999793e-05, 5.4180000000000894e-05, 5.605600000000224e-05, 5.03...</msg>
<status status="PASS" starttime="20201112 09:44:11.883" endtime="20201112 09:44:11.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.900" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.899" endtime="20201112 09:44:11.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.903" level="INFO">VALUE: [6.276399999999988e-05, 5.594500000000169e-05, 5.7000000000001494e-05, 5.318099999999937e-05, 5.509799999999995e-05, 5.698699999999793e-05, 5.4180000000000894e-05, 5.605600000000224e-05, 5.030500000000049e-05, 5.508300000000091e-05, 5.409799999999895e-05, 5.6985999999998455e-05, 5.506899999999787e-05, 5.413900000000166e-05, 5.018000000000036e-05, 5.3179999999999894e-05, 5.126400000000225e-05, 5.6902000000001035e-05, 5.03339999999991e-05, 5.406999999999981e-05, 5.127799999999835e-05, 5.51670000000018e-05, 5.3179999999999894e-05, 5.7014000000001064e-05, 5.124999999999921e-05, 5.40280000000011e-05, 5.511100000000005e-05, 5.605600000000224e-05, 5.222299999999708e-05, 5.7000000000001494e-05, 5.4985999999999924e-05, 5.2207999999998034e-05, 5.412500000000209e-05, 5.7028000000000634e-05, 5.509700000000048e-05, 5.412499999999862e-05, 5.413899999999819e-05, 5.595900000000126e-05, 5.60549999999993e-05, 5.7000000000001494e-05, 5.119400000000093e-05, 5.213899999999966e-05, 5.413899999999819e-05, 5.6985999999998455e-05, 5.511100000000005e-05, 5.3971999999999354e-05, 5.511100000000005e-05, 5.6986000000001924e-05, 5.306899999999934e-05, 5.7014000000001064e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.902" endtime="20201112 09:44:11.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.897" endtime="20201112 09:44:11.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.907" endtime="20201112 09:44:11.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.910" endtime="20201112 09:44:11.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.909" endtime="20201112 09:44:11.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.905" endtime="20201112 09:44:11.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.531" endtime="20201112 09:44:11.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.530" endtime="20201112 09:44:11.932"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.941" endtime="20201112 09:44:11.963"></status>
</kw>
<msg timestamp="20201112 09:44:11.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.939" endtime="20201112 09:44:11.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.965" endtime="20201112 09:44:11.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.968" endtime="20201112 09:44:11.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.936" endtime="20201112 09:44:11.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.934" endtime="20201112 09:44:11.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.977" endtime="20201112 09:44:12.266"></status>
</kw>
<msg timestamp="20201112 09:44:12.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025309944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.976" endtime="20201112 09:44:12.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025309944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.270" endtime="20201112 09:44:12.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.279" endtime="20201112 09:44:12.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.973" endtime="20201112 09:44:12.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.971" endtime="20201112 09:44:12.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.286" level="INFO">${RESULT} = [{'time': 0.025309944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9763000000001686e-05, 'source_diff': 3.9763000000001686e-05}, {'time': 0.025371597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.282" endtime="20201112 09:44:12.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.299" level="INFO">${ACCURACY} = {'diff': [3.9763000000001686e-05, 5.604099999999973e-05, 5.127700000000235e-05, 5.408299999999991e-05, 5.7014000000001064e-05, 5.125000000000268e-05, 5.4194000000000464e-05, 5.412499999999862e-05, 5.3...</msg>
<status status="PASS" starttime="20201112 09:44:12.287" endtime="20201112 09:44:12.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.304" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.303" endtime="20201112 09:44:12.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.307" level="INFO">VALUE: [3.9763000000001686e-05, 5.604099999999973e-05, 5.127700000000235e-05, 5.408299999999991e-05, 5.7014000000001064e-05, 5.125000000000268e-05, 5.4194000000000464e-05, 5.412499999999862e-05, 5.3193999999999464e-05, 5.127799999999835e-05, 5.040300000000095e-05, 5.223600000000064e-05, 5.2235999999997174e-05, 5.4152000000001754e-05, 5.412499999999862e-05, 5.030599999999996e-05, 5.411099999999905e-05, 5.41670000000008e-05, 5.3166000000000324e-05, 5.129100000000192e-05, 5.4166000000001324e-05, 5.127800000000182e-05, 5.413899999999819e-05, 5.226399999999978e-05, 5.220899999999751e-05, 5.31669999999998e-05, 5.3193999999999464e-05, 5.320899999999851e-05, 5.608299999999844e-05, 5.319499999999894e-05, 5.508400000000038e-05, 5.6055999999998773e-05, 5.7042000000000204e-05, 5.124999999999921e-05, 5.411100000000252e-05, 5.606899999999887e-05, 5.323600000000164e-05, 5.030599999999996e-05, 5.319499999999894e-05, 5.608299999999844e-05, 5.6041999999999204e-05, 5.037499999999834e-05, 5.604099999999973e-05, 5.3166000000000324e-05, 5.6055999999998773e-05, 5.3179999999999894e-05, 5.6041999999999204e-05, 5.606900000000234e-05, 5.122200000000007e-05, 5.3207999999999034e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.305" endtime="20201112 09:44:12.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.300" endtime="20201112 09:44:12.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.310" endtime="20201112 09:44:12.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.314" endtime="20201112 09:44:12.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.312" endtime="20201112 09:44:12.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.309" endtime="20201112 09:44:12.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.932" endtime="20201112 09:44:12.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.932" endtime="20201112 09:44:12.335"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.344" endtime="20201112 09:44:12.365"></status>
</kw>
<msg timestamp="20201112 09:44:12.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.343" endtime="20201112 09:44:12.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.367" endtime="20201112 09:44:12.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.369" endtime="20201112 09:44:12.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.340" endtime="20201112 09:44:12.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.338" endtime="20201112 09:44:12.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.379" endtime="20201112 09:44:12.666"></status>
</kw>
<msg timestamp="20201112 09:44:12.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023636597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.377" endtime="20201112 09:44:12.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023636597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.671" endtime="20201112 09:44:12.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.679" endtime="20201112 09:44:12.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.374" endtime="20201112 09:44:12.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.373" endtime="20201112 09:44:12.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.686" level="INFO">${RESULT} = [{'time': 0.023697278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.068099999999993e-05, 'source_diff': 6.068099999999993e-05}, {'time': 0.023758889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.683" endtime="20201112 09:44:12.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.700" level="INFO">${ACCURACY} = {'diff': [6.068099999999993e-05, 5.413899999999819e-05, 5.513899999999919e-05, 5.508400000000038e-05, 5.222200000000107e-05, 5.595900000000126e-05, 5.509700000000048e-05, 5.7014000000001064e-05, 5.508...</msg>
<status status="PASS" starttime="20201112 09:44:12.687" endtime="20201112 09:44:12.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.704" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.703" endtime="20201112 09:44:12.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.707" level="INFO">VALUE: [6.068099999999993e-05, 5.413899999999819e-05, 5.513899999999919e-05, 5.508400000000038e-05, 5.222200000000107e-05, 5.595900000000126e-05, 5.509700000000048e-05, 5.7014000000001064e-05, 5.508300000000091e-05, 5.593100000000212e-05, 5.6027999999999634e-05, 5.124999999999921e-05, 5.31669999999998e-05, 5.211100000000052e-05, 5.31669999999998e-05, 5.315300000000023e-05, 5.124999999999921e-05, 5.690299999999704e-05, 5.029200000000039e-05, 5.511100000000005e-05, 5.311200000000099e-05, 5.3207999999999034e-05, 5.115299999999823e-05, 5.406999999999981e-05, 5.31669999999998e-05, 5.602700000000016e-05, 5.411099999999905e-05, 5.509700000000048e-05, 5.400000000000196e-05, 5.6985999999998455e-05, 5.6014000000000064e-05, 5.2221999999997604e-05, 5.413900000000166e-05, 5.511100000000005e-05, 5.409699999999948e-05, 5.222200000000107e-05, 5.116700000000127e-05, 5.412500000000209e-05, 5.2179999999998894e-05, 5.5013999999999064e-05, 5.124999999999921e-05, 5.608300000000191e-05, 5.2151999999999754e-05, 5.507000000000081e-05, 5.501400000000253e-05, 5.6041999999999204e-05, 5.319499999999894e-05, 5.305499999999977e-05, 5.223600000000064e-05, 5.6055999999998773e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.706" endtime="20201112 09:44:12.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.701" endtime="20201112 09:44:12.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.711" endtime="20201112 09:44:12.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.715" endtime="20201112 09:44:12.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.713" endtime="20201112 09:44:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.709" endtime="20201112 09:44:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.336" endtime="20201112 09:44:12.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.336" endtime="20201112 09:44:12.736"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.745" endtime="20201112 09:44:12.768"></status>
</kw>
<msg timestamp="20201112 09:44:12.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.743" endtime="20201112 09:44:12.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.769" endtime="20201112 09:44:12.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.772" endtime="20201112 09:44:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.741" endtime="20201112 09:44:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.738" endtime="20201112 09:44:12.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.781" endtime="20201112 09:44:13.069"></status>
</kw>
<msg timestamp="20201112 09:44:13.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025018542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.780" endtime="20201112 09:44:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025018542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.074" endtime="20201112 09:44:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.082" endtime="20201112 09:44:13.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.777" endtime="20201112 09:44:13.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.775" endtime="20201112 09:44:13.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.089" level="INFO">${RESULT} = [{'time': 0.025075542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6999999999998024e-05, 'source_diff': 5.6999999999998024e-05}, {'time': 0.025136889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.086" endtime="20201112 09:44:13.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.103" level="INFO">${ACCURACY} = {'diff': [5.6999999999998024e-05, 5.6055999999998773e-05, 5.215299999999923e-05, 5.415299999999776e-05, 5.1193999999997464e-05, 5.308299999999891e-05, 5.318100000000284e-05, 5.130499999999802e-05, 5.2...</msg>
<status status="PASS" starttime="20201112 09:44:13.090" endtime="20201112 09:44:13.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.108" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.107" endtime="20201112 09:44:13.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.110" level="INFO">VALUE: [5.6999999999998024e-05, 5.6055999999998773e-05, 5.215299999999923e-05, 5.415299999999776e-05, 5.1193999999997464e-05, 5.308299999999891e-05, 5.318100000000284e-05, 5.130499999999802e-05, 5.213899999999966e-05, 5.507000000000081e-05, 5.213899999999966e-05, 5.2207999999998034e-05, 5.309699999999848e-05, 5.41670000000008e-05, 5.6055999999998773e-05, 5.7042000000000204e-05, 5.213899999999966e-05, 5.509700000000048e-05, 5.223700000000012e-05, 5.212500000000009e-05, 5.507000000000081e-05, 5.31669999999998e-05, 5.506900000000134e-05, 5.308299999999891e-05, 5.508400000000038e-05, 5.505599999999777e-05, 5.122200000000007e-05, 5.409699999999948e-05, 5.213899999999966e-05, 5.123599999999964e-05, 5.686099999999833e-05, 5.222300000000055e-05, 5.515299999999876e-05, 5.127799999999835e-05, 5.593099999999865e-05, 5.415300000000123e-05, 5.691700000000008e-05, 5.124999999999921e-05, 5.311099999999805e-05, 5.6986000000001924e-05, 5.506900000000134e-05, 5.6999999999998024e-05, 5.31669999999998e-05, 5.401400000000153e-05, 5.512499999999962e-05, 5.4137999999998715e-05, 5.126399999999878e-05, 5.5137999999999715e-05, 5.513900000000266e-05, 5.6027999999999634e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.109" endtime="20201112 09:44:13.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.104" endtime="20201112 09:44:13.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.114" endtime="20201112 09:44:13.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.118" endtime="20201112 09:44:13.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.116" endtime="20201112 09:44:13.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.112" endtime="20201112 09:44:13.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.737" endtime="20201112 09:44:13.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.736" endtime="20201112 09:44:13.139"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.148" endtime="20201112 09:44:13.169"></status>
</kw>
<msg timestamp="20201112 09:44:13.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.146" endtime="20201112 09:44:13.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.171" endtime="20201112 09:44:13.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.174" endtime="20201112 09:44:13.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.144" endtime="20201112 09:44:13.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.141" endtime="20201112 09:44:13.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.183" endtime="20201112 09:44:13.470"></status>
</kw>
<msg timestamp="20201112 09:44:13.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.182" endtime="20201112 09:44:13.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.475" endtime="20201112 09:44:13.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.483" endtime="20201112 09:44:13.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.179" endtime="20201112 09:44:13.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.177" endtime="20201112 09:44:13.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.490" level="INFO">${RESULT} = [{'time': 0.023921208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986099999999786e-05, 'source_diff': 5.986099999999786e-05}, {'time': 0.023981847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.487" endtime="20201112 09:44:13.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.504" level="INFO">${ACCURACY} = {'diff': [5.986099999999786e-05, 5.033299999999963e-05, 5.701300000000159e-05, 5.413899999999819e-05, 5.412500000000209e-05, 5.31669999999998e-05, 5.412499999999862e-05, 5.12080000000005e-05, 5.123599...</msg>
<status status="PASS" starttime="20201112 09:44:13.491" endtime="20201112 09:44:13.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.509" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.508" endtime="20201112 09:44:13.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.511" level="INFO">VALUE: [5.986099999999786e-05, 5.033299999999963e-05, 5.701300000000159e-05, 5.413899999999819e-05, 5.412500000000209e-05, 5.31669999999998e-05, 5.412499999999862e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.031900000000006e-05, 5.4137999999998715e-05, 5.508399999999691e-05, 5.412499999999862e-05, 5.3207999999999034e-05, 5.3179999999999894e-05, 5.223700000000012e-05, 5.129200000000139e-05, 5.3193999999999464e-05, 5.412499999999862e-05, 5.406900000000034e-05, 5.608400000000138e-05, 5.509700000000048e-05, 5.418100000000037e-05, 5.031999999999953e-05, 5.6972000000002354e-05, 5.695899999999879e-05, 5.129100000000192e-05, 5.023599999999864e-05, 5.2207999999998034e-05, 5.506900000000134e-05, 5.318099999999937e-05, 5.223600000000064e-05, 5.413899999999819e-05, 5.5986000000000924e-05, 5.413899999999819e-05, 5.4151999999998285e-05, 5.423700000000212e-05, 5.5027999999998634e-05, 5.029200000000039e-05, 5.413899999999819e-05, 5.513900000000266e-05, 5.3179999999999894e-05, 5.413899999999819e-05, 5.608399999999791e-05, 5.6027999999999634e-05, 5.220900000000098e-05, 5.606899999999887e-05, 5.129200000000139e-05, 5.509700000000048e-05, 5.511100000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.510" endtime="20201112 09:44:13.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.505" endtime="20201112 09:44:13.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.515" endtime="20201112 09:44:13.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.519" endtime="20201112 09:44:13.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.517" endtime="20201112 09:44:13.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.513" endtime="20201112 09:44:13.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.140" endtime="20201112 09:44:13.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.139" endtime="20201112 09:44:13.540"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.549" endtime="20201112 09:44:13.572"></status>
</kw>
<msg timestamp="20201112 09:44:13.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.547" endtime="20201112 09:44:13.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.574" endtime="20201112 09:44:13.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.577" endtime="20201112 09:44:13.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.545" endtime="20201112 09:44:13.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.542" endtime="20201112 09:44:13.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.586" endtime="20201112 09:44:13.874"></status>
</kw>
<msg timestamp="20201112 09:44:13.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02468125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024719153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:13.585" endtime="20201112 09:44:13.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02468125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024719153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:13.878" endtime="20201112 09:44:13.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.887" endtime="20201112 09:44:13.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.582" endtime="20201112 09:44:13.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.580" endtime="20201112 09:44:13.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.894" level="INFO">${RESULT} = [{'time': 0.024719153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7903000000002324e-05, 'source_diff': 3.7903000000002324e-05}, {'time': 0.024780806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.890" endtime="20201112 09:44:13.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.907" level="INFO">${ACCURACY} = {'diff': [3.7903000000002324e-05, 5.1236999999999117e-05, 5.505599999999777e-05, 5.2193999999998464e-05, 5.5957999999998315e-05, 5.6957999999999315e-05, 5.609799999999748e-05, 5.419499999999994e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:44:13.895" endtime="20201112 09:44:13.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.912" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.911" endtime="20201112 09:44:13.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.915" level="INFO">VALUE: [3.7903000000002324e-05, 5.1236999999999117e-05, 5.505599999999777e-05, 5.2193999999998464e-05, 5.5957999999998315e-05, 5.6957999999999315e-05, 5.609799999999748e-05, 5.419499999999994e-05, 5.513899999999919e-05, 5.413899999999819e-05, 5.3193999999999464e-05, 5.505600000000124e-05, 5.5013999999999064e-05, 5.508300000000091e-05, 5.219400000000193e-05, 5.506899999999787e-05, 5.505500000000177e-05, 5.5027999999998634e-05, 5.127699999999888e-05, 5.124999999999921e-05, 5.220900000000098e-05, 5.597299999999736e-05, 5.5957999999998315e-05, 5.607000000000181e-05, 5.412499999999862e-05, 5.130499999999802e-05, 5.697300000000183e-05, 5.215299999999923e-05, 5.413899999999819e-05, 5.213899999999966e-05, 5.2179999999998894e-05, 5.21669999999988e-05, 5.229200000000239e-05, 5.319499999999894e-05, 5.509799999999995e-05, 5.223600000000064e-05, 5.505500000000177e-05, 5.6930000000000175e-05, 5.411100000000252e-05, 5.033299999999963e-05, 5.218000000000236e-05, 5.6930000000000175e-05, 5.506899999999787e-05, 5.124999999999921e-05, 5.222200000000107e-05, 5.211100000000052e-05, 5.597299999999736e-05, 5.7000000000001494e-05, 5.222200000000107e-05, 5.218100000000184e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.913" endtime="20201112 09:44:13.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.908" endtime="20201112 09:44:13.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.919" endtime="20201112 09:44:13.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.922" endtime="20201112 09:44:13.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.921" endtime="20201112 09:44:13.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.917" endtime="20201112 09:44:13.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.541" endtime="20201112 09:44:13.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.540" endtime="20201112 09:44:13.943"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.952" endtime="20201112 09:44:13.973"></status>
</kw>
<msg timestamp="20201112 09:44:13.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.951" endtime="20201112 09:44:13.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.974" endtime="20201112 09:44:13.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.977" endtime="20201112 09:44:13.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.948" endtime="20201112 09:44:13.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.946" endtime="20201112 09:44:13.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.987" endtime="20201112 09:44:14.275"></status>
</kw>
<msg timestamp="20201112 09:44:14.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.985" endtime="20201112 09:44:14.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.279" endtime="20201112 09:44:14.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.288" endtime="20201112 09:44:14.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.982" endtime="20201112 09:44:14.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.980" endtime="20201112 09:44:14.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.295" level="INFO">${RESULT} = [{'time': 0.023259694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7902000000002035e-05, 'source_diff': 5.7902000000002035e-05}, {'time': 0.0233205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.291" endtime="20201112 09:44:14.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.309" level="INFO">${ACCURACY} = {'diff': [5.7902000000002035e-05, 5.41670000000008e-05, 5.411100000000252e-05, 5.50280000000021e-05, 5.116700000000127e-05, 5.131999999999706e-05, 5.1193999999997464e-05, 5.505599999999777e-05, 5.4111...</msg>
<status status="PASS" starttime="20201112 09:44:14.296" endtime="20201112 09:44:14.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.313" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.312" endtime="20201112 09:44:14.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.316" level="INFO">VALUE: [5.7902000000002035e-05, 5.41670000000008e-05, 5.411100000000252e-05, 5.50280000000021e-05, 5.116700000000127e-05, 5.131999999999706e-05, 5.1193999999997464e-05, 5.505599999999777e-05, 5.411199999999852e-05, 5.405600000000024e-05, 5.218100000000184e-05, 5.124999999999921e-05, 5.024999999999821e-05, 5.695899999999879e-05, 5.5985999999997454e-05, 5.129100000000192e-05, 5.506999999999734e-05, 5.405600000000024e-05, 5.313899999999719e-05, 5.41670000000008e-05, 5.5986000000000924e-05, 5.604200000000267e-05, 5.311099999999805e-05, 5.3137999999997715e-05, 5.511100000000005e-05, 5.309699999999848e-05, 5.411099999999905e-05, 5.4985999999999924e-05, 5.6972000000002354e-05, 5.687500000000137e-05, 5.7014000000001064e-05, 5.509799999999995e-05, 5.5943999999998745e-05, 5.313899999999719e-05, 5.126299999999931e-05, 5.5027999999998634e-05, 5.6027999999999634e-05, 5.031999999999953e-05, 5.406900000000034e-05, 5.219400000000193e-05, 5.022199999999907e-05, 5.506999999999734e-05, 5.223600000000064e-05, 5.5972000000001354e-05, 5.315300000000023e-05, 5.702699999999769e-05, 5.6055999999998773e-05, 5.12080000000005e-05, 5.319499999999894e-05, 5.3207999999999034e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.315" endtime="20201112 09:44:14.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.310" endtime="20201112 09:44:14.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.320" endtime="20201112 09:44:14.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.324" endtime="20201112 09:44:14.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.322" endtime="20201112 09:44:14.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.318" endtime="20201112 09:44:14.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.944" endtime="20201112 09:44:14.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.944" endtime="20201112 09:44:14.345"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.354" endtime="20201112 09:44:14.375"></status>
</kw>
<msg timestamp="20201112 09:44:14.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.352" endtime="20201112 09:44:14.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.377" endtime="20201112 09:44:14.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.380" endtime="20201112 09:44:14.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.349" endtime="20201112 09:44:14.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.347" endtime="20201112 09:44:14.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.389" endtime="20201112 09:44:14.675"></status>
</kw>
<msg timestamp="20201112 09:44:14.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023631361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.388" endtime="20201112 09:44:14.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023631361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.680" endtime="20201112 09:44:14.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.688" endtime="20201112 09:44:14.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.385" endtime="20201112 09:44:14.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.383" endtime="20201112 09:44:14.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.695" level="INFO">${RESULT} = [{'time': 0.023691264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.990300000000004e-05, 'source_diff': 5.990300000000004e-05}, {'time': 0.023752542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.692" endtime="20201112 09:44:14.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.709" level="INFO">${ACCURACY} = {'diff': [5.990300000000004e-05, 5.327800000000035e-05, 5.408399999999938e-05, 5.5027999999998634e-05, 5.125000000000268e-05, 5.225000000000021e-05, 5.026399999999778e-05, 5.505599999999777e-05, 5.501...</msg>
<status status="PASS" starttime="20201112 09:44:14.696" endtime="20201112 09:44:14.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.714" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.713" endtime="20201112 09:44:14.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.716" level="INFO">VALUE: [5.990300000000004e-05, 5.327800000000035e-05, 5.408399999999938e-05, 5.5027999999998634e-05, 5.125000000000268e-05, 5.225000000000021e-05, 5.026399999999778e-05, 5.505599999999777e-05, 5.501400000000253e-05, 5.312499999999762e-05, 5.129099999999845e-05, 5.60549999999993e-05, 5.12080000000005e-05, 5.313899999999719e-05, 5.412499999999862e-05, 5.406999999999981e-05, 5.21530000000027e-05, 5.412499999999862e-05, 5.315300000000023e-05, 5.116600000000179e-05, 5.509799999999995e-05, 5.6014000000000064e-05, 5.5986000000000924e-05, 5.222200000000107e-05, 5.227699999999988e-05, 5.505600000000124e-05, 5.5027999999998634e-05, 5.215299999999923e-05, 5.6041999999999204e-05, 5.31669999999998e-05, 5.124999999999921e-05, 5.218100000000184e-05, 5.12080000000005e-05, 5.511100000000005e-05, 5.604200000000267e-05, 5.3221999999998604e-05, 5.225000000000021e-05, 5.222200000000107e-05, 5.409699999999948e-05, 5.122299999999955e-05, 5.513899999999919e-05, 5.124999999999921e-05, 5.130599999999749e-05, 5.406999999999981e-05, 5.313899999999719e-05, 5.030500000000049e-05, 5.126399999999878e-05, 5.222299999999708e-05, 5.6041999999999204e-05, 5.501299999999959e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.715" endtime="20201112 09:44:14.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.710" endtime="20201112 09:44:14.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.720" endtime="20201112 09:44:14.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.724" endtime="20201112 09:44:14.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.722" endtime="20201112 09:44:14.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.718" endtime="20201112 09:44:14.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.346" endtime="20201112 09:44:14.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.345" endtime="20201112 09:44:14.745"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.754" endtime="20201112 09:44:14.777"></status>
</kw>
<msg timestamp="20201112 09:44:14.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.752" endtime="20201112 09:44:14.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.779" endtime="20201112 09:44:14.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.781" endtime="20201112 09:44:14.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.750" endtime="20201112 09:44:14.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.748" endtime="20201112 09:44:14.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.791" endtime="20201112 09:44:15.077"></status>
</kw>
<msg timestamp="20201112 09:44:15.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025496944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:14.789" endtime="20201112 09:44:15.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025496944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:15.082" endtime="20201112 09:44:15.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.090" endtime="20201112 09:44:15.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.786" endtime="20201112 09:44:15.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.785" endtime="20201112 09:44:15.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.097" level="INFO">${RESULT} = [{'time': 0.025496944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7944000000000745e-05, 'source_diff': 5.7944000000000745e-05}, {'time': 0.025558514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.094" endtime="20201112 09:44:15.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.111" level="INFO">${ACCURACY} = {'diff': [5.7944000000000745e-05, 5.605600000000224e-05, 5.406900000000034e-05, 5.6027999999999634e-05, 5.126400000000225e-05, 5.60549999999993e-05, 5.4999999999999494e-05, 5.030599999999996e-05, 5.13...</msg>
<status status="PASS" starttime="20201112 09:44:15.098" endtime="20201112 09:44:15.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.116" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.115" endtime="20201112 09:44:15.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.118" level="INFO">VALUE: [5.7944000000000745e-05, 5.605600000000224e-05, 5.406900000000034e-05, 5.6027999999999634e-05, 5.126400000000225e-05, 5.60549999999993e-05, 5.4999999999999494e-05, 5.030599999999996e-05, 5.131900000000106e-05, 5.509700000000048e-05, 5.413899999999819e-05, 5.412499999999862e-05, 5.40410000000012e-05, 5.13340000000001e-05, 5.6985999999998455e-05, 5.131899999999759e-05, 5.408299999999991e-05, 5.508400000000038e-05, 5.506900000000134e-05, 5.22080000000015e-05, 5.316700000000327e-05, 5.3221999999998604e-05, 5.508300000000091e-05, 5.222200000000107e-05, 5.127800000000182e-05, 5.413900000000166e-05, 5.506899999999787e-05, 5.22080000000015e-05, 5.219499999999794e-05, 5.123599999999964e-05, 5.695899999999879e-05, 5.6985999999998455e-05, 5.508400000000038e-05, 5.220900000000098e-05, 5.605600000000224e-05, 5.506900000000134e-05, 5.126399999999878e-05, 5.5152000000002754e-05, 5.2193999999998464e-05, 5.029200000000039e-05, 5.408299999999991e-05, 5.412499999999862e-05, 5.124999999999921e-05, 5.325000000000121e-05, 5.220900000000098e-05, 5.6986000000001924e-05, 5.124999999999921e-05, 5.7000000000001494e-05, 5.6000000000000494e-05, 5.6985999999998455e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.117" endtime="20201112 09:44:15.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.112" endtime="20201112 09:44:15.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.122" endtime="20201112 09:44:15.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.126" endtime="20201112 09:44:15.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.124" endtime="20201112 09:44:15.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.120" endtime="20201112 09:44:15.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.746" endtime="20201112 09:44:15.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.745" endtime="20201112 09:44:15.147"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.156" endtime="20201112 09:44:15.179"></status>
</kw>
<msg timestamp="20201112 09:44:15.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.154" endtime="20201112 09:44:15.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.180" endtime="20201112 09:44:15.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.183" endtime="20201112 09:44:15.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.151" endtime="20201112 09:44:15.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.149" endtime="20201112 09:44:15.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.192" endtime="20201112 09:44:15.480"></status>
</kw>
<msg timestamp="20201112 09:44:15.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.191" endtime="20201112 09:44:15.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025526486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.485" endtime="20201112 09:44:15.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.493" endtime="20201112 09:44:15.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.188" endtime="20201112 09:44:15.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.186" endtime="20201112 09:44:15.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.500" level="INFO">${RESULT} = [{'time': 0.025594014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.752799999999726e-05, 'source_diff': 6.752799999999726e-05}, {'time': 0.025655111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.497" endtime="20201112 09:44:15.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.514" level="INFO">${ACCURACY} = {'diff': [6.752799999999726e-05, 5.404200000000067e-05, 5.7013999999997594e-05, 5.022200000000254e-05, 5.6999999999998024e-05, 5.225000000000021e-05, 5.415300000000123e-05, 5.219400000000193e-05, 5.11...</msg>
<status status="PASS" starttime="20201112 09:44:15.501" endtime="20201112 09:44:15.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.519" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.518" endtime="20201112 09:44:15.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.521" level="INFO">VALUE: [6.752799999999726e-05, 5.404200000000067e-05, 5.7013999999997594e-05, 5.022200000000254e-05, 5.6999999999998024e-05, 5.225000000000021e-05, 5.415300000000123e-05, 5.219400000000193e-05, 5.119500000000041e-05, 5.219400000000193e-05, 5.31669999999998e-05, 5.308299999999891e-05, 5.3152000000000754e-05, 5.123600000000311e-05, 5.405600000000024e-05, 5.129199999999792e-05, 5.2207999999998034e-05, 5.4999999999999494e-05, 5.225000000000021e-05, 5.029200000000039e-05, 5.405500000000077e-05, 5.222200000000107e-05, 5.124999999999921e-05, 5.318099999999937e-05, 5.312499999999762e-05, 5.511199999999952e-05, 5.6958000000002784e-05, 5.218100000000184e-05, 5.126399999999878e-05, 5.12080000000005e-05, 5.4013999999998064e-05, 5.6027999999999634e-05, 5.129100000000192e-05, 5.509700000000048e-05, 5.40419999999972e-05, 5.511100000000005e-05, 5.508400000000038e-05, 5.6999999999998024e-05, 5.513899999999919e-05, 5.405500000000077e-05, 5.41670000000008e-05, 5.508300000000091e-05, 5.5972000000001354e-05, 5.124999999999921e-05, 5.6971999999998885e-05, 5.218099999999837e-05, 5.126400000000225e-05, 5.5986000000000924e-05, 5.5971999999997885e-05, 5.413900000000166e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.520" endtime="20201112 09:44:15.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.515" endtime="20201112 09:44:15.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.525" endtime="20201112 09:44:15.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.529" endtime="20201112 09:44:15.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.527" endtime="20201112 09:44:15.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.523" endtime="20201112 09:44:15.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.148" endtime="20201112 09:44:15.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.147" endtime="20201112 09:44:15.550"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.559" endtime="20201112 09:44:15.585"></status>
</kw>
<msg timestamp="20201112 09:44:15.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.557" endtime="20201112 09:44:15.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.586" endtime="20201112 09:44:15.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.589" endtime="20201112 09:44:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.555" endtime="20201112 09:44:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.552" endtime="20201112 09:44:15.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.599" endtime="20201112 09:44:15.885"></status>
</kw>
<msg timestamp="20201112 09:44:15.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.597" endtime="20201112 09:44:15.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.890" endtime="20201112 09:44:15.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.898" endtime="20201112 09:44:15.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.594" endtime="20201112 09:44:15.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.592" endtime="20201112 09:44:15.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.905" level="INFO">${RESULT} = [{'time': 0.024377833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.755500000000039e-05, 'source_diff': 6.755500000000039e-05}, {'time': 0.024439458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.902" endtime="20201112 09:44:15.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.919" level="INFO">${ACCURACY} = {'diff': [6.755500000000039e-05, 5.508300000000091e-05, 5.39869999999984e-05, 5.223600000000064e-05, 5.415299999999776e-05, 5.027800000000082e-05, 5.708400000000238e-05, 5.500000000000296e-05, 5.70000...</msg>
<status status="PASS" starttime="20201112 09:44:15.906" endtime="20201112 09:44:15.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.924" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.923" endtime="20201112 09:44:15.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.926" level="INFO">VALUE: [6.755500000000039e-05, 5.508300000000091e-05, 5.39869999999984e-05, 5.223600000000064e-05, 5.415299999999776e-05, 5.027800000000082e-05, 5.708400000000238e-05, 5.500000000000296e-05, 5.7000000000001494e-05, 5.604200000000267e-05, 5.315300000000023e-05, 5.405500000000077e-05, 5.223600000000064e-05, 5.126299999999931e-05, 5.127799999999835e-05, 5.123599999999964e-05, 5.5943999999998745e-05, 5.509700000000048e-05, 5.123599999999964e-05, 5.308399999999838e-05, 5.223600000000064e-05, 5.60549999999993e-05, 5.225000000000021e-05, 5.215299999999923e-05, 5.124999999999921e-05, 5.32080000000025e-05, 5.412499999999862e-05, 5.408299999999991e-05, 5.409699999999948e-05, 5.222200000000107e-05, 5.6027999999999634e-05, 5.50280000000021e-05, 5.120899999999998e-05, 5.1237000000002586e-05, 5.413899999999819e-05, 5.6985999999998455e-05, 5.604099999999973e-05, 5.506900000000134e-05, 5.4180000000000894e-05, 5.608299999999844e-05, 5.60549999999993e-05, 5.225000000000021e-05, 5.223600000000064e-05, 5.508300000000091e-05, 5.11530000000017e-05, 5.513899999999919e-05, 5.2165999999999324e-05, 5.7028000000000634e-05, 5.609699999999801e-05, 5.127699999999888e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.925" endtime="20201112 09:44:15.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.920" endtime="20201112 09:44:15.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.930" endtime="20201112 09:44:15.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.934" endtime="20201112 09:44:15.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.932" endtime="20201112 09:44:15.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.928" endtime="20201112 09:44:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.551" endtime="20201112 09:44:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.550" endtime="20201112 09:44:15.955"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.964" endtime="20201112 09:44:15.982"></status>
</kw>
<msg timestamp="20201112 09:44:15.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.962" endtime="20201112 09:44:15.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.984" endtime="20201112 09:44:15.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.986" endtime="20201112 09:44:15.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.960" endtime="20201112 09:44:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.958" endtime="20201112 09:44:15.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.996" endtime="20201112 09:44:16.283"></status>
</kw>
<msg timestamp="20201112 09:44:16.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.994" endtime="20201112 09:44:16.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.288" endtime="20201112 09:44:16.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.296" endtime="20201112 09:44:16.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.992" endtime="20201112 09:44:16.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.990" endtime="20201112 09:44:16.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.303" level="INFO">${RESULT} = [{'time': 0.021147542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.755599999999987e-05, 'source_diff': 6.755599999999987e-05}, {'time': 0.021209042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.299" endtime="20201112 09:44:16.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.317" level="INFO">${ACCURACY} = {'diff': [6.755599999999987e-05, 5.225000000000021e-05, 5.0222999999998547e-05, 5.408299999999991e-05, 5.68749999999979e-05, 5.3179999999999894e-05, 5.412500000000209e-05, 5.4957999999997315e-05, 5.12...</msg>
<status status="PASS" starttime="20201112 09:44:16.304" endtime="20201112 09:44:16.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.321" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.320" endtime="20201112 09:44:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.324" level="INFO">VALUE: [6.755599999999987e-05, 5.225000000000021e-05, 5.0222999999998547e-05, 5.408299999999991e-05, 5.68749999999979e-05, 5.3179999999999894e-05, 5.412500000000209e-05, 5.4957999999997315e-05, 5.127699999999888e-05, 5.415300000000123e-05, 5.690300000000051e-05, 5.318100000000284e-05, 5.126399999999878e-05, 5.308400000000185e-05, 5.318099999999937e-05, 5.129100000000192e-05, 5.122200000000007e-05, 5.5958000000001784e-05, 5.32080000000025e-05, 5.422200000000307e-05, 5.309700000000195e-05, 5.41670000000008e-05, 5.4972000000000354e-05, 5.3263999999997313e-05, 5.405600000000024e-05, 5.226399999999978e-05, 5.034700000000267e-05, 5.3985999999998924e-05, 5.22080000000015e-05, 5.123599999999964e-05, 5.4013999999998064e-05, 5.606899999999887e-05, 5.031900000000006e-05, 5.504200000000167e-05, 5.505600000000124e-05, 5.413899999999819e-05, 5.225000000000021e-05, 5.5944000000002214e-05, 5.509799999999995e-05, 5.6986000000001924e-05, 5.593100000000212e-05, 5.225000000000021e-05, 5.3193999999999464e-05, 5.2207999999998034e-05, 5.595900000000126e-05, 5.3235999999998174e-05, 5.3207999999999034e-05, 5.4972000000000354e-05, 5.2207999999998034e-05, 5.511100000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.323" endtime="20201112 09:44:16.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.318" endtime="20201112 09:44:16.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.328" endtime="20201112 09:44:16.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.332" endtime="20201112 09:44:16.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.330" endtime="20201112 09:44:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.326" endtime="20201112 09:44:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.956" endtime="20201112 09:44:16.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.955" endtime="20201112 09:44:16.353"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.362" endtime="20201112 09:44:16.385"></status>
</kw>
<msg timestamp="20201112 09:44:16.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.360" endtime="20201112 09:44:16.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.387" endtime="20201112 09:44:16.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.389" endtime="20201112 09:44:16.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.357" endtime="20201112 09:44:16.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.355" endtime="20201112 09:44:16.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.399" endtime="20201112 09:44:16.686"></status>
</kw>
<msg timestamp="20201112 09:44:16.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025334167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.397" endtime="20201112 09:44:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025334167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.690" endtime="20201112 09:44:16.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.699" endtime="20201112 09:44:16.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.394" endtime="20201112 09:44:16.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.392" endtime="20201112 09:44:16.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.706" level="INFO">${RESULT} = [{'time': 0.025334167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1681000000001744e-05, 'source_diff': 4.1681000000001744e-05}, {'time': 0.025395153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.702" endtime="20201112 09:44:16.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.719" level="INFO">${ACCURACY} = {'diff': [4.1681000000001744e-05, 5.411099999999905e-05, 5.709800000000195e-05, 5.420899999999951e-05, 5.60280000000031e-05, 5.219500000000141e-05, 5.2193999999998464e-05, 5.5985999999997454e-05, 5.41...</msg>
<status status="PASS" starttime="20201112 09:44:16.707" endtime="20201112 09:44:16.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.724" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.723" endtime="20201112 09:44:16.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.727" level="INFO">VALUE: [4.1681000000001744e-05, 5.411099999999905e-05, 5.709800000000195e-05, 5.420899999999951e-05, 5.60280000000031e-05, 5.219500000000141e-05, 5.2193999999998464e-05, 5.5985999999997454e-05, 5.412499999999862e-05, 5.512499999999962e-05, 5.222300000000055e-05, 5.418100000000037e-05, 5.612500000000062e-05, 5.413899999999819e-05, 5.409699999999948e-05, 5.029200000000039e-05, 5.6985999999998455e-05, 5.220900000000098e-05, 5.693099999999965e-05, 5.2235999999997174e-05, 5.511100000000005e-05, 5.126399999999878e-05, 5.604099999999973e-05, 5.223600000000064e-05, 5.509700000000048e-05, 5.127800000000182e-05, 5.223600000000064e-05, 5.604200000000267e-05, 5.223600000000064e-05, 5.608399999999791e-05, 5.03330000000031e-05, 5.127799999999835e-05, 5.509700000000048e-05, 5.03339999999991e-05, 5.508300000000091e-05, 5.225000000000021e-05, 5.7027999999997164e-05, 5.413900000000166e-05, 5.6041999999999204e-05, 5.509699999999701e-05, 5.119500000000041e-05, 5.7000000000001494e-05, 5.416699999999733e-05, 5.511199999999952e-05, 5.511200000000299e-05, 5.606899999999887e-05, 5.5027999999998634e-05, 5.031900000000006e-05, 5.129099999999845e-05, 5.508299999999744e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.725" endtime="20201112 09:44:16.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.720" endtime="20201112 09:44:16.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.735" endtime="20201112 09:44:16.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.739" endtime="20201112 09:44:16.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.737" endtime="20201112 09:44:16.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.733" endtime="20201112 09:44:16.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.354" endtime="20201112 09:44:16.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.353" endtime="20201112 09:44:16.760"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.769" endtime="20201112 09:44:16.792"></status>
</kw>
<msg timestamp="20201112 09:44:16.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.767" endtime="20201112 09:44:16.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.794" endtime="20201112 09:44:16.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.796" endtime="20201112 09:44:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.765" endtime="20201112 09:44:16.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.762" endtime="20201112 09:44:16.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.806" endtime="20201112 09:44:17.094"></status>
</kw>
<msg timestamp="20201112 09:44:17.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0251815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:16.804" endtime="20201112 09:44:17.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0251815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:17.099" endtime="20201112 09:44:17.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.107" endtime="20201112 09:44:17.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.801" endtime="20201112 09:44:17.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.800" endtime="20201112 09:44:17.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.114" level="INFO">${RESULT} = [{'time': 0.025247069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556900000000143e-05, 'source_diff': 6.556900000000143e-05}, {'time': 0.025307819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.111" endtime="20201112 09:44:17.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.128" level="INFO">${ACCURACY} = {'diff': [6.556900000000143e-05, 5.601299999999712e-05, 5.4999999999999494e-05, 5.315300000000023e-05, 5.3207999999999034e-05, 5.229199999999892e-05, 5.6999999999998024e-05, 5.213899999999966e-05, 5.6...</msg>
<status status="PASS" starttime="20201112 09:44:17.115" endtime="20201112 09:44:17.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.133" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.132" endtime="20201112 09:44:17.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.135" level="INFO">VALUE: [6.556900000000143e-05, 5.601299999999712e-05, 5.4999999999999494e-05, 5.315300000000023e-05, 5.3207999999999034e-05, 5.229199999999892e-05, 5.6999999999998024e-05, 5.213899999999966e-05, 5.6027999999999634e-05, 5.037500000000181e-05, 5.4137999999998715e-05, 5.225000000000021e-05, 5.415299999999776e-05, 5.406900000000034e-05, 5.126400000000225e-05, 5.3221999999998604e-05, 5.7042000000000204e-05, 5.312499999999762e-05, 5.7000000000001494e-05, 5.5986000000000924e-05, 5.223700000000012e-05, 5.127800000000182e-05, 5.129199999999792e-05, 5.409699999999948e-05, 5.6014000000000064e-05, 5.129099999999845e-05, 5.4152000000001754e-05, 5.6957999999999315e-05, 5.504099999999873e-05, 5.411200000000199e-05, 5.2165999999999324e-05, 5.222200000000107e-05, 5.315300000000023e-05, 5.226399999999978e-05, 5.019499999999941e-05, 5.127800000000182e-05, 5.131900000000106e-05, 5.127800000000182e-05, 5.03469999999992e-05, 5.308299999999891e-05, 5.129199999999792e-05, 5.6957999999999315e-05, 5.033299999999963e-05, 5.413900000000166e-05, 5.4999999999999494e-05, 5.6985999999998455e-05, 5.126399999999878e-05, 5.2138000000000184e-05, 5.118099999999737e-05, 5.511100000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.134" endtime="20201112 09:44:17.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.129" endtime="20201112 09:44:17.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.139" endtime="20201112 09:44:17.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.143" endtime="20201112 09:44:17.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.141" endtime="20201112 09:44:17.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.137" endtime="20201112 09:44:17.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.761" endtime="20201112 09:44:17.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.760" endtime="20201112 09:44:17.164"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.173" endtime="20201112 09:44:17.193"></status>
</kw>
<msg timestamp="20201112 09:44:17.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.171" endtime="20201112 09:44:17.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.195" endtime="20201112 09:44:17.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.198" endtime="20201112 09:44:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.169" endtime="20201112 09:44:17.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.167" endtime="20201112 09:44:17.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.207" endtime="20201112 09:44:17.494"></status>
</kw>
<msg timestamp="20201112 09:44:17.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.205" endtime="20201112 09:44:17.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.498" endtime="20201112 09:44:17.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.507" endtime="20201112 09:44:17.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.203" endtime="20201112 09:44:17.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.201" endtime="20201112 09:44:17.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.514" level="INFO">${RESULT} = [{'time': 0.022901778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1653000000002605e-05, 'source_diff': 4.1653000000002605e-05}, {'time': 0.022962597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:17.510" endtime="20201112 09:44:17.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.528" level="INFO">${ACCURACY} = {'diff': [4.1653000000002605e-05, 5.322200000000207e-05, 5.608299999999844e-05, 5.126399999999878e-05, 5.415299999999776e-05, 5.5165999999998855e-05, 5.126399999999878e-05, 5.406900000000034e-05, 5.22...</msg>
<status status="PASS" starttime="20201112 09:44:17.515" endtime="20201112 09:44:17.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.532" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.531" endtime="20201112 09:44:17.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.535" level="INFO">VALUE: [4.1653000000002605e-05, 5.322200000000207e-05, 5.608299999999844e-05, 5.126399999999878e-05, 5.415299999999776e-05, 5.5165999999998855e-05, 5.126399999999878e-05, 5.406900000000034e-05, 5.225000000000021e-05, 5.515299999999876e-05, 5.211100000000052e-05, 5.7000000000001494e-05, 5.323600000000164e-05, 5.13470000000002e-05, 5.3193999999999464e-05, 5.701300000000159e-05, 5.320899999999851e-05, 5.604200000000267e-05, 5.608400000000138e-05, 5.5013999999999064e-05, 5.41670000000008e-05, 5.2249999999996743e-05, 5.511100000000005e-05, 5.126399999999878e-05, 5.608399999999791e-05, 5.222200000000107e-05, 5.505599999999777e-05, 5.6027999999999634e-05, 5.124999999999921e-05, 5.3193999999999464e-05, 5.51670000000018e-05, 5.418100000000037e-05, 5.127799999999835e-05, 5.413899999999819e-05, 5.318099999999937e-05, 5.127800000000182e-05, 5.318099999999937e-05, 5.3179999999999894e-05, 5.606900000000234e-05, 5.509700000000048e-05, 5.319400000000293e-05, 5.031900000000006e-05, 5.134799999999967e-05, 5.6999999999998024e-05, 5.41670000000008e-05, 5.22080000000015e-05, 5.5958000000001784e-05, 5.511100000000005e-05, 5.413900000000166e-05, 5.512499999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.533" endtime="20201112 09:44:17.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.529" endtime="20201112 09:44:17.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.539" endtime="20201112 09:44:17.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.542" endtime="20201112 09:44:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.541" endtime="20201112 09:44:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.537" endtime="20201112 09:44:17.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.165" endtime="20201112 09:44:17.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.164" endtime="20201112 09:44:17.563"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.573" endtime="20201112 09:44:17.595"></status>
</kw>
<msg timestamp="20201112 09:44:17.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.571" endtime="20201112 09:44:17.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.597" endtime="20201112 09:44:17.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.599" endtime="20201112 09:44:17.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.568" endtime="20201112 09:44:17.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.566" endtime="20201112 09:44:17.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.609" endtime="20201112 09:44:17.895"></status>
</kw>
<msg timestamp="20201112 09:44:17.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025343403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.607" endtime="20201112 09:44:17.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025343403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.899" endtime="20201112 09:44:17.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.908" endtime="20201112 09:44:17.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.604" endtime="20201112 09:44:17.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.602" endtime="20201112 09:44:17.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.915" level="INFO">${RESULT} = [{'time': 0.025408889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.548600000000002e-05, 'source_diff': 6.548600000000002e-05}, {'time': 0.025470236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.911" endtime="20201112 09:44:17.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.928" level="INFO">${ACCURACY} = {'diff': [6.548600000000002e-05, 5.511100000000005e-05, 5.612500000000062e-05, 5.212500000000009e-05, 5.512499999999962e-05, 5.687500000000137e-05, 5.412499999999862e-05, 5.511100000000005e-05, 5.1263...</msg>
<status status="PASS" starttime="20201112 09:44:17.916" endtime="20201112 09:44:17.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.933" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.932" endtime="20201112 09:44:17.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.936" level="INFO">VALUE: [6.548600000000002e-05, 5.511100000000005e-05, 5.612500000000062e-05, 5.212500000000009e-05, 5.512499999999962e-05, 5.687500000000137e-05, 5.412499999999862e-05, 5.511100000000005e-05, 5.126399999999878e-05, 5.691700000000008e-05, 5.515300000000223e-05, 5.501400000000253e-05, 5.123599999999964e-05, 5.4027999999997633e-05, 5.607000000000181e-05, 5.7014000000001064e-05, 5.30410000000002e-05, 5.118100000000084e-05, 5.5929999999999175e-05, 5.416699999999733e-05, 5.504200000000167e-05, 5.6930000000000175e-05, 5.312500000000109e-05, 5.213899999999966e-05, 5.3207999999999034e-05, 5.222200000000107e-05, 5.0223000000002016e-05, 5.223600000000064e-05, 5.6943999999999745e-05, 5.606899999999887e-05, 5.116700000000127e-05, 5.226399999999978e-05, 5.5013999999999064e-05, 5.03469999999992e-05, 5.1179999999997894e-05, 5.606899999999887e-05, 5.212500000000009e-05, 5.509700000000048e-05, 5.4999999999999494e-05, 5.220900000000098e-05, 5.511100000000005e-05, 5.309699999999848e-05, 5.3207999999999034e-05, 5.313900000000066e-05, 5.126399999999878e-05, 5.4985999999999924e-05, 5.2235999999997174e-05, 5.318099999999937e-05, 5.124999999999921e-05, 5.5943999999998745e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.935" endtime="20201112 09:44:17.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.929" endtime="20201112 09:44:17.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.940" endtime="20201112 09:44:17.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.943" endtime="20201112 09:44:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.942" endtime="20201112 09:44:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.938" endtime="20201112 09:44:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.564" endtime="20201112 09:44:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.564" endtime="20201112 09:44:17.965"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.974" endtime="20201112 09:44:17.994"></status>
</kw>
<msg timestamp="20201112 09:44:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.972" endtime="20201112 09:44:17.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.996" endtime="20201112 09:44:17.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.999" endtime="20201112 09:44:18.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.969" endtime="20201112 09:44:18.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.967" endtime="20201112 09:44:18.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.008" endtime="20201112 09:44:18.295"></status>
</kw>
<msg timestamp="20201112 09:44:18.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021141653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.007" endtime="20201112 09:44:18.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021141653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.299" endtime="20201112 09:44:18.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.308" endtime="20201112 09:44:18.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.004" endtime="20201112 09:44:18.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.002" endtime="20201112 09:44:18.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.315" level="INFO">${RESULT} = [{'time': 0.021203417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.176399999999888e-05, 'source_diff': 6.176399999999888e-05}, {'time': 0.021264167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.311" endtime="20201112 09:44:18.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.329" level="INFO">${ACCURACY} = {'diff': [6.176399999999888e-05, 5.607000000000181e-05, 5.60549999999993e-05, 5.211100000000052e-05, 5.127799999999835e-05, 5.127799999999835e-05, 5.213899999999966e-05, 5.125000000000268e-05, 5.12639...</msg>
<status status="PASS" starttime="20201112 09:44:18.316" endtime="20201112 09:44:18.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.333" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.332" endtime="20201112 09:44:18.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.336" level="INFO">VALUE: [6.176399999999888e-05, 5.607000000000181e-05, 5.60549999999993e-05, 5.211100000000052e-05, 5.127799999999835e-05, 5.127799999999835e-05, 5.213899999999966e-05, 5.125000000000268e-05, 5.126399999999878e-05, 5.113899999999866e-05, 5.122299999999955e-05, 5.126400000000225e-05, 5.03330000000031e-05, 5.695900000000226e-05, 5.127799999999835e-05, 5.412499999999862e-05, 5.222200000000107e-05, 5.319400000000293e-05, 5.611100000000105e-05, 5.402699999999816e-05, 5.411099999999905e-05, 5.308299999999891e-05, 5.3207999999999034e-05, 5.222200000000107e-05, 5.606999999999834e-05, 5.511100000000005e-05, 5.6000000000000494e-05, 5.413899999999819e-05, 5.511100000000005e-05, 5.50549999999983e-05, 5.027799999999735e-05, 5.31669999999998e-05, 5.304199999999967e-05, 5.219500000000141e-05, 5.32080000000025e-05, 5.0209000000002446e-05, 5.412499999999862e-05, 5.222200000000107e-05, 5.6902000000001035e-05, 5.22080000000015e-05, 5.6986000000001924e-05, 5.412500000000209e-05, 5.608399999999791e-05, 5.31669999999998e-05, 5.7000000000001494e-05, 5.412500000000209e-05, 5.124999999999921e-05, 5.688900000000094e-05, 5.413899999999819e-05, 5.225000000000021e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.334" endtime="20201112 09:44:18.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.330" endtime="20201112 09:44:18.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.340" endtime="20201112 09:44:18.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.343" endtime="20201112 09:44:18.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.342" endtime="20201112 09:44:18.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.338" endtime="20201112 09:44:18.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.966" endtime="20201112 09:44:18.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.965" endtime="20201112 09:44:18.365"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.374" endtime="20201112 09:44:18.395"></status>
</kw>
<msg timestamp="20201112 09:44:18.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.372" endtime="20201112 09:44:18.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.397" endtime="20201112 09:44:18.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.399" endtime="20201112 09:44:18.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.369" endtime="20201112 09:44:18.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.367" endtime="20201112 09:44:18.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.409" endtime="20201112 09:44:18.698"></status>
</kw>
<msg timestamp="20201112 09:44:18.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.407" endtime="20201112 09:44:18.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.702" endtime="20201112 09:44:18.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.711" endtime="20201112 09:44:18.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.404" endtime="20201112 09:44:18.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.403" endtime="20201112 09:44:18.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.718" level="INFO">${RESULT} = [{'time': 0.023161528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.341700000000189e-05, 'source_diff': 9.341700000000189e-05}, {'time': 0.023253181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.714" endtime="20201112 09:44:18.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.731" level="INFO">${ACCURACY} = {'diff': [9.341700000000189e-05, 8.575000000000249e-05, 8.470899999999879e-05, 8.765300000000004e-05, 8.381900000000234e-05, 8.186100000000252e-05, 8.38049999999993e-05, 8.376400000000006e-05, 8.19169...</msg>
<status status="PASS" starttime="20201112 09:44:18.719" endtime="20201112 09:44:18.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.736" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.735" endtime="20201112 09:44:18.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.739" level="INFO">VALUE: [9.341700000000189e-05, 8.575000000000249e-05, 8.470899999999879e-05, 8.765300000000004e-05, 8.381900000000234e-05, 8.186100000000252e-05, 8.38049999999993e-05, 8.376400000000006e-05, 8.191699999999733e-05, 8.672200000000088e-05, 8.477800000000063e-05, 8.661100000000033e-05, 8.661100000000033e-05, 8.574999999999902e-05, 8.572299999999936e-05, 8.47920000000002e-05, 8.388900000000019e-05, 8.668099999999818e-05, 8.09589999999985e-05, 8.670900000000079e-05, 8.191600000000132e-05, 8.481899999999987e-05, 8.18329999999999e-05, 8.473599999999845e-05, 8.479199999999673e-05, 8.573599999999945e-05, 8.477800000000063e-05, 8.66249999999999e-05, 8.572199999999988e-05, 8.666599999999913e-05, 8.190299999999776e-05, 8.3846999999998e-05, 8.669499999999775e-05, 8.286100000000005e-05, 8.473600000000192e-05, 8.46660000000006e-05, 8.668100000000165e-05, 8.669499999999775e-05, 8.658299999999772e-05, 8.101399999999731e-05, 8.188900000000165e-05, 8.468099999999965e-05, 8.479100000000073e-05, 8.468000000000017e-05, 8.66669999999986e-05, 8.190200000000175e-05, 8.572199999999988e-05, 8.277699999999916e-05, 8.476400000000106e-05, 8.08329999999989e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.737" endtime="20201112 09:44:18.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.732" endtime="20201112 09:44:18.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.742" endtime="20201112 09:44:18.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.746" endtime="20201112 09:44:18.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.745" endtime="20201112 09:44:18.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.741" endtime="20201112 09:44:18.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.366" endtime="20201112 09:44:18.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.365" endtime="20201112 09:44:18.767"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.776" endtime="20201112 09:44:18.797"></status>
</kw>
<msg timestamp="20201112 09:44:18.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.775" endtime="20201112 09:44:18.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.798" endtime="20201112 09:44:18.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.801" endtime="20201112 09:44:18.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.772" endtime="20201112 09:44:18.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.770" endtime="20201112 09:44:18.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.810" endtime="20201112 09:44:19.097"></status>
</kw>
<msg timestamp="20201112 09:44:19.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.809" endtime="20201112 09:44:19.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.101" endtime="20201112 09:44:19.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.110" endtime="20201112 09:44:19.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.806" endtime="20201112 09:44:19.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.804" endtime="20201112 09:44:19.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.116" level="INFO">${RESULT} = [{'time': 0.022281764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340299999999885e-05, 'source_diff': 9.340299999999885e-05}, {'time': 0.022372681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.113" endtime="20201112 09:44:19.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.129" level="INFO">${ACCURACY} = {'diff': [9.340299999999885e-05, 8.384799999999748e-05, 8.477800000000063e-05, 8.573599999999945e-05, 8.572199999999988e-05, 8.579199999999773e-05, 8.273599999999992e-05, 8.765300000000004e-05, 8.3819...</msg>
<status status="PASS" starttime="20201112 09:44:19.117" endtime="20201112 09:44:19.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.134" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.133" endtime="20201112 09:44:19.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.136" level="INFO">VALUE: [9.340299999999885e-05, 8.384799999999748e-05, 8.477800000000063e-05, 8.573599999999945e-05, 8.572199999999988e-05, 8.579199999999773e-05, 8.273599999999992e-05, 8.765300000000004e-05, 8.381999999999834e-05, 8.382000000000181e-05, 8.092999999999989e-05, 8.383299999999844e-05, 8.46249999999979e-05, 8.668099999999818e-05, 8.566599999999813e-05, 8.379099999999973e-05, 8.280600000000124e-05, 8.756899999999915e-05, 8.476399999999759e-05, 8.188900000000165e-05, 8.380600000000224e-05, 8.19170000000008e-05, 8.763900000000047e-05, 8.670800000000131e-05, 8.668099999999818e-05, 8.273599999999992e-05, 8.187500000000208e-05, 8.37919999999992e-05, 8.377700000000016e-05, 8.273599999999992e-05, 8.38330000000019e-05, 8.569500000000022e-05, 8.66660000000026e-05, 8.477700000000116e-05, 8.577699999999869e-05, 8.092999999999989e-05, 8.670900000000079e-05, 8.273599999999992e-05, 8.477800000000063e-05, 8.286100000000005e-05, 8.187499999999862e-05, 8.291699999999833e-05, 8.188900000000165e-05, 8.46249999999979e-05, 8.477800000000063e-05, 8.094399999999946e-05, 8.176399999999806e-05, 8.765300000000004e-05, 8.572199999999988e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.135" endtime="20201112 09:44:19.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.130" endtime="20201112 09:44:19.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.140" endtime="20201112 09:44:19.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.143" endtime="20201112 09:44:19.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.142" endtime="20201112 09:44:19.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.138" endtime="20201112 09:44:19.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.768" endtime="20201112 09:44:19.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.768" endtime="20201112 09:44:19.164"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.173" endtime="20201112 09:44:19.193"></status>
</kw>
<msg timestamp="20201112 09:44:19.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.171" endtime="20201112 09:44:19.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.195" endtime="20201112 09:44:19.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.197" endtime="20201112 09:44:19.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.169" endtime="20201112 09:44:19.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.167" endtime="20201112 09:44:19.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.206" endtime="20201112 09:44:19.493"></status>
</kw>
<msg timestamp="20201112 09:44:19.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.205" endtime="20201112 09:44:19.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.497" endtime="20201112 09:44:19.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.505" endtime="20201112 09:44:19.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.202" endtime="20201112 09:44:19.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.201" endtime="20201112 09:44:19.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.512" level="INFO">${RESULT} = [{'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.901400000000225e-05, 'source_diff': 7.901400000000225e-05}, {'time': 0.022256264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.508" endtime="20201112 09:44:19.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.525" level="INFO">${ACCURACY} = {'diff': [7.901400000000225e-05, 8.380600000000224e-05, 8.651400000000281e-05, 8.187499999999862e-05, 8.570899999999979e-05, 8.561099999999933e-05, 8.379099999999973e-05, 8.190200000000175e-05, 8.2777...</msg>
<status status="PASS" starttime="20201112 09:44:19.513" endtime="20201112 09:44:19.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.529" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.528" endtime="20201112 09:44:19.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.532" level="INFO">VALUE: [7.901400000000225e-05, 8.380600000000224e-05, 8.651400000000281e-05, 8.187499999999862e-05, 8.570899999999979e-05, 8.561099999999933e-05, 8.379099999999973e-05, 8.190200000000175e-05, 8.277799999999863e-05, 8.658300000000119e-05, 8.273599999999992e-05, 8.574999999999902e-05, 8.370900000000125e-05, 8.276399999999906e-05, 8.28330000000009e-05, 8.658400000000066e-05, 8.181999999999981e-05, 8.372300000000082e-05, 8.570800000000031e-05, 8.284700000000048e-05, 8.56249999999989e-05, 8.179099999999773e-05, 8.187499999999862e-05, 8.761099999999786e-05, 8.373600000000092e-05, 8.177799999999763e-05, 8.472199999999888e-05, 8.366700000000254e-05, 8.186099999999905e-05, 8.565299999999804e-05, 8.090300000000022e-05, 8.569500000000022e-05, 8.46669999999966e-05, 8.658400000000066e-05, 8.184699999999948e-05, 8.566700000000108e-05, 8.280599999999777e-05, 8.665299999999904e-05, 8.658400000000066e-05, 8.176399999999806e-05, 8.468000000000017e-05, 8.184699999999948e-05, 8.181900000000034e-05, 8.658300000000119e-05, 8.655500000000205e-05, 8.572199999999988e-05, 8.179200000000067e-05, 8.477800000000063e-05, 8.37919999999992e-05, 8.288899999999919e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.530" endtime="20201112 09:44:19.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.526" endtime="20201112 09:44:19.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.535" endtime="20201112 09:44:19.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.539" endtime="20201112 09:44:19.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.537" endtime="20201112 09:44:19.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.534" endtime="20201112 09:44:19.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.165" endtime="20201112 09:44:19.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.165" endtime="20201112 09:44:19.560"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.568" endtime="20201112 09:44:19.591"></status>
</kw>
<msg timestamp="20201112 09:44:19.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.567" endtime="20201112 09:44:19.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.593" endtime="20201112 09:44:19.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.595" endtime="20201112 09:44:19.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.564" endtime="20201112 09:44:19.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.562" endtime="20201112 09:44:19.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.604" endtime="20201112 09:44:19.890"></status>
</kw>
<msg timestamp="20201112 09:44:19.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023507028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.603" endtime="20201112 09:44:19.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023507028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.894" endtime="20201112 09:44:19.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.902" endtime="20201112 09:44:19.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.600" endtime="20201112 09:44:19.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.598" endtime="20201112 09:44:19.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.909" level="INFO">${RESULT} = [{'time': 0.023605194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.816600000000023e-05, 'source_diff': 9.816600000000023e-05}, {'time': 0.023696319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.906" endtime="20201112 09:44:19.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.922" level="INFO">${ACCURACY} = {'diff': [9.816600000000023e-05, 8.573599999999945e-05, 8.188899999999819e-05, 8.669400000000174e-05, 8.573599999999945e-05, 8.273599999999992e-05, 8.188899999999819e-05, 8.380599999999877e-05, 8.4791...</msg>
<status status="PASS" starttime="20201112 09:44:19.910" endtime="20201112 09:44:19.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.927" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.926" endtime="20201112 09:44:19.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.929" level="INFO">VALUE: [9.816600000000023e-05, 8.573599999999945e-05, 8.188899999999819e-05, 8.669400000000174e-05, 8.573599999999945e-05, 8.273599999999992e-05, 8.188899999999819e-05, 8.380599999999877e-05, 8.479100000000073e-05, 8.288900000000265e-05, 8.56249999999989e-05, 8.670799999999784e-05, 8.574999999999902e-05, 8.477800000000063e-05, 8.366700000000254e-05, 8.380599999999877e-05, 8.286100000000005e-05, 8.472200000000235e-05, 8.284700000000048e-05, 8.180500000000077e-05, 8.18329999999999e-05, 8.477800000000063e-05, 8.288899999999919e-05, 8.18329999999999e-05, 8.094399999999946e-05, 8.573599999999945e-05, 8.563899999999847e-05, 8.572199999999988e-05, 8.188799999999871e-05, 8.380600000000224e-05, 8.381900000000234e-05, 8.191599999999785e-05, 8.38049999999993e-05, 8.180600000000024e-05, 8.287499999999962e-05, 8.668100000000165e-05, 8.190299999999776e-05, 8.36110000000008e-05, 8.574999999999902e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.380600000000224e-05, 8.287499999999962e-05, 8.477800000000063e-05, 8.766600000000013e-05, 8.754199999999948e-05, 8.575000000000249e-05, 8.28330000000009e-05, 8.476399999999759e-05, 8.288900000000265e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.928" endtime="20201112 09:44:19.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.923" endtime="20201112 09:44:19.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.933" endtime="20201112 09:44:19.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.936" endtime="20201112 09:44:19.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.935" endtime="20201112 09:44:19.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.931" endtime="20201112 09:44:19.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.561" endtime="20201112 09:44:19.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.560" endtime="20201112 09:44:19.957"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.966" endtime="20201112 09:44:19.992"></status>
</kw>
<msg timestamp="20201112 09:44:19.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.964" endtime="20201112 09:44:19.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.993" endtime="20201112 09:44:19.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.996" endtime="20201112 09:44:19.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.962" endtime="20201112 09:44:19.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.960" endtime="20201112 09:44:19.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.006" endtime="20201112 09:44:20.294"></status>
</kw>
<msg timestamp="20201112 09:44:20.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.004" endtime="20201112 09:44:20.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.299" endtime="20201112 09:44:20.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.307" endtime="20201112 09:44:20.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.002" endtime="20201112 09:44:20.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.000" endtime="20201112 09:44:20.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.313" level="INFO">${RESULT} = [{'time': 0.022908417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.469499999999922e-05, 'source_diff': 8.469499999999922e-05}, {'time': 0.023000417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.310" endtime="20201112 09:44:20.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.371" level="INFO">${ACCURACY} = {'diff': [8.469499999999922e-05, 8.762499999999743e-05, 8.375000000000049e-05, 8.276399999999906e-05, 8.097299999999807e-05, 8.179200000000067e-05, 8.466700000000008e-05, 8.479099999999726e-05, 8.5610...</msg>
<status status="PASS" starttime="20201112 09:44:20.314" endtime="20201112 09:44:20.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.376" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.375" endtime="20201112 09:44:20.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.378" level="INFO">VALUE: [8.469499999999922e-05, 8.762499999999743e-05, 8.375000000000049e-05, 8.276399999999906e-05, 8.097299999999807e-05, 8.179200000000067e-05, 8.466700000000008e-05, 8.479099999999726e-05, 8.561099999999933e-05, 8.472299999999836e-05, 8.555500000000105e-05, 8.470800000000278e-05, 8.284700000000048e-05, 8.28330000000009e-05, 8.472299999999836e-05, 8.376400000000006e-05, 8.381900000000234e-05, 8.468099999999965e-05, 8.476400000000106e-05, 8.468000000000017e-05, 8.574999999999902e-05, 8.367999999999917e-05, 8.284700000000048e-05, 8.180500000000077e-05, 8.09169999999998e-05, 8.180600000000024e-05, 8.27780000000021e-05, 8.577800000000163e-05, 8.375000000000049e-05, 8.276400000000253e-05, 8.376400000000006e-05, 8.568099999999718e-05, 8.369500000000168e-05, 8.469399999999974e-05, 8.761099999999786e-05, 8.758399999999819e-05, 8.188899999999819e-05, 8.656899999999815e-05, 8.276399999999906e-05, 8.472200000000235e-05, 8.094400000000293e-05, 8.376400000000006e-05, 8.66530000000025e-05, 8.375000000000049e-05, 8.574999999999902e-05, 8.186099999999905e-05, 8.4846999999999e-05, 8.181900000000034e-05, 8.672200000000088e-05, 8.370800000000178e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.377" endtime="20201112 09:44:20.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.372" endtime="20201112 09:44:20.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.382" endtime="20201112 09:44:20.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.385" endtime="20201112 09:44:20.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.384" endtime="20201112 09:44:20.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.380" endtime="20201112 09:44:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.958" endtime="20201112 09:44:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.958" endtime="20201112 09:44:20.406"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.415" endtime="20201112 09:44:20.435"></status>
</kw>
<msg timestamp="20201112 09:44:20.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.414" endtime="20201112 09:44:20.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.436" endtime="20201112 09:44:20.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.439" endtime="20201112 09:44:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.411" endtime="20201112 09:44:20.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.408" endtime="20201112 09:44:20.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.448" endtime="20201112 09:44:20.732"></status>
</kw>
<msg timestamp="20201112 09:44:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.446" endtime="20201112 09:44:20.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.736" endtime="20201112 09:44:20.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.745" endtime="20201112 09:44:20.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.443" endtime="20201112 09:44:20.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.442" endtime="20201112 09:44:20.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.751" level="INFO">${RESULT} = [{'time': 0.021168069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.227700000000253e-05, 'source_diff': 7.227700000000253e-05}, {'time': 0.021259, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:20.748" endtime="20201112 09:44:20.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.765" level="INFO">${ACCURACY} = {'diff': [7.227700000000253e-05, 8.568100000000065e-05, 8.66249999999999e-05, 8.56249999999989e-05, 8.183399999999938e-05, 8.565299999999804e-05, 8.761099999999786e-05, 8.761100000000133e-05, 8.569400...</msg>
<status status="PASS" starttime="20201112 09:44:20.752" endtime="20201112 09:44:20.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.769" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.768" endtime="20201112 09:44:20.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.772" level="INFO">VALUE: [7.227700000000253e-05, 8.568100000000065e-05, 8.66249999999999e-05, 8.56249999999989e-05, 8.183399999999938e-05, 8.565299999999804e-05, 8.761099999999786e-05, 8.761100000000133e-05, 8.569400000000074e-05, 8.28049999999983e-05, 8.277799999999863e-05, 8.566700000000108e-05, 8.66249999999999e-05, 8.280600000000124e-05, 8.472199999999888e-05, 8.280600000000124e-05, 8.38049999999993e-05, 8.368099999999865e-05, 8.376399999999659e-05, 8.180600000000024e-05, 8.655499999999858e-05, 8.476399999999759e-05, 8.754200000000295e-05, 8.752799999999991e-05, 8.283400000000038e-05, 8.27780000000021e-05, 8.477700000000116e-05, 8.561099999999933e-05, 8.666599999999913e-05, 8.17780000000011e-05, 8.09719999999986e-05, 8.090300000000022e-05, 8.458399999999866e-05, 8.377700000000016e-05, 8.474999999999802e-05, 8.372199999999788e-05, 8.284700000000048e-05, 8.286100000000005e-05, 8.086100000000151e-05, 8.569400000000074e-05, 8.473600000000192e-05, 8.568100000000065e-05, 8.17780000000011e-05, 8.561099999999933e-05, 8.280500000000177e-05, 8.28330000000009e-05, 8.277699999999916e-05, 8.761100000000133e-05, 8.563900000000194e-05, 8.655599999999805e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.770" endtime="20201112 09:44:20.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.766" endtime="20201112 09:44:20.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.775" endtime="20201112 09:44:20.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.779" endtime="20201112 09:44:20.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.777" endtime="20201112 09:44:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.773" endtime="20201112 09:44:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.407" endtime="20201112 09:44:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.406" endtime="20201112 09:44:20.800"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.809" endtime="20201112 09:44:20.831"></status>
</kw>
<msg timestamp="20201112 09:44:20.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.807" endtime="20201112 09:44:20.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.833" endtime="20201112 09:44:20.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.835" endtime="20201112 09:44:20.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.804" endtime="20201112 09:44:20.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.802" endtime="20201112 09:44:20.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.844" endtime="20201112 09:44:21.130"></status>
</kw>
<msg timestamp="20201112 09:44:21.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024569958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.843" endtime="20201112 09:44:21.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024569958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.134" endtime="20201112 09:44:21.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.142" endtime="20201112 09:44:21.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.840" endtime="20201112 09:44:21.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.838" endtime="20201112 09:44:21.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.149" level="INFO">${RESULT} = [{'time': 0.024652778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.282000000000081e-05, 'source_diff': 8.282000000000081e-05}, {'time': 0.024744278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.146" endtime="20201112 09:44:21.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.162" level="INFO">${ACCURACY} = {'diff': [8.282000000000081e-05, 8.568100000000065e-05, 8.370800000000178e-05, 8.094499999999893e-05, 8.370800000000178e-05, 8.666700000000208e-05, 8.277799999999863e-05, 8.181900000000034e-05, 8.2820...</msg>
<status status="PASS" starttime="20201112 09:44:21.150" endtime="20201112 09:44:21.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.167" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.166" endtime="20201112 09:44:21.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.169" level="INFO">VALUE: [8.282000000000081e-05, 8.568100000000065e-05, 8.370800000000178e-05, 8.094499999999893e-05, 8.370800000000178e-05, 8.666700000000208e-05, 8.277799999999863e-05, 8.181900000000034e-05, 8.282000000000081e-05, 8.476399999999759e-05, 8.173599999999892e-05, 8.66119999999998e-05, 8.369400000000221e-05, 8.376400000000006e-05, 8.573599999999945e-05, 8.752700000000044e-05, 8.376400000000006e-05, 8.088800000000118e-05, 8.46660000000006e-05, 8.286100000000005e-05, 8.369399999999874e-05, 8.570899999999979e-05, 8.370800000000178e-05, 8.277799999999863e-05, 8.08329999999989e-05, 8.565299999999804e-05, 8.659700000000076e-05, 8.184699999999948e-05, 8.668000000000217e-05, 8.276399999999906e-05, 8.286100000000005e-05, 8.56119999999988e-05, 8.761100000000133e-05, 8.270800000000078e-05, 8.186099999999905e-05, 8.280500000000177e-05, 8.187499999999862e-05, 8.657000000000109e-05, 8.286100000000005e-05, 8.658300000000119e-05, 8.190299999999776e-05, 8.663899999999947e-05, 8.663900000000294e-05, 8.657000000000109e-05, 8.477800000000063e-05, 8.655599999999805e-05, 8.474999999999802e-05, 8.577800000000163e-05, 8.370800000000178e-05, 8.100000000000121e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.168" endtime="20201112 09:44:21.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.163" endtime="20201112 09:44:21.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.173" endtime="20201112 09:44:21.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.176" endtime="20201112 09:44:21.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.175" endtime="20201112 09:44:21.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.171" endtime="20201112 09:44:21.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.800" endtime="20201112 09:44:21.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.800" endtime="20201112 09:44:21.197"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.206" endtime="20201112 09:44:21.229"></status>
</kw>
<msg timestamp="20201112 09:44:21.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.204" endtime="20201112 09:44:21.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.231" endtime="20201112 09:44:21.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.233" endtime="20201112 09:44:21.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.202" endtime="20201112 09:44:21.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.200" endtime="20201112 09:44:21.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.242" endtime="20201112 09:44:21.528"></status>
</kw>
<msg timestamp="20201112 09:44:21.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023834056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.241" endtime="20201112 09:44:21.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023834056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.532" endtime="20201112 09:44:21.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.540" endtime="20201112 09:44:21.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.238" endtime="20201112 09:44:21.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.236" endtime="20201112 09:44:21.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.547" level="INFO">${RESULT} = [{'time': 0.023834056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.413900000000084e-05, 'source_diff': 7.413900000000084e-05}, {'time': 0.023926403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.543" endtime="20201112 09:44:21.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.560" level="INFO">${ACCURACY} = {'diff': [7.413900000000084e-05, 8.186099999999905e-05, 8.170899999999925e-05, 8.566700000000108e-05, 8.186099999999905e-05, 8.46530000000005e-05, 8.276400000000253e-05, 8.379099999999973e-05, 8.38049...</msg>
<status status="PASS" starttime="20201112 09:44:21.548" endtime="20201112 09:44:21.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.564" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.563" endtime="20201112 09:44:21.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.567" level="INFO">VALUE: [7.413900000000084e-05, 8.186099999999905e-05, 8.170899999999925e-05, 8.566700000000108e-05, 8.186099999999905e-05, 8.46530000000005e-05, 8.276400000000253e-05, 8.379099999999973e-05, 8.38049999999993e-05, 8.375000000000049e-05, 8.46799999999967e-05, 8.276399999999906e-05, 8.754100000000001e-05, 8.181900000000034e-05, 8.66660000000026e-05, 8.279200000000167e-05, 8.76250000000009e-05, 8.086099999999805e-05, 8.28330000000009e-05, 8.472200000000235e-05, 8.283400000000038e-05, 8.565299999999804e-05, 8.19170000000008e-05, 8.373599999999745e-05, 8.383299999999844e-05, 8.18329999999999e-05, 8.07910000000002e-05, 8.180599999999677e-05, 8.190299999999776e-05, 8.183400000000285e-05, 8.661100000000033e-05, 8.566599999999813e-05, 8.081999999999881e-05, 8.279200000000167e-05, 8.568000000000117e-05, 8.370799999999831e-05, 8.476399999999759e-05, 8.181900000000034e-05, 8.369499999999822e-05, 8.277799999999863e-05, 8.468099999999965e-05, 8.56530000000015e-05, 8.287500000000309e-05, 8.656900000000162e-05, 8.37780000000031e-05, 8.66119999999998e-05, 8.759700000000176e-05, 8.469399999999974e-05, 8.090299999999676e-05, 8.758400000000166e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.566" endtime="20201112 09:44:21.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.561" endtime="20201112 09:44:21.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.571" endtime="20201112 09:44:21.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.574" endtime="20201112 09:44:21.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.572" endtime="20201112 09:44:21.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.569" endtime="20201112 09:44:21.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.198" endtime="20201112 09:44:21.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.198" endtime="20201112 09:44:21.595"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.603" endtime="20201112 09:44:21.626"></status>
</kw>
<msg timestamp="20201112 09:44:21.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.602" endtime="20201112 09:44:21.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.627" endtime="20201112 09:44:21.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.630" endtime="20201112 09:44:21.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.599" endtime="20201112 09:44:21.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.597" endtime="20201112 09:44:21.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.639" endtime="20201112 09:44:21.925"></status>
</kw>
<msg timestamp="20201112 09:44:21.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023168778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.637" endtime="20201112 09:44:21.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023168778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.929" endtime="20201112 09:44:21.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.937" endtime="20201112 09:44:21.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.635" endtime="20201112 09:44:21.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.633" endtime="20201112 09:44:21.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.943" level="INFO">${RESULT} = [{'time': 0.023168778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.704199999999939e-05, 'source_diff': 7.704199999999939e-05}, {'time': 0.023260625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.940" endtime="20201112 09:44:21.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.958" level="INFO">${ACCURACY} = {'diff': [7.704199999999939e-05, 8.381899999999887e-05, 8.284700000000048e-05, 8.183400000000285e-05, 8.473600000000192e-05, 8.382000000000181e-05, 8.658300000000119e-05, 8.669399999999827e-05, 8.2861...</msg>
<status status="PASS" starttime="20201112 09:44:21.945" endtime="20201112 09:44:21.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.962" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.961" endtime="20201112 09:44:21.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.965" level="INFO">VALUE: [7.704199999999939e-05, 8.381899999999887e-05, 8.284700000000048e-05, 8.183400000000285e-05, 8.473600000000192e-05, 8.382000000000181e-05, 8.658300000000119e-05, 8.669399999999827e-05, 8.286199999999952e-05, 8.268100000000111e-05, 8.092999999999989e-05, 8.476400000000106e-05, 8.094499999999893e-05, 8.190300000000122e-05, 8.286100000000005e-05, 8.569500000000022e-05, 8.47370000000014e-05, 8.187499999999862e-05, 8.666599999999913e-05, 8.281900000000134e-05, 8.381900000000234e-05, 8.756899999999915e-05, 8.090300000000022e-05, 8.66249999999999e-05, 8.469399999999974e-05, 8.190299999999776e-05, 8.66249999999999e-05, 8.288899999999919e-05, 8.476400000000106e-05, 8.655499999999858e-05, 8.174999999999849e-05, 8.670900000000079e-05, 8.558300000000019e-05, 8.472199999999888e-05, 8.750000000000077e-05, 8.181900000000034e-05, 8.187499999999862e-05, 8.669499999999775e-05, 8.465200000000103e-05, 8.569400000000074e-05, 8.283400000000038e-05, 8.565299999999804e-05, 8.477800000000063e-05, 8.380599999999877e-05, 8.088900000000065e-05, 8.466700000000008e-05, 8.473599999999845e-05, 8.557000000000009e-05, 8.381900000000234e-05, 8.657000000000109e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.963" endtime="20201112 09:44:21.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.959" endtime="20201112 09:44:21.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.973" endtime="20201112 09:44:21.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.976" endtime="20201112 09:44:21.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.975" endtime="20201112 09:44:21.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.971" endtime="20201112 09:44:21.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.596" endtime="20201112 09:44:21.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.595" endtime="20201112 09:44:21.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.994" endtime="20201112 09:44:21.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.002" endtime="20201112 09:44:22.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.000" endtime="20201112 09:44:22.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.999" endtime="20201112 09:44:22.022"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:41.913" endtime="20201112 09:44:22.022" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:00.579" endtime="20201112 09:44:22.026"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.081" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:44:22.089" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:44:23.212" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:44:22.080" endtime="20201112 09:44:23.213"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.215" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:44:23.214" endtime="20201112 09:44:23.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.078" endtime="20201112 09:44:23.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.218" endtime="20201112 09:44:23.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.217" endtime="20201112 09:44:23.404"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.430" endtime="20201112 09:44:23.464"></status>
</kw>
<msg timestamp="20201112 09:44:23.465" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['l-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream...</msg>
<status status="PASS" starttime="20201112 09:44:23.427" endtime="20201112 09:44:23.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['l-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream...</msg>
<status status="PASS" starttime="20201112 09:44:23.467" endtime="20201112 09:44:23.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.476" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:23.472" endtime="20201112 09:44:23.477"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.422" endtime="20201112 09:44:23.478"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.417" endtime="20201112 09:44:23.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.415" endtime="20201112 09:44:23.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:23.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:23.488" endtime="20201112 09:44:23.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.482" endtime="20201112 09:44:23.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.413" endtime="20201112 09:44:23.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.411" endtime="20201112 09:44:23.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.494" endtime="20201112 09:44:23.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.409" endtime="20201112 09:44:23.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.500" endtime="20201112 09:44:23.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.406" endtime="20201112 09:44:23.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.077" endtime="20201112 09:44:23.505"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.512" endtime="20201112 09:44:23.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.510" endtime="20201112 09:44:23.532"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.545" endtime="20201112 09:44:23.570"></status>
</kw>
<msg timestamp="20201112 09:44:23.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.543" endtime="20201112 09:44:23.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.572" endtime="20201112 09:44:23.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.577" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:23.575" endtime="20201112 09:44:23.577"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.541" endtime="20201112 09:44:23.577"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.538" endtime="20201112 09:44:23.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.537" endtime="20201112 09:44:23.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:23.582" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:23.581" endtime="20201112 09:44:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.579" endtime="20201112 09:44:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.536" endtime="20201112 09:44:23.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.536" endtime="20201112 09:44:23.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.584" endtime="20201112 09:44:23.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.534" endtime="20201112 09:44:23.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.533" endtime="20201112 09:44:23.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.509" endtime="20201112 09:44:23.587"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:23.590" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.600" endtime="20201112 09:44:25.705"></status>
</kw>
<msg timestamp="20201112 09:44:25.706" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 437988, 'wakeups': [448028, 458007, 468017, 477996, 488006, 498016, 50...</msg>
<status status="PASS" starttime="20201112 09:44:23.598" endtime="20201112 09:44:25.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 437988, 'wakeups': [448028, 458007, 468017, 477996, 488006, 498016, 50...</msg>
<status status="PASS" starttime="20201112 09:44:25.709" endtime="20201112 09:44:25.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.715" endtime="20201112 09:44:25.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.595" endtime="20201112 09:44:25.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.592" endtime="20201112 09:44:25.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.726" level="INFO">${RESULT} = {'wakeups': [448028, 458007, 468017, 477996, 488006, 498016, 507995, 518005, 528015, 537994, 548004, 558013, 567993, 578002, 588012, 597991, 608001, 618011, 627990, 638000, 648010, 657989, 667999, 678...</msg>
<status status="PASS" starttime="20201112 09:44:25.722" endtime="20201112 09:44:25.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.735" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:25.732" endtime="20201112 09:44:25.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.739" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:25.737" endtime="20201112 09:44:25.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.728" endtime="20201112 09:44:25.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.749" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:25.747" endtime="20201112 09:44:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.753" level="INFO">VALUE: 437988</msg>
<status status="PASS" starttime="20201112 09:44:25.751" endtime="20201112 09:44:25.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.742" endtime="20201112 09:44:25.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.758" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:25.757" endtime="20201112 09:44:25.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.760" level="INFO">VALUE: [448028, 458007, 468017, 477996, 488006, 498016, 507995, 518005, 528015, 537994, 548004, 558013, 567993, 578002, 588012, 597991, 608001, 618011, 627990, 638000, 648010, 657989, 667999, 678009, 687988, 697998, 708007, 718017, 727996, 738006, 748016, 757995, 768005, 778015, 787994, 798004, 808013, 817993, 828002, 838012, 847991, 858001, 868011, 877990, 888000, 898010, 907989, 917999, 928009, 937988, 947998, 958007, 968017, 977996, 988006, 998016, 1007995, 1018005, 1028015, 1037994, 1048004, 1058013, 1067993, 1078002, 1088012, 1097991, 1108001, 1118011, 1127990, 1138000, 1148010, 1157989, 1167999, 1178009, 1187988, 1197998, 1208007, 1218017, 1227996, 1238006, 1248016, 1257995, 1268005, 1278015, 1287994, 1298004, 1308013, 1317993, 1328002, 1338012, 1347991, 1358001, 1368011, 1377990, 1388000, 1398010, 1407989, 1417999, 1428009, 1437988]</msg>
<status status="PASS" starttime="20201112 09:44:25.759" endtime="20201112 09:44:25.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.755" endtime="20201112 09:44:25.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.768" endtime="20201112 09:44:26.064"></status>
</kw>
<msg timestamp="20201112 09:44:26.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078279736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.088302181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.766" endtime="20201112 09:44:26.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078279736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.088302181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.068" endtime="20201112 09:44:26.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.076" endtime="20201112 09:44:26.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.764" endtime="20201112 09:44:26.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.762" endtime="20201112 09:44:26.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.102" level="INFO">${RESULT} = {'diff': [0, 0.010022444999999991, 0.009978888000000005, 0.010009417000000007, 0.009978985999999995, 0.010009402999999986, 0.010009514000000025, 0.009978916999999976, 0.010009457999999999, 0.010009403...</msg>
<status status="PASS" starttime="20201112 09:44:26.079" endtime="20201112 09:44:26.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.107" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:26.106" endtime="20201112 09:44:26.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.109" level="INFO">VALUE: 0.078279736</msg>
<status status="PASS" starttime="20201112 09:44:26.108" endtime="20201112 09:44:26.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.103" endtime="20201112 09:44:26.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.114" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:26.113" endtime="20201112 09:44:26.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.116" level="INFO">VALUE: [0.088302181, 0.098281069, 0.108290486, 0.118269472, 0.128278875, 0.138288389, 0.148267306, 0.158276764, 0.168286167, 0.178265139, 0.188274583, 0.198284, 0.208263, 0.218272375, 0.228281889, 0.238260792, 0.248270236, 0.258279736, 0.268258625, 0.278268083, 0.2882775, 0.298256431, 0.308265917, 0.318275375, 0.328254319, 0.338263722, 0.348273222, 0.358282625, 0.368261542, 0.378271014, 0.388280542, 0.398259403, 0.408268903, 0.418278333, 0.428257208, 0.438266639, 0.448276153, 0.458255125, 0.468264528, 0.478273986, 0.488252903, 0.498262403, 0.508271806, 0.518250778, 0.528260194, 0.538269653, 0.548248583, 0.558258125, 0.568267472, 0.578246417, 0.588255847, 0.598265292, 0.608274736, 0.618253694, 0.628263153, 0.638272569, 0.648251528, 0.658260958, 0.668270403, 0.678249333, 0.688258778, 0.69826825, 0.708247167, 0.718256667, 0.728266069, 0.738244972, 0.748254417, 0.758263861, 0.768242861, 0.778252278, 0.788261736, 0.798240667, 0.808250083, 0.818259542, 0.828238514, 0.838247958, 0.848257375, 0.858266903, 0.868245792, 0.878255222, 0.888264639, 0.898243653, 0.908253069, 0.918262514, 0.928241472, 0.938250903, 0.948260333, 0.958239319, 0.968248764, 0.978258167, 0.988237069, 0.998246625, 1.008256, 1.018234917, 1.028244375, 1.038253833, 1.048232764, 1.058242181, 1.068251694, 1.078230639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:26.115" endtime="20201112 09:44:26.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.110" endtime="20201112 09:44:26.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.119" endtime="20201112 09:44:26.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.123" endtime="20201112 09:44:26.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.121" endtime="20201112 09:44:26.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.118" endtime="20201112 09:44:26.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.591" endtime="20201112 09:44:26.144"></status>
</kw>
<msg timestamp="20201112 09:44:26.144" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.152" endtime="20201112 09:44:28.266"></status>
</kw>
<msg timestamp="20201112 09:44:28.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2990539, 'wakeups': [3000549, 3010559, 3020568, 3030548, 3040557, 3050...</msg>
<status status="PASS" starttime="20201112 09:44:26.150" endtime="20201112 09:44:28.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2990539, 'wakeups': [3000549, 3010559, 3020568, 3030548, 3040557, 3050...</msg>
<status status="PASS" starttime="20201112 09:44:28.269" endtime="20201112 09:44:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.275" endtime="20201112 09:44:28.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.148" endtime="20201112 09:44:28.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.146" endtime="20201112 09:44:28.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.287" level="INFO">${RESULT} = {'wakeups': [3000549, 3010559, 3020568, 3030548, 3040557, 3050567, 3060546, 3070556, 3080566, 3090545, 3100555, 3110565, 3120544, 3130554, 3140563, 3150543, 3160552, 3170562, 3180541, 3190551, 3200561...</msg>
<status status="PASS" starttime="20201112 09:44:28.283" endtime="20201112 09:44:28.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.298" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:28.296" endtime="20201112 09:44:28.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.302" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:28.300" endtime="20201112 09:44:28.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.289" endtime="20201112 09:44:28.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.311" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.310" endtime="20201112 09:44:28.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.313" level="INFO">VALUE: 2990539</msg>
<status status="PASS" starttime="20201112 09:44:28.312" endtime="20201112 09:44:28.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.306" endtime="20201112 09:44:28.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.318" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.317" endtime="20201112 09:44:28.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.320" level="INFO">VALUE: [3000549, 3010559, 3020568, 3030548, 3040557, 3050567, 3060546, 3070556, 3080566, 3090545, 3100555, 3110565, 3120544, 3130554, 3140563, 3150543, 3160552, 3170562, 3180541, 3190551, 3200561, 3210540, 3220550, 3230560, 3240539, 3250549, 3260559, 3270568, 3280548, 3290557, 3300567, 3310546, 3320556, 3330566, 3340545, 3350555, 3360565, 3370544, 3380554, 3390563, 3400543, 3410552, 3420562, 3430541, 3440551, 3450561, 3460540, 3470550, 3480560, 3490539, 3500549, 3510559, 3520568, 3530548, 3540557, 3550567, 3560546, 3570556, 3580566, 3590545, 3600555, 3610565, 3620544, 3630554, 3640563, 3650543, 3660552, 3670562, 3680541, 3690551, 3700561, 3710540, 3720550, 3730560, 3740539, 3750549, 3760559, 3770568, 3780548, 3790557, 3800567, 3810546, 3820556, 3830566, 3840545, 3850555, 3860565, 3870544, 3880554, 3890563, 3900543, 3910552, 3920562, 3930541, 3940551, 3950561, 3960540, 3970550, 3980560, 3990539]</msg>
<status status="PASS" starttime="20201112 09:44:28.319" endtime="20201112 09:44:28.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.315" endtime="20201112 09:44:28.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.327" endtime="20201112 09:44:28.618"></status>
</kw>
<msg timestamp="20201112 09:44:28.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.326" endtime="20201112 09:44:28.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.621" endtime="20201112 09:44:28.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.629" endtime="20201112 09:44:28.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.323" endtime="20201112 09:44:28.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.322" endtime="20201112 09:44:28.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.656" level="INFO">${RESULT} = {'diff': [0, 0.009995819999999999, 0.010009429999999996, 0.010009514000000004, 0.009978860999999999, 0.010009458000000006, 0.010009431, 0.009979041999999994, 0.010009361000000008, 0.010009471999999991...</msg>
<status status="PASS" starttime="20201112 09:44:28.632" endtime="20201112 09:44:28.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.661" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.660" endtime="20201112 09:44:28.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.663" level="INFO">VALUE: 0.019594736</msg>
<status status="PASS" starttime="20201112 09:44:28.662" endtime="20201112 09:44:28.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.657" endtime="20201112 09:44:28.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.668" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.667" endtime="20201112 09:44:28.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.670" level="INFO">VALUE: [0.029590556, 0.039599986, 0.0496095, 0.059588361, 0.069597819, 0.07960725, 0.089586292, 0.099595653, 0.109605125, 0.119584056, 0.129593542, 0.139602944, 0.149581833, 0.159591319, 0.169600792, 0.179579708, 0.189589111, 0.199598667, 0.209577583, 0.219587014, 0.229596403, 0.239575375, 0.249584847, 0.25959425, 0.269573167, 0.279582736, 0.289592111, 0.299601514, 0.309580528, 0.319589931, 0.329599389, 0.339578306, 0.34958775, 0.359597208, 0.369576125, 0.379585556, 0.389595056, 0.399573986, 0.409583417, 0.419592903, 0.429571833, 0.439581208, 0.449590694, 0.459569667, 0.469579083, 0.479588569, 0.489567458, 0.499576903, 0.509586319, 0.519565347, 0.52957475, 0.539584208, 0.549593653, 0.559572583, 0.569582028, 0.579591486, 0.589570417, 0.599579847, 0.609589333, 0.619568194, 0.629577708, 0.639587167, 0.649566083, 0.659575528, 0.669585042, 0.679563931, 0.689573361, 0.699582889, 0.709561708, 0.719571194, 0.729580625, 0.739559625, 0.749569, 0.7595785, 0.769557403, 0.779566819, 0.789576361, 0.799585722, 0.809564708, 0.819574153, 0.829583569, 0.839562528, 0.849571986, 0.859581431, 0.869560361, 0.879569819, 0.889579264, 0.899558153, 0.909567639, 0.919577083, 0.929556028, 0.939565444, 0.949574931, 0.959553875, 0.969563319, 0.979572708, 0.989551708, 0.999561167, 1.009570556, 1.0195495] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:28.669" endtime="20201112 09:44:28.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.664" endtime="20201112 09:44:28.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.673" endtime="20201112 09:44:28.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.677" endtime="20201112 09:44:28.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.675" endtime="20201112 09:44:28.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.672" endtime="20201112 09:44:28.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.144" endtime="20201112 09:44:28.698"></status>
</kw>
<msg timestamp="20201112 09:44:28.698" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.706" endtime="20201112 09:44:30.822"></status>
</kw>
<msg timestamp="20201112 09:44:30.823" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5548156, 'wakeups': [5558166, 5568176, 5578186, 5588165, 5598175, 5608...</msg>
<status status="PASS" starttime="20201112 09:44:28.704" endtime="20201112 09:44:30.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5548156, 'wakeups': [5558166, 5568176, 5578186, 5588165, 5598175, 5608...</msg>
<status status="PASS" starttime="20201112 09:44:30.826" endtime="20201112 09:44:30.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.832" endtime="20201112 09:44:30.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.702" endtime="20201112 09:44:30.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.700" endtime="20201112 09:44:30.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.842" level="INFO">${RESULT} = {'wakeups': [5558166, 5568176, 5578186, 5588165, 5598175, 5608184, 5618164, 5628173, 5638183, 5648162, 5658172, 5668182, 5678161, 5688171, 5698181, 5708160, 5718170, 5728179, 5738159, 5748168, 5758178...</msg>
<status status="PASS" starttime="20201112 09:44:30.838" endtime="20201112 09:44:30.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.851" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:30.849" endtime="20201112 09:44:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.855" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:30.853" endtime="20201112 09:44:30.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.844" endtime="20201112 09:44:30.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.865" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:30.863" endtime="20201112 09:44:30.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.867" level="INFO">VALUE: 5548156</msg>
<status status="PASS" starttime="20201112 09:44:30.866" endtime="20201112 09:44:30.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.858" endtime="20201112 09:44:30.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.872" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:30.871" endtime="20201112 09:44:30.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.874" level="INFO">VALUE: [5558166, 5568176, 5578186, 5588165, 5598175, 5608184, 5618164, 5628173, 5638183, 5648162, 5658172, 5668182, 5678161, 5688171, 5698181, 5708160, 5718170, 5728179, 5738159, 5748168, 5758178, 5768157, 5778167, 5788177, 5798156, 5808166, 5818176, 5828186, 5838165, 5848175, 5858184, 5868164, 5878173, 5888183, 5898162, 5908172, 5918182, 5928161, 5938171, 5948181, 5958160, 5968170, 5978179, 5988159, 5998168, 6008178, 6018157, 6028167, 6038177, 6048156, 6058166, 6068176, 6078186, 6088165, 6098175, 6108184, 6118164, 6128173, 6138183, 6148162, 6158172, 6168182, 6178161, 6188171, 6198181, 6208160, 6218170, 6228179, 6238159, 6248168, 6258178, 6268157, 6278167, 6288177, 6298156, 6308166, 6318176, 6328186, 6338165, 6348175, 6358184, 6368164, 6378173, 6388183, 6398162, 6408172, 6418182, 6428161, 6438171, 6448181, 6458160, 6468170, 6478179, 6488159, 6498168, 6508178, 6518157, 6528167, 6538177, 6548156]</msg>
<status status="PASS" starttime="20201112 09:44:30.873" endtime="20201112 09:44:30.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.868" endtime="20201112 09:44:30.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.883" endtime="20201112 09:44:31.174"></status>
</kw>
<msg timestamp="20201112 09:44:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.881" endtime="20201112 09:44:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.178" endtime="20201112 09:44:31.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.185" endtime="20201112 09:44:31.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.879" endtime="20201112 09:44:31.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.876" endtime="20201112 09:44:31.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.211" level="INFO">${RESULT} = {'diff': [0, 0.010015208000000001, 0.010009471999999998, 0.010009417, 0.009978985999999995, 0.010009444000000006, 0.010009486999999997, 0.009978901999999998, 0.010009431, 0.010009403, 0.00997894400000...</msg>
<status status="PASS" starttime="20201112 09:44:31.189" endtime="20201112 09:44:31.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.216" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:31.215" endtime="20201112 09:44:31.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.218" level="INFO">VALUE: 0.022545167</msg>
<status status="PASS" starttime="20201112 09:44:31.217" endtime="20201112 09:44:31.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.212" endtime="20201112 09:44:31.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.223" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:31.222" endtime="20201112 09:44:31.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.225" level="INFO">VALUE: [0.032560375, 0.042569847, 0.052579264, 0.06255825, 0.072567694, 0.082577181, 0.092556083, 0.102565514, 0.112574917, 0.122553861, 0.132563347, 0.142572833, 0.152551708, 0.162561194, 0.172570653, 0.182549542, 0.192559028, 0.202568472, 0.212547361, 0.222556861, 0.232566319, 0.242545292, 0.252554681, 0.262564153, 0.272543014, 0.282552514, 0.292561903, 0.302571431, 0.312550375, 0.322559861, 0.332569278, 0.342548181, 0.352557639, 0.362567125, 0.372545986, 0.3825555, 0.392564958, 0.402543861, 0.412553333, 0.422562722, 0.432541736, 0.442551153, 0.452560569, 0.4625395, 0.472548931, 0.482558417, 0.492537292, 0.502546806, 0.512556236, 0.522535167, 0.532544597, 0.542554056, 0.552563597, 0.562542444, 0.572551986, 0.582561347, 0.592540292, 0.602549736, 0.612559208, 0.622538111, 0.632547625, 0.642557042, 0.652535958, 0.662545417, 0.672554889, 0.682533792, 0.69254325, 0.702552694, 0.712531625, 0.722541111, 0.732550528, 0.742529542, 0.752538931, 0.762548347, 0.772527292, 0.78253675, 0.792546194, 0.802555597, 0.812534514, 0.822544014, 0.832553458, 0.842532375, 0.852541833, 0.862551292, 0.872530292, 0.882539667, 0.892549139, 0.902528083, 0.912537542, 0.922547, 0.932525861, 0.942535361, 0.952544833, 0.962523764, 0.972533194, 0.982542639, 0.992521569, 1.002531028, 1.012540458, 1.022519389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:31.224" endtime="20201112 09:44:31.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.219" endtime="20201112 09:44:31.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.228" endtime="20201112 09:44:31.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.232" endtime="20201112 09:44:31.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.230" endtime="20201112 09:44:31.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.227" endtime="20201112 09:44:31.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.699" endtime="20201112 09:44:31.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.589" endtime="20201112 09:44:31.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.588" endtime="20201112 09:44:31.254"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:31.256" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.265" endtime="20201112 09:44:33.374"></status>
</kw>
<msg timestamp="20201112 09:44:33.375" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8105712, 'wakeups': [8115722, 8125732, 8135742, 8145721, 8155731, 8165...</msg>
<status status="PASS" starttime="20201112 09:44:31.263" endtime="20201112 09:44:33.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.377" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8105712, 'wakeups': [8115722, 8125732, 8135742, 8145721, 8155731, 8165...</msg>
<status status="PASS" starttime="20201112 09:44:33.376" endtime="20201112 09:44:33.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.379" endtime="20201112 09:44:33.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.260" endtime="20201112 09:44:33.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.258" endtime="20201112 09:44:33.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.384" level="INFO">${RESULT} = {'wakeups': [8115722, 8125732, 8135742, 8145721, 8155731, 8165740, 8175720, 8185729, 8195739, 8205718, 8215728, 8225738, 8235717, 8245727, 8255737, 8265716, 8275726, 8285736, 8295715, 8305725, 8315734...</msg>
<status status="PASS" starttime="20201112 09:44:33.382" endtime="20201112 09:44:33.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.388" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:33.387" endtime="20201112 09:44:33.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:33.389" endtime="20201112 09:44:33.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.385" endtime="20201112 09:44:33.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.395" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:33.394" endtime="20201112 09:44:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.397" level="INFO">VALUE: 8105712</msg>
<status status="PASS" starttime="20201112 09:44:33.396" endtime="20201112 09:44:33.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.391" endtime="20201112 09:44:33.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.402" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:33.401" endtime="20201112 09:44:33.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.404" level="INFO">VALUE: [8115722, 8125732, 8135742, 8145721, 8155731, 8165740, 8175720, 8185729, 8195739, 8205718, 8215728, 8225738, 8235717, 8245727, 8255737, 8265716, 8275726, 8285736, 8295715, 8305725, 8315734, 8325714, 8335723, 8345733, 8355712, 8365722, 8375732, 8385742, 8395721, 8405731, 8415740, 8425720, 8435729, 8445739, 8455718, 8465728, 8475738, 8485717, 8495727, 8505737, 8515716, 8525726, 8535736, 8545715, 8555725, 8565734, 8575714, 8585723, 8595733, 8605712, 8615722, 8625732, 8635742, 8645721, 8655731, 8665740, 8675720, 8685729, 8695739, 8705718, 8715728, 8725738, 8735717, 8745727, 8755737, 8765716, 8775726, 8785736, 8795715, 8805725, 8815734, 8825714, 8835723, 8845733, 8855712, 8865722, 8875732, 8885742, 8895721, 8905731, 8915740, 8925720, 8935729, 8945739, 8955718, 8965728, 8975738, 8985717, 8995727, 9005737, 9015716, 9025726, 9035736, 9045715, 9055725, 9065734, 9075714, 9085723, 9095733, 9105712]</msg>
<status status="PASS" starttime="20201112 09:44:33.403" endtime="20201112 09:44:33.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.398" endtime="20201112 09:44:33.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.411" endtime="20201112 09:44:33.705"></status>
</kw>
<msg timestamp="20201112 09:44:33.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034477875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.410" endtime="20201112 09:44:33.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034477875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.708" endtime="20201112 09:44:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.716" endtime="20201112 09:44:33.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.407" endtime="20201112 09:44:33.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.405" endtime="20201112 09:44:33.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.743" level="INFO">${RESULT} = {'diff': [0, 0.010026055999999998, 0.010009471999999998, 0.010009472000000005, 0.009978902999999997, 0.010009445000000006, 0.010009443999999992, 0.009978972000000003, 0.010009388999999994, 0.010009472...</msg>
<status status="PASS" starttime="20201112 09:44:33.720" endtime="20201112 09:44:33.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.748" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:33.747" endtime="20201112 09:44:33.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.750" level="INFO">VALUE: 0.024451819</msg>
<status status="PASS" starttime="20201112 09:44:33.749" endtime="20201112 09:44:33.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.744" endtime="20201112 09:44:33.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.755" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:33.754" endtime="20201112 09:44:33.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.757" level="INFO">VALUE: [0.034477875, 0.044487347, 0.054496819, 0.064475722, 0.074485167, 0.084494611, 0.094473583, 0.104482972, 0.114492444, 0.124471431, 0.134480889, 0.144490389, 0.154469278, 0.164478639, 0.174488139, 0.184467056, 0.194476528, 0.204486014, 0.214464917, 0.224474292, 0.23448375, 0.244462736, 0.254472194, 0.264481639, 0.274460583, 0.284470056, 0.294479472, 0.304488917, 0.314467847, 0.324477347, 0.334486792, 0.344465694, 0.354475181, 0.364484639, 0.374463472, 0.384472986, 0.394482458, 0.404461333, 0.414470833, 0.424480222, 0.434459208, 0.444468639, 0.454478, 0.464457014, 0.474466431, 0.484475889, 0.494454778, 0.504464278, 0.514473764, 0.524452708, 0.534462139, 0.544471639, 0.554481028, 0.564459986, 0.574469403, 0.584478889, 0.594457806, 0.604467222, 0.614476736, 0.624455625, 0.634465056, 0.644474542, 0.654453375, 0.664462861, 0.674472333, 0.684451236, 0.694460722, 0.704470139, 0.714449139, 0.724458556, 0.734467972, 0.744446944, 0.754456431, 0.764465806, 0.774444819, 0.784454194, 0.794463736, 0.804473125, 0.814452069, 0.824461528, 0.834470875, 0.844449875, 0.854459292, 0.864468722, 0.874447722, 0.884457222, 0.894466639, 0.904445542, 0.914454958, 0.924464389, 0.934443444, 0.944452875, 0.954462319, 0.964441208, 0.974450583, 0.984460069, 0.994439097, 1.0044485, 1.014457944, 1.024436889] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:33.756" endtime="20201112 09:44:33.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.751" endtime="20201112 09:44:33.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.760" endtime="20201112 09:44:33.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.763" endtime="20201112 09:44:33.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.762" endtime="20201112 09:44:33.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.758" endtime="20201112 09:44:33.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.257" endtime="20201112 09:44:33.784"></status>
</kw>
<msg timestamp="20201112 09:44:33.784" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.792" endtime="20201112 09:44:35.917"></status>
</kw>
<msg timestamp="20201112 09:44:35.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10633148, 'wakeups': [10643157, 10653167, 10663177, 10673156, 10683166...</msg>
<status status="PASS" starttime="20201112 09:44:33.791" endtime="20201112 09:44:35.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10633148, 'wakeups': [10643157, 10653167, 10663177, 10673156, 10683166...</msg>
<status status="PASS" starttime="20201112 09:44:35.920" endtime="20201112 09:44:35.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.925" endtime="20201112 09:44:35.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.788" endtime="20201112 09:44:35.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.786" endtime="20201112 09:44:35.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.931" level="INFO">${RESULT} = {'wakeups': [10643157, 10653167, 10663177, 10673156, 10683166, 10693176, 10703155, 10713165, 10723175, 10733154, 10743164, 10753173, 10763153, 10773162, 10783172, 10793151, 10803161, 10813171, 1082315...</msg>
<status status="PASS" starttime="20201112 09:44:35.929" endtime="20201112 09:44:35.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.935" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:35.934" endtime="20201112 09:44:35.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.937" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:35.936" endtime="20201112 09:44:35.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.931" endtime="20201112 09:44:35.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.942" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:35.941" endtime="20201112 09:44:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.944" level="INFO">VALUE: 10633148</msg>
<status status="PASS" starttime="20201112 09:44:35.943" endtime="20201112 09:44:35.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.939" endtime="20201112 09:44:35.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.949" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:35.948" endtime="20201112 09:44:35.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.951" level="INFO">VALUE: [10643157, 10653167, 10663177, 10673156, 10683166, 10693176, 10703155, 10713165, 10723175, 10733154, 10743164, 10753173, 10763153, 10773162, 10783172, 10793151, 10803161, 10813171, 10823150, 10833160, 10843170, 10853149, 10863159, 10873168, 10883178, 10893157, 10903167, 10913177, 10923156, 10933166, 10943176, 10953155, 10963165, 10973175, 10983154, 10993164, 11003173, 11013153, 11023162, 11033172, 11043151, 11053161, 11063171, 11073150, 11083160, 11093170, 11103149, 11113159, 11123168, 11133178, 11143157, 11153167, 11163177, 11173156, 11183166, 11193176, 11203155, 11213165, 11223175, 11233154, 11243164, 11253173, 11263153, 11273162, 11283172, 11293151, 11303161, 11313171, 11323150, 11333160, 11343170, 11353149, 11363159, 11373168, 11383178, 11393157, 11403167, 11413177, 11423156, 11433166, 11443176, 11453155, 11463165, 11473175, 11483154, 11493164, 11503173, 11513153, 11523162, 11533172, 11543151, 11553161, 11563171, 11573150, 11583160, 11593170, 11603149, 11613159, 11623168, 11633178]</msg>
<status status="PASS" starttime="20201112 09:44:35.950" endtime="20201112 09:44:35.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.945" endtime="20201112 09:44:35.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.958" endtime="20201112 09:44:36.249"></status>
</kw>
<msg timestamp="20201112 09:44:36.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.957" endtime="20201112 09:44:36.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.253" endtime="20201112 09:44:36.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.261" endtime="20201112 09:44:36.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.954" endtime="20201112 09:44:36.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.952" endtime="20201112 09:44:36.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.287" level="INFO">${RESULT} = {'diff': [0, 0.010017514000000002, 0.010009527999999997, 0.010009333000000002, 0.009978986000000002, 0.010009499999999998, 0.010009431, 0.009978833000000006, 0.010009568999999996, 0.010009431, 0.00997...</msg>
<status status="PASS" starttime="20201112 09:44:36.264" endtime="20201112 09:44:36.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.292" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:36.291" endtime="20201112 09:44:36.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.294" level="INFO">VALUE: 0.020536639</msg>
<status status="PASS" starttime="20201112 09:44:36.293" endtime="20201112 09:44:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.288" endtime="20201112 09:44:36.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.299" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:36.298" endtime="20201112 09:44:36.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.302" level="INFO">VALUE: [0.030554153, 0.040563681, 0.050573014, 0.060552, 0.0705615, 0.080570931, 0.090549764, 0.100559333, 0.110568764, 0.120547681, 0.130557139, 0.140566569, 0.150545514, 0.160554944, 0.170564431, 0.180543319, 0.190552792, 0.200562236, 0.210541236, 0.220550736, 0.230560056, 0.240538944, 0.250548417, 0.260557931, 0.270567403, 0.280546264, 0.290555778, 0.300565222, 0.310544083, 0.320553569, 0.330563028, 0.340541972, 0.350551417, 0.360560889, 0.370539778, 0.380549264, 0.390558694, 0.400537556, 0.410547083, 0.420556556, 0.430535431, 0.440544931, 0.450554333, 0.460533278, 0.470542722, 0.480552222, 0.490531167, 0.500540597, 0.51055, 0.520559444, 0.530538444, 0.540547875, 0.550557306, 0.560536181, 0.570545708, 0.580555111, 0.590534014, 0.600543542, 0.610553028, 0.620531903, 0.630541361, 0.640550736, 0.650529778, 0.660539167, 0.670548625, 0.680527625, 0.690537042, 0.700546458, 0.710525389, 0.720534958, 0.730544264, 0.740523264, 0.750532722, 0.760542194, 0.770551597, 0.780530486, 0.79054, 0.800549444, 0.810528375, 0.820537806, 0.83054725, 0.840526139, 0.850535597, 0.860545111, 0.870524042, 0.880533486, 0.890542903, 0.900521847, 0.910531292, 0.920540778, 0.930519667, 0.940529153, 0.950538556, 0.960517542, 0.970526986, 0.980536389, 0.990515361, 1.000524806, 1.010534236, 1.020543708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:36.300" endtime="20201112 09:44:36.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.295" endtime="20201112 09:44:36.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.305" endtime="20201112 09:44:36.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.308" endtime="20201112 09:44:36.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.307" endtime="20201112 09:44:36.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.303" endtime="20201112 09:44:36.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.785" endtime="20201112 09:44:36.329"></status>
</kw>
<msg timestamp="20201112 09:44:36.329" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.337" endtime="20201112 09:44:38.463"></status>
</kw>
<msg timestamp="20201112 09:44:38.464" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13180664, 'wakeups': [13190704, 13200683, 13210693, 13220672, 13230682...</msg>
<status status="PASS" starttime="20201112 09:44:36.336" endtime="20201112 09:44:38.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.470" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13180664, 'wakeups': [13190704, 13200683, 13210693, 13220672, 13230682...</msg>
<status status="PASS" starttime="20201112 09:44:38.466" endtime="20201112 09:44:38.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.472" endtime="20201112 09:44:38.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.333" endtime="20201112 09:44:38.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.331" endtime="20201112 09:44:38.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.481" level="INFO">${RESULT} = {'wakeups': [13190704, 13200683, 13210693, 13220672, 13230682, 13240692, 13250671, 13260681, 13270690, 13280670, 13290679, 13300689, 13310668, 13320678, 13330688, 13340667, 13350677, 13360687, 1337066...</msg>
<status status="PASS" starttime="20201112 09:44:38.479" endtime="20201112 09:44:38.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.485" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:38.484" endtime="20201112 09:44:38.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.487" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:38.486" endtime="20201112 09:44:38.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.482" endtime="20201112 09:44:38.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.492" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:38.491" endtime="20201112 09:44:38.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.495" level="INFO">VALUE: 13180664</msg>
<status status="PASS" starttime="20201112 09:44:38.493" endtime="20201112 09:44:38.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.489" endtime="20201112 09:44:38.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.500" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:38.499" endtime="20201112 09:44:38.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.503" level="INFO">VALUE: [13190704, 13200683, 13210693, 13220672, 13230682, 13240692, 13250671, 13260681, 13270690, 13280670, 13290679, 13300689, 13310668, 13320678, 13330688, 13340667, 13350677, 13360687, 13370666, 13380676, 13390686, 13400665, 13410675, 13420684, 13430694, 13440673, 13450683, 13460693, 13470672, 13480682, 13490692, 13500671, 13510681, 13520690, 13530670, 13540679, 13550689, 13560668, 13570678, 13580688, 13590667, 13600677, 13610687, 13620666, 13630676, 13640686, 13650665, 13660675, 13670684, 13680694, 13690673, 13700683, 13710693, 13720672, 13730682, 13740692, 13750671, 13760681, 13770690, 13780670, 13790679, 13800689, 13810668, 13820678, 13830688, 13840667, 13850677, 13860687, 13870666, 13880676, 13890686, 13900665, 13910675, 13920684, 13930694, 13940673, 13950683, 13960693, 13970672, 13980682, 13990692, 14000671, 14010681, 14020690, 14030670, 14040679, 14050689, 14060668, 14070678, 14080688, 14090667, 14100677, 14110687, 14120666, 14130676, 14140686, 14150665, 14160675, 14170684, 14180694]</msg>
<status status="PASS" starttime="20201112 09:44:38.501" endtime="20201112 09:44:38.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.497" endtime="20201112 09:44:38.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.510" endtime="20201112 09:44:38.801"></status>
</kw>
<msg timestamp="20201112 09:44:38.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032957389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.509" endtime="20201112 09:44:38.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032957389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.805" endtime="20201112 09:44:38.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.812" endtime="20201112 09:44:38.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.506" endtime="20201112 09:44:38.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.505" endtime="20201112 09:44:38.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.839" level="INFO">${RESULT} = {'diff': [0, 0.010025013999999995, 0.009997625000000003, 0.010009528000000004, 0.009978860999999992, 0.010009486000000012, 0.010009443999999992, 0.009978917000000004, 0.010009485999999998, 0.010009416...</msg>
<status status="PASS" starttime="20201112 09:44:38.815" endtime="20201112 09:44:38.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.843" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:38.842" endtime="20201112 09:44:38.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.845" level="INFO">VALUE: 0.022932375</msg>
<status status="PASS" starttime="20201112 09:44:38.844" endtime="20201112 09:44:38.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.840" endtime="20201112 09:44:38.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.850" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:38.849" endtime="20201112 09:44:38.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.853" level="INFO">VALUE: [0.032957389, 0.042955014, 0.052964542, 0.062943403, 0.072952889, 0.082962333, 0.09294125, 0.102950736, 0.112960153, 0.122939083, 0.132948542, 0.142957972, 0.152936944, 0.162946417, 0.172955861, 0.182934778, 0.19294425, 0.202953681, 0.212932625, 0.222942056, 0.232951458, 0.242930472, 0.252939847, 0.262949319, 0.272958792, 0.282937764, 0.292947139, 0.302956542, 0.312935556, 0.322945, 0.332954417, 0.342933444, 0.352942819, 0.362952264, 0.372931194, 0.382940708, 0.392950097, 0.402929056, 0.412938444, 0.422947944, 0.432926792, 0.442936319, 0.452945778, 0.46292475, 0.472934153, 0.482943611, 0.492922542, 0.502931944, 0.512941458, 0.522950861, 0.532929833, 0.542939278, 0.552948667, 0.562927597, 0.572937056, 0.582946556, 0.592925472, 0.602934944, 0.612944347, 0.622923306, 0.63293275, 0.642942181, 0.652921167, 0.662930625, 0.672940014, 0.682918917, 0.692928403, 0.702937889, 0.712916764, 0.722926194, 0.732935694, 0.742914681, 0.752924014, 0.7629335, 0.772942986, 0.782921944, 0.792931389, 0.802940819, 0.812919694, 0.822929194, 0.832938639, 0.842917528, 0.852927028, 0.862936444, 0.872915431, 0.882924875, 0.892934292, 0.902913222, 0.912922736, 0.922932167, 0.932911056, 0.942920444, 0.952929958, 0.962908861, 0.972918306, 0.982927792, 0.992906722, 1.002916194, 1.012925639, 1.022935069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:38.852" endtime="20201112 09:44:38.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.847" endtime="20201112 09:44:38.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.856" endtime="20201112 09:44:38.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.860" endtime="20201112 09:44:38.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.858" endtime="20201112 09:44:38.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.855" endtime="20201112 09:44:38.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.330" endtime="20201112 09:44:38.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.255" endtime="20201112 09:44:38.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.254" endtime="20201112 09:44:38.885"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:38.888" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.896" endtime="20201112 09:44:41.021"></status>
</kw>
<msg timestamp="20201112 09:44:41.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15738250, 'wakeups': [15748291, 15758300, 15768280, 15778289, 15788269...</msg>
<status status="PASS" starttime="20201112 09:44:38.894" endtime="20201112 09:44:41.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15738250, 'wakeups': [15748291, 15758300, 15768280, 15778289, 15788269...</msg>
<status status="PASS" starttime="20201112 09:44:41.025" endtime="20201112 09:44:41.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.031" endtime="20201112 09:44:41.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.891" endtime="20201112 09:44:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.890" endtime="20201112 09:44:41.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.038" level="INFO">${RESULT} = {'wakeups': [15748291, 15758300, 15768280, 15778289, 15788269, 15798309, 15808258, 15818298, 15828277, 15838287, 15848266, 15858306, 15868255, 15878295, 15888275, 15898284, 15908264, 15918304, 1592825...</msg>
<status status="PASS" starttime="20201112 09:44:41.036" endtime="20201112 09:44:41.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.042" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:41.041" endtime="20201112 09:44:41.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.044" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:41.043" endtime="20201112 09:44:41.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.039" endtime="20201112 09:44:41.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.049" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.048" endtime="20201112 09:44:41.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.051" level="INFO">VALUE: 15738250</msg>
<status status="PASS" starttime="20201112 09:44:41.050" endtime="20201112 09:44:41.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.045" endtime="20201112 09:44:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.056" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.055" endtime="20201112 09:44:41.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.058" level="INFO">VALUE: [15748291, 15758300, 15768280, 15778289, 15788269, 15798309, 15808258, 15818298, 15828277, 15838287, 15848266, 15858306, 15868255, 15878295, 15888275, 15898284, 15908264, 15918304, 15928253, 15938293, 15948272, 15958282, 15968261, 15978302, 15988250, 15998291, 16008270, 16018310, 16028259, 16038299, 16048278, 16058288, 16068267, 16078308, 16088256, 16098297, 16108276, 16118286, 16128265, 16138305, 16148254, 16158294, 16168273, 16178283, 16188262, 16198303, 16208251, 16218292, 16228271, 16238281, 16248260, 16258300, 16268280, 16278289, 16288269, 16298309, 16308258, 16318298, 16328277, 16338287, 16348266, 16358306, 16368255, 16378295, 16388275, 16398284, 16408264, 16418304, 16428253, 16438293, 16448272, 16458282, 16468261, 16478302, 16488250, 16498291, 16508270, 16518310, 16528259, 16538299, 16548278, 16558288, 16568267, 16578308, 16588256, 16598297, 16608276, 16618286, 16628265, 16638305, 16648254, 16658294, 16668273, 16678283, 16688262, 16698303, 16708251, 16718292, 16728271, 16738281]</msg>
<status status="PASS" starttime="20201112 09:44:41.057" endtime="20201112 09:44:41.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.052" endtime="20201112 09:44:41.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.066" endtime="20201112 09:44:41.356"></status>
</kw>
<msg timestamp="20201112 09:44:41.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028530028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038569417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.064" endtime="20201112 09:44:41.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028530028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038569417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.360" endtime="20201112 09:44:41.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.367" endtime="20201112 09:44:41.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.061" endtime="20201112 09:44:41.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.059" endtime="20201112 09:44:41.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.393" level="INFO">${RESULT} = {'diff': [0, 0.010039389000000003, 0.009997415999999995, 0.009993181000000004, 0.009995291999999996, 0.009993055, 0.010025847000000004, 0.009962610999999996, 0.01002575, 0.009993084, 0.009995333000000...</msg>
<status status="PASS" starttime="20201112 09:44:41.371" endtime="20201112 09:44:41.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.397" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.396" endtime="20201112 09:44:41.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.399" level="INFO">VALUE: 0.028530028</msg>
<status status="PASS" starttime="20201112 09:44:41.399" endtime="20201112 09:44:41.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.394" endtime="20201112 09:44:41.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.405" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.404" endtime="20201112 09:44:41.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.407" level="INFO">VALUE: [0.038569417, 0.048566833, 0.058560014, 0.068555306, 0.078548361, 0.088574208, 0.098536819, 0.108562569, 0.118555653, 0.128550986, 0.138544097, 0.148569875, 0.158532458, 0.16855825, 0.178551361, 0.188546625, 0.198539736, 0.208565569, 0.218528056, 0.228553889, 0.238546958, 0.248542319, 0.258535403, 0.268561181, 0.278523764, 0.288549583, 0.298542708, 0.308568444, 0.318531083, 0.328556833, 0.338550014, 0.34854525, 0.358538306, 0.368564111, 0.37852675, 0.388552514, 0.398545583, 0.408540972, 0.418534, 0.428559806, 0.438522347, 0.448548167, 0.458541264, 0.468536583, 0.478529667, 0.488555458, 0.498517986, 0.508543875, 0.518536903, 0.528532264, 0.538525333, 0.548551111, 0.558544222, 0.568539528, 0.578532611, 0.588558417, 0.598520958, 0.608546778, 0.618539847, 0.628535139, 0.638528264, 0.648554042, 0.658516639, 0.668542458, 0.678535556, 0.688530819, 0.698523931, 0.708549708, 0.718512306, 0.728538097, 0.738531194, 0.748526472, 0.758519611, 0.768545389, 0.778507931, 0.788533764, 0.798526819, 0.808552694, 0.81851525, 0.828541, 0.838534153, 0.848529389, 0.858522528, 0.868548236, 0.878510958, 0.888536722, 0.898529778, 0.908525125, 0.918518222, 0.928543903, 0.938506528, 0.948532278, 0.958525444, 0.968520778, 0.978513819, 0.988539556, 0.99850225, 1.008527958, 1.018521167, 1.028516403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:41.406" endtime="20201112 09:44:41.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.401" endtime="20201112 09:44:41.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.410" endtime="20201112 09:44:41.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.413" endtime="20201112 09:44:41.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.412" endtime="20201112 09:44:41.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.408" endtime="20201112 09:44:41.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.888" endtime="20201112 09:44:41.434"></status>
</kw>
<msg timestamp="20201112 09:44:41.434" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.443" endtime="20201112 09:44:43.568"></status>
</kw>
<msg timestamp="20201112 09:44:43.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18285766, 'wakeups': [18295806, 18305816, 18315795, 18325805, 18335784...</msg>
<status status="PASS" starttime="20201112 09:44:41.442" endtime="20201112 09:44:43.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.576" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18285766, 'wakeups': [18295806, 18305816, 18315795, 18325805, 18335784...</msg>
<status status="PASS" starttime="20201112 09:44:43.571" endtime="20201112 09:44:43.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.578" endtime="20201112 09:44:43.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.438" endtime="20201112 09:44:43.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.436" endtime="20201112 09:44:43.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.589" level="INFO">${RESULT} = {'wakeups': [18295806, 18305816, 18315795, 18325805, 18335784, 18345825, 18355773, 18365814, 18375793, 18385803, 18395782, 18405822, 18415771, 18425811, 18435791, 18445800, 18455780, 18465820, 1847576...</msg>
<status status="PASS" starttime="20201112 09:44:43.585" endtime="20201112 09:44:43.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.593" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:43.592" endtime="20201112 09:44:43.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.596" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:43.595" endtime="20201112 09:44:43.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.590" endtime="20201112 09:44:43.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.600" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:43.599" endtime="20201112 09:44:43.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.602" level="INFO">VALUE: 18285766</msg>
<status status="PASS" starttime="20201112 09:44:43.601" endtime="20201112 09:44:43.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.597" endtime="20201112 09:44:43.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.607" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:43.606" endtime="20201112 09:44:43.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.609" level="INFO">VALUE: [18295806, 18305816, 18315795, 18325805, 18335784, 18345825, 18355773, 18365814, 18375793, 18385803, 18395782, 18405822, 18415771, 18425811, 18435791, 18445800, 18455780, 18465820, 18475769, 18485809, 18495788, 18505798, 18515777, 18525817, 18535797, 18545776, 18555816, 18565795, 18575805, 18585784, 18595825, 18605773, 18615814, 18625793, 18635803, 18645782, 18655822, 18665771, 18675811, 18685791, 18695800, 18705780, 18715820, 18725769, 18735809, 18745788, 18755798, 18765777, 18775817, 18785797, 18795776, 18805816, 18815795, 18825805, 18835784, 18845825, 18855773, 18865814, 18875793, 18885803, 18895782, 18905822, 18915771, 18925811, 18935791, 18945800, 18955780, 18965820, 18975769, 18985809, 18995788, 19005798, 19015777, 19025817, 19035797, 19045776, 19055816, 19065795, 19075805, 19085784, 19095825, 19105773, 19115814, 19125793, 19135803, 19145782, 19155822, 19165771, 19175811, 19185791, 19195800, 19205780, 19215820, 19225769, 19235809, 19245788, 19255798, 19265777, 19275817, 19285797]</msg>
<status status="PASS" starttime="20201112 09:44:43.608" endtime="20201112 09:44:43.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.604" endtime="20201112 09:44:43.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.617" endtime="20201112 09:44:43.907"></status>
</kw>
<msg timestamp="20201112 09:44:43.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032170819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.615" endtime="20201112 09:44:43.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032170819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.911" endtime="20201112 09:44:43.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.919" endtime="20201112 09:44:43.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.613" endtime="20201112 09:44:43.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.611" endtime="20201112 09:44:43.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.946" level="INFO">${RESULT} = {'diff': [0, 0.010042694000000005, 0.009997388999999995, 0.009993181000000004, 0.009995318999999996, 0.009993139000000005, 0.010025791999999992, 0.009962597000000004, 0.010025736000000007, 0.009993084...</msg>
<status status="PASS" starttime="20201112 09:44:43.922" endtime="20201112 09:44:43.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.954" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:43.953" endtime="20201112 09:44:43.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.957" level="INFO">VALUE: 0.022128125</msg>
<status status="PASS" starttime="20201112 09:44:43.956" endtime="20201112 09:44:43.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.951" endtime="20201112 09:44:43.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.962" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:43.961" endtime="20201112 09:44:43.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.964" level="INFO">VALUE: [0.032170819, 0.042168208, 0.052161389, 0.062156708, 0.072149847, 0.082175639, 0.092138236, 0.102163972, 0.112157056, 0.122152389, 0.132145403, 0.142171208, 0.152133861, 0.162159722, 0.172152778, 0.182148014, 0.192141111, 0.202166972, 0.212129556, 0.222155208, 0.232148417, 0.242143764, 0.252136847, 0.262162514, 0.272141639, 0.282134625, 0.292160458, 0.302153542, 0.312148806, 0.322141958, 0.332167736, 0.342130347, 0.352156083, 0.362149222, 0.372144486, 0.382137625, 0.392163306, 0.402125931, 0.412151806, 0.422144861, 0.432140139, 0.44213325, 0.452159069, 0.462121611, 0.472147472, 0.482140528, 0.492135847, 0.502128917, 0.512154667, 0.522133764, 0.532126694, 0.542152542, 0.552145653, 0.562140931, 0.572134042, 0.582159833, 0.592122417, 0.602148236, 0.612141319, 0.622136639, 0.63212975, 0.642155542, 0.652118056, 0.662143861, 0.672136931, 0.682132236, 0.692125333, 0.702151153, 0.71211375, 0.722139514, 0.732132597, 0.742127889, 0.752121069, 0.762146875, 0.772125875, 0.782118847, 0.792144625, 0.802137736, 0.812133, 0.822126139, 0.832151958, 0.8421145, 0.852140264, 0.862133472, 0.872128722, 0.882121778, 0.892147583, 0.902110181, 0.912135972, 0.922129083, 0.932124347, 0.942117472, 0.952143306, 0.962105847, 0.972131667, 0.982124708, 0.992120042, 1.002113069, 1.012138889, 1.022117944] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:43.963" endtime="20201112 09:44:43.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.958" endtime="20201112 09:44:43.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.967" endtime="20201112 09:44:43.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.970" endtime="20201112 09:44:43.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.969" endtime="20201112 09:44:43.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.965" endtime="20201112 09:44:43.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.435" endtime="20201112 09:44:43.991"></status>
</kw>
<msg timestamp="20201112 09:44:43.991" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.000" endtime="20201112 09:44:46.126"></status>
</kw>
<msg timestamp="20201112 09:44:46.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20843353, 'wakeups': [20853393, 20863403, 20873382, 20883392, 20893371...</msg>
<status status="PASS" starttime="20201112 09:44:43.998" endtime="20201112 09:44:46.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.133" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20843353, 'wakeups': [20853393, 20863403, 20873382, 20883392, 20893371...</msg>
<status status="PASS" starttime="20201112 09:44:46.130" endtime="20201112 09:44:46.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.136" endtime="20201112 09:44:46.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.995" endtime="20201112 09:44:46.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.993" endtime="20201112 09:44:46.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.146" level="INFO">${RESULT} = {'wakeups': [20853393, 20863403, 20873382, 20883392, 20893371, 20903411, 20913360, 20923400, 20933380, 20943389, 20953369, 20963409, 20973358, 20983398, 20993377, 21003387, 21013366, 21023406, 2103335...</msg>
<status status="PASS" starttime="20201112 09:44:46.143" endtime="20201112 09:44:46.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.150" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:46.149" endtime="20201112 09:44:46.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.152" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:46.151" endtime="20201112 09:44:46.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.147" endtime="20201112 09:44:46.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.158" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.157" endtime="20201112 09:44:46.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.160" level="INFO">VALUE: 20843353</msg>
<status status="PASS" starttime="20201112 09:44:46.159" endtime="20201112 09:44:46.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.154" endtime="20201112 09:44:46.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.165" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.164" endtime="20201112 09:44:46.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.167" level="INFO">VALUE: [20853393, 20863403, 20873382, 20883392, 20893371, 20903411, 20913360, 20923400, 20933380, 20943389, 20953369, 20963409, 20973358, 20983398, 20993377, 21003387, 21013366, 21023406, 21033355, 21043395, 21053375, 21063385, 21073364, 21083404, 21093383, 21103363, 21113403, 21123382, 21133392, 21143371, 21153411, 21163360, 21173400, 21183380, 21193389, 21203369, 21213409, 21223358, 21233398, 21243377, 21253387, 21263366, 21273406, 21283355, 21293395, 21303375, 21313385, 21323364, 21333404, 21343383, 21353363, 21363403, 21373382, 21383392, 21393371, 21403411, 21413360, 21423400, 21433380, 21443389, 21453369, 21463409, 21473358, 21483398, 21493377, 21503387, 21513366, 21523406, 21533355, 21543395, 21553375, 21563385, 21573364, 21583404, 21593383, 21603363, 21613403, 21623382, 21633392, 21643371, 21653411, 21663360, 21673400, 21683380, 21693389, 21703369, 21713409, 21723358, 21733398, 21743377, 21753387, 21763366, 21773406, 21783355, 21793395, 21803375, 21813385, 21823364, 21833404, 21843383]</msg>
<status status="PASS" starttime="20201112 09:44:46.166" endtime="20201112 09:44:46.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.162" endtime="20201112 09:44:46.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.175" endtime="20201112 09:44:46.464"></status>
</kw>
<msg timestamp="20201112 09:44:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032241014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.173" endtime="20201112 09:44:46.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032241014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.468" endtime="20201112 09:44:46.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.476" endtime="20201112 09:44:46.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.171" endtime="20201112 09:44:46.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.169" endtime="20201112 09:44:46.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.501" level="INFO">${RESULT} = {'diff': [0, 0.010040471999999998, 0.009997597000000004, 0.009993138999999998, 0.009995277999999996, 0.009993111000000006, 0.010025791999999992, 0.009962597000000004, 0.01002575, 0.009993153000000005,...</msg>
<status status="PASS" starttime="20201112 09:44:46.479" endtime="20201112 09:44:46.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.506" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.505" endtime="20201112 09:44:46.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.508" level="INFO">VALUE: 0.022200542</msg>
<status status="PASS" starttime="20201112 09:44:46.507" endtime="20201112 09:44:46.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.502" endtime="20201112 09:44:46.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.514" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.513" endtime="20201112 09:44:46.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.516" level="INFO">VALUE: [0.032241014, 0.042238611, 0.05223175, 0.062227028, 0.072220139, 0.082245931, 0.092208528, 0.102234278, 0.112227431, 0.122222722, 0.132215778, 0.142241583, 0.152204194, 0.16223, 0.172223056, 0.182218417, 0.192211458, 0.202237222, 0.212199903, 0.222225569, 0.23221875, 0.242213889, 0.252207153, 0.262233, 0.272211931, 0.282204972, 0.29223075, 0.302223833, 0.312219056, 0.322212208, 0.332237986, 0.342200667, 0.352226417, 0.362219486, 0.372214778, 0.382207861, 0.392233681, 0.402196292, 0.412222042, 0.422215181, 0.432210417, 0.442203583, 0.452229431, 0.462191944, 0.472217694, 0.482210792, 0.492206111, 0.502199222, 0.512224958, 0.522204028, 0.532197, 0.542222764, 0.552215972, 0.562211208, 0.572204347, 0.582230153, 0.592192722, 0.602218417, 0.612211611, 0.622206889, 0.632200042, 0.642225708, 0.652188333, 0.662214222, 0.672207306, 0.682202583, 0.692195667, 0.702221458, 0.712184014, 0.722209875, 0.732202903, 0.742198222, 0.752191347, 0.762217069, 0.772196153, 0.782189153, 0.792214986, 0.802208056, 0.812203347, 0.8221965, 0.832222222, 0.842184847, 0.8522105, 0.862203792, 0.872198917, 0.882192083, 0.892217944, 0.902180611, 0.912206278, 0.922199403, 0.932194722, 0.942187792, 0.952213556, 0.962176153, 0.972201958, 0.982195069, 0.992190306, 1.002183444, 1.012209208, 1.022188236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:46.515" endtime="20201112 09:44:46.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.510" endtime="20201112 09:44:46.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.520" endtime="20201112 09:44:46.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.523" endtime="20201112 09:44:46.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.522" endtime="20201112 09:44:46.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.518" endtime="20201112 09:44:46.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.992" endtime="20201112 09:44:46.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.886" endtime="20201112 09:44:46.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.885" endtime="20201112 09:44:46.544"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:46.547" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.555" endtime="20201112 09:44:48.677"></status>
</kw>
<msg timestamp="20201112 09:44:48.679" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23395904, 'wakeups': [23405975, 23415954, 23425964, 23435943, 23445953...</msg>
<status status="PASS" starttime="20201112 09:44:46.553" endtime="20201112 09:44:48.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.684" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23395904, 'wakeups': [23405975, 23415954, 23425964, 23435943, 23445953...</msg>
<status status="PASS" starttime="20201112 09:44:48.681" endtime="20201112 09:44:48.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.687" endtime="20201112 09:44:48.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.551" endtime="20201112 09:44:48.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.549" endtime="20201112 09:44:48.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.698" level="INFO">${RESULT} = {'wakeups': [23405975, 23415954, 23425964, 23435943, 23445953, 23455963, 23465942, 23475952, 23485961, 23495941, 23505950, 23515960, 23525939, 23535949, 23545959, 23555938, 23565948, 23575958, 2358593...</msg>
<status status="PASS" starttime="20201112 09:44:48.694" endtime="20201112 09:44:48.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.703" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:48.702" endtime="20201112 09:44:48.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.705" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:48.704" endtime="20201112 09:44:48.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.699" endtime="20201112 09:44:48.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.710" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:48.709" endtime="20201112 09:44:48.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.712" level="INFO">VALUE: 23395904</msg>
<status status="PASS" starttime="20201112 09:44:48.711" endtime="20201112 09:44:48.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.706" endtime="20201112 09:44:48.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.717" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:48.716" endtime="20201112 09:44:48.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.719" level="INFO">VALUE: [23405975, 23415954, 23425964, 23435943, 23445953, 23455963, 23465942, 23475952, 23485961, 23495941, 23505950, 23515960, 23525939, 23535949, 23545959, 23555938, 23565948, 23575958, 23585937, 23595947, 23605957, 23615936, 23625946, 23635955, 23645935, 23655944, 23665954, 23675964, 23685943, 23695953, 23705963, 23715942, 23725952, 23735961, 23745941, 23755950, 23765960, 23775939, 23785949, 23795959, 23805938, 23815948, 23825958, 23835937, 23845947, 23855957, 23865936, 23875946, 23885955, 23895935, 23905944, 23915954, 23925964, 23935943, 23945953, 23955963, 23965942, 23975952, 23985961, 23995941, 24005950, 24015960, 24025939, 24035949, 24045959, 24055938, 24065948, 24075958, 24085937, 24095947, 24105957, 24115936, 24125946, 24135955, 24145935, 24155944, 24165954, 24175964, 24185943, 24195953, 24205963, 24215942, 24225952, 24235961, 24245941, 24255950, 24265960, 24275939, 24285949, 24295959, 24305938, 24315948, 24325958, 24335937, 24345947, 24355957, 24365936, 24375946, 24385955, 24395935]</msg>
<status status="PASS" starttime="20201112 09:44:48.718" endtime="20201112 09:44:48.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.713" endtime="20201112 09:44:48.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.728" endtime="20201112 09:44:49.021"></status>
</kw>
<msg timestamp="20201112 09:44:49.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031812222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.726" endtime="20201112 09:44:49.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031812222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.025" endtime="20201112 09:44:49.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.033" endtime="20201112 09:44:49.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.723" endtime="20201112 09:44:49.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.721" endtime="20201112 09:44:49.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.061" level="INFO">${RESULT} = {'diff': [0, 0.010058791000000001, 0.009996945, 0.010009597000000002, 0.009978985999999995, 0.010009556000000003, 0.010009332999999995, 0.009978944000000003, 0.010009500000000005, 0.010009388999999994...</msg>
<status status="PASS" starttime="20201112 09:44:49.037" endtime="20201112 09:44:49.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.066" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:49.065" endtime="20201112 09:44:49.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.068" level="INFO">VALUE: 0.021753431</msg>
<status status="PASS" starttime="20201112 09:44:49.067" endtime="20201112 09:44:49.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.062" endtime="20201112 09:44:49.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.074" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:49.073" endtime="20201112 09:44:49.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.076" level="INFO">VALUE: [0.031812222, 0.041809167, 0.051818764, 0.06179775, 0.071807306, 0.081816639, 0.091795583, 0.101805083, 0.111814472, 0.121793403, 0.131802944, 0.141812306, 0.15179125, 0.16180075, 0.171810139, 0.181789125, 0.191798528, 0.201808014, 0.211786903, 0.221796444, 0.231805833, 0.241784722, 0.251794194, 0.261803833, 0.271782861, 0.281792056, 0.291801458, 0.301810931, 0.311789847, 0.321799333, 0.331808819, 0.34178775, 0.351797153, 0.361806528, 0.371785528, 0.381795056, 0.391804444, 0.401783361, 0.411792875, 0.421802306, 0.431781167, 0.441790667, 0.451800139, 0.461779, 0.471788458, 0.481797917, 0.491776847, 0.501786319, 0.511795931, 0.521774972, 0.531784153, 0.541793597, 0.551803056, 0.561781986, 0.571791417, 0.581800861, 0.591779694, 0.601789222, 0.611798667, 0.621777653, 0.631787069, 0.641796528, 0.651775486, 0.661784986, 0.671794333, 0.681773208, 0.691782667, 0.701792208, 0.711771125, 0.721780569, 0.731790028, 0.741768903, 0.751778389, 0.761787917, 0.771767042, 0.781776153, 0.79178575, 0.801795139, 0.811774125, 0.821783389, 0.831792986, 0.841771847, 0.851781278, 0.86179075, 0.871769736, 0.881779236, 0.891788625, 0.901767569, 0.911776972, 0.921786417, 0.931765347, 0.941774847, 0.951784264, 0.961763264, 0.971772556, 0.981782083, 0.991761042, 1.001770542, 1.011780111, 1.021759111] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:49.075" endtime="20201112 09:44:49.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.070" endtime="20201112 09:44:49.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.079" endtime="20201112 09:44:49.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.083" endtime="20201112 09:44:49.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.081" endtime="20201112 09:44:49.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.078" endtime="20201112 09:44:49.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.548" endtime="20201112 09:44:49.104"></status>
</kw>
<msg timestamp="20201112 09:44:49.104" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.114" endtime="20201112 09:44:51.255"></status>
</kw>
<msg timestamp="20201112 09:44:51.256" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25963531, 'wakeups': [25973571, 25983581, 25993591, 26003570, 26013580...</msg>
<status status="PASS" starttime="20201112 09:44:49.112" endtime="20201112 09:44:51.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25963531, 'wakeups': [25973571, 25983581, 25993591, 26003570, 26013580...</msg>
<status status="PASS" starttime="20201112 09:44:51.257" endtime="20201112 09:44:51.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.260" endtime="20201112 09:44:51.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.108" endtime="20201112 09:44:51.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.106" endtime="20201112 09:44:51.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.266" level="INFO">${RESULT} = {'wakeups': [25973571, 25983581, 25993591, 26003570, 26013580, 26023590, 26033569, 26043579, 26053588, 26063568, 26073577, 26083587, 26093566, 26103576, 26113586, 26123565, 26133575, 26143585, 2615356...</msg>
<status status="PASS" starttime="20201112 09:44:51.264" endtime="20201112 09:44:51.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.270" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:51.269" endtime="20201112 09:44:51.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.272" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:51.271" endtime="20201112 09:44:51.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.267" endtime="20201112 09:44:51.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.278" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:51.276" endtime="20201112 09:44:51.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.280" level="INFO">VALUE: 25963531</msg>
<status status="PASS" starttime="20201112 09:44:51.279" endtime="20201112 09:44:51.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.274" endtime="20201112 09:44:51.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.285" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:51.284" endtime="20201112 09:44:51.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.287" level="INFO">VALUE: [25973571, 25983581, 25993591, 26003570, 26013580, 26023590, 26033569, 26043579, 26053588, 26063568, 26073577, 26083587, 26093566, 26103576, 26113586, 26123565, 26133575, 26143585, 26153564, 26163574, 26173583, 26183563, 26193572, 26203582, 26213562, 26223571, 26233581, 26243591, 26253570, 26263580, 26273590, 26283569, 26293579, 26303588, 26313568, 26323577, 26333587, 26343566, 26353576, 26363586, 26373565, 26383575, 26393585, 26403564, 26413574, 26423583, 26433563, 26443572, 26453582, 26463562, 26473571, 26483581, 26493591, 26503570, 26513580, 26523590, 26533569, 26543579, 26553588, 26563568, 26573577, 26583587, 26593566, 26603576, 26613586, 26623565, 26633575, 26643585, 26653564, 26663574, 26673583, 26683563, 26693572, 26703582, 26713562, 26723571, 26733581, 26743591, 26753570, 26763580, 26773590, 26783569, 26793579, 26803588, 26813568, 26823577, 26833587, 26843566, 26853576, 26863586, 26873565, 26883575, 26893585, 26903564, 26913574, 26923583, 26933563, 26943572, 26953582, 26963562]</msg>
<status status="PASS" starttime="20201112 09:44:51.286" endtime="20201112 09:44:51.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.281" endtime="20201112 09:44:51.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.295" endtime="20201112 09:44:51.587"></status>
</kw>
<msg timestamp="20201112 09:44:51.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029082056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039163764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.293" endtime="20201112 09:44:51.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029082056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039163764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.590" endtime="20201112 09:44:51.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.598" endtime="20201112 09:44:51.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.290" endtime="20201112 09:44:51.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.289" endtime="20201112 09:44:51.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.626" level="INFO">${RESULT} = {'diff': [0, 0.010081707999999998, 0.010009361000000001, 0.010009431, 0.009978986000000009, 0.010009457999999999, 0.010009443999999992, 0.009978917000000004, 0.010009444999999992, 0.010009444000000006...</msg>
<status status="PASS" starttime="20201112 09:44:51.602" endtime="20201112 09:44:51.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.631" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:51.630" endtime="20201112 09:44:51.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.633" level="INFO">VALUE: 0.029082056</msg>
<status status="PASS" starttime="20201112 09:44:51.632" endtime="20201112 09:44:51.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.627" endtime="20201112 09:44:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.639" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:51.638" endtime="20201112 09:44:51.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.641" level="INFO">VALUE: [0.039163764, 0.049173125, 0.059182556, 0.069161542, 0.079171, 0.089180444, 0.099159361, 0.109168806, 0.11917825, 0.129157194, 0.139166667, 0.149176097, 0.159155083, 0.169164431, 0.179173861, 0.189152819, 0.199162319, 0.209171764, 0.219150639, 0.229160153, 0.239169583, 0.2491485, 0.259157903, 0.269167569, 0.279146569, 0.289155778, 0.299165194, 0.309174694, 0.319153611, 0.329163042, 0.339172458, 0.349151431, 0.359160958, 0.369170375, 0.379149208, 0.389158736, 0.399168194, 0.409147097, 0.419156569, 0.429166014, 0.439144944, 0.449154417, 0.459163708, 0.469142764, 0.479152167, 0.489161667, 0.499140597, 0.509150056, 0.519159569, 0.529138681, 0.539147903, 0.549157264, 0.559166708, 0.56914575, 0.579155125, 0.589164653, 0.599143583, 0.609153014, 0.619162514, 0.629141417, 0.639150875, 0.649160222, 0.659139139, 0.669148722, 0.679158125, 0.689136986, 0.6991465, 0.709155889, 0.719134847, 0.72914425, 0.739153708, 0.749132708, 0.759142167, 0.769151778, 0.779130722, 0.789140042, 0.799149403, 0.809158889, 0.819137694, 0.829147222, 0.839156708, 0.849135569, 0.859145083, 0.869154528, 0.879133486, 0.889142889, 0.899152278, 0.909131278, 0.919140833, 0.929150181, 0.939129125, 0.949138653, 0.959147986, 0.969127, 0.979136417, 0.989145764, 0.99912475, 1.009134236, 1.01914375, 1.029122861] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:51.640" endtime="20201112 09:44:51.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.635" endtime="20201112 09:44:51.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.644" endtime="20201112 09:44:51.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.648" endtime="20201112 09:44:51.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.646" endtime="20201112 09:44:51.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.643" endtime="20201112 09:44:51.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.105" endtime="20201112 09:44:51.669"></status>
</kw>
<msg timestamp="20201112 09:44:51.669" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.678" endtime="20201112 09:44:53.789"></status>
</kw>
<msg timestamp="20201112 09:44:53.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28521087, 'wakeups': [28531127, 28541137, 28551147, 28561126, 28571136...</msg>
<status status="PASS" starttime="20201112 09:44:51.676" endtime="20201112 09:44:53.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28521087, 'wakeups': [28531127, 28541137, 28551147, 28561126, 28571136...</msg>
<status status="PASS" starttime="20201112 09:44:53.790" endtime="20201112 09:44:53.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.793" endtime="20201112 09:44:53.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.673" endtime="20201112 09:44:53.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.671" endtime="20201112 09:44:53.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.799" level="INFO">${RESULT} = {'wakeups': [28531127, 28541137, 28551147, 28561126, 28571136, 28581146, 28591125, 28601135, 28611145, 28621124, 28631134, 28641143, 28651123, 28661132, 28671142, 28681121, 28691131, 28701141, 2871112...</msg>
<status status="PASS" starttime="20201112 09:44:53.797" endtime="20201112 09:44:53.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.804" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:53.803" endtime="20201112 09:44:53.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.806" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:53.805" endtime="20201112 09:44:53.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.800" endtime="20201112 09:44:53.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.811" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:53.810" endtime="20201112 09:44:53.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.815" level="INFO">VALUE: 28521087</msg>
<status status="PASS" starttime="20201112 09:44:53.813" endtime="20201112 09:44:53.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.807" endtime="20201112 09:44:53.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.820" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:53.819" endtime="20201112 09:44:53.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.822" level="INFO">VALUE: [28531127, 28541137, 28551147, 28561126, 28571136, 28581146, 28591125, 28601135, 28611145, 28621124, 28631134, 28641143, 28651123, 28661132, 28671142, 28681121, 28691131, 28701141, 28711120, 28721130, 28731140, 28741119, 28751129, 28761138, 28771118, 28781127, 28791137, 28801147, 28811126, 28821136, 28831146, 28841125, 28851135, 28861145, 28871124, 28881134, 28891143, 28901123, 28911132, 28921142, 28931121, 28941131, 28951141, 28961120, 28971130, 28981140, 28991119, 29001129, 29011138, 29021118, 29031127, 29041137, 29051147, 29061126, 29071136, 29081146, 29091125, 29101135, 29111145, 29121124, 29131134, 29141143, 29151123, 29161132, 29171142, 29181121, 29191131, 29201141, 29211120, 29221130, 29231140, 29241119, 29251129, 29261138, 29271118, 29281127, 29291137, 29301147, 29311126, 29321136, 29331146, 29341125, 29351135, 29361145, 29371124, 29381134, 29391143, 29401123, 29411132, 29421142, 29431121, 29441131, 29451141, 29461120, 29471130, 29481140, 29491119, 29501129, 29511138, 29521118]</msg>
<status status="PASS" starttime="20201112 09:44:53.821" endtime="20201112 09:44:53.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.816" endtime="20201112 09:44:53.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.830" endtime="20201112 09:44:54.120"></status>
</kw>
<msg timestamp="20201112 09:44:54.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02127075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031329681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:53.828" endtime="20201112 09:44:54.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02127075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031329681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:54.124" endtime="20201112 09:44:54.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.132" endtime="20201112 09:44:54.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.826" endtime="20201112 09:44:54.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.824" endtime="20201112 09:44:54.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.160" level="INFO">${RESULT} = {'diff': [0, 0.010058930999999997, 0.010009319000000003, 0.010009347000000002, 0.009978944999999996, 0.010009499999999998, 0.010009375000000001, 0.009979041000000008, 0.010009472999999991, 0.010009444...</msg>
<status status="PASS" starttime="20201112 09:44:54.136" endtime="20201112 09:44:54.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.165" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:54.164" endtime="20201112 09:44:54.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.167" level="INFO">VALUE: 0.02127075</msg>
<status status="PASS" starttime="20201112 09:44:54.166" endtime="20201112 09:44:54.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.161" endtime="20201112 09:44:54.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.173" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:54.171" endtime="20201112 09:44:54.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.187" level="INFO">VALUE: [0.031329681, 0.041339, 0.051348347, 0.061327292, 0.071336792, 0.081346167, 0.091325208, 0.101334681, 0.111344125, 0.121323056, 0.131332458, 0.141341917, 0.151320861, 0.161330347, 0.171339764, 0.181318694, 0.191328139, 0.201337611, 0.211316569, 0.221325986, 0.231335431, 0.241314347, 0.251323764, 0.261333361, 0.271312389, 0.281321597, 0.291330986, 0.301340542, 0.311319486, 0.321328958, 0.331338389, 0.341317194, 0.351326736, 0.361336236, 0.371315125, 0.381324611, 0.391334056, 0.401312986, 0.411322319, 0.421331861, 0.43131075, 0.441320236, 0.451329667, 0.461308486, 0.471318069, 0.481327556, 0.491306417, 0.501315917, 0.511325486, 0.521304528, 0.531313625, 0.541323194, 0.551332639, 0.561311583, 0.571320958, 0.581330417, 0.591309347, 0.601318861, 0.611328222, 0.621307236, 0.631316694, 0.641326139, 0.651305125, 0.661314514, 0.671323833, 0.681302833, 0.69131225, 0.701321819, 0.711300736, 0.721310069, 0.731319681, 0.741298583, 0.751308, 0.761317569, 0.771296597, 0.781305861, 0.791315181, 0.801324694, 0.811303667, 0.821313125, 0.831322583, 0.841301458, 0.851310917, 0.861320431, 0.871299222, 0.881308847, 0.891318097, 0.901297, 0.911306597, 0.921316014, 0.931294917, 0.941304403, 0.951313875, 0.961292806, 0.971302264, 0.981311722, 0.991290639, 1.001299986, 1.011309722, 1.021288667] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:54.175" endtime="20201112 09:44:54.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.168" endtime="20201112 09:44:54.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.190" endtime="20201112 09:44:54.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.194" endtime="20201112 09:44:54.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.192" endtime="20201112 09:44:54.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.189" endtime="20201112 09:44:54.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.670" endtime="20201112 09:44:54.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.546" endtime="20201112 09:44:54.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.545" endtime="20201112 09:44:54.215"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:54.218" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.227" endtime="20201112 09:44:56.361"></status>
</kw>
<msg timestamp="20201112 09:44:56.363" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31068603, 'wakeups': [31078674, 31088653, 31098632, 31108673, 31118652...</msg>
<status status="PASS" starttime="20201112 09:44:54.225" endtime="20201112 09:44:56.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31068603, 'wakeups': [31078674, 31088653, 31098632, 31108673, 31118652...</msg>
<status status="PASS" starttime="20201112 09:44:56.365" endtime="20201112 09:44:56.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.368" endtime="20201112 09:44:56.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.222" endtime="20201112 09:44:56.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.220" endtime="20201112 09:44:56.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.374" level="INFO">${RESULT} = {'wakeups': [31078674, 31088653, 31098632, 31108673, 31118652, 31128631, 31138671, 31148651, 31158630, 31168670, 31178649, 31188629, 31198669, 31208648, 31218627, 31228668, 31238647, 31248626, 3125866...</msg>
<status status="PASS" starttime="20201112 09:44:56.372" endtime="20201112 09:44:56.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.378" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:56.377" endtime="20201112 09:44:56.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.380" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:56.379" endtime="20201112 09:44:56.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.375" endtime="20201112 09:44:56.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.386" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:56.384" endtime="20201112 09:44:56.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.388" level="INFO">VALUE: 31068603</msg>
<status status="PASS" starttime="20201112 09:44:56.387" endtime="20201112 09:44:56.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.382" endtime="20201112 09:44:56.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.393" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:56.392" endtime="20201112 09:44:56.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.396" level="INFO">VALUE: [31078674, 31088653, 31098632, 31108673, 31118652, 31128631, 31138671, 31148651, 31158630, 31168670, 31178649, 31188629, 31198669, 31208648, 31218627, 31228668, 31238647, 31248626, 31258666, 31268646, 31278625, 31288665, 31298645, 31308624, 31318634, 31328674, 31338653, 31348632, 31358673, 31368652, 31378631, 31388671, 31398651, 31408630, 31418670, 31428649, 31438629, 31448669, 31458648, 31468627, 31478637, 31488677, 31498657, 31508605, 31518676, 31528656, 31538604, 31548675, 31558654, 31568664, 31578643, 31588623, 31598693, 31608642, 31618621, 31628692, 31638641, 31648620, 31658691, 31668640, 31678619, 31688690, 31698638, 31708618, 31718688, 31728637, 31738616, 31748687, 31758636, 31768615, 31778656, 31788665, 31798645, 31808624, 31818634, 31828674, 31838653, 31848632, 31858673, 31868652, 31878631, 31888671, 31898651, 31908630, 31918670, 31928649, 31938629, 31948669, 31958648, 31968627, 31978668, 31988647, 31998626, 32008636, 32018676, 32028656, 32038604, 32048675, 32058654, 32068664]</msg>
<status status="PASS" starttime="20201112 09:44:56.394" endtime="20201112 09:44:56.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.389" endtime="20201112 09:44:56.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.404" endtime="20201112 09:44:56.697"></status>
</kw>
<msg timestamp="20201112 09:44:56.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032519889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.402" endtime="20201112 09:44:56.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032519889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.701" endtime="20201112 09:44:56.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.709" endtime="20201112 09:44:56.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.399" endtime="20201112 09:44:56.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.397" endtime="20201112 09:44:56.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.735" level="INFO">${RESULT} = {'diff': [0, 0.010073903000000002, 0.009974041999999995, 0.009991736000000001, 0.010031777000000006, 0.009974319999999995, 0.009991792, 0.010031750000000006, 0.00997427699999999, 0.009991792, 0.010031...</msg>
<status status="PASS" starttime="20201112 09:44:56.712" endtime="20201112 09:44:56.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.740" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:56.739" endtime="20201112 09:44:56.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.742" level="INFO">VALUE: 0.022445986</msg>
<status status="PASS" starttime="20201112 09:44:56.741" endtime="20201112 09:44:56.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.736" endtime="20201112 09:44:56.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.748" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:56.747" endtime="20201112 09:44:56.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.750" level="INFO">VALUE: [0.032519889, 0.042493931, 0.052485667, 0.062517444, 0.072491764, 0.082483556, 0.092515306, 0.102489583, 0.112481375, 0.12251325, 0.132487389, 0.142479139, 0.152510972, 0.162485292, 0.172477056, 0.182508931, 0.192483139, 0.202474875, 0.212506708, 0.222480931, 0.232472722, 0.242504542, 0.252478792, 0.262470542, 0.272484639, 0.282511833, 0.292486028, 0.302477806, 0.312509625, 0.322483861, 0.332475597, 0.342507486, 0.352481681, 0.362473472, 0.372505347, 0.382479528, 0.392471306, 0.402503125, 0.412477306, 0.422469042, 0.432483278, 0.442510486, 0.452484611, 0.462445903, 0.472508264, 0.482482431, 0.492443806, 0.502506, 0.512480292, 0.522494556, 0.532468667, 0.542460444, 0.552522736, 0.5624665, 0.572458306, 0.582520694, 0.59246425, 0.602456097, 0.612518389, 0.622462194, 0.632453917, 0.642516222, 0.65246, 0.662451792, 0.672514111, 0.682457819, 0.692449597, 0.702511986, 0.712455639, 0.722447347, 0.732492069, 0.742488694, 0.752462944, 0.762454722, 0.772468764, 0.782495944, 0.792470208, 0.802461986, 0.812493792, 0.822468083, 0.83245975, 0.842491597, 0.852465819, 0.862457611, 0.872489333, 0.882463667, 0.892455472, 0.902487361, 0.912461472, 0.922453417, 0.932485139, 0.942459389, 0.952451083, 0.962465278, 0.972492403, 0.982466667, 0.992427944, 1.002490222, 1.012464431, 1.022478556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:56.749" endtime="20201112 09:44:56.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.744" endtime="20201112 09:44:56.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.753" endtime="20201112 09:44:56.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.758" endtime="20201112 09:44:56.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.756" endtime="20201112 09:44:56.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.752" endtime="20201112 09:44:56.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.219" endtime="20201112 09:44:56.778"></status>
</kw>
<msg timestamp="20201112 09:44:56.779" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.788" endtime="20201112 09:44:58.921"></status>
</kw>
<msg timestamp="20201112 09:44:58.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33631195, 'wakeups': [33641296, 33651245, 33661224, 33671264, 33681243...</msg>
<status status="PASS" starttime="20201112 09:44:56.786" endtime="20201112 09:44:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33631195, 'wakeups': [33641296, 33651245, 33661224, 33671264, 33681243...</msg>
<status status="PASS" starttime="20201112 09:44:58.922" endtime="20201112 09:44:58.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.926" endtime="20201112 09:44:58.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.783" endtime="20201112 09:44:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.781" endtime="20201112 09:44:58.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.931" level="INFO">${RESULT} = {'wakeups': [33641296, 33651245, 33661224, 33671264, 33681243, 33691223, 33701263, 33711242, 33721221, 33731262, 33741241, 33751220, 33761260, 33771240, 33781219, 33791259, 33801239, 33811218, 3382125...</msg>
<status status="PASS" starttime="20201112 09:44:58.929" endtime="20201112 09:44:58.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.935" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:58.934" endtime="20201112 09:44:58.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.938" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:58.937" endtime="20201112 09:44:58.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.932" endtime="20201112 09:44:58.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.943" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:58.942" endtime="20201112 09:44:58.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.945" level="INFO">VALUE: 33631195</msg>
<status status="PASS" starttime="20201112 09:44:58.944" endtime="20201112 09:44:58.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.939" endtime="20201112 09:44:58.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.950" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:58.949" endtime="20201112 09:44:58.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.952" level="INFO">VALUE: [33641296, 33651245, 33661224, 33671264, 33681243, 33691223, 33701263, 33711242, 33721221, 33731262, 33741241, 33751220, 33761260, 33771240, 33781219, 33791259, 33801239, 33811218, 33821258, 33831237, 33841217, 33851257, 33861236, 33871215, 33881286, 33891235, 33901214, 33911285, 33921234, 33931213, 33941284, 33951232, 33961212, 33971282, 33981231, 33991210, 34001281, 34011230, 34021209, 34031280, 34041229, 34051208, 34061279, 34071228, 34081207, 34091278, 34101226, 34111206, 34121276, 34131256, 34141204, 34151275, 34161254, 34171203, 34181274, 34191253, 34201202, 34211273, 34221252, 34231201, 34241271, 34251251, 34261199, 34271270, 34281250, 34291198, 34301269, 34311248, 34321197, 34331268, 34341247, 34351196, 34361267, 34371246, 34381225, 34391265, 34401245, 34411224, 34421264, 34431243, 34441223, 34451263, 34461242, 34471221, 34481262, 34491241, 34501220, 34511260, 34521240, 34531219, 34541259, 34551239, 34561218, 34571258, 34581237, 34591217, 34601257, 34611236, 34621215, 34631286]</msg>
<status status="PASS" starttime="20201112 09:44:58.951" endtime="20201112 09:44:58.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.946" endtime="20201112 09:44:58.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.960" endtime="20201112 09:44:59.251"></status>
</kw>
<msg timestamp="20201112 09:44:59.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031246667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.958" endtime="20201112 09:44:59.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031246667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.255" endtime="20201112 09:44:59.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.263" endtime="20201112 09:44:59.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.956" endtime="20201112 09:44:59.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.954" endtime="20201112 09:44:59.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.291" level="INFO">${RESULT} = {'diff': [0, 0.010090195, 0.009943625000000005, 0.009991624999999997, 0.010031875000000003, 0.00997418, 0.009991805999999992, 0.010031750000000006, 0.009974361000000001, 0.009991736000000001, 0.010031...</msg>
<status status="PASS" starttime="20201112 09:44:59.266" endtime="20201112 09:44:59.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.296" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:59.295" endtime="20201112 09:44:59.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.298" level="INFO">VALUE: 0.021156472</msg>
<status status="PASS" starttime="20201112 09:44:59.297" endtime="20201112 09:44:59.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.292" endtime="20201112 09:44:59.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.304" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:59.303" endtime="20201112 09:44:59.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.306" level="INFO">VALUE: [0.031246667, 0.041190292, 0.051181917, 0.061213792, 0.071187972, 0.081179778, 0.091211528, 0.101185889, 0.111177625, 0.121209486, 0.131183694, 0.141175444, 0.151207167, 0.161181542, 0.171173278, 0.181205153, 0.191179333, 0.201171139, 0.211202889, 0.221177111, 0.231168972, 0.241200778, 0.251175014, 0.261166764, 0.271229167, 0.281172806, 0.291164625, 0.301226958, 0.311170708, 0.321162403, 0.33122475, 0.3411685, 0.351160278, 0.361222542, 0.371166292, 0.381158097, 0.391220417, 0.401164181, 0.411155958, 0.421218375, 0.431162014, 0.441153792, 0.451216167, 0.46115975, 0.471151611, 0.481213958, 0.491157625, 0.501149444, 0.511211806, 0.521185986, 0.531147278, 0.541209653, 0.551183778, 0.561145056, 0.571207361, 0.581181681, 0.591142931, 0.601205361, 0.6111795, 0.621140806, 0.631203111, 0.641177361, 0.651138597, 0.661200847, 0.671175167, 0.681136458, 0.691198778, 0.701172958, 0.711134292, 0.721196625, 0.731170861, 0.741132083, 0.751194472, 0.761168653, 0.771160444, 0.781192236, 0.791166514, 0.801158306, 0.81119, 0.821164319, 0.831156125, 0.841187903, 0.851162167, 0.861153944, 0.871185681, 0.881160014, 0.891151778, 0.901183556, 0.911157778, 0.921149569, 0.931181403, 0.941155667, 0.951147431, 0.961179194, 0.971153486, 0.981145264, 0.991177125, 1.001151306, 1.011143069, 1.0212055] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:59.305" endtime="20201112 09:44:59.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.300" endtime="20201112 09:44:59.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.309" endtime="20201112 09:44:59.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.313" endtime="20201112 09:44:59.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.311" endtime="20201112 09:44:59.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.308" endtime="20201112 09:44:59.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.779" endtime="20201112 09:44:59.334"></status>
</kw>
<msg timestamp="20201112 09:44:59.334" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.343" endtime="20201112 09:45:01.476"></status>
</kw>
<msg timestamp="20201112 09:45:01.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36188781, 'wakeups': [36198883, 36208831, 36218811, 36228851, 36238830...</msg>
<status status="PASS" starttime="20201112 09:44:59.341" endtime="20201112 09:45:01.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36188781, 'wakeups': [36198883, 36208831, 36218811, 36228851, 36238830...</msg>
<status status="PASS" starttime="20201112 09:45:01.478" endtime="20201112 09:45:01.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.481" endtime="20201112 09:45:01.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.338" endtime="20201112 09:45:01.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.336" endtime="20201112 09:45:01.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.487" level="INFO">${RESULT} = {'wakeups': [36198883, 36208831, 36218811, 36228851, 36238830, 36248809, 36258819, 36268859, 36278839, 36288787, 36298858, 36308837, 36318786, 36328857, 36338836, 36348785, 36358856, 36368835, 3637878...</msg>
<status status="PASS" starttime="20201112 09:45:01.485" endtime="20201112 09:45:01.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.491" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:01.490" endtime="20201112 09:45:01.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.493" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:01.492" endtime="20201112 09:45:01.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.488" endtime="20201112 09:45:01.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.500" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:01.499" endtime="20201112 09:45:01.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.502" level="INFO">VALUE: 36188781</msg>
<status status="PASS" starttime="20201112 09:45:01.501" endtime="20201112 09:45:01.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.495" endtime="20201112 09:45:01.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.507" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:01.506" endtime="20201112 09:45:01.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.509" level="INFO">VALUE: [36198883, 36208831, 36218811, 36228851, 36238830, 36248809, 36258819, 36268859, 36278839, 36288787, 36298858, 36308837, 36318786, 36328857, 36338836, 36348785, 36358856, 36368835, 36378784, 36388854, 36398834, 36408782, 36418853, 36428833, 36438781, 36448852, 36458831, 36468811, 36478851, 36488830, 36498809, 36508850, 36518829, 36528808, 36538848, 36548828, 36558807, 36568847, 36578826, 36588806, 36598846, 36608825, 36618804, 36628845, 36638824, 36648803, 36658843, 36668823, 36678802, 36688842, 36698822, 36708801, 36718872, 36728820, 36738800, 36748870, 36758819, 36768798, 36778839, 36788848, 36798828, 36808807, 36818847, 36828826, 36838806, 36848846, 36858825, 36868804, 36878845, 36888824, 36898803, 36908843, 36918823, 36928802, 36938842, 36948822, 36958801, 36968872, 36978820, 36988800, 36998870, 37008819, 37018798, 37028869, 37038818, 37048797, 37058868, 37068817, 37078796, 37088867, 37098815, 37108795, 37118865, 37128814, 37138793, 37148864, 37158813, 37168792, 37178863, 37188812]</msg>
<status status="PASS" starttime="20201112 09:45:01.508" endtime="20201112 09:45:01.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.503" endtime="20201112 09:45:01.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.517" endtime="20201112 09:45:01.809"></status>
</kw>
<msg timestamp="20201112 09:45:01.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033300861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.515" endtime="20201112 09:45:01.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033300861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.813" endtime="20201112 09:45:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.821" endtime="20201112 09:45:01.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.513" endtime="20201112 09:45:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.511" endtime="20201112 09:45:01.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.848" level="INFO">${RESULT} = {'diff': [0, 0.0100925, 0.009943472000000002, 0.009991735999999994, 0.010031917000000001, 0.009974139000000007, 0.009991792, 0.01001419399999999, 0.010027125000000012, 0.009974221999999991, 0.00996125...</msg>
<status status="PASS" starttime="20201112 09:45:01.824" endtime="20201112 09:45:01.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.853" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:01.852" endtime="20201112 09:45:01.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.855" level="INFO">VALUE: 0.023208361</msg>
<status status="PASS" starttime="20201112 09:45:01.854" endtime="20201112 09:45:01.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.849" endtime="20201112 09:45:01.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.861" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:01.860" endtime="20201112 09:45:01.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.863" level="INFO">VALUE: [0.033300861, 0.043244333, 0.053236069, 0.063267986, 0.073242125, 0.083233917, 0.093248111, 0.103275236, 0.113249458, 0.123210708, 0.133273097, 0.143247278, 0.153208486, 0.163270889, 0.173245111, 0.183206333, 0.193268764, 0.203242847, 0.213204167, 0.2232665, 0.233240694, 0.243202069, 0.253264444, 0.263238667, 0.273199861, 0.283262153, 0.293236472, 0.30322825, 0.313260139, 0.323234319, 0.333226069, 0.343257972, 0.353232139, 0.363223944, 0.37325575, 0.383229958, 0.393221736, 0.403253569, 0.413227861, 0.423219611, 0.433251278, 0.443225653, 0.453217389, 0.46324925, 0.473223472, 0.483215236, 0.493246972, 0.503221292, 0.513213083, 0.523244819, 0.533219125, 0.543210847, 0.553273222, 0.563216931, 0.573208722, 0.583271125, 0.593214722, 0.603206472, 0.613251167, 0.623247861, 0.633222014, 0.643213847, 0.653245681, 0.663219875, 0.673211639, 0.683243403, 0.693217694, 0.703209514, 0.713241319, 0.7232155, 0.733207347, 0.743239139, 0.753213319, 0.763205153, 0.773236889, 0.783211208, 0.793203014, 0.803265347, 0.813209097, 0.823200861, 0.833263264, 0.843206903, 0.853198708, 0.863261, 0.873204736, 0.883196542, 0.893258819, 0.9032025, 0.913194347, 0.923256625, 0.933200389, 0.943192167, 0.953254528, 0.963198208, 0.973189972, 0.983252236, 0.993195903, 1.003187778, 1.013250097, 1.023193875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:01.862" endtime="20201112 09:45:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.856" endtime="20201112 09:45:01.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.867" endtime="20201112 09:45:01.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:01.870" endtime="20201112 09:45:01.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.869" endtime="20201112 09:45:01.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.865" endtime="20201112 09:45:01.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.335" endtime="20201112 09:45:01.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.217" endtime="20201112 09:45:01.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.216" endtime="20201112 09:45:01.892"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:01.895" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.903" endtime="20201112 09:45:04.032"></status>
</kw>
<msg timestamp="20201112 09:45:04.033" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38746337, 'wakeups': [38756469, 38766418, 38776428, 38786376, 38796356...</msg>
<status status="PASS" starttime="20201112 09:45:01.901" endtime="20201112 09:45:04.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38746337, 'wakeups': [38756469, 38766418, 38776428, 38786376, 38796356...</msg>
<status status="PASS" starttime="20201112 09:45:04.034" endtime="20201112 09:45:04.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.037" endtime="20201112 09:45:04.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.899" endtime="20201112 09:45:04.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.897" endtime="20201112 09:45:04.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.042" level="INFO">${RESULT} = {'wakeups': [38756469, 38766418, 38776428, 38786376, 38796356, 38806457, 38816406, 38826416, 38836395, 38846343, 38856445, 38866424, 38876403, 38886383, 38896362, 38906433, 38916412, 38926422, 3893637...</msg>
<status status="PASS" starttime="20201112 09:45:04.040" endtime="20201112 09:45:04.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.047" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:04.046" endtime="20201112 09:45:04.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.049" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:04.048" endtime="20201112 09:45:04.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.043" endtime="20201112 09:45:04.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.055" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.053" endtime="20201112 09:45:04.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.057" level="INFO">VALUE: 38746337</msg>
<status status="PASS" starttime="20201112 09:45:04.056" endtime="20201112 09:45:04.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.051" endtime="20201112 09:45:04.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.062" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.061" endtime="20201112 09:45:04.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.064" level="INFO">VALUE: [38756469, 38766418, 38776428, 38786376, 38796356, 38806457, 38816406, 38826416, 38836395, 38846343, 38856445, 38866424, 38876403, 38886383, 38896362, 38906433, 38916412, 38926422, 38936370, 38946350, 38956451, 38966400, 38976409, 38986389, 38996337, 39006439, 39016418, 39026428, 39036376, 39046356, 39056457, 39066406, 39076416, 39086395, 39096343, 39106445, 39116424, 39126403, 39136383, 39146362, 39156433, 39166412, 39176422, 39186370, 39196350, 39206451, 39216400, 39226409, 39236389, 39246337, 39256439, 39266418, 39276428, 39286376, 39296356, 39306457, 39316406, 39326416, 39336395, 39346343, 39356445, 39366424, 39376403, 39386383, 39396362, 39406433, 39416412, 39426422, 39436370, 39446350, 39456451, 39466400, 39476409, 39486389, 39496337, 39506439, 39516418, 39526428, 39536376, 39546356, 39556457, 39566406, 39576416, 39586395, 39596343, 39606445, 39616424, 39626403, 39636383, 39646362, 39656433, 39666412, 39676422, 39686370, 39696350, 39706451, 39716400, 39726409, 39736389, 39746337]</msg>
<status status="PASS" starttime="20201112 09:45:04.063" endtime="20201112 09:45:04.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.058" endtime="20201112 09:45:04.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.073" endtime="20201112 09:45:04.366"></status>
</kw>
<msg timestamp="20201112 09:45:04.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032750903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.072" endtime="20201112 09:45:04.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032750903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.370" endtime="20201112 09:45:04.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.377" endtime="20201112 09:45:04.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.068" endtime="20201112 09:45:04.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.066" endtime="20201112 09:45:04.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.404" level="INFO">${RESULT} = {'diff': [0, 0.010108596999999997, 0.009960458000000005, 0.00999125, 0.009960749999999997, 0.009991042000000006, 0.010082471999999995, 0.009960638999999993, 0.009991291999999999, 0.009991236, 0.009960...</msg>
<status status="PASS" starttime="20201112 09:45:04.381" endtime="20201112 09:45:04.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.409" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.408" endtime="20201112 09:45:04.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.411" level="INFO">VALUE: 0.022642306</msg>
<status status="PASS" starttime="20201112 09:45:04.410" endtime="20201112 09:45:04.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.405" endtime="20201112 09:45:04.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.417" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.416" endtime="20201112 09:45:04.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.419" level="INFO">VALUE: [0.032750903, 0.042711361, 0.052702611, 0.062663361, 0.072654403, 0.082736875, 0.092697514, 0.102688806, 0.112680042, 0.122640681, 0.132723181, 0.142714292, 0.152675056, 0.162666319, 0.172657417, 0.182709389, 0.192700389, 0.202691639, 0.212652486, 0.222643653, 0.232726014, 0.242686736, 0.252677972, 0.262669111, 0.272629833, 0.282712292, 0.292703389, 0.302694722, 0.312655361, 0.322646583, 0.332729069, 0.342689569, 0.352680903, 0.362672208, 0.372632764, 0.382715236, 0.392706333, 0.402667111, 0.412658403, 0.422649486, 0.432701306, 0.442692597, 0.452683847, 0.462644569, 0.472635778, 0.48271825, 0.492678819, 0.502670028, 0.512661347, 0.522622014, 0.532704458, 0.542695528, 0.552686819, 0.562647597, 0.572638736, 0.582721083, 0.592681806, 0.602673014, 0.612664361, 0.622624889, 0.632707361, 0.642698528, 0.652659194, 0.662650514, 0.672641653, 0.682693597, 0.692684694, 0.702675931, 0.712636667, 0.722627889, 0.732710361, 0.742670917, 0.752662139, 0.762653417, 0.772614056, 0.782696514, 0.792687681, 0.802678903, 0.812639667, 0.822630861, 0.832713264, 0.842673917, 0.852665028, 0.862656375, 0.872617, 0.882699458, 0.892690625, 0.902651306, 0.912642639, 0.922633708, 0.932685708, 0.942676806, 0.952668097, 0.96262875, 0.972619944, 0.982702472, 0.992663056, 1.002654292, 1.012645569, 1.022606181] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:04.418" endtime="20201112 09:45:04.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.413" endtime="20201112 09:45:04.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.423" endtime="20201112 09:45:04.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.427" endtime="20201112 09:45:04.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.425" endtime="20201112 09:45:04.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.421" endtime="20201112 09:45:04.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.895" endtime="20201112 09:45:04.448"></status>
</kw>
<msg timestamp="20201112 09:45:04.448" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.458" endtime="20201112 09:45:06.588"></status>
</kw>
<msg timestamp="20201112 09:45:06.589" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41303955, 'wakeups': [41314056, 41324035, 41334045, 41343994, 41353973...</msg>
<status status="PASS" starttime="20201112 09:45:04.456" endtime="20201112 09:45:06.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41303955, 'wakeups': [41314056, 41324035, 41334045, 41343994, 41353973...</msg>
<status status="PASS" starttime="20201112 09:45:06.590" endtime="20201112 09:45:06.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.593" endtime="20201112 09:45:06.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.452" endtime="20201112 09:45:06.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.450" endtime="20201112 09:45:06.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:06.599" level="INFO">${RESULT} = {'wakeups': [41314056, 41324035, 41334045, 41343994, 41353973, 41364074, 41374023, 41384033, 41394012, 41403961, 41414062, 41424041, 41434020, 41444000, 41453979, 41464050, 41474029, 41484039, 4149398...</msg>
<status status="PASS" starttime="20201112 09:45:06.597" endtime="20201112 09:45:06.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.603" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:06.602" endtime="20201112 09:45:06.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.606" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:06.604" endtime="20201112 09:45:06.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.600" endtime="20201112 09:45:06.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.611" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:06.610" endtime="20201112 09:45:06.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.613" level="INFO">VALUE: 41303955</msg>
<status status="PASS" starttime="20201112 09:45:06.612" endtime="20201112 09:45:06.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.607" endtime="20201112 09:45:06.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.618" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:06.617" endtime="20201112 09:45:06.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.620" level="INFO">VALUE: [41314056, 41324035, 41334045, 41343994, 41353973, 41364074, 41374023, 41384033, 41394012, 41403961, 41414062, 41424041, 41434020, 41444000, 41453979, 41464050, 41474029, 41484039, 41493988, 41503967, 41514068, 41524017, 41534027, 41544006, 41553985, 41564056, 41574035, 41584045, 41593994, 41603973, 41614074, 41624023, 41634033, 41644012, 41653961, 41664062, 41674041, 41684020, 41694000, 41703979, 41714050, 41724029, 41734039, 41743988, 41753967, 41764068, 41774017, 41784027, 41794006, 41803985, 41814056, 41824035, 41834045, 41843994, 41853973, 41864074, 41874023, 41884033, 41894012, 41903961, 41914062, 41924041, 41934020, 41944000, 41953979, 41964050, 41974029, 41984039, 41993988, 42003967, 42014068, 42024017, 42034027, 42044006, 42053985, 42064056, 42074035, 42084045, 42093994, 42103973, 42114074, 42124023, 42134033, 42144012, 42153961, 42164062, 42174041, 42184020, 42194000, 42203979, 42214050, 42224029, 42234039, 42243988, 42253967, 42264068, 42274017, 42284027, 42294006, 42303985]</msg>
<status status="PASS" starttime="20201112 09:45:06.619" endtime="20201112 09:45:06.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.614" endtime="20201112 09:45:06.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.635" endtime="20201112 09:45:06.926"></status>
</kw>
<msg timestamp="20201112 09:45:06.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:06.633" endtime="20201112 09:45:06.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:06.930" endtime="20201112 09:45:06.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.938" endtime="20201112 09:45:06.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.630" endtime="20201112 09:45:06.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.622" endtime="20201112 09:45:06.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:06.966" level="INFO">${RESULT} = {'diff': [0, 0.010103653, 0.009990986, 0.009991236, 0.009960750000000004, 0.00999112499999999, 0.010082333999999998, 0.009960777000000004, 0.009991153000000003, 0.009991277999999992, 0.00996068, 0.010...</msg>
<status status="PASS" starttime="20201112 09:45:06.942" endtime="20201112 09:45:06.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.970" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:06.969" endtime="20201112 09:45:06.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.973" level="INFO">VALUE: 0.023694347</msg>
<status status="PASS" starttime="20201112 09:45:06.972" endtime="20201112 09:45:06.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.967" endtime="20201112 09:45:06.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.978" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:06.977" endtime="20201112 09:45:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.980" level="INFO">VALUE: [0.033798, 0.043788986, 0.053780222, 0.063740972, 0.073732097, 0.083814431, 0.093775208, 0.103766361, 0.113757639, 0.123718319, 0.133800625, 0.143791833, 0.153752597, 0.163743875, 0.173735056, 0.183786903, 0.193778097, 0.20376925, 0.213730097, 0.223721236, 0.233803667, 0.243764319, 0.253755528, 0.263746819, 0.273738056, 0.283789903, 0.293781083, 0.303772264, 0.313733, 0.323724194, 0.333806639, 0.343767264, 0.353758375, 0.363749792, 0.373710306, 0.383792931, 0.393784014, 0.403744708, 0.413735958, 0.423727125, 0.433779056, 0.443770194, 0.453761431, 0.463722125, 0.473713347, 0.483795764, 0.493756417, 0.503747667, 0.513738847, 0.523730069, 0.533781972, 0.543773125, 0.553764403, 0.563725139, 0.573716333, 0.583798708, 0.593759222, 0.603750667, 0.613741847, 0.623702431, 0.633784931, 0.643776125, 0.653736819, 0.663728056, 0.673719208, 0.683771042, 0.693762264, 0.703753486, 0.713714319, 0.723705458, 0.733787847, 0.743748514, 0.753739764, 0.763731014, 0.773722181, 0.783774097, 0.793765278, 0.803756417, 0.813717194, 0.823708361, 0.833790861, 0.843751472, 0.853742681, 0.863733986, 0.873694583, 0.883777083, 0.893768153, 0.903728958, 0.913720208, 0.923711347, 0.933763292, 0.943754361, 0.953745681, 0.963706417, 0.973697542, 0.983780028, 0.993740639, 1.003731806, 1.013723125, 1.023714278] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:06.979" endtime="20201112 09:45:06.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.974" endtime="20201112 09:45:06.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.984" endtime="20201112 09:45:06.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:06.988" endtime="20201112 09:45:07.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.986" endtime="20201112 09:45:07.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.982" endtime="20201112 09:45:07.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.448" endtime="20201112 09:45:07.009"></status>
</kw>
<msg timestamp="20201112 09:45:07.009" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.017" endtime="20201112 09:45:09.145"></status>
</kw>
<msg timestamp="20201112 09:45:09.146" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43861511, 'wakeups': [43871612, 43881591, 43891601, 43901550, 43911529...</msg>
<status status="PASS" starttime="20201112 09:45:07.016" endtime="20201112 09:45:09.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43861511, 'wakeups': [43871612, 43881591, 43891601, 43901550, 43911529...</msg>
<status status="PASS" starttime="20201112 09:45:09.147" endtime="20201112 09:45:09.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.150" endtime="20201112 09:45:09.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.013" endtime="20201112 09:45:09.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.011" endtime="20201112 09:45:09.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:09.156" level="INFO">${RESULT} = {'wakeups': [43871612, 43881591, 43891601, 43901550, 43911529, 43921630, 43931579, 43941589, 43951568, 43961517, 43971618, 43981597, 43991577, 44001556, 44011535, 44021606, 44031585, 44041595, 4405154...</msg>
<status status="PASS" starttime="20201112 09:45:09.154" endtime="20201112 09:45:09.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.160" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:09.159" endtime="20201112 09:45:09.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.162" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:09.161" endtime="20201112 09:45:09.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.156" endtime="20201112 09:45:09.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.167" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:09.166" endtime="20201112 09:45:09.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.171" level="INFO">VALUE: 43861511</msg>
<status status="PASS" starttime="20201112 09:45:09.170" endtime="20201112 09:45:09.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.164" endtime="20201112 09:45:09.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.176" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:09.175" endtime="20201112 09:45:09.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.178" level="INFO">VALUE: [43871612, 43881591, 43891601, 43901550, 43911529, 43921630, 43931579, 43941589, 43951568, 43961517, 43971618, 43981597, 43991577, 44001556, 44011535, 44021606, 44031585, 44041595, 44051544, 44061523, 44071624, 44081573, 44091583, 44101562, 44111572, 44121551, 44131530, 44141632, 44151580, 44161590, 44171569, 44181518, 44191619, 44201599, 44211578, 44221557, 44231536, 44241607, 44251586, 44261596, 44271545, 44281524, 44291625, 44301574, 44311584, 44321563, 44331512, 44341613, 44351593, 44361511, 44371612, 44381591, 44391601, 44401550, 44411529, 44421630, 44431579, 44441589, 44451568, 44461517, 44471618, 44481597, 44491577, 44501556, 44511535, 44521606, 44531585, 44541595, 44551544, 44561523, 44571624, 44581573, 44591583, 44601562, 44611572, 44621551, 44631530, 44641632, 44651580, 44661590, 44671569, 44681518, 44691619, 44701599, 44711578, 44721557, 44731536, 44741607, 44751586, 44761596, 44771545, 44781524, 44791625, 44801574, 44811584, 44821563, 44831512, 44841613, 44851593, 44861511]</msg>
<status status="PASS" starttime="20201112 09:45:09.177" endtime="20201112 09:45:09.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.172" endtime="20201112 09:45:09.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.186" endtime="20201112 09:45:09.479"></status>
</kw>
<msg timestamp="20201112 09:45:09.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030023278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:09.184" endtime="20201112 09:45:09.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030023278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:09.483" endtime="20201112 09:45:09.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.491" endtime="20201112 09:45:09.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.181" endtime="20201112 09:45:09.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.180" endtime="20201112 09:45:09.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:09.518" level="INFO">${RESULT} = {'diff': [0, 0.010093847, 0.00999075, 0.009991208000000001, 0.009960832999999995, 0.009991098000000004, 0.010082443999999996, 0.009960695000000006, 0.009991193999999995, 0.009991222000000008, 0.009960...</msg>
<status status="PASS" starttime="20201112 09:45:09.494" endtime="20201112 09:45:09.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.523" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:09.522" endtime="20201112 09:45:09.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.525" level="INFO">VALUE: 0.019929431</msg>
<status status="PASS" starttime="20201112 09:45:09.524" endtime="20201112 09:45:09.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.519" endtime="20201112 09:45:09.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.530" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:09.529" endtime="20201112 09:45:09.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.533" level="INFO">VALUE: [0.030023278, 0.040014028, 0.050005236, 0.059966069, 0.069957167, 0.080039611, 0.090000306, 0.0999915, 0.109982722, 0.119943389, 0.130025764, 0.140017014, 0.149977778, 0.159968903, 0.169960097, 0.180011931, 0.190003236, 0.199994542, 0.209955194, 0.219946264, 0.230028708, 0.2399895, 0.249980681, 0.259971986, 0.269969292, 0.279960319, 0.289951472, 0.300033847, 0.309994403, 0.319985722, 0.329977, 0.339937694, 0.350020097, 0.360011222, 0.369971931, 0.379963236, 0.389954444, 0.400006375, 0.409997486, 0.419988722, 0.429949542, 0.439940625, 0.450023042, 0.459983681, 0.469974986, 0.479966208, 0.489926903, 0.500009375, 0.509999417, 0.519924833, 0.530007139, 0.539998292, 0.549989486, 0.559950111, 0.569941417, 0.580023889, 0.589984486, 0.59997575, 0.609966986, 0.619927625, 0.630010111, 0.640001264, 0.649961944, 0.659953181, 0.669944361, 0.679996278, 0.689987389, 0.699978639, 0.709939417, 0.719930583, 0.730012889, 0.739973653, 0.749964847, 0.759956125, 0.769953486, 0.779944542, 0.789935625, 0.800018097, 0.809978694, 0.819969903, 0.829961181, 0.839921958, 0.850004278, 0.859995514, 0.869956167, 0.879947472, 0.889938583, 0.899990514, 0.909981736, 0.919972931, 0.929933625, 0.939924819, 0.950007194, 0.959967861, 0.969959167, 0.979950417, 0.989911097, 0.999993514, 1.009983569, 1.019909] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:09.532" endtime="20201112 09:45:09.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.526" endtime="20201112 09:45:09.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.537" endtime="20201112 09:45:09.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:09.540" endtime="20201112 09:45:09.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.539" endtime="20201112 09:45:09.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.535" endtime="20201112 09:45:09.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.010" endtime="20201112 09:45:09.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.893" endtime="20201112 09:45:09.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.892" endtime="20201112 09:45:09.562"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:09.565" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.573" endtime="20201112 09:45:11.701"></status>
</kw>
<msg timestamp="20201112 09:45:11.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46419097, 'wakeups': [46429199, 46439208, 46449218, 46459197, 46469207...</msg>
<status status="PASS" starttime="20201112 09:45:09.571" endtime="20201112 09:45:11.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46419097, 'wakeups': [46429199, 46439208, 46449218, 46459197, 46469207...</msg>
<status status="PASS" starttime="20201112 09:45:11.702" endtime="20201112 09:45:11.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.706" endtime="20201112 09:45:11.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.569" endtime="20201112 09:45:11.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.567" endtime="20201112 09:45:11.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:11.711" level="INFO">${RESULT} = {'wakeups': [46429199, 46439208, 46449218, 46459197, 46469207, 46479217, 46489196, 46499206, 46509216, 46519195, 46529205, 46539215, 46549194, 46559204, 46569213, 46579193, 46589202, 46599212, 4660919...</msg>
<status status="PASS" starttime="20201112 09:45:11.709" endtime="20201112 09:45:11.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.720" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:11.719" endtime="20201112 09:45:11.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.722" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:11.721" endtime="20201112 09:45:11.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.717" endtime="20201112 09:45:11.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.728" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:11.726" endtime="20201112 09:45:11.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.730" level="INFO">VALUE: 46419097</msg>
<status status="PASS" starttime="20201112 09:45:11.729" endtime="20201112 09:45:11.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.724" endtime="20201112 09:45:11.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.735" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:11.734" endtime="20201112 09:45:11.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.737" level="INFO">VALUE: [46429199, 46439208, 46449218, 46459197, 46469207, 46479217, 46489196, 46499206, 46509216, 46519195, 46529205, 46539215, 46549194, 46559204, 46569213, 46579193, 46589202, 46599212, 46609191, 46619201, 46629211, 46639190, 46649200, 46659210, 46669189, 46679199, 46689208, 46699218, 46709197, 46719207, 46729217, 46739196, 46749206, 46759216, 46769195, 46779205, 46789215, 46799194, 46809204, 46819213, 46829193, 46839202, 46849212, 46859191, 46869201, 46879211, 46889190, 46899200, 46909210, 46919189, 46929199, 46939208, 46949218, 46959197, 46969207, 46979217, 46989196, 46999206, 47009216, 47019195, 47029205, 47039215, 47049194, 47059204, 47069213, 47079193, 47089202, 47099212, 47109191, 47119201, 47129211, 47139190, 47149200, 47159210, 47169189, 47179199, 47189208, 47199218, 47209197, 47219207, 47229217, 47239196, 47249206, 47259216, 47269195, 47279205, 47289215, 47299194, 47309204, 47319213, 47329193, 47339202, 47349212, 47359191, 47369201, 47379211, 47389190, 47399200, 47409210, 47419189]</msg>
<status status="PASS" starttime="20201112 09:45:11.736" endtime="20201112 09:45:11.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.731" endtime="20201112 09:45:11.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.747" endtime="20201112 09:45:12.040"></status>
</kw>
<msg timestamp="20201112 09:45:12.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034388736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:11.743" endtime="20201112 09:45:12.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034388736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:12.044" endtime="20201112 09:45:12.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.052" endtime="20201112 09:45:12.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.741" endtime="20201112 09:45:12.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.739" endtime="20201112 09:45:12.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:12.078" level="INFO">${RESULT} = {'diff': [0, 0.010124583000000003, 0.010009194999999999, 0.010009402, 0.009978930999999996, 0.010009457999999999, 0.010009417000000007, 0.00997894399999999, 0.010009486000000012, 0.010009458999999998,...</msg>
<status status="PASS" starttime="20201112 09:45:12.055" endtime="20201112 09:45:12.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.083" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:12.082" endtime="20201112 09:45:12.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.085" level="INFO">VALUE: 0.024264153</msg>
<status status="PASS" starttime="20201112 09:45:12.084" endtime="20201112 09:45:12.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.079" endtime="20201112 09:45:12.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.091" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:12.090" endtime="20201112 09:45:12.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.094" level="INFO">VALUE: [0.034388736, 0.044397931, 0.054407333, 0.064386264, 0.074395722, 0.084405139, 0.094384083, 0.104393569, 0.114403028, 0.124381889, 0.134391236, 0.144400833, 0.154379736, 0.164389194, 0.174398653, 0.1843775, 0.194387028, 0.204396444, 0.214375444, 0.224384861, 0.234394208, 0.244373125, 0.254382639, 0.264392208, 0.274371097, 0.284380403, 0.294389931, 0.304399444, 0.314378347, 0.324387708, 0.334397194, 0.344376208, 0.354385639, 0.364394917, 0.374373903, 0.384383375, 0.394392917, 0.40437175, 0.414381194, 0.424390639, 0.434369611, 0.444379111, 0.454388486, 0.464367417, 0.474376903, 0.48438625, 0.494365292, 0.504374792, 0.514384208, 0.524363194, 0.534372611, 0.544382028, 0.554391417, 0.564370375, 0.574379833, 0.584389403, 0.594368278, 0.604377653, 0.614387083, 0.624366097, 0.634375472, 0.644384944, 0.654363958, 0.664373431, 0.674382875, 0.684361806, 0.69437125, 0.704380667, 0.714359639, 0.724369125, 0.734378514, 0.744357403, 0.754366903, 0.764376375, 0.774355264, 0.784364722, 0.794374194, 0.804383667, 0.814362542, 0.824372083, 0.834381472, 0.844360417, 0.854369819, 0.864379153, 0.874358139, 0.884367569, 0.894377153, 0.904356028, 0.914365417, 0.924374986, 0.934353944, 0.944363264, 0.954372931, 0.964351708, 0.974361111, 0.984370625, 0.994349472, 1.004359028, 1.014368472, 1.024347292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:12.092" endtime="20201112 09:45:12.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.087" endtime="20201112 09:45:12.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.097" endtime="20201112 09:45:12.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:12.101" endtime="20201112 09:45:12.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.099" endtime="20201112 09:45:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.095" endtime="20201112 09:45:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.565" endtime="20201112 09:45:12.122"></status>
</kw>
<msg timestamp="20201112 09:45:12.122" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.131" endtime="20201112 09:45:14.258"></status>
</kw>
<msg timestamp="20201112 09:45:14.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48976654, 'wakeups': [48986785, 48996765, 49006774, 49016754, 49026763...</msg>
<status status="PASS" starttime="20201112 09:45:12.129" endtime="20201112 09:45:14.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.261" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48976654, 'wakeups': [48986785, 48996765, 49006774, 49016754, 49026763...</msg>
<status status="PASS" starttime="20201112 09:45:14.260" endtime="20201112 09:45:14.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.263" endtime="20201112 09:45:14.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.126" endtime="20201112 09:45:14.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.124" endtime="20201112 09:45:14.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.268" level="INFO">${RESULT} = {'wakeups': [48986785, 48996765, 49006774, 49016754, 49026763, 49036773, 49046752, 49056762, 49066772, 49076751, 49086761, 49096771, 49106750, 49116760, 49126770, 49136749, 49146759, 49156768, 4916674...</msg>
<status status="PASS" starttime="20201112 09:45:14.266" endtime="20201112 09:45:14.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.273" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:14.271" endtime="20201112 09:45:14.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.275" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:14.274" endtime="20201112 09:45:14.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.269" endtime="20201112 09:45:14.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.280" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.279" endtime="20201112 09:45:14.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.282" level="INFO">VALUE: 48976654</msg>
<status status="PASS" starttime="20201112 09:45:14.281" endtime="20201112 09:45:14.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.276" endtime="20201112 09:45:14.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.287" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.286" endtime="20201112 09:45:14.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.290" level="INFO">VALUE: [48986785, 48996765, 49006774, 49016754, 49026763, 49036773, 49046752, 49056762, 49066772, 49076751, 49086761, 49096771, 49106750, 49116760, 49126770, 49136749, 49146759, 49156768, 49166748, 49176757, 49186767, 49196746, 49206756, 49216766, 49226776, 49236755, 49246765, 49256774, 49266754, 49276763, 49286773, 49296752, 49306762, 49316772, 49326751, 49336761, 49346771, 49356750, 49366760, 49376770, 49386749, 49396759, 49406768, 49416748, 49426757, 49436767, 49446746, 49456756, 49466766, 49476776, 49486755, 49496765, 49506774, 49516754, 49526763, 49536773, 49546752, 49556762, 49566772, 49576751, 49586761, 49596771, 49606750, 49616760, 49626770, 49636749, 49646759, 49656768, 49666748, 49676757, 49686767, 49696746, 49706756, 49716766, 49726776, 49736755, 49746765, 49756774, 49766754, 49776763, 49786773, 49796752, 49806762, 49816772, 49826751, 49836761, 49846771, 49856750, 49866760, 49876770, 49886749, 49896759, 49906768, 49916748, 49926757, 49936767, 49946746, 49956756, 49966766, 49976776]</msg>
<status status="PASS" starttime="20201112 09:45:14.288" endtime="20201112 09:45:14.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.283" endtime="20201112 09:45:14.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.298" endtime="20201112 09:45:14.588"></status>
</kw>
<msg timestamp="20201112 09:45:14.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02120875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031345889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:14.296" endtime="20201112 09:45:14.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02120875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031345889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:14.592" endtime="20201112 09:45:14.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.600" endtime="20201112 09:45:14.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.293" endtime="20201112 09:45:14.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.291" endtime="20201112 09:45:14.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.627" level="INFO">${RESULT} = {'diff': [0, 0.010137139000000003, 0.009978638999999997, 0.01000943, 0.009978945000000003, 0.010009443999999992, 0.010009472000000005, 0.009978930999999996, 0.010009457999999999, 0.010009445000000006,...</msg>
<status status="PASS" starttime="20201112 09:45:14.603" endtime="20201112 09:45:14.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.632" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.631" endtime="20201112 09:45:14.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.634" level="INFO">VALUE: 0.02120875</msg>
<status status="PASS" starttime="20201112 09:45:14.633" endtime="20201112 09:45:14.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.628" endtime="20201112 09:45:14.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.640" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.638" endtime="20201112 09:45:14.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.642" level="INFO">VALUE: [0.031345889, 0.041324528, 0.051333958, 0.061312903, 0.071322347, 0.081331819, 0.09131075, 0.101320208, 0.111329653, 0.121308556, 0.131318056, 0.141327375, 0.151306278, 0.16131575, 0.171325306, 0.18130425, 0.191313667, 0.201323097, 0.211302014, 0.221311542, 0.231320958, 0.241299931, 0.251309361, 0.261318778, 0.27132825, 0.281307181, 0.291316639, 0.301326125, 0.311305, 0.321314486, 0.331323931, 0.341302847, 0.351312208, 0.361321806, 0.371300681, 0.381310028, 0.391319597, 0.401298514, 0.411307875, 0.421317375, 0.431296403, 0.441305764, 0.451315208, 0.461294167, 0.471303611, 0.481313097, 0.491292056, 0.501301431, 0.511310931, 0.521320389, 0.531299264, 0.541308736, 0.551318222, 0.561297139, 0.571306556, 0.581316069, 0.591294972, 0.601304389, 0.611313806, 0.621292708, 0.63130225, 0.641311597, 0.651290653, 0.661300083, 0.671309458, 0.681288347, 0.691297819, 0.701307236, 0.711286167, 0.721295694, 0.731305194, 0.741284069, 0.751293583, 0.761303042, 0.771312444, 0.781291403, 0.791300903, 0.801310375, 0.811289194, 0.821298722, 0.831308139, 0.841286944, 0.851296458, 0.861305944, 0.871284806, 0.881294208, 0.891303792, 0.901282653, 0.911292236, 0.921301556, 0.931280528, 0.941289889, 0.951299375, 0.961278278, 0.97128775, 0.981297181, 0.991276111, 1.001285667, 1.011295042, 1.021304472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:14.641" endtime="20201112 09:45:14.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.635" endtime="20201112 09:45:14.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.645" endtime="20201112 09:45:14.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:14.649" endtime="20201112 09:45:14.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.647" endtime="20201112 09:45:14.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.643" endtime="20201112 09:45:14.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.122" endtime="20201112 09:45:14.670"></status>
</kw>
<msg timestamp="20201112 09:45:14.670" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.679" endtime="20201112 09:45:16.812"></status>
</kw>
<msg timestamp="20201112 09:45:16.812" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51524200, 'wakeups': [51534301, 51544311, 51554321, 51564300, 51574310...</msg>
<status status="PASS" starttime="20201112 09:45:14.677" endtime="20201112 09:45:16.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51524200, 'wakeups': [51534301, 51544311, 51554321, 51564300, 51574310...</msg>
<status status="PASS" starttime="20201112 09:45:16.814" endtime="20201112 09:45:16.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.817" endtime="20201112 09:45:16.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.674" endtime="20201112 09:45:16.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.672" endtime="20201112 09:45:16.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:16.823" level="INFO">${RESULT} = {'wakeups': [51534301, 51544311, 51554321, 51564300, 51574310, 51584320, 51594299, 51604309, 51614318, 51624298, 51634307, 51644317, 51654296, 51664306, 51674316, 51684295, 51694305, 51704315, 5171429...</msg>
<status status="PASS" starttime="20201112 09:45:16.821" endtime="20201112 09:45:16.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.828" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:16.827" endtime="20201112 09:45:16.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.830" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:16.829" endtime="20201112 09:45:16.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.824" endtime="20201112 09:45:16.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.837" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:16.835" endtime="20201112 09:45:16.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.839" level="INFO">VALUE: 51524200</msg>
<status status="PASS" starttime="20201112 09:45:16.838" endtime="20201112 09:45:16.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.833" endtime="20201112 09:45:16.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.844" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:16.843" endtime="20201112 09:45:16.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.846" level="INFO">VALUE: [51534301, 51544311, 51554321, 51564300, 51574310, 51584320, 51594299, 51604309, 51614318, 51624298, 51634307, 51644317, 51654296, 51664306, 51674316, 51684295, 51694305, 51704315, 51714294, 51724304, 51734313, 51744293, 51754302, 51764312, 51774291, 51784301, 51794311, 51804321, 51814300, 51824310, 51834320, 51844299, 51854309, 51864318, 51874298, 51884307, 51894317, 51904296, 51914306, 51924316, 51934295, 51944305, 51954315, 51964294, 51974304, 51984313, 51994293, 52004302, 52014312, 52024291, 52034301, 52044311, 52054321, 52064300, 52074310, 52084320, 52094299, 52104309, 52114318, 52124298, 52134307, 52144317, 52154296, 52164306, 52174316, 52184295, 52194305, 52204315, 52214294, 52224304, 52234313, 52244293, 52254302, 52264312, 52274291, 52284301, 52294311, 52304321, 52314300, 52324310, 52334320, 52344299, 52354309, 52364318, 52374298, 52384307, 52394317, 52404296, 52414306, 52424316, 52434295, 52444305, 52454315, 52464294, 52474304, 52484313, 52494293, 52504302, 52514312, 52524291]</msg>
<status status="PASS" starttime="20201112 09:45:16.845" endtime="20201112 09:45:16.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.840" endtime="20201112 09:45:16.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.854" endtime="20201112 09:45:17.146"></status>
</kw>
<msg timestamp="20201112 09:45:17.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030715667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:16.852" endtime="20201112 09:45:17.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030715667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:17.155" endtime="20201112 09:45:17.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.163" endtime="20201112 09:45:17.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.849" endtime="20201112 09:45:17.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.848" endtime="20201112 09:45:17.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:17.190" level="INFO">${RESULT} = {'diff': [0, 0.010116735999999998, 0.010008930000000003, 0.010009527999999997, 0.009978875000000005, 0.010009513999999997, 0.010009375000000001, 0.009979013999999994, 0.010009361000000008, 0.01000943,...</msg>
<status status="PASS" starttime="20201112 09:45:17.166" endtime="20201112 09:45:17.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.196" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:17.195" endtime="20201112 09:45:17.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.198" level="INFO">VALUE: 0.020598931</msg>
<status status="PASS" starttime="20201112 09:45:17.197" endtime="20201112 09:45:17.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.191" endtime="20201112 09:45:17.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.203" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:17.202" endtime="20201112 09:45:17.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.206" level="INFO">VALUE: [0.030715667, 0.040724597, 0.050734125, 0.060713, 0.070722514, 0.080731889, 0.090710903, 0.100720264, 0.110729694, 0.120708792, 0.130718111, 0.140727653, 0.150706514, 0.160715958, 0.170725375, 0.180704333, 0.190713889, 0.200723333, 0.210702236, 0.220711694, 0.230721056, 0.240700111, 0.250709528, 0.260718389, 0.270698, 0.280707347, 0.290716792, 0.300726167, 0.310705236, 0.320714597, 0.330724139, 0.340703097, 0.350712417, 0.360721861, 0.370700889, 0.380710319, 0.390719847, 0.400698681, 0.410708181, 0.420717486, 0.430696417, 0.440705972, 0.450715444, 0.460694319, 0.470703722, 0.48071325, 0.490692097, 0.500701569, 0.510710403, 0.520690222, 0.530699486, 0.540708861, 0.550718292, 0.560697236, 0.570706667, 0.580716236, 0.590695153, 0.600704597, 0.610713958, 0.620692931, 0.630702458, 0.640711792, 0.650690708, 0.660700278, 0.670709653, 0.680688569, 0.690698083, 0.700707444, 0.710686444, 0.720695917, 0.730705208, 0.740684236, 0.750693694, 0.760702597, 0.770682236, 0.780691625, 0.790701056, 0.800710361, 0.810689306, 0.820698806, 0.830708292, 0.840687264, 0.850696722, 0.860706139, 0.870684903, 0.8806945, 0.890703847, 0.900682875, 0.910692278, 0.920701806, 0.930680667, 0.940690167, 0.950699583, 0.960678569, 0.970688056, 0.980697417, 0.990676389, 1.000685764, 1.010694625, 1.020674347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:17.205" endtime="20201112 09:45:17.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.199" endtime="20201112 09:45:17.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.209" endtime="20201112 09:45:17.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:17.213" endtime="20201112 09:45:17.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.211" endtime="20201112 09:45:17.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.207" endtime="20201112 09:45:17.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.671" endtime="20201112 09:45:17.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.563" endtime="20201112 09:45:17.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.562" endtime="20201112 09:45:17.234"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:17.237" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.245" endtime="20201112 09:45:19.370"></status>
</kw>
<msg timestamp="20201112 09:45:19.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54091827, 'wakeups': [54101959, 54111968, 54121978, 54131958, 54141967...</msg>
<status status="PASS" starttime="20201112 09:45:17.243" endtime="20201112 09:45:19.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.374" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54091827, 'wakeups': [54101959, 54111968, 54121978, 54131958, 54141967...</msg>
<status status="PASS" starttime="20201112 09:45:19.372" endtime="20201112 09:45:19.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.375" endtime="20201112 09:45:19.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.241" endtime="20201112 09:45:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.239" endtime="20201112 09:45:19.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.381" level="INFO">${RESULT} = {'wakeups': [54101959, 54111968, 54121978, 54131958, 54141967, 54151977, 54161956, 54171966, 54181976, 54191955, 54201965, 54211975, 54221954, 54231964, 54241973, 54251953, 54261962, 54271972, 5428195...</msg>
<status status="PASS" starttime="20201112 09:45:19.379" endtime="20201112 09:45:19.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.385" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:19.384" endtime="20201112 09:45:19.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.387" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:19.386" endtime="20201112 09:45:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.382" endtime="20201112 09:45:19.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.392" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.391" endtime="20201112 09:45:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.395" level="INFO">VALUE: 54091827</msg>
<status status="PASS" starttime="20201112 09:45:19.394" endtime="20201112 09:45:19.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.389" endtime="20201112 09:45:19.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.400" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.399" endtime="20201112 09:45:19.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.402" level="INFO">VALUE: [54101959, 54111968, 54121978, 54131958, 54141967, 54151977, 54161956, 54171966, 54181976, 54191955, 54201965, 54211975, 54221954, 54231964, 54241973, 54251953, 54261962, 54271972, 54281951, 54291961, 54301971, 54311950, 54321960, 54331970, 54341949, 54351959, 54361968, 54371978, 54381958, 54391967, 54401977, 54411956, 54421966, 54431976, 54441955, 54451965, 54461975, 54471954, 54481964, 54491973, 54501953, 54511962, 54521972, 54531951, 54541961, 54551971, 54561950, 54571960, 54581970, 54591888, 54601867, 54611846, 54621948, 54631896, 54641876, 54651855, 54661926, 54671905, 54681884, 54691833, 54701934, 54711914, 54721862, 54731842, 54741943, 54751892, 54761871, 54771850, 54781921, 54791900, 54801879, 54811828, 54821929, 54831909, 54841827, 54851928, 54861907, 54871887, 54881835, 54891937, 54901916, 54911865, 54921844, 54931945, 54941894, 54951873, 54961853, 54971923, 54981903, 54991882, 55001831, 55011932, 55021911, 55031860, 55041839, 55051940, 55061889, 55071868, 55081848, 55091888]</msg>
<status status="PASS" starttime="20201112 09:45:19.401" endtime="20201112 09:45:19.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.396" endtime="20201112 09:45:19.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.411" endtime="20201112 09:45:19.702"></status>
</kw>
<msg timestamp="20201112 09:45:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03389075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:19.409" endtime="20201112 09:45:19.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03389075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:19.706" endtime="20201112 09:45:19.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.714" endtime="20201112 09:45:19.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.407" endtime="20201112 09:45:19.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.404" endtime="20201112 09:45:19.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.741" level="INFO">${RESULT} = {'diff': [0, 0.010151693999999996, 0.010008875, 0.010009444, 0.009978888999999998, 0.010009375000000001, 0.010009500000000005, 0.009978889000000005, 0.010009403, 0.010009652999999993, 0.00997890299999...</msg>
<status status="PASS" starttime="20201112 09:45:19.718" endtime="20201112 09:45:19.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.746" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.745" endtime="20201112 09:45:19.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.748" level="INFO">VALUE: 0.023739056</msg>
<status status="PASS" starttime="20201112 09:45:19.747" endtime="20201112 09:45:19.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.742" endtime="20201112 09:45:19.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.754" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.753" endtime="20201112 09:45:19.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.756" level="INFO">VALUE: [0.03389075, 0.043899625, 0.053909069, 0.063887958, 0.073897333, 0.083906833, 0.093885722, 0.103895125, 0.113904778, 0.123883681, 0.133893069, 0.143902569, 0.153881458, 0.163890778, 0.173900389, 0.183879264, 0.193888764, 0.203898208, 0.213877167, 0.223886556, 0.233896111, 0.243874819, 0.253884361, 0.263893278, 0.273872806, 0.28388225, 0.293891611, 0.303901042, 0.313880014, 0.3238895, 0.333898847, 0.343877861, 0.353887347, 0.363896694, 0.37387575, 0.383885139, 0.393894597, 0.4038735, 0.413882833, 0.423892431, 0.433871431, 0.443880889, 0.453890278, 0.463869181, 0.473878639, 0.483888042, 0.493867014, 0.503876361, 0.51388525, 0.523787222, 0.533777167, 0.543766986, 0.553854736, 0.5637945, 0.573784431, 0.583774306, 0.593831528, 0.603801778, 0.613791708, 0.623751042, 0.633838806, 0.643809083, 0.6537685, 0.663758306, 0.673846069, 0.683785806, 0.693775764, 0.703765653, 0.713822819, 0.723793083, 0.733783056, 0.743742319, 0.753830167, 0.7638005, 0.773740264, 0.783827972, 0.793798194, 0.803788181, 0.813747458, 0.823835306, 0.833805417, 0.843764917, 0.853754764, 0.863842583, 0.873782222, 0.883772125, 0.893762069, 0.903819333, 0.913789556, 0.923779486, 0.933738819, 0.943826542, 0.95379675, 0.963756222, 0.973746056, 0.983833833, 0.9937735, 1.003763542, 1.013753375, 1.023790958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:19.755" endtime="20201112 09:45:19.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.750" endtime="20201112 09:45:19.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.760" endtime="20201112 09:45:19.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:19.763" endtime="20201112 09:45:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.762" endtime="20201112 09:45:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.758" endtime="20201112 09:45:19.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.237" endtime="20201112 09:45:19.785"></status>
</kw>
<msg timestamp="20201112 09:45:19.786" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.794" endtime="20201112 09:45:21.926"></status>
</kw>
<msg timestamp="20201112 09:45:21.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56639343, 'wakeups': [56649505, 56659454, 56669433, 56679382, 56689361...</msg>
<status status="PASS" starttime="20201112 09:45:19.792" endtime="20201112 09:45:21.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56639343, 'wakeups': [56649505, 56659454, 56669433, 56679382, 56689361...</msg>
<status status="PASS" starttime="20201112 09:45:21.928" endtime="20201112 09:45:21.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.931" endtime="20201112 09:45:21.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.790" endtime="20201112 09:45:21.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.788" endtime="20201112 09:45:21.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:21.936" level="INFO">${RESULT} = {'wakeups': [56649505, 56659454, 56669433, 56679382, 56689361, 56699462, 56709411, 56719390, 56729370, 56739440, 56749420, 56759399, 56769348, 56779449, 56789428, 56799377, 56809356, 56819458, 5682940...</msg>
<status status="PASS" starttime="20201112 09:45:21.934" endtime="20201112 09:45:21.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.941" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:21.940" endtime="20201112 09:45:21.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.943" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:21.942" endtime="20201112 09:45:21.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.937" endtime="20201112 09:45:21.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.950" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:21.948" endtime="20201112 09:45:21.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.952" level="INFO">VALUE: 56639343</msg>
<status status="PASS" starttime="20201112 09:45:21.951" endtime="20201112 09:45:21.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.946" endtime="20201112 09:45:21.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.958" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:21.957" endtime="20201112 09:45:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.960" level="INFO">VALUE: [56649505, 56659454, 56669433, 56679382, 56689361, 56699462, 56709411, 56719390, 56729370, 56739440, 56749420, 56759399, 56769348, 56779449, 56789428, 56799377, 56809356, 56819458, 56829406, 56839385, 56849365, 56859436, 56869415, 56879394, 56889404, 56899475, 56909423, 56919494, 56929412, 56939483, 56949432, 56959472, 56969421, 56979492, 56989410, 56999481, 57009429, 57019470, 57029418, 57039489, 57049407, 57059478, 57069427, 57079467, 57089416, 57099487, 57109405, 57119476, 57129425, 57139434, 57149414, 57159393, 57169372, 57179443, 57189422, 57199401, 57209350, 57219451, 57229431, 57239379, 57249359, 57259460, 57269409, 57279388, 57289367, 57299438, 57309417, 57319396, 57329345, 57339447, 57349426, 57359375, 57369354, 57379455, 57389465, 57399475, 57409484, 57419494, 57429473, 57439483, 57449493, 57459472, 57469482, 57479492, 57489471, 57499481, 57509490, 57519470, 57529479, 57539489, 57549468, 57559478, 57569488, 57579467, 57589477, 57599487, 57609466, 57619476, 57629486, 57639404]</msg>
<status status="PASS" starttime="20201112 09:45:21.959" endtime="20201112 09:45:21.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.954" endtime="20201112 09:45:21.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.968" endtime="20201112 09:45:22.257"></status>
</kw>
<msg timestamp="20201112 09:45:22.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029456208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:21.966" endtime="20201112 09:45:22.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029456208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.261" endtime="20201112 09:45:22.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.269" endtime="20201112 09:45:22.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.963" endtime="20201112 09:45:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.962" endtime="20201112 09:45:22.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.297" level="INFO">${RESULT} = {'diff': [0, 0.010145111000000002, 0.009960083999999998, 0.009970236, 0.009959443999999998, 0.00998987500000001, 0.01008786099999999, 0.009939584000000001, 0.009989889000000002, 0.009989958000000007, ...</msg>
<status status="PASS" starttime="20201112 09:45:22.273" endtime="20201112 09:45:22.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.302" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.301" endtime="20201112 09:45:22.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.304" level="INFO">VALUE: 0.019311097</msg>
<status status="PASS" starttime="20201112 09:45:22.303" endtime="20201112 09:45:22.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.298" endtime="20201112 09:45:22.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.309" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.308" endtime="20201112 09:45:22.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.312" level="INFO">VALUE: [0.029456208, 0.039416292, 0.049386528, 0.059345972, 0.069335847, 0.079423708, 0.089363292, 0.099353181, 0.109343139, 0.119400375, 0.129370486, 0.139360472, 0.149319889, 0.159407528, 0.169377806, 0.179337319, 0.189327167, 0.199414958, 0.209354611, 0.219344569, 0.229334444, 0.239391764, 0.249361903, 0.259351889, 0.269369847, 0.279418083, 0.289388694, 0.299437, 0.309377111, 0.319425486, 0.329396, 0.33941375, 0.349384347, 0.359432625, 0.369372764, 0.379421139, 0.389391653, 0.399409556, 0.409380069, 0.419428431, 0.429368431, 0.439416694, 0.449387278, 0.459405083, 0.469375569, 0.479424056, 0.489364028, 0.499412375, 0.509382667, 0.519381625, 0.529351819, 0.539341806, 0.549331597, 0.559388903, 0.569359083, 0.579349097, 0.5893085, 0.599396222, 0.609366403, 0.619325833, 0.629315667, 0.639403375, 0.649343139, 0.659333111, 0.669323042, 0.679380222, 0.689350361, 0.699340431, 0.70929975, 0.719387569, 0.729357708, 0.739317208, 0.749307, 0.759394458, 0.769412139, 0.779421486, 0.789431014, 0.799440472, 0.809419403, 0.819428861, 0.829438236, 0.839417167, 0.849426542, 0.859436125, 0.869415069, 0.879424458, 0.889433875, 0.899412903, 0.909422319, 0.919431708, 0.929410819, 0.939420222, 0.949429681, 0.959408611, 0.969417958, 0.979427472, 0.989406292, 0.999415833, 1.009424653, 1.019326639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:22.311" endtime="20201112 09:45:22.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.305" endtime="20201112 09:45:22.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.320" endtime="20201112 09:45:22.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:22.323" endtime="20201112 09:45:22.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.322" endtime="20201112 09:45:22.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.318" endtime="20201112 09:45:22.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.786" endtime="20201112 09:45:22.344"></status>
</kw>
<msg timestamp="20201112 09:45:22.344" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.353" endtime="20201112 09:45:24.466"></status>
</kw>
<msg timestamp="20201112 09:45:24.467" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59201934, 'wakeups': [59212097, 59222076, 59232086, 59242065, 59252075...</msg>
<status status="PASS" starttime="20201112 09:45:22.351" endtime="20201112 09:45:24.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.470" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59201934, 'wakeups': [59212097, 59222076, 59232086, 59242065, 59252075...</msg>
<status status="PASS" starttime="20201112 09:45:24.468" endtime="20201112 09:45:24.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.471" endtime="20201112 09:45:24.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.348" endtime="20201112 09:45:24.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.346" endtime="20201112 09:45:24.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.477" level="INFO">${RESULT} = {'wakeups': [59212097, 59222076, 59232086, 59242065, 59252075, 59262084, 59272064, 59282073, 59292083, 59302062, 59312072, 59322082, 59332061, 59342071, 59352081, 59362060, 59372070, 59382080, 5939205...</msg>
<status status="PASS" starttime="20201112 09:45:24.475" endtime="20201112 09:45:24.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.481" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:24.480" endtime="20201112 09:45:24.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.484" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:24.483" endtime="20201112 09:45:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.478" endtime="20201112 09:45:24.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.489" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.488" endtime="20201112 09:45:24.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.491" level="INFO">VALUE: 59201934</msg>
<status status="PASS" starttime="20201112 09:45:24.490" endtime="20201112 09:45:24.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.485" endtime="20201112 09:45:24.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.496" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.495" endtime="20201112 09:45:24.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.498" level="INFO">VALUE: [59212097, 59222076, 59232086, 59242065, 59252075, 59262084, 59272064, 59282073, 59292083, 59302062, 59312072, 59322082, 59332061, 59342071, 59352081, 59362060, 59372070, 59382080, 59392059, 59402069, 59412078, 59422058, 59432067, 59442077, 59452056, 59462066, 59472076, 59482086, 59492065, 59502075, 59512084, 59522064, 59532073, 59542083, 59552062, 59562072, 59572082, 59582061, 59592071, 59602081, 59612060, 59622070, 59632080, 59642059, 59652069, 59662078, 59672058, 59682067, 59692077, 59702056, 59712066, 59722076, 59732086, 59742065, 59752075, 59762084, 59772064, 59782073, 59792083, 59802062, 59812072, 59822082, 59832061, 59842071, 59852081, 59862060, 59872070, 59882080, 59892059, 59902069, 59912078, 59922058, 59932067, 59942077, 59952056, 59962066, 59972076, 59982086, 59992065, 60002075, 60012084, 60022064, 60032073, 60042083, 60052062, 60062072, 60072082, 60082061, 60092071, 60102081, 60112060, 60122070, 60132080, 60142059, 60152069, 60162078, 60172058, 60182067, 60192077, 60202056]</msg>
<status status="PASS" starttime="20201112 09:45:24.497" endtime="20201112 09:45:24.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.492" endtime="20201112 09:45:24.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.506" endtime="20201112 09:45:24.798"></status>
</kw>
<msg timestamp="20201112 09:45:24.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:24.505" endtime="20201112 09:45:24.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:24.802" endtime="20201112 09:45:24.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.810" endtime="20201112 09:45:24.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.502" endtime="20201112 09:45:24.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.500" endtime="20201112 09:45:24.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.838" level="INFO">${RESULT} = {'diff': [0, 0.010154792, 0.009978472000000002, 0.010009458999999998, 0.009978804999999993, 0.010009528000000004, 0.010009417000000007, 0.009979068999999993, 0.01000930600000001, 0.010009512999999998,...</msg>
<status status="PASS" starttime="20201112 09:45:24.814" endtime="20201112 09:45:24.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.842" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.841" endtime="20201112 09:45:24.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.844" level="INFO">VALUE: 0.022718208</msg>
<status status="PASS" starttime="20201112 09:45:24.843" endtime="20201112 09:45:24.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.839" endtime="20201112 09:45:24.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.850" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.849" endtime="20201112 09:45:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.852" level="INFO">VALUE: [0.032873, 0.042851472, 0.052860931, 0.062839736, 0.072849264, 0.082858681, 0.09283775, 0.102847056, 0.112856569, 0.1228355, 0.132844861, 0.142854403, 0.152833361, 0.162842708, 0.172852319, 0.182831222, 0.192840597, 0.202850125, 0.212829069, 0.222838458, 0.232847889, 0.242826944, 0.252836278, 0.26284575, 0.272824819, 0.282834139, 0.292843556, 0.302853028, 0.312831917, 0.322841472, 0.332850833, 0.342829847, 0.352839333, 0.362848667, 0.372827514, 0.382837042, 0.392846514, 0.402825472, 0.412834847, 0.422844347, 0.432823292, 0.442832722, 0.452842181, 0.462820986, 0.472830542, 0.482840042, 0.492818931, 0.502828486, 0.512837806, 0.522816819, 0.532826236, 0.542835639, 0.552845028, 0.562824069, 0.5728335, 0.582842931, 0.592821819, 0.602831292, 0.612840778, 0.622819736, 0.632829181, 0.642838736, 0.652817486, 0.662827111, 0.672836569, 0.682815403, 0.692824819, 0.702834236, 0.712813167, 0.722822653, 0.732832083, 0.742810903, 0.752820514, 0.762829944, 0.772808875, 0.782818181, 0.792827639, 0.802837167, 0.812816056, 0.822825597, 0.832835083, 0.842814, 0.852823417, 0.862832972, 0.872811819, 0.882821236, 0.892830722, 0.902809542, 0.912819083, 0.922828472, 0.932807375, 0.942816958, 0.952826278, 0.962805319, 0.972814597, 0.982824167, 0.992803069, 1.002812542, 1.012821986, 1.022800931] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:24.851" endtime="20201112 09:45:24.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.846" endtime="20201112 09:45:24.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.855" endtime="20201112 09:45:24.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:24.859" endtime="20201112 09:45:24.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.857" endtime="20201112 09:45:24.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.854" endtime="20201112 09:45:24.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.345" endtime="20201112 09:45:24.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.235" endtime="20201112 09:45:24.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.234" endtime="20201112 09:45:24.880"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:24.883" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.892" endtime="20201112 09:45:27.001"></status>
</kw>
<msg timestamp="20201112 09:45:27.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61739410, 'wakeups': [61749572, 61759582, 61769531, 61779479, 61789459...</msg>
<status status="PASS" starttime="20201112 09:45:24.890" endtime="20201112 09:45:27.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61739410, 'wakeups': [61749572, 61759582, 61769531, 61779479, 61789459...</msg>
<status status="PASS" starttime="20201112 09:45:27.003" endtime="20201112 09:45:27.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.006" endtime="20201112 09:45:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.887" endtime="20201112 09:45:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.885" endtime="20201112 09:45:27.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.011" level="INFO">${RESULT} = {'wakeups': [61749572, 61759582, 61769531, 61779479, 61789459, 61799438, 61809539, 61819488, 61829559, 61839569, 61849517, 61859497, 61869445, 61879425, 61889556, 61899475, 61909545, 61919586, 6192950...</msg>
<status status="PASS" starttime="20201112 09:45:27.009" endtime="20201112 09:45:27.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.016" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:27.015" endtime="20201112 09:45:27.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.018" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:27.017" endtime="20201112 09:45:27.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.012" endtime="20201112 09:45:27.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.024" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.022" endtime="20201112 09:45:27.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.027" level="INFO">VALUE: 61739410</msg>
<status status="PASS" starttime="20201112 09:45:27.026" endtime="20201112 09:45:27.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.019" endtime="20201112 09:45:27.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.032" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.031" endtime="20201112 09:45:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.034" level="INFO">VALUE: [61749572, 61759582, 61769531, 61779479, 61789459, 61799438, 61809539, 61819488, 61829559, 61839569, 61849517, 61859497, 61869445, 61879425, 61889556, 61899475, 61909545, 61919586, 61929504, 61939483, 61949462, 61959411, 61969543, 61979492, 61989501, 61999481, 62009460, 62019439, 62029541, 62039489, 62049560, 62059570, 62069519, 62079498, 62089447, 62099426, 62109558, 62119476, 62129547, 62139587, 62149505, 62159484, 62169464, 62179412, 62189544, 62199493, 62209533, 62219573, 62229522, 62239532, 62249481, 62259552, 62269592, 62279510, 62289489, 62299468, 62309417, 62319549, 62329498, 62339538, 62349578, 62359527, 62369476, 62379455, 62389434, 62399536, 62409484, 62419555, 62429565, 62439514, 62449493, 62459442, 62469421, 62479553, 62489440, 62499420, 62509552, 62519500, 62529541, 62539581, 62549530, 62559478, 62569458, 62579437, 62589538, 62599487, 62609558, 62619567, 62629516, 62639495, 62649444, 62659423, 62669555, 62679473, 62689544, 62699584, 62709503, 62719482, 62729461, 62739471]</msg>
<status status="PASS" starttime="20201112 09:45:27.033" endtime="20201112 09:45:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.028" endtime="20201112 09:45:27.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.042" endtime="20201112 09:45:27.332"></status>
</kw>
<msg timestamp="20201112 09:45:27.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033985861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.040" endtime="20201112 09:45:27.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033985861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.336" endtime="20201112 09:45:27.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.343" endtime="20201112 09:45:27.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.037" endtime="20201112 09:45:27.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.036" endtime="20201112 09:45:27.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.379" level="INFO">${RESULT} = {'diff': [0, 0.010164679999999999, 0.010001333000000001, 0.009949237, 0.009938375000000006, 0.009989415999999987, 0.009989222000000006, 0.010079569999999996, 0.00996933300000001, 0.010069416999999997,...</msg>
<status status="PASS" starttime="20201112 09:45:27.355" endtime="20201112 09:45:27.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.384" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.383" endtime="20201112 09:45:27.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.386" level="INFO">VALUE: 0.023821181</msg>
<status status="PASS" starttime="20201112 09:45:27.385" endtime="20201112 09:45:27.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.380" endtime="20201112 09:45:27.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.392" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.391" endtime="20201112 09:45:27.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.395" level="INFO">VALUE: [0.033985861, 0.043987194, 0.053936431, 0.063874806, 0.073864222, 0.083853444, 0.093933014, 0.103902347, 0.113971764, 0.123971264, 0.133920486, 0.143889361, 0.153848208, 0.163837458, 0.173947417, 0.183886375, 0.193955778, 0.203985806, 0.2139045, 0.223873375, 0.233862833, 0.243821528, 0.253931639, 0.263900597, 0.273900361, 0.283869139, 0.293858458, 0.303847694, 0.313927278, 0.323896486, 0.333966097, 0.343965556, 0.353914736, 0.363883639, 0.373842514, 0.38383175, 0.393941847, 0.403880556, 0.413950014, 0.423980042, 0.433898806, 0.443867764, 0.453857111, 0.463815833, 0.473925903, 0.483895167, 0.493934111, 0.503964069, 0.513913056, 0.523912208, 0.533881333, 0.543950722, 0.553980764, 0.563899569, 0.573868528, 0.583857833, 0.593816528, 0.603926694, 0.613895903, 0.623934903, 0.633964778, 0.643914111, 0.653852569, 0.663841931, 0.673831167, 0.683910708, 0.693879944, 0.703949389, 0.713948958, 0.723898194, 0.733867042, 0.743825958, 0.753815264, 0.763925639, 0.773823986, 0.783813014, 0.793923083, 0.803892361, 0.813931319, 0.8239615, 0.833910569, 0.843848972, 0.853838375, 0.863827611, 0.873907181, 0.883876458, 0.893945861, 0.903945486, 0.913894681, 0.923863542, 0.933822444, 0.943811625, 0.953921722, 0.9638605, 0.97393, 0.983959917, 0.993878639, 1.003847583, 1.013836931, 1.023856194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:27.394" endtime="20201112 09:45:27.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.388" endtime="20201112 09:45:27.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.398" endtime="20201112 09:45:27.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:27.402" endtime="20201112 09:45:27.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.400" endtime="20201112 09:45:27.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.397" endtime="20201112 09:45:27.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.884" endtime="20201112 09:45:27.423"></status>
</kw>
<msg timestamp="20201112 09:45:27.423" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.432" endtime="20201112 09:45:29.547"></status>
</kw>
<msg timestamp="20201112 09:45:29.547" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64281921, 'wakeups': [64292083, 64302032, 64312011, 64321960, 64331939...</msg>
<status status="PASS" starttime="20201112 09:45:27.430" endtime="20201112 09:45:29.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.550" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64281921, 'wakeups': [64292083, 64302032, 64312011, 64321960, 64331939...</msg>
<status status="PASS" starttime="20201112 09:45:29.549" endtime="20201112 09:45:29.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.551" endtime="20201112 09:45:29.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.427" endtime="20201112 09:45:29.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.425" endtime="20201112 09:45:29.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:29.557" level="INFO">${RESULT} = {'wakeups': [64292083, 64302032, 64312011, 64321960, 64331939, 64342071, 64351989, 64362060, 64372100, 64382019, 64391998, 64401977, 64411926, 64422058, 64432006, 64442047, 64452087, 64462036, 6447198...</msg>
<status status="PASS" starttime="20201112 09:45:29.555" endtime="20201112 09:45:29.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.562" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:29.561" endtime="20201112 09:45:29.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.564" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:29.563" endtime="20201112 09:45:29.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.559" endtime="20201112 09:45:29.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.569" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:29.568" endtime="20201112 09:45:29.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.572" level="INFO">VALUE: 64281921</msg>
<status status="PASS" starttime="20201112 09:45:29.571" endtime="20201112 09:45:29.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.566" endtime="20201112 09:45:29.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.577" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:29.576" endtime="20201112 09:45:29.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.579" level="INFO">VALUE: [64292083, 64302032, 64312011, 64321960, 64331939, 64342071, 64351989, 64362060, 64372100, 64382019, 64391998, 64401977, 64411926, 64422058, 64432006, 64442047, 64452087, 64462036, 64471984, 64481964, 64491943, 64502044, 64511993, 64522064, 64532043, 64542083, 64552032, 64562011, 64571960, 64581939, 64592071, 64601989, 64612060, 64622100, 64632019, 64641998, 64651977, 64661926, 64672058, 64682006, 64692047, 64702087, 64712036, 64721984, 64731964, 64741943, 64752044, 64761993, 64772064, 64782043, 64792083, 64802032, 64812011, 64821960, 64831939, 64842071, 64851989, 64862060, 64872100, 64882019, 64891998, 64901977, 64911926, 64922058, 64932006, 64942047, 64952087, 64962036, 64971984, 64981964, 64991943, 65002044, 65011993, 65022064, 65032043, 65042083, 65052032, 65062011, 65071960, 65081939, 65092071, 65101989, 65112060, 65122100, 65132019, 65141998, 65151977, 65161926, 65172058, 65182006, 65192047, 65202087, 65212036, 65221984, 65231964, 65241943, 65252044, 65261993, 65272064, 65282043]</msg>
<status status="PASS" starttime="20201112 09:45:29.578" endtime="20201112 09:45:29.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.573" endtime="20201112 09:45:29.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.587" endtime="20201112 09:45:29.880"></status>
</kw>
<msg timestamp="20201112 09:45:29.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033440361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:29.585" endtime="20201112 09:45:29.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033440361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:29.884" endtime="20201112 09:45:29.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.893" endtime="20201112 09:45:29.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.583" endtime="20201112 09:45:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.581" endtime="20201112 09:45:29.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:29.919" level="INFO">${RESULT} = {'diff': [0, 0.010192250000000003, 0.009948527999999998, 0.009968958, 0.009958806, 0.009989193999999993, 0.010110125000000011, 0.009938749999999996, 0.010069499999999995, 0.010030042000000003, 0.00991...</msg>
<status status="PASS" starttime="20201112 09:45:29.896" endtime="20201112 09:45:29.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.924" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:29.923" endtime="20201112 09:45:29.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.926" level="INFO">VALUE: 0.023248111</msg>
<status status="PASS" starttime="20201112 09:45:29.925" endtime="20201112 09:45:29.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.920" endtime="20201112 09:45:29.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.932" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:29.931" endtime="20201112 09:45:29.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.935" level="INFO">VALUE: [0.033440361, 0.043388889, 0.053357847, 0.063316653, 0.073305847, 0.083415972, 0.093354722, 0.103424222, 0.113454264, 0.123372917, 0.133341833, 0.143331208, 0.153289972, 0.163399931, 0.173369292, 0.183408278, 0.19343825, 0.203387653, 0.213325889, 0.223315236, 0.233304569, 0.243383917, 0.253353319, 0.26342225, 0.273401903, 0.28343175, 0.293381056, 0.303349986, 0.313308764, 0.323298056, 0.333407958, 0.343346736, 0.353416278, 0.363446361, 0.373364875, 0.383333931, 0.393323361, 0.403282042, 0.413392, 0.423361403, 0.433400375, 0.443430361, 0.453379681, 0.463318014, 0.473307361, 0.483296639, 0.493376111, 0.503345472, 0.513414319, 0.523393986, 0.533423792, 0.543373014, 0.553342042, 0.563300861, 0.573290097, 0.583400056, 0.593338847, 0.603408375, 0.613438431, 0.623357181, 0.633326069, 0.643315319, 0.653274236, 0.663384139, 0.673353514, 0.683392458, 0.693422403, 0.703371681, 0.713309972, 0.723299486, 0.73328875, 0.743368264, 0.7533375, 0.763406361, 0.773385958, 0.783415986, 0.793365208, 0.803334111, 0.813293028, 0.823282125, 0.83339225, 0.843331028, 0.8534005, 0.863430611, 0.873349208, 0.883318167, 0.893307556, 0.903266306, 0.913376333, 0.923345583, 0.933384486, 0.943414625, 0.953363833, 0.963302236, 0.973291542, 0.983280819, 0.993360389, 1.003329597, 1.013398542, 1.02337825] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:29.934" endtime="20201112 09:45:29.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.928" endtime="20201112 09:45:29.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.938" endtime="20201112 09:45:29.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:29.942" endtime="20201112 09:45:29.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.940" endtime="20201112 09:45:29.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.936" endtime="20201112 09:45:29.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.424" endtime="20201112 09:45:29.963"></status>
</kw>
<msg timestamp="20201112 09:45:29.963" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.972" endtime="20201112 09:45:32.104"></status>
</kw>
<msg timestamp="20201112 09:45:32.106" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66819366, 'wakeups': [66829559, 66839477, 66849456, 66859405, 66869384...</msg>
<status status="PASS" starttime="20201112 09:45:29.970" endtime="20201112 09:45:32.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66819366, 'wakeups': [66829559, 66839477, 66849456, 66859405, 66869384...</msg>
<status status="PASS" starttime="20201112 09:45:32.108" endtime="20201112 09:45:32.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.114" endtime="20201112 09:45:32.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.967" endtime="20201112 09:45:32.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.965" endtime="20201112 09:45:32.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.126" level="INFO">${RESULT} = {'wakeups': [66829559, 66839477, 66849456, 66859405, 66869384, 66879516, 66889434, 66899505, 66909545, 66919464, 66929443, 66939422, 66949371, 66959503, 66969451, 66979492, 66989532, 66999481, 6700942...</msg>
<status status="PASS" starttime="20201112 09:45:32.122" endtime="20201112 09:45:32.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.136" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:32.133" endtime="20201112 09:45:32.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.139" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:32.138" endtime="20201112 09:45:32.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.128" endtime="20201112 09:45:32.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.144" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.143" endtime="20201112 09:45:32.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.146" level="INFO">VALUE: 66819366</msg>
<status status="PASS" starttime="20201112 09:45:32.145" endtime="20201112 09:45:32.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.140" endtime="20201112 09:45:32.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.151" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.150" endtime="20201112 09:45:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.154" level="INFO">VALUE: [66829559, 66839477, 66849456, 66859405, 66869384, 66879516, 66889434, 66899505, 66909545, 66919464, 66929443, 66939422, 66949371, 66959503, 66969451, 66979492, 66989532, 66999481, 67009429, 67019409, 67029388, 67039489, 67049438, 67059509, 67069488, 67079528, 67089477, 67099456, 67109405, 67119384, 67129516, 67139434, 67149505, 67159545, 67169464, 67179443, 67189422, 67199371, 67209503, 67219451, 67229492, 67239532, 67249481, 67259429, 67269409, 67279388, 67289489, 67299438, 67309509, 67319488, 67329528, 67339477, 67349456, 67359405, 67369384, 67379516, 67389434, 67399505, 67409545, 67419464, 67429443, 67439422, 67449371, 67459503, 67469451, 67479492, 67489532, 67499481, 67509429, 67519409, 67529388, 67539489, 67549438, 67559509, 67569488, 67579528, 67589477, 67599456, 67609405, 67619384, 67629516, 67639434, 67649505, 67659545, 67669464, 67679443, 67689422, 67699371, 67709503, 67719451, 67729492, 67739532, 67749481, 67759429, 67769409, 67779388, 67789489, 67799438, 67809509, 67819488]</msg>
<status status="PASS" starttime="20201112 09:45:32.153" endtime="20201112 09:45:32.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.148" endtime="20201112 09:45:32.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.162" endtime="20201112 09:45:32.453"></status>
</kw>
<msg timestamp="20201112 09:45:32.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030644472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.160" endtime="20201112 09:45:32.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030644472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.458" endtime="20201112 09:45:32.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.466" endtime="20201112 09:45:32.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.158" endtime="20201112 09:45:32.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.156" endtime="20201112 09:45:32.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.494" level="INFO">${RESULT} = {'diff': [0, 0.010178596999999998, 0.009917959000000004, 0.009969082999999997, 0.009958888999999999, 0.009989139000000008, 0.010110082999999992, 0.009938806000000008, 0.01006942999999999, 0.0100300700...</msg>
<status status="PASS" starttime="20201112 09:45:32.469" endtime="20201112 09:45:32.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.499" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.498" endtime="20201112 09:45:32.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.501" level="INFO">VALUE: 0.020465875</msg>
<status status="PASS" starttime="20201112 09:45:32.500" endtime="20201112 09:45:32.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.495" endtime="20201112 09:45:32.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.507" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.506" endtime="20201112 09:45:32.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.509" level="INFO">VALUE: [0.030644472, 0.040562431, 0.050531514, 0.060490403, 0.070479542, 0.080589625, 0.090528431, 0.100597861, 0.110627931, 0.120546611, 0.130515486, 0.140504889, 0.150463625, 0.160573694, 0.170542958, 0.180581903, 0.190611819, 0.200561083, 0.210499542, 0.220488875, 0.230478236, 0.240557639, 0.250526917, 0.260595778, 0.270575458, 0.280605375, 0.290554653, 0.300523569, 0.310482403, 0.320471625, 0.33058175, 0.340520444, 0.350589903, 0.360620042, 0.370538653, 0.380507653, 0.390496903, 0.400455653, 0.410565819, 0.420535069, 0.430573917, 0.440604042, 0.450553153, 0.460491694, 0.470480889, 0.480470167, 0.490549708, 0.500519, 0.510587875, 0.520567639, 0.530597556, 0.540546792, 0.550515708, 0.560474528, 0.570463681, 0.580573861, 0.590512625, 0.600581958, 0.610612097, 0.620530778, 0.630499694, 0.640489111, 0.650447764, 0.660557944, 0.670527167, 0.680566125, 0.690596069, 0.700545375, 0.710483778, 0.720473056, 0.730462278, 0.740541847, 0.750511125, 0.760580042, 0.770559639, 0.780589514, 0.790538847, 0.800507722, 0.810466514, 0.820455792, 0.830565819, 0.840504625, 0.850574069, 0.860604056, 0.870522792, 0.880491694, 0.890481153, 0.900439903, 0.910549861, 0.920519208, 0.930558153, 0.940588222, 0.950537333, 0.960475875, 0.970465236, 0.980454417, 0.990534028, 1.000503194, 1.010572069, 1.02055175] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:32.508" endtime="20201112 09:45:32.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.502" endtime="20201112 09:45:32.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.512" endtime="20201112 09:45:32.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:32.516" endtime="20201112 09:45:32.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.514" endtime="20201112 09:45:32.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.510" endtime="20201112 09:45:32.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.964" endtime="20201112 09:45:32.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.882" endtime="20201112 09:45:32.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.881" endtime="20201112 09:45:32.542"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:32.545" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.553" endtime="20201112 09:45:34.689"></status>
</kw>
<msg timestamp="20201112 09:45:34.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69402191, 'wakeups': [69412384, 69422332, 69432373, 69442382, 694523...</msg>
<status status="PASS" starttime="20201112 09:45:32.552" endtime="20201112 09:45:34.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69402191, 'wakeups': [69412384, 69422332, 69432373, 69442382, 694523...</msg>
<status status="PASS" starttime="20201112 09:45:34.693" endtime="20201112 09:45:34.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.696" endtime="20201112 09:45:34.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.549" endtime="20201112 09:45:34.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.547" endtime="20201112 09:45:34.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:34.701" level="INFO">${RESULT} = {'wakeups': [69412384, 69422332, 69432373, 69442382, 69452331, 69462371, 69472381, 69482330, 69492370, 69502380, 69512329, 69522369, 69532379, 69542327, 69552368, 69562377, 69572326, 69582366, 6959231...</msg>
<status status="PASS" starttime="20201112 09:45:34.699" endtime="20201112 09:45:34.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.706" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:34.704" endtime="20201112 09:45:34.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.708" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:34.707" endtime="20201112 09:45:34.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.702" endtime="20201112 09:45:34.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.714" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:34.713" endtime="20201112 09:45:34.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.716" level="INFO">VALUE: 69402191</msg>
<status status="PASS" starttime="20201112 09:45:34.715" endtime="20201112 09:45:34.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.709" endtime="20201112 09:45:34.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.721" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:34.720" endtime="20201112 09:45:34.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.724" level="INFO">VALUE: [69412384, 69422332, 69432373, 69442382, 69452331, 69462371, 69472381, 69482330, 69492370, 69502380, 69512329, 69522369, 69532379, 69542327, 69552368, 69562377, 69572326, 69582366, 69592315, 69602264, 69612365, 69622375, 69632324, 69642364, 69652374, 69662322, 69672363, 69682403, 69692321, 69702362, 69712402, 69722320, 69732360, 69742401, 69752319, 69762359, 69772399, 69782318, 69792358, 69802398, 69812316, 69822357, 69832397, 69842315, 69852355, 69862396, 69872314, 69882354, 69892395, 69902191, 69912200, 69922210, 69932220, 69942199, 69952209, 69962219, 69972198, 69982208, 69992218, 70002197, 70012207, 70022216, 70032196, 70042205, 70052215, 70062194, 70072204, 70082214, 70092193, 70102203, 70112213, 70122192, 70132202, 70142211, 70152191, 70162322, 70172363, 70182403, 70192321, 70202362, 70212402, 70222320, 70232360, 70242401, 70252319, 70262359, 70272399, 70282318, 70292358, 70302337, 70312255, 70322357, 70332336, 70342254, 70352355, 70362335, 70372253, 70382354, 70392395, 70402191]</msg>
<status status="PASS" starttime="20201112 09:45:34.722" endtime="20201112 09:45:34.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.718" endtime="20201112 09:45:34.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.732" endtime="20201112 09:45:35.025"></status>
</kw>
<msg timestamp="20201112 09:45:35.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0288665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:34.730" endtime="20201112 09:45:35.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0288665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:35.029" endtime="20201112 09:45:35.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.037" endtime="20201112 09:45:35.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.727" endtime="20201112 09:45:35.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.725" endtime="20201112 09:45:35.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:35.064" level="INFO">${RESULT} = {'diff': [0, 0.010205152999999998, 0.009965055, 0.010030223000000005, 0.009999596999999999, 0.009968124999999994, 0.010029999999999997, 0.009999541, 0.009968153000000007, 0.010030306000000003, 0.00999...</msg>
<status status="PASS" starttime="20201112 09:45:35.040" endtime="20201112 09:45:35.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.069" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:35.067" endtime="20201112 09:45:35.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.071" level="INFO">VALUE: 0.0288665</msg>
<status status="PASS" starttime="20201112 09:45:35.070" endtime="20201112 09:45:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.065" endtime="20201112 09:45:35.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.077" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:35.076" endtime="20201112 09:45:35.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.079" level="INFO">VALUE: [0.039071653, 0.049036708, 0.059066931, 0.069066528, 0.079034653, 0.089064653, 0.099064194, 0.109032347, 0.119062653, 0.129062042, 0.139030167, 0.149060486, 0.159059903, 0.169028, 0.179058167, 0.189057708, 0.199025889, 0.209055986, 0.218993736, 0.228961806, 0.239053889, 0.249053431, 0.259021625, 0.269051806, 0.279052069, 0.289019403, 0.299049597, 0.309079667, 0.319017264, 0.329047417, 0.339077514, 0.349015125, 0.359045194, 0.369075264, 0.379012944, 0.389042972, 0.399072958, 0.409010736, 0.419040917, 0.429070931, 0.439008583, 0.449038694, 0.459068917, 0.469006403, 0.4790365, 0.489066556, 0.499004139, 0.509034375, 0.519064431, 0.528856694, 0.538866111, 0.548875611, 0.558885069, 0.568863986, 0.578873417, 0.588882847, 0.598861778, 0.608871236, 0.618880708, 0.628859639, 0.638869125, 0.648878569, 0.658857486, 0.668866903, 0.678876347, 0.688855306, 0.698864764, 0.708874181, 0.718853181, 0.728862611, 0.738872056, 0.748850917, 0.758860403, 0.768869931, 0.778870222, 0.789003736, 0.799033847, 0.80906375, 0.819001486, 0.829031667, 0.839061569, 0.848999236, 0.859029389, 0.869059472, 0.878997167, 0.889027194, 0.899057361, 0.908994889, 0.919024986, 0.928993264, 0.938930819, 0.949022806, 0.958991181, 0.968928694, 0.979020639, 0.988988958, 0.998926542, 1.009018458, 1.019048597, 1.028840917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:35.078" endtime="20201112 09:45:35.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.072" endtime="20201112 09:45:35.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.083" endtime="20201112 09:45:35.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:35.086" endtime="20201112 09:45:35.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.085" endtime="20201112 09:45:35.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.081" endtime="20201112 09:45:35.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.546" endtime="20201112 09:45:35.107"></status>
</kw>
<msg timestamp="20201112 09:45:35.107" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.116" endtime="20201112 09:45:37.248"></status>
</kw>
<msg timestamp="20201112 09:45:37.249" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71964782, 'wakeups': [71974975, 71984924, 71994964, 72004974, 720149...</msg>
<status status="PASS" starttime="20201112 09:45:35.114" endtime="20201112 09:45:37.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71964782, 'wakeups': [71974975, 71984924, 71994964, 72004974, 720149...</msg>
<status status="PASS" starttime="20201112 09:45:37.250" endtime="20201112 09:45:37.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.253" endtime="20201112 09:45:37.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.112" endtime="20201112 09:45:37.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.110" endtime="20201112 09:45:37.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:37.259" level="INFO">${RESULT} = {'wakeups': [71974975, 71984924, 71994964, 72004974, 72014923, 72024963, 72034973, 72044921, 72054962, 72064971, 72074920, 72084960, 72094970, 72104919, 72114959, 72124969, 72134918, 72144958, 7215496...</msg>
<status status="PASS" starttime="20201112 09:45:37.257" endtime="20201112 09:45:37.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.263" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:37.262" endtime="20201112 09:45:37.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.266" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:37.265" endtime="20201112 09:45:37.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.260" endtime="20201112 09:45:37.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.271" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:37.270" endtime="20201112 09:45:37.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.273" level="INFO">VALUE: 71964782</msg>
<status status="PASS" starttime="20201112 09:45:37.272" endtime="20201112 09:45:37.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.267" endtime="20201112 09:45:37.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.278" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:37.277" endtime="20201112 09:45:37.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.280" level="INFO">VALUE: [71974975, 71984924, 71994964, 72004974, 72014923, 72024963, 72034973, 72044921, 72054962, 72064971, 72074920, 72084960, 72094970, 72104919, 72114959, 72124969, 72134918, 72144958, 72154968, 72164916, 72174957, 72184967, 72194915, 72204956, 72214843, 72224945, 72234924, 72244873, 72254943, 72264984, 72274932, 72284942, 72294982, 72304931, 72314941, 72324981, 72334930, 72344940, 72354980, 72364929, 72374938, 72384979, 72394927, 72404937, 72414978, 72424926, 72434936, 72444976, 72454925, 72464965, 72474914, 72484954, 72494995, 72504913, 72514953, 72524993, 72534912, 72544952, 72554992, 72564910, 72574951, 72584991, 72594909, 72604949, 72614990, 72624908, 72634948, 72644989, 72654907, 72664947, 72674926, 72684844, 72694946, 72704986, 72714874, 72724853, 72734832, 72744812, 72754943, 72764923, 72774871, 72784942, 72794982, 72804931, 72814941, 72824981, 72834930, 72844940, 72854980, 72864929, 72874938, 72884979, 72894927, 72904937, 72914978, 72924926, 72934936, 72944976, 72954925, 72964965]</msg>
<status status="PASS" starttime="20201112 09:45:37.279" endtime="20201112 09:45:37.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.274" endtime="20201112 09:45:37.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.289" endtime="20201112 09:45:37.581"></status>
</kw>
<msg timestamp="20201112 09:45:37.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020517208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0307175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:37.286" endtime="20201112 09:45:37.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020517208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0307175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:37.585" endtime="20201112 09:45:37.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.593" endtime="20201112 09:45:37.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.284" endtime="20201112 09:45:37.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.282" endtime="20201112 09:45:37.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:37.621" level="INFO">${RESULT} = {'diff': [0, 0.010200292, 0.009965083000000003, 0.010030070000000002, 0.009999471999999995, 0.009968333000000003, 0.010030153, 0.009999431000000003, 0.00996829099999999, 0.010030042000000003, 0.009999...</msg>
<status status="PASS" starttime="20201112 09:45:37.597" endtime="20201112 09:45:37.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.630" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:37.629" endtime="20201112 09:45:37.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.632" level="INFO">VALUE: 0.020517208</msg>
<status status="PASS" starttime="20201112 09:45:37.631" endtime="20201112 09:45:37.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.626" endtime="20201112 09:45:37.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.638" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:37.637" endtime="20201112 09:45:37.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.640" level="INFO">VALUE: [0.0307175, 0.040682583, 0.050712653, 0.060712125, 0.070680458, 0.080710611, 0.090710042, 0.100678333, 0.110708375, 0.120707931, 0.130676069, 0.14070625, 0.150705639, 0.160673944, 0.170704069, 0.180703458, 0.190671736, 0.200701778, 0.210701319, 0.220669472, 0.230699736, 0.240699236, 0.250667347, 0.260697, 0.270593889, 0.280685792, 0.290654208, 0.300622181, 0.310683681, 0.320713847, 0.330681986, 0.340681569, 0.350711653, 0.360679847, 0.370679514, 0.380709514, 0.390677708, 0.400677264, 0.41070725, 0.420675486, 0.430675167, 0.440705153, 0.450673306, 0.460672986, 0.470703028, 0.480671139, 0.490670806, 0.500700861, 0.510667847, 0.520689222, 0.530657486, 0.540687528, 0.550717597, 0.560655181, 0.570685333, 0.580715458, 0.590653014, 0.600683167, 0.610713194, 0.620650819, 0.630680944, 0.640710972, 0.650648667, 0.660678819, 0.670708778, 0.680646486, 0.690676597, 0.700706708, 0.710644319, 0.720674375, 0.730642639, 0.740580125, 0.750672292, 0.760700736, 0.770599222, 0.780566667, 0.790555333, 0.800543847, 0.810667764, 0.820636097, 0.830604139, 0.840665806, 0.850695722, 0.860664028, 0.870663667, 0.880693653, 0.890661708, 0.900661431, 0.910691444, 0.920659681, 0.930659236, 0.940689375, 0.9506575, 0.960657125, 0.97068725, 0.980655361, 0.990655056, 1.000685042, 1.010652014, 1.020673486] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:37.639" endtime="20201112 09:45:37.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.633" endtime="20201112 09:45:37.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.643" endtime="20201112 09:45:37.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:37.647" endtime="20201112 09:45:37.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.645" endtime="20201112 09:45:37.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.641" endtime="20201112 09:45:37.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.108" endtime="20201112 09:45:37.668"></status>
</kw>
<msg timestamp="20201112 09:45:37.668" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.678" endtime="20201112 09:45:39.807"></status>
</kw>
<msg timestamp="20201112 09:45:39.808" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74527374, 'wakeups': [74537567, 74547515, 74557464, 74567535, 745775...</msg>
<status status="PASS" starttime="20201112 09:45:37.675" endtime="20201112 09:45:39.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.811" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74527374, 'wakeups': [74537567, 74547515, 74557464, 74567535, 745775...</msg>
<status status="PASS" starttime="20201112 09:45:39.809" endtime="20201112 09:45:39.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.812" endtime="20201112 09:45:39.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.672" endtime="20201112 09:45:39.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.670" endtime="20201112 09:45:39.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:39.818" level="INFO">${RESULT} = {'wakeups': [74537567, 74547515, 74557464, 74567535, 74577575, 74587524, 74597534, 74607574, 74617523, 74627532, 74637573, 74647521, 74657531, 74667572, 74677520, 74687530, 74697570, 74707519, 7471752...</msg>
<status status="PASS" starttime="20201112 09:45:39.816" endtime="20201112 09:45:39.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.822" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:39.821" endtime="20201112 09:45:39.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.824" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:39.823" endtime="20201112 09:45:39.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.819" endtime="20201112 09:45:39.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.830" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:39.829" endtime="20201112 09:45:39.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.832" level="INFO">VALUE: 74527374</msg>
<status status="PASS" starttime="20201112 09:45:39.831" endtime="20201112 09:45:39.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.826" endtime="20201112 09:45:39.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.837" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:39.836" endtime="20201112 09:45:39.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:39.840" level="INFO">VALUE: [74537567, 74547515, 74557464, 74567535, 74577575, 74587524, 74597534, 74607574, 74617523, 74627532, 74637573, 74647521, 74657531, 74667572, 74677520, 74687530, 74697570, 74707519, 74717529, 74727508, 74737457, 74747528, 74757507, 74767456, 74777496, 74787445, 74797546, 74807586, 74817504, 74827545, 74837585, 74847503, 74857543, 74867584, 74877502, 74887542, 74897521, 74907440, 74917541, 74927520, 74937438, 74947540, 74957580, 74967498, 74977539, 74987579, 74997497, 75007537, 75017578, 75027435, 75037414, 75047393, 75057556, 75067565, 75077514, 75087554, 75097564, 75107513, 75117553, 75127563, 75137512, 75147552, 75157562, 75167510, 75177551, 75187561, 75197509, 75207550, 75217559, 75227508, 75237548, 75247558, 75257507, 75267547, 75277557, 75287506, 75297546, 75307586, 75317504, 75327545, 75337585, 75347503, 75357543, 75367584, 75377502, 75387542, 75397583, 75407501, 75417541, 75427581, 75437500, 75447540, 75457580, 75467498, 75477539, 75487579, 75497497, 75507537, 75517578, 75527435]</msg>
<status status="PASS" starttime="20201112 09:45:39.838" endtime="20201112 09:45:39.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.834" endtime="20201112 09:45:39.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:39.847" endtime="20201112 09:45:40.138"></status>
</kw>
<msg timestamp="20201112 09:45:40.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032289694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:39.846" endtime="20201112 09:45:40.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032289694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:40.142" endtime="20201112 09:45:40.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.150" endtime="20201112 09:45:40.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.843" endtime="20201112 09:45:40.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:39.841" endtime="20201112 09:45:40.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:40.178" level="INFO">${RESULT} = {'diff': [0, 0.010192708000000002, 0.009937973000000003, 0.009967915999999993, 0.010061625000000005, 0.010030069999999995, 0.00996806900000001, 0.009999680999999996, 0.010029999999999997, 0.0099681529...</msg>
<status status="PASS" starttime="20201112 09:45:40.154" endtime="20201112 09:45:40.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.182" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:40.181" endtime="20201112 09:45:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.184" level="INFO">VALUE: 0.022096986</msg>
<status status="PASS" starttime="20201112 09:45:40.183" endtime="20201112 09:45:40.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.179" endtime="20201112 09:45:40.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.190" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:40.189" endtime="20201112 09:45:40.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.192" level="INFO">VALUE: [0.032289694, 0.042227667, 0.052195583, 0.062257208, 0.072287278, 0.082255347, 0.092255028, 0.102285028, 0.112253181, 0.122252833, 0.132282819, 0.142251014, 0.152250597, 0.162280681, 0.172248847, 0.182248472, 0.192278528, 0.202246694, 0.212246181, 0.222214431, 0.232182597, 0.242243958, 0.252212222, 0.262180069, 0.272200972, 0.282168778, 0.292260819, 0.30229075, 0.312228444, 0.322258639, 0.332288722, 0.342226222, 0.352256403, 0.362286486, 0.372224056, 0.382254222, 0.392222542, 0.402160056, 0.412252056, 0.422220389, 0.432157903, 0.442249986, 0.452280083, 0.462217736, 0.472247889, 0.482277875, 0.492215556, 0.502245764, 0.512276431, 0.522130875, 0.532119222, 0.542107861, 0.552262417, 0.562261972, 0.572230042, 0.582260236, 0.592259722, 0.60222775, 0.612258069, 0.622257528, 0.632225736, 0.642255903, 0.652255417, 0.662223528, 0.672253806, 0.68225325, 0.692221333, 0.702251458, 0.712251097, 0.722219278, 0.732249375, 0.742248889, 0.752217069, 0.762247306, 0.772246972, 0.782214833, 0.792245097, 0.802275125, 0.812212597, 0.822242944, 0.832272764, 0.842210569, 0.852240653, 0.862270722, 0.872208361, 0.882238556, 0.892268458, 0.902206153, 0.912236361, 0.922266431, 0.932204042, 0.942234236, 0.952264111, 0.962201931, 0.972232056, 0.982262056, 0.992199653, 1.002229917, 1.012260667, 1.022114972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:40.191" endtime="20201112 09:45:40.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.186" endtime="20201112 09:45:40.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.196" endtime="20201112 09:45:40.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:40.200" endtime="20201112 09:45:40.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.198" endtime="20201112 09:45:40.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.194" endtime="20201112 09:45:40.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.669" endtime="20201112 09:45:40.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.543" endtime="20201112 09:45:40.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.542" endtime="20201112 09:45:40.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.587" endtime="20201112 09:45:40.221"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:23.506" endtime="20201112 09:45:40.222" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:44:22.035" endtime="20201112 09:45:40.227"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:36.658" endtime="20201112 09:45:40.244"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
